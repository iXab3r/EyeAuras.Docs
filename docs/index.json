{
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.AttachScreenshot.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.AttachScreenshot.html",
    "title": "Property AttachScreenshot | EyeAuras Docs",
    "keywords": "Property AttachScreenshot AttachScreenshot Declaration bool AttachScreenshot { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.ChatId.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.ChatId.html",
    "title": "Property ChatId | EyeAuras Docs",
    "keywords": "Property ChatId ChatId Declaration string ChatId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.ParseMode.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.ParseMode.html",
    "title": "Property ParseMode | EyeAuras Docs",
    "keywords": "Property ParseMode ParseMode Declaration ParseMode ParseMode { get; set; } Property Value Type Description ParseMode"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.Proxy.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.Proxy.html",
    "title": "Property Proxy | EyeAuras Docs",
    "keywords": "Property Proxy Proxy Declaration string Proxy { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.TargetWindow.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.TargetWindow.html",
    "title": "Property TargetWindow | EyeAuras Docs",
    "keywords": "Property TargetWindow TargetWindow Declaration WindowMatchExpression TargetWindow { get; set; } Property Value Type Description WindowMatchExpression"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.Text.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.Text.html",
    "title": "Property Text | EyeAuras Docs",
    "keywords": "Property Text Text Declaration string Text { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.Token.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.Token.html",
    "title": "Property Token | EyeAuras Docs",
    "keywords": "Property Token Token Declaration string Token { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.ISendToTelegramAction.html",
    "title": "Interface ISendToTelegramAction | EyeAuras Docs",
    "keywords": "Interface ISendToTelegramAction Inherited Members IAuraAction.Cancel() IAuraAction.Execute() IAuraAction.Execute(CancellationToken) IAuraAction.IsIgnored IAuraAction.IsBusy IAuraAction.Error IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.AdvancedAuras.Actions.SendToTelegram Assembly: EyeAuras.AdvancedAuras.dll Syntax public interface ISendToTelegramAction : IAuraAction, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description AttachScreenshot ChatId ParseMode Proxy TargetWindow Text Token Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.-Clone--.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override SendToTelegramActionProperties <Clone>$() Returns Type Description SendToTelegramActionProperties Overrides AuraActionPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.-ctor.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.-ctor.html",
    "title": "Constructor SendToTelegramActionProperties | EyeAuras Docs",
    "keywords": "Constructor SendToTelegramActionProperties SendToTelegramActionProperties() Declaration public SendToTelegramActionProperties()"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.AttachScreenshot.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.AttachScreenshot.html",
    "title": "Property AttachScreenshot | EyeAuras Docs",
    "keywords": "Property AttachScreenshot AttachScreenshot Declaration public bool AttachScreenshot { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.ChatId.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.ChatId.html",
    "title": "Property ChatId | EyeAuras Docs",
    "keywords": "Property ChatId ChatId Declaration public string ChatId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.EqualityContract.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraActionPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.Equals.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(object?) Equals(AuraActionPropertiesBase?) Declaration public override sealed bool Equals(AuraActionPropertiesBase? other) Parameters Type Name Description AuraActionPropertiesBase other Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(AuraActionPropertiesBase?) Equals(SendToTelegramActionProperties?) Declaration public bool Equals(SendToTelegramActionProperties? other) Parameters Type Name Description SendToTelegramActionProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.GetHashCode.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraActionPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.ParseMode.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.ParseMode.html",
    "title": "Property ParseMode | EyeAuras Docs",
    "keywords": "Property ParseMode ParseMode Declaration public string ParseMode { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.PrintMembers.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraActionPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.Proxy.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.Proxy.html",
    "title": "Property Proxy | EyeAuras Docs",
    "keywords": "Property Proxy Proxy Declaration public string Proxy { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.TargetWindow.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.TargetWindow.html",
    "title": "Property TargetWindow | EyeAuras Docs",
    "keywords": "Property TargetWindow TargetWindow Declaration public WindowMatchExpression TargetWindow { get; set; } Property Value Type Description WindowMatchExpression"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.Text.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.Text.html",
    "title": "Property Text | EyeAuras Docs",
    "keywords": "Property Text Text Declaration public string Text { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.ToString.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraActionPropertiesBase.ToString()"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.Token.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.Token.html",
    "title": "Property Token | EyeAuras Docs",
    "keywords": "Property Token Token Declaration public string Token { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.Version.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.html",
    "title": "Class SendToTelegramActionProperties | EyeAuras Docs",
    "keywords": "Class SendToTelegramActionProperties Inheritance object AuraPropertiesBase AuraActionPropertiesBase SendToTelegramActionProperties Implements IEquatable<AuraPropertiesBase> IAuraActionProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraActionPropertiesBase> IEquatable<SendToTelegramActionProperties> Inherited Members AuraActionPropertiesBase.Equals(AuraPropertiesBase) AuraActionPropertiesBase.IsIgnored AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.AdvancedAuras.Actions.SendToTelegram Assembly: EyeAuras.AdvancedAuras.dll Syntax public sealed record SendToTelegramActionProperties : AuraActionPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraActionProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraActionPropertiesBase>, IEquatable<SendToTelegramActionProperties> Constructors Name Description SendToTelegramActionProperties() Properties Name Description AttachScreenshot ChatId EqualityContract ParseMode Proxy TargetWindow Text Token Version Methods Name Description Equals(SendToTelegramActionProperties?) Equals(AuraActionPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(SendToTelegramActionProperties?, SendToTelegramActionProperties?) operator !=(SendToTelegramActionProperties?, SendToTelegramActionProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.op_Equality.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(SendToTelegramActionProperties?, SendToTelegramActionProperties?) Declaration public static bool operator ==(SendToTelegramActionProperties? left, SendToTelegramActionProperties? right) Parameters Type Name Description SendToTelegramActionProperties left SendToTelegramActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.op_Inequality.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.SendToTelegramActionProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(SendToTelegramActionProperties?, SendToTelegramActionProperties?) Declaration public static bool operator !=(SendToTelegramActionProperties? left, SendToTelegramActionProperties? right) Parameters Type Name Description SendToTelegramActionProperties left SendToTelegramActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.SendToTelegram.html",
    "title": "Namespace EyeAuras.AdvancedAuras.Actions.SendToTelegram | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.AdvancedAuras.Actions.SendToTelegram Classes SendToTelegramActionProperties Interfaces ISendToTelegramAction"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.ITextToSpeechAction.Text.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.ITextToSpeechAction.Text.html",
    "title": "Property Text | EyeAuras Docs",
    "keywords": "Property Text Text Declaration string Text { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.ITextToSpeechAction.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.ITextToSpeechAction.html",
    "title": "Interface ITextToSpeechAction | EyeAuras Docs",
    "keywords": "Interface ITextToSpeechAction Inherited Members IAuraAction.Cancel() IAuraAction.Execute() IAuraAction.Execute(CancellationToken) IAuraAction.IsIgnored IAuraAction.IsBusy IAuraAction.Error IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.AdvancedAuras.Actions.TextToSpeech Assembly: EyeAuras.AdvancedAuras.dll Syntax public interface ITextToSpeechAction : IAuraAction, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description Text Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.-Clone--.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override TextToSpeechActionProperties <Clone>$() Returns Type Description TextToSpeechActionProperties Overrides AuraActionPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.-ctor.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.-ctor.html",
    "title": "Constructor TextToSpeechActionProperties | EyeAuras Docs",
    "keywords": "Constructor TextToSpeechActionProperties TextToSpeechActionProperties() Declaration public TextToSpeechActionProperties()"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.EqualityContract.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraActionPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.Equals.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(object?) Equals(AuraActionPropertiesBase?) Declaration public override sealed bool Equals(AuraActionPropertiesBase? other) Parameters Type Name Description AuraActionPropertiesBase other Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(AuraActionPropertiesBase?) Equals(TextToSpeechActionProperties?) Declaration public bool Equals(TextToSpeechActionProperties? other) Parameters Type Name Description TextToSpeechActionProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.GetHashCode.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraActionPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.PrintMembers.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraActionPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.Text.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.Text.html",
    "title": "Property Text | EyeAuras Docs",
    "keywords": "Property Text Text Declaration public string Text { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.ToString.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraActionPropertiesBase.ToString()"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.Version.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.VoiceId.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.VoiceId.html",
    "title": "Property VoiceId | EyeAuras Docs",
    "keywords": "Property VoiceId VoiceId Declaration public string VoiceId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.html",
    "title": "Class TextToSpeechActionProperties | EyeAuras Docs",
    "keywords": "Class TextToSpeechActionProperties Inheritance object AuraPropertiesBase AuraActionPropertiesBase TextToSpeechActionProperties Implements IEquatable<AuraPropertiesBase> IAuraActionProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraActionPropertiesBase> IEquatable<TextToSpeechActionProperties> Inherited Members AuraActionPropertiesBase.Equals(AuraPropertiesBase) AuraActionPropertiesBase.IsIgnored AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.AdvancedAuras.Actions.TextToSpeech Assembly: EyeAuras.AdvancedAuras.dll Syntax public sealed record TextToSpeechActionProperties : AuraActionPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraActionProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraActionPropertiesBase>, IEquatable<TextToSpeechActionProperties> Constructors Name Description TextToSpeechActionProperties() Properties Name Description EqualityContract Text Version VoiceId Methods Name Description Equals(TextToSpeechActionProperties?) Equals(AuraActionPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(TextToSpeechActionProperties?, TextToSpeechActionProperties?) operator !=(TextToSpeechActionProperties?, TextToSpeechActionProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.op_Equality.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(TextToSpeechActionProperties?, TextToSpeechActionProperties?) Declaration public static bool operator ==(TextToSpeechActionProperties? left, TextToSpeechActionProperties? right) Parameters Type Name Description TextToSpeechActionProperties left TextToSpeechActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.op_Inequality.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.TextToSpeechActionProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(TextToSpeechActionProperties?, TextToSpeechActionProperties?) Declaration public static bool operator !=(TextToSpeechActionProperties? left, TextToSpeechActionProperties? right) Parameters Type Name Description TextToSpeechActionProperties left TextToSpeechActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.TextToSpeech.html",
    "title": "Namespace EyeAuras.AdvancedAuras.Actions.TextToSpeech | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.AdvancedAuras.Actions.TextToSpeech Classes TextToSpeechActionProperties Interfaces ITextToSpeechAction"
  },
  "api/EyeAuras.AdvancedAuras.Actions.html": {
    "href": "api/EyeAuras.AdvancedAuras.Actions.html",
    "title": "Namespace EyeAuras.AdvancedAuras.Actions | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.AdvancedAuras.Actions Namespaces EyeAuras.AdvancedAuras.Actions.SendToTelegram EyeAuras.AdvancedAuras.Actions.TextToSpeech"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.ActivationTextEvaluator.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.ActivationTextEvaluator.html",
    "title": "Property ActivationTextEvaluator | EyeAuras Docs",
    "keywords": "Property ActivationTextEvaluator ActivationTextEvaluator Declaration ISwitchableTextEvaluatorViewModel ActivationTextEvaluator { get; } Property Value Type Description ISwitchableTextEvaluatorViewModel"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.ChatId.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.ChatId.html",
    "title": "Property ChatId | EyeAuras Docs",
    "keywords": "Property ChatId ChatId Declaration string ChatId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.DeactivationTextEvaluator.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.DeactivationTextEvaluator.html",
    "title": "Property DeactivationTextEvaluator | EyeAuras Docs",
    "keywords": "Property DeactivationTextEvaluator DeactivationTextEvaluator Declaration ISwitchableTextEvaluatorViewModel DeactivationTextEvaluator { get; } Property Value Type Description ISwitchableTextEvaluatorViewModel"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.LastAuraMessage.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.LastAuraMessage.html",
    "title": "Property LastAuraMessage | EyeAuras Docs",
    "keywords": "Property LastAuraMessage LastAuraMessage Declaration AuraTextMessage LastAuraMessage { get; } Property Value Type Description AuraTextMessage"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.Messages.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.Messages.html",
    "title": "Property Messages | EyeAuras Docs",
    "keywords": "Property Messages Messages Declaration IObservableList<Message> Messages { get; } Property Value Type Description IObservableList<Message>"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.Proxy.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.Proxy.html",
    "title": "Property Proxy | EyeAuras Docs",
    "keywords": "Property Proxy Proxy Declaration string Proxy { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.Token.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.Token.html",
    "title": "Property Token | EyeAuras Docs",
    "keywords": "Property Token Token Declaration string Token { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.ITelegramSubscriptionTrigger.html",
    "title": "Interface ITelegramSubscriptionTrigger | EyeAuras Docs",
    "keywords": "Interface ITelegramSubscriptionTrigger Inherited Members IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.AdvancedAuras.Triggers.TelegramMessage Assembly: EyeAuras.AdvancedAuras.dll Syntax public interface ITelegramSubscriptionTrigger : IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description ActivationTextEvaluator ChatId DeactivationTextEvaluator LastAuraMessage Messages Proxy Token Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override TelegramSubscriptionTriggerProperties <Clone>$() Returns Type Description TelegramSubscriptionTriggerProperties Overrides MessageSubscriptionTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.-ctor.html",
    "title": "Constructor TelegramSubscriptionTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor TelegramSubscriptionTriggerProperties TelegramSubscriptionTriggerProperties() Declaration public TelegramSubscriptionTriggerProperties()"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.ChatId.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.ChatId.html",
    "title": "Property ChatId | EyeAuras Docs",
    "keywords": "Property ChatId ChatId Declaration public string ChatId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides MessageSubscriptionTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides MessageSubscriptionTriggerPropertiesBase.Equals(object?) Equals(MessageSubscriptionTriggerPropertiesBase?) Declaration public override sealed bool Equals(MessageSubscriptionTriggerPropertiesBase? other) Parameters Type Name Description MessageSubscriptionTriggerPropertiesBase other Returns Type Description bool Overrides MessageSubscriptionTriggerPropertiesBase.Equals(MessageSubscriptionTriggerPropertiesBase?) Equals(TelegramSubscriptionTriggerProperties?) Declaration public bool Equals(TelegramSubscriptionTriggerProperties? other) Parameters Type Name Description TelegramSubscriptionTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides MessageSubscriptionTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides MessageSubscriptionTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.Proxy.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.Proxy.html",
    "title": "Property Proxy | EyeAuras Docs",
    "keywords": "Property Proxy Proxy Declaration public string Proxy { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides MessageSubscriptionTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.Token.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.Token.html",
    "title": "Property Token | EyeAuras Docs",
    "keywords": "Property Token Token Declaration public string Token { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.Version.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.html",
    "title": "Class TelegramSubscriptionTriggerProperties | EyeAuras Docs",
    "keywords": "Class TelegramSubscriptionTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase MessageSubscriptionTriggerPropertiesBase TelegramSubscriptionTriggerProperties Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> IEquatable<MessageSubscriptionTriggerPropertiesBase> IEquatable<TelegramSubscriptionTriggerProperties> Inherited Members MessageSubscriptionTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase) MessageSubscriptionTriggerPropertiesBase.ActivationText MessageSubscriptionTriggerPropertiesBase.ActivationEvaluatorType MessageSubscriptionTriggerPropertiesBase.ActivationIgnoreCase MessageSubscriptionTriggerPropertiesBase.DeactivationText MessageSubscriptionTriggerPropertiesBase.DeactivationEvaluatorType MessageSubscriptionTriggerPropertiesBase.DeactivationIgnoreCase MessageSubscriptionTriggerPropertiesBase.DeactivateAutomatically AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.AdvancedAuras.Triggers.TelegramMessage Assembly: EyeAuras.AdvancedAuras.dll Syntax public sealed record TelegramSubscriptionTriggerProperties : MessageSubscriptionTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase>, IEquatable<MessageSubscriptionTriggerPropertiesBase>, IEquatable<TelegramSubscriptionTriggerProperties> Constructors Name Description TelegramSubscriptionTriggerProperties() Properties Name Description ChatId EqualityContract Proxy Token Version Methods Name Description Equals(TelegramSubscriptionTriggerProperties?) Equals(MessageSubscriptionTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(TelegramSubscriptionTriggerProperties?, TelegramSubscriptionTriggerProperties?) operator !=(TelegramSubscriptionTriggerProperties?, TelegramSubscriptionTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(TelegramSubscriptionTriggerProperties?, TelegramSubscriptionTriggerProperties?) Declaration public static bool operator ==(TelegramSubscriptionTriggerProperties? left, TelegramSubscriptionTriggerProperties? right) Parameters Type Name Description TelegramSubscriptionTriggerProperties left TelegramSubscriptionTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.TelegramSubscriptionTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(TelegramSubscriptionTriggerProperties?, TelegramSubscriptionTriggerProperties?) Declaration public static bool operator !=(TelegramSubscriptionTriggerProperties? left, TelegramSubscriptionTriggerProperties? right) Parameters Type Name Description TelegramSubscriptionTriggerProperties left TelegramSubscriptionTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.TelegramMessage.html",
    "title": "Namespace EyeAuras.AdvancedAuras.Triggers.TelegramMessage | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.AdvancedAuras.Triggers.TelegramMessage Classes TelegramSubscriptionTriggerProperties Interfaces ITelegramSubscriptionTrigger"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.AudioSourceType.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.AudioSourceType.html",
    "title": "Enum AudioSourceType | EyeAuras Docs",
    "keywords": "Enum AudioSourceType Namespace: EyeAuras.AdvancedAuras.Triggers.VolumeLevel Assembly: EyeAuras.AdvancedAuras.dll Syntax public enum AudioSourceType Fields Name Description DeviceId Process Extension Methods ObjectExtensions.AddTo<AudioSourceType, TCollection>(AudioSourceType, ISourceList<TCollection>) ObjectExtensions.AddTo<AudioSourceType, TCollection>(AudioSourceType, ICollection<TCollection>) ObjectExtensions.CloneJson<AudioSourceType>(AudioSourceType) ObjectExtensions.CopyPropertiesTo<AudioSourceType, TTarget>(AudioSourceType, TTarget) ObjectExtensions.DumpToTextRaw<AudioSourceType>(AudioSourceType) ObjectExtensions.DumpToText<AudioSourceType>(AudioSourceType) ObjectExtensions.Dump<AudioSourceType>(AudioSourceType) ObjectExtensions.GetPropertyAccessor<AudioSourceType, TValue>(AudioSourceType, Expression<Func<AudioSourceType, TValue>>) ObjectExtensions.InsertTo<AudioSourceType, TCollection>(AudioSourceType, IList<TCollection>, int) ObjectExtensions.ToJson<AudioSourceType>(AudioSourceType) ObjectExtensions.ToStringSafe<AudioSourceType>(AudioSourceType) ObjectExtensions.TransferPropertiesTo<AudioSourceType, TTarget>(AudioSourceType, TTarget, params string[]) XDocumentExtensions.AddTo<AudioSourceType>(AudioSourceType, XContainer)"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override VolumeLevelTriggerProperties <Clone>$() Returns Type Description VolumeLevelTriggerProperties Overrides AuraTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.-ctor.html",
    "title": "Constructor VolumeLevelTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor VolumeLevelTriggerProperties VolumeLevelTriggerProperties() Declaration public VolumeLevelTriggerProperties()"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.AudioSourceType.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.AudioSourceType.html",
    "title": "Property AudioSourceType | EyeAuras Docs",
    "keywords": "Property AudioSourceType AudioSourceType Declaration public AudioSourceType AudioSourceType { get; set; } Property Value Type Description AudioSourceType"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.DeviceId.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.DeviceId.html",
    "title": "Property DeviceId | EyeAuras Docs",
    "keywords": "Property DeviceId DeviceId Declaration public MMDeviceId DeviceId { get; set; } Property Value Type Description MMDeviceId"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(object?) Equals(AuraTriggerPropertiesBase?) Declaration public override sealed bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase?) Equals(VolumeLevelTriggerProperties?) Declaration public bool Equals(VolumeLevelTriggerProperties? other) Parameters Type Name Description VolumeLevelTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.MinTargetLevel.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.MinTargetLevel.html",
    "title": "Property MinTargetLevel | EyeAuras Docs",
    "keywords": "Property MinTargetLevel MinTargetLevel Declaration public float MinTargetLevel { get; set; } Property Value Type Description float"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.TargetWindow.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.TargetWindow.html",
    "title": "Property TargetWindow | EyeAuras Docs",
    "keywords": "Property TargetWindow TargetWindow Declaration public WindowMatchExpression TargetWindow { get; set; } Property Value Type Description WindowMatchExpression"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.Version.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.html",
    "title": "Class VolumeLevelTriggerProperties | EyeAuras Docs",
    "keywords": "Class VolumeLevelTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase VolumeLevelTriggerProperties Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> IEquatable<VolumeLevelTriggerProperties> Inherited Members AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.AdvancedAuras.Triggers.VolumeLevel Assembly: EyeAuras.AdvancedAuras.dll Syntax public sealed record VolumeLevelTriggerProperties : AuraTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase>, IEquatable<VolumeLevelTriggerProperties> Constructors Name Description VolumeLevelTriggerProperties() Properties Name Description AudioSourceType DeviceId EqualityContract MinTargetLevel TargetWindow Version Methods Name Description Equals(VolumeLevelTriggerProperties?) Equals(AuraTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(VolumeLevelTriggerProperties?, VolumeLevelTriggerProperties?) operator !=(VolumeLevelTriggerProperties?, VolumeLevelTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(VolumeLevelTriggerProperties?, VolumeLevelTriggerProperties?) Declaration public static bool operator ==(VolumeLevelTriggerProperties? left, VolumeLevelTriggerProperties? right) Parameters Type Name Description VolumeLevelTriggerProperties left VolumeLevelTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.VolumeLevelTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(VolumeLevelTriggerProperties?, VolumeLevelTriggerProperties?) Declaration public static bool operator !=(VolumeLevelTriggerProperties? left, VolumeLevelTriggerProperties? right) Parameters Type Name Description VolumeLevelTriggerProperties left VolumeLevelTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.VolumeLevel.html",
    "title": "Namespace EyeAuras.AdvancedAuras.Triggers.VolumeLevel | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.AdvancedAuras.Triggers.VolumeLevel Classes VolumeLevelTriggerProperties Enums AudioSourceType"
  },
  "api/EyeAuras.AdvancedAuras.Triggers.html": {
    "href": "api/EyeAuras.AdvancedAuras.Triggers.html",
    "title": "Namespace EyeAuras.AdvancedAuras.Triggers | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.AdvancedAuras.Triggers Namespaces EyeAuras.AdvancedAuras.Triggers.TelegramMessage EyeAuras.AdvancedAuras.Triggers.VolumeLevel"
  },
  "api/EyeAuras.AdvancedAuras.html": {
    "href": "api/EyeAuras.AdvancedAuras.html",
    "title": "Namespace EyeAuras.AdvancedAuras | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.AdvancedAuras Namespaces EyeAuras.AdvancedAuras.Actions EyeAuras.AdvancedAuras.Triggers"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeBlackboard.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeBlackboard.-ctor.html",
    "title": "Constructor BehaviorTreeBlackboard | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeBlackboard BehaviorTreeBlackboard(NodeBase) Declaration public BehaviorTreeBlackboard(NodeBase parent) Parameters Type Name Description NodeBase parent"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeBlackboard.FormatToString.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeBlackboard.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides DisposableReactiveObject.FormatToString(ToStringBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeBlackboard.Item.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeBlackboard.Item.html",
    "title": "Property this | EyeAuras Docs",
    "keywords": "Property this this[string] Declaration public object this[string name] { get; set; } Parameters Type Name Description string name Property Value Type Description object Implements IHasVariables.this[string]"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeBlackboard.Parent.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeBlackboard.Parent.html",
    "title": "Property Parent | EyeAuras Docs",
    "keywords": "Property Parent Parent Declaration public object Parent { get; } Property Value Type Description object"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeBlackboard.Variables.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeBlackboard.Variables.html",
    "title": "Property Variables | EyeAuras Docs",
    "keywords": "Property Variables Variables Declaration public IHierarchicalSourceCache<AuraVariable, string> Variables { get; } Property Value Type Description IHierarchicalSourceCache<AuraVariable, string> Implements IHasVariables.Variables"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeBlackboard.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeBlackboard.html",
    "title": "Class BehaviorTreeBlackboard | EyeAuras Docs",
    "keywords": "Class BehaviorTreeBlackboard Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger BehaviorTreeBlackboard Implements IHasVariables IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP Assembly: EyeAuras.BehaviorTree.dll Syntax public sealed class BehaviorTreeBlackboard : DisposableReactiveObjectWithLogger, IHasVariables, IDisposable, INotifyPropertyChanged Constructors Name Description BehaviorTreeBlackboard(NodeBase) Properties Name Description this[string] Parent Variables Methods Name Description FormatToString(ToStringBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.-ctor.html",
    "title": "Constructor BehaviorTreeNodeRepository | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeNodeRepository BehaviorTreeNodeRepository() Declaration public BehaviorTreeNodeRepository()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.CreateNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.CreateNode.html",
    "title": "Method CreateNode | EyeAuras Docs",
    "keywords": "Method CreateNode CreateNode(string) Declaration public NodeBase CreateNode(string nodeName) Parameters Type Name Description string nodeName Returns Type Description NodeBase Implements IBehaviorTreeNodeRepository.CreateNode(string)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.Deserialize.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.Deserialize.html",
    "title": "Method Deserialize | EyeAuras Docs",
    "keywords": "Method Deserialize Deserialize<T>(string) Declaration public T Deserialize<T>(string nodeXml) Parameters Type Name Description string nodeXml Returns Type Description T Type Parameters Name Description T Implements IBehaviorTreeNodeSerializer.Deserialize<T>(string) Deserialize(XElement, Type) Declaration public object Deserialize(XElement nodeXml, Type nodeType) Parameters Type Name Description XElement nodeXml Type nodeType Returns Type Description object Implements IBehaviorTreeNodeSerializer.Deserialize(XElement, Type) Deserialize<T>(XElement) Declaration public T Deserialize<T>(XElement nodeXml) Parameters Type Name Description XElement nodeXml Returns Type Description T Type Parameters Name Description T Implements IBehaviorTreeNodeSerializer.Deserialize<T>(XElement) Deserialize(XElement) Declaration public NodeBase Deserialize(XElement nodeXml) Parameters Type Name Description XElement nodeXml Returns Type Description NodeBase Implements IBehaviorTreeNodeSerializer.Deserialize(XElement)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.GetNodeName.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.GetNodeName.html",
    "title": "Method GetNodeName | EyeAuras Docs",
    "keywords": "Method GetNodeName GetNodeName(Type) Declaration public string GetNodeName(Type nodeType) Parameters Type Name Description Type nodeType Returns Type Description string Implements IBehaviorTreeNodeRepository.GetNodeName(Type)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.Instance.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.Instance.html",
    "title": "Property Instance | EyeAuras Docs",
    "keywords": "Property Instance Instance Declaration public static BehaviorTreeNodeRepository Instance { get; } Property Value Type Description BehaviorTreeNodeRepository"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.KnownNodes.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.KnownNodes.html",
    "title": "Property KnownNodes | EyeAuras Docs",
    "keywords": "Property KnownNodes KnownNodes Declaration public IDictionary<Type, string> KnownNodes { get; } Property Value Type Description IDictionary<Type, string> Implements IBehaviorTreeNodeRepository.KnownNodes"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.RegisterNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.RegisterNode.html",
    "title": "Method RegisterNode | EyeAuras Docs",
    "keywords": "Method RegisterNode RegisterNode(Type) Declaration public void RegisterNode(Type nodeType) Parameters Type Name Description Type nodeType Implements IBehaviorTreeNodeRegistrator.RegisterNode(Type)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.Serialize.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.Serialize.html",
    "title": "Method Serialize | EyeAuras Docs",
    "keywords": "Method Serialize Serialize<T>(T) Declaration public string Serialize<T>(T node) Parameters Type Name Description T node Returns Type Description string Type Parameters Name Description T Implements IBehaviorTreeNodeSerializer.Serialize<T>(T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeNodeRepository.html",
    "title": "Class BehaviorTreeNodeRepository | EyeAuras Docs",
    "keywords": "Class BehaviorTreeNodeRepository Repository class to handle serialization and deserialization of behavior tree nodes. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger BehaviorTreeNodeRepository Implements IDisposable INotifyPropertyChanged IBehaviorTreeNodeRepository IBehaviorTreeNodeSerializer IBehaviorTreeNodeRegistrator Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP Assembly: EyeAuras.BehaviorTree.dll Syntax public sealed class BehaviorTreeNodeRepository : DisposableReactiveObjectWithLogger, IDisposable, INotifyPropertyChanged, IBehaviorTreeNodeRepository, IBehaviorTreeNodeSerializer, IBehaviorTreeNodeRegistrator Constructors Name Description BehaviorTreeNodeRepository() Properties Name Description Instance KnownNodes Methods Name Description CreateNode(string) Deserialize(XElement) Deserialize(XElement, Type) Deserialize<T>(string) Deserialize<T>(XElement) GetNodeName(Type) RegisterNode(Type) Serialize<T>(T) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.-ctor.html",
    "title": "Constructor BehaviorTreeRoot | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeRoot BehaviorTreeRoot() Declaration public BehaviorTreeRoot()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.BehaviorTrees.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.BehaviorTrees.html",
    "title": "Property BehaviorTrees | EyeAuras Docs",
    "keywords": "Property BehaviorTrees BehaviorTrees Declaration public IObservableCache<BehaviorTreeNode, string> BehaviorTrees { get; } Property Value Type Description IObservableCache<BehaviorTreeNode, string>"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.CopyFrom.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.CopyFrom.html",
    "title": "Method CopyFrom | EyeAuras Docs",
    "keywords": "Method CopyFrom CopyFrom(BehaviorTreeRoot) Declaration public void CopyFrom(BehaviorTreeRoot other) Parameters Type Name Description BehaviorTreeRoot other"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.MainTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.MainTree.html",
    "title": "Property MainTree | EyeAuras Docs",
    "keywords": "Property MainTree MainTree Declaration public BehaviorTreeNode MainTree { get; } Property Value Type Description BehaviorTreeNode"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.MainTreeId.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.MainTreeId.html",
    "title": "Property MainTreeId | EyeAuras Docs",
    "keywords": "Property MainTreeId MainTreeId Declaration public string MainTreeId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.TreeFormat.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.TreeFormat.html",
    "title": "Property TreeFormat | EyeAuras Docs",
    "keywords": "Property TreeFormat TreeFormat Declaration public string TreeFormat { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.TreeModels.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.TreeModels.html",
    "title": "Property TreeModels | EyeAuras Docs",
    "keywords": "Property TreeModels TreeModels Declaration public BehaviorTreeModels TreeModels { get; set; } Property Value Type Description BehaviorTreeModels"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BehaviorTreeRoot.html",
    "title": "Class BehaviorTreeRoot | EyeAuras Docs",
    "keywords": "Class BehaviorTreeRoot Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase BehaviorTreeRoot Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP Assembly: EyeAuras.BehaviorTree.dll Syntax public sealed class BehaviorTreeRoot : NodeBase, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description BehaviorTreeRoot() Properties Name Description BehaviorTrees MainTree MainTreeId TreeFormat TreeModels Methods Name Description CopyFrom(BehaviorTreeRoot) TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BlackboardException.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BlackboardException.-ctor.html",
    "title": "Constructor BlackboardException | EyeAuras Docs",
    "keywords": "Constructor BlackboardException BlackboardException(IHasVariables, string) Declaration public BlackboardException(IHasVariables blackboard, string message) Parameters Type Name Description IHasVariables blackboard string message"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BlackboardException.Blackboard.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BlackboardException.Blackboard.html",
    "title": "Property Blackboard | EyeAuras Docs",
    "keywords": "Property Blackboard Blackboard Declaration public IHasVariables Blackboard { get; } Property Value Type Description IHasVariables"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BlackboardException.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BlackboardException.html",
    "title": "Class BlackboardException | EyeAuras Docs",
    "keywords": "Class BlackboardException Inheritance object Exception BlackboardException BlackboardVariableNotFoundException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP Assembly: EyeAuras.BehaviorTree.dll Syntax public class BlackboardException : Exception, ISerializable Constructors Name Description BlackboardException(IHasVariables, string) Properties Name Description Blackboard Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BlackboardVariableNotFoundException.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BlackboardVariableNotFoundException.-ctor.html",
    "title": "Constructor BlackboardVariableNotFoundException | EyeAuras Docs",
    "keywords": "Constructor BlackboardVariableNotFoundException BlackboardVariableNotFoundException(IHasVariables, string) Declaration public BlackboardVariableNotFoundException(IHasVariables blackboard, string variableName) Parameters Type Name Description IHasVariables blackboard string variableName"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BlackboardVariableNotFoundException.VariableName.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BlackboardVariableNotFoundException.VariableName.html",
    "title": "Property VariableName | EyeAuras Docs",
    "keywords": "Property VariableName VariableName Declaration public string VariableName { get; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BlackboardVariableNotFoundException.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.BlackboardVariableNotFoundException.html",
    "title": "Class BlackboardVariableNotFoundException | EyeAuras Docs",
    "keywords": "Class BlackboardVariableNotFoundException Inheritance object Exception BlackboardException BlackboardVariableNotFoundException Implements ISerializable Inherited Members BlackboardException.Blackboard Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP Assembly: EyeAuras.BehaviorTree.dll Syntax public sealed class BlackboardVariableNotFoundException : BlackboardException, ISerializable Constructors Name Description BlackboardVariableNotFoundException(IHasVariables, string) Properties Name Description VariableName Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Editor.BehaviorTreeModels.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Editor.BehaviorTreeModels.-ctor.html",
    "title": "Constructor BehaviorTreeModels | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeModels BehaviorTreeModels() Declaration public BehaviorTreeModels()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Editor.BehaviorTreeModels.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Editor.BehaviorTreeModels.html",
    "title": "Class BehaviorTreeModels | EyeAuras Docs",
    "keywords": "Class BehaviorTreeModels Inheritance object BehaviorTreeModels Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Editor Assembly: EyeAuras.BehaviorTree.dll Syntax public class BehaviorTreeModels Constructors Name Description BehaviorTreeModels() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Editor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Editor.html",
    "title": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP.Editor | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP.Editor Classes BehaviorTreeModels"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeRegistrator.RegisterNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeRegistrator.RegisterNode.html",
    "title": "Method RegisterNode | EyeAuras Docs",
    "keywords": "Method RegisterNode RegisterNode(Type) Declaration void RegisterNode(Type nodeType) Parameters Type Name Description Type nodeType"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeRegistrator.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeRegistrator.html",
    "title": "Interface IBehaviorTreeNodeRegistrator | EyeAuras Docs",
    "keywords": "Interface IBehaviorTreeNodeRegistrator Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP Assembly: EyeAuras.BehaviorTree.dll Syntax public interface IBehaviorTreeNodeRegistrator Methods Name Description RegisterNode(Type) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeRepository.CreateNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeRepository.CreateNode.html",
    "title": "Method CreateNode | EyeAuras Docs",
    "keywords": "Method CreateNode CreateNode(string) Declaration NodeBase CreateNode(string nodeName) Parameters Type Name Description string nodeName Returns Type Description NodeBase"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeRepository.GetNodeName.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeRepository.GetNodeName.html",
    "title": "Method GetNodeName | EyeAuras Docs",
    "keywords": "Method GetNodeName GetNodeName(Type) Declaration string GetNodeName(Type nodeType) Parameters Type Name Description Type nodeType Returns Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeRepository.KnownNodes.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeRepository.KnownNodes.html",
    "title": "Property KnownNodes | EyeAuras Docs",
    "keywords": "Property KnownNodes KnownNodes Declaration IDictionary<Type, string> KnownNodes { get; } Property Value Type Description IDictionary<Type, string>"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeRepository.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeRepository.html",
    "title": "Interface IBehaviorTreeNodeRepository | EyeAuras Docs",
    "keywords": "Interface IBehaviorTreeNodeRepository Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP Assembly: EyeAuras.BehaviorTree.dll Syntax public interface IBehaviorTreeNodeRepository Properties Name Description KnownNodes Methods Name Description CreateNode(string) GetNodeName(Type) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeSerializer.Deserialize.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeSerializer.Deserialize.html",
    "title": "Method Deserialize | EyeAuras Docs",
    "keywords": "Method Deserialize Deserialize<T>(string) Declaration T Deserialize<T>(string nodeXml) Parameters Type Name Description string nodeXml Returns Type Description T Type Parameters Name Description T Deserialize(XElement, Type) Declaration object Deserialize(XElement nodeXml, Type nodeType) Parameters Type Name Description XElement nodeXml Type nodeType Returns Type Description object Deserialize<T>(XElement) Declaration T Deserialize<T>(XElement nodeXml) Parameters Type Name Description XElement nodeXml Returns Type Description T Type Parameters Name Description T Deserialize(XElement) Declaration NodeBase Deserialize(XElement nodeXml) Parameters Type Name Description XElement nodeXml Returns Type Description NodeBase"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeSerializer.Serialize.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeSerializer.Serialize.html",
    "title": "Method Serialize | EyeAuras Docs",
    "keywords": "Method Serialize Serialize<T>(T) Declaration string Serialize<T>(T node) Parameters Type Name Description T node Returns Type Description string Type Parameters Name Description T"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeSerializer.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.IBehaviorTreeNodeSerializer.html",
    "title": "Interface IBehaviorTreeNodeSerializer | EyeAuras Docs",
    "keywords": "Interface IBehaviorTreeNodeSerializer Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP Assembly: EyeAuras.BehaviorTree.dll Syntax public interface IBehaviorTreeNodeSerializer Methods Name Description Deserialize(XElement) Deserialize(XElement, Type) Deserialize<T>(string) Deserialize<T>(XElement) Serialize<T>(T) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ActionNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ActionNode.-ctor.html",
    "title": "Constructor ActionNode | EyeAuras Docs",
    "keywords": "Constructor ActionNode ActionNode() Declaration protected ActionNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ActionNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ActionNode.html",
    "title": "Class ActionNode | EyeAuras Docs",
    "keywords": "Class ActionNode Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ActionNode AlwaysFailureNode AlwaysSuccessNode SetBlackboardActionNode KeyPressActionNode MouseMoveToWaypointActionNode MouseMoveActionNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.TickInternal(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes Assembly: EyeAuras.BehaviorTree.dll Syntax public abstract class ActionNode : NodeBase, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description ActionNode() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.AlwaysFailureNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.AlwaysFailureNode.-ctor.html",
    "title": "Constructor AlwaysFailureNode | EyeAuras Docs",
    "keywords": "Constructor AlwaysFailureNode AlwaysFailureNode() Declaration public AlwaysFailureNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.AlwaysFailureNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.AlwaysFailureNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.AlwaysFailureNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.AlwaysFailureNode.html",
    "title": "Class AlwaysFailureNode | EyeAuras Docs",
    "keywords": "Class AlwaysFailureNode This class represents an AlwaysFailure node in a behavior tree. AlwaysFailure nodes are leaf nodes that always return a status of failure. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ActionNode AlwaysFailureNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions Assembly: EyeAuras.BehaviorTree.dll Syntax public class AlwaysFailureNode : ActionNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description AlwaysFailureNode() Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.AlwaysSuccessNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.AlwaysSuccessNode.-ctor.html",
    "title": "Constructor AlwaysSuccessNode | EyeAuras Docs",
    "keywords": "Constructor AlwaysSuccessNode AlwaysSuccessNode() Declaration public AlwaysSuccessNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.AlwaysSuccessNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.AlwaysSuccessNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.AlwaysSuccessNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.AlwaysSuccessNode.html",
    "title": "Class AlwaysSuccessNode | EyeAuras Docs",
    "keywords": "Class AlwaysSuccessNode This class represents an AlwaysSuccess node in a behavior tree. AlwaysSuccess nodes are leaf nodes that always return a status of success. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ActionNode AlwaysSuccessNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions Assembly: EyeAuras.BehaviorTree.dll Syntax public class AlwaysSuccessNode : ActionNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description AlwaysSuccessNode() Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.SetBlackboardActionNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.SetBlackboardActionNode.-ctor.html",
    "title": "Constructor SetBlackboardActionNode | EyeAuras Docs",
    "keywords": "Constructor SetBlackboardActionNode SetBlackboardActionNode() Declaration public SetBlackboardActionNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.SetBlackboardActionNode.DefaultReferencesProvider.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.SetBlackboardActionNode.DefaultReferencesProvider.html",
    "title": "Property DefaultReferencesProvider | EyeAuras Docs",
    "keywords": "Property DefaultReferencesProvider DefaultReferencesProvider Declaration public IDefaultReferencesProvider DefaultReferencesProvider { get; init; } Property Value Type Description IDefaultReferencesProvider"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.SetBlackboardActionNode.DefaultVariableType.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.SetBlackboardActionNode.DefaultVariableType.html",
    "title": "Property DefaultVariableType | EyeAuras Docs",
    "keywords": "Property DefaultVariableType DefaultVariableType Declaration public Type DefaultVariableType { get; set; } Property Value Type Description Type"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.SetBlackboardActionNode.ExpressionText.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.SetBlackboardActionNode.ExpressionText.html",
    "title": "Property ExpressionText | EyeAuras Docs",
    "keywords": "Property ExpressionText ExpressionText Declaration public string ExpressionText { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.SetBlackboardActionNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.SetBlackboardActionNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.SetBlackboardActionNode.VariableName.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.SetBlackboardActionNode.VariableName.html",
    "title": "Property VariableName | EyeAuras Docs",
    "keywords": "Property VariableName VariableName Declaration public string VariableName { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.SetBlackboardActionNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.SetBlackboardActionNode.html",
    "title": "Class SetBlackboardActionNode | EyeAuras Docs",
    "keywords": "Class SetBlackboardActionNode Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ActionNode SetBlackboardActionNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions Assembly: EyeAuras.BehaviorTree.dll Syntax public class SetBlackboardActionNode : ActionNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description SetBlackboardActionNode() Properties Name Description DefaultReferencesProvider DefaultVariableType ExpressionText VariableName Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions.html",
    "title": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions Classes AlwaysFailureNode This class represents an AlwaysFailure node in a behavior tree. AlwaysFailure nodes are leaf nodes that always return a status of failure. AlwaysSuccessNode This class represents an AlwaysSuccess node in a behavior tree. AlwaysSuccess nodes are leaf nodes that always return a status of success. SetBlackboardActionNode"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ConditionNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ConditionNode.-ctor.html",
    "title": "Constructor ConditionNode | EyeAuras Docs",
    "keywords": "Constructor ConditionNode ConditionNode() Declaration protected ConditionNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ConditionNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ConditionNode.html",
    "title": "Class ConditionNode | EyeAuras Docs",
    "keywords": "Class ConditionNode Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ConditionNode CheckBlackboardConditionNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.TickInternal(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes Assembly: EyeAuras.BehaviorTree.dll Syntax public abstract class ConditionNode : NodeBase, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description ConditionNode() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions.CheckBlackboardConditionNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions.CheckBlackboardConditionNode.-ctor.html",
    "title": "Constructor CheckBlackboardConditionNode | EyeAuras Docs",
    "keywords": "Constructor CheckBlackboardConditionNode CheckBlackboardConditionNode() Declaration public CheckBlackboardConditionNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions.CheckBlackboardConditionNode.DefaultReferencesProvider.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions.CheckBlackboardConditionNode.DefaultReferencesProvider.html",
    "title": "Property DefaultReferencesProvider | EyeAuras Docs",
    "keywords": "Property DefaultReferencesProvider DefaultReferencesProvider Declaration public IDefaultReferencesProvider DefaultReferencesProvider { get; init; } Property Value Type Description IDefaultReferencesProvider"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions.CheckBlackboardConditionNode.DefaultVariableType.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions.CheckBlackboardConditionNode.DefaultVariableType.html",
    "title": "Property DefaultVariableType | EyeAuras Docs",
    "keywords": "Property DefaultVariableType DefaultVariableType Declaration public Type DefaultVariableType { get; set; } Property Value Type Description Type"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions.CheckBlackboardConditionNode.ExpressionText.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions.CheckBlackboardConditionNode.ExpressionText.html",
    "title": "Property ExpressionText | EyeAuras Docs",
    "keywords": "Property ExpressionText ExpressionText Declaration public string ExpressionText { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions.CheckBlackboardConditionNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions.CheckBlackboardConditionNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions.CheckBlackboardConditionNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions.CheckBlackboardConditionNode.html",
    "title": "Class CheckBlackboardConditionNode | EyeAuras Docs",
    "keywords": "Class CheckBlackboardConditionNode Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ConditionNode CheckBlackboardConditionNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions Assembly: EyeAuras.BehaviorTree.dll Syntax public class CheckBlackboardConditionNode : ConditionNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description CheckBlackboardConditionNode() Properties Name Description DefaultReferencesProvider DefaultVariableType ExpressionText Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions.html",
    "title": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions Classes CheckBlackboardConditionNode"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.BehaviorTreeNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.BehaviorTreeNode.-ctor.html",
    "title": "Constructor BehaviorTreeNode | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeNode BehaviorTreeNode() Declaration public BehaviorTreeNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.BehaviorTreeNode.TreeId.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.BehaviorTreeNode.TreeId.html",
    "title": "Property TreeId | EyeAuras Docs",
    "keywords": "Property TreeId TreeId Declaration public string TreeId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.BehaviorTreeNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.BehaviorTreeNode.html",
    "title": "Class BehaviorTreeNode | EyeAuras Docs",
    "keywords": "Class BehaviorTreeNode This class represents a BehaviorTree node. A BehaviorTree node is a type of SequenceNode and serves as the root of the behavior tree. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ControlNode SequenceNode BehaviorTreeNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members SequenceNode.TickInternal(CancellationToken) NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow Assembly: EyeAuras.BehaviorTree.dll Syntax public class BehaviorTreeNode : SequenceNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description BehaviorTreeNode() Properties Name Description TreeId Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.FallbackNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.FallbackNode.-ctor.html",
    "title": "Constructor FallbackNode | EyeAuras Docs",
    "keywords": "Constructor FallbackNode FallbackNode() Declaration public FallbackNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.FallbackNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.FallbackNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.FallbackNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.FallbackNode.html",
    "title": "Class FallbackNode | EyeAuras Docs",
    "keywords": "Class FallbackNode This class represents a Fallback node in a behavior tree. Fallback nodes are control nodes that tick their children one at a time from top to bottom. If a child succeeds or runs, the fallback node will immediately return the same status. In the next tick, it will start again from the first child, unlike the sequence node. If all children fail, only then does the fallback node fail. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ControlNode FallbackNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow Assembly: EyeAuras.BehaviorTree.dll Syntax public sealed class FallbackNode : ControlNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description FallbackNode() Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.IfThenElseNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.IfThenElseNode.-ctor.html",
    "title": "Constructor IfThenElseNode | EyeAuras Docs",
    "keywords": "Constructor IfThenElseNode IfThenElseNode() Declaration public IfThenElseNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.IfThenElseNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.IfThenElseNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) The TickInternal method is the core logic of the IfThenElse node. If the condition node returns Success, then it ticks the Then node (the second child). If the condition node returns Failure, then it ticks the Else node (the third child). If the condition node returns Running, then it also returns Running. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. It will be the same as the return status of either Then or Else node, or Running if the condition node returns Running. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.IfThenElseNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.IfThenElseNode.html",
    "title": "Class IfThenElseNode | EyeAuras Docs",
    "keywords": "Class IfThenElseNode The IfThenElse node is a type of Control Flow node in the behavior tree with exactly three children nodes. If the condition node returns Success, then it ticks the Then node (the second child). If the condition node returns Failure, then it ticks the Else node (the third child). If the condition node returns Running, then it also returns Running. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ControlNode IfThenElseNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow Assembly: EyeAuras.BehaviorTree.dll Syntax public class IfThenElseNode : ControlNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description IfThenElseNode() Methods Name Description TickInternal(CancellationToken) The TickInternal method is the core logic of the IfThenElse node. If the condition node returns Success, then it ticks the Then node (the second child). If the condition node returns Failure, then it ticks the Else node (the third child). If the condition node returns Running, then it also returns Running. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.ParallelNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.ParallelNode.-ctor.html",
    "title": "Constructor ParallelNode | EyeAuras Docs",
    "keywords": "Constructor ParallelNode ParallelNode() Declaration public ParallelNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.ParallelNode.FailureCount.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.ParallelNode.FailureCount.html",
    "title": "Property FailureCount | EyeAuras Docs",
    "keywords": "Property FailureCount FailureCount Declaration public int FailureCount { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.ParallelNode.SuccessCount.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.ParallelNode.SuccessCount.html",
    "title": "Property SuccessCount | EyeAuras Docs",
    "keywords": "Property SuccessCount SuccessCount Declaration public int SuccessCount { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.ParallelNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.ParallelNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) Executes all children nodes in parallel. If the number of child nodes returning Success reaches successCount, this method immediately returns Success. If the number of child nodes returning Failure reaches failureCount, this method immediately returns Failure. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns Success as soon as successCount child nodes return Success. Returns Failure as soon as failureCount child nodes return Failure. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.ParallelNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.ParallelNode.html",
    "title": "Class ParallelNode | EyeAuras Docs",
    "keywords": "Class ParallelNode A composite node that executes all of its children in parallel. It returns Success if the number of child nodes returning Success reaches the successCount. It returns Failure if the number of child nodes returning Failure reaches the failureCount. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ControlNode ParallelNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow Assembly: EyeAuras.BehaviorTree.dll Syntax public class ParallelNode : ControlNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description ParallelNode() Properties Name Description FailureCount SuccessCount Methods Name Description TickInternal(CancellationToken) Executes all children nodes in parallel. If the number of child nodes returning Success reaches successCount, this method immediately returns Success. If the number of child nodes returning Failure reaches failureCount, this method immediately returns Failure. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SelectorNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SelectorNode.-ctor.html",
    "title": "Constructor SelectorNode | EyeAuras Docs",
    "keywords": "Constructor SelectorNode SelectorNode() Declaration public SelectorNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SelectorNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SelectorNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SelectorNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SelectorNode.html",
    "title": "Class SelectorNode | EyeAuras Docs",
    "keywords": "Class SelectorNode This class represents a Selector node in a behavior tree. Selector nodes are control nodes that tick their children one at a time from top to bottom. If a child fails, the selector node will move on to the next child. If a child succeeds, the selector node immediately returns with a status of success. If all children fail, only then does the selector node fail. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ControlNode SelectorNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow Assembly: EyeAuras.BehaviorTree.dll Syntax public class SelectorNode : ControlNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description SelectorNode() Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SequenceNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SequenceNode.-ctor.html",
    "title": "Constructor SequenceNode | EyeAuras Docs",
    "keywords": "Constructor SequenceNode SequenceNode() Declaration public SequenceNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SequenceNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SequenceNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SequenceNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SequenceNode.html",
    "title": "Class SequenceNode | EyeAuras Docs",
    "keywords": "Class SequenceNode This class represents a Sequence node in a behavior tree. Sequence nodes are control nodes that tick their children one at a time from top to bottom. If a child succeeds, the sequence node will move on to the next child. If a child fails, the sequence node immediately returns with a status of failure. If all children succeed, only then does the sequence node succeed. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ControlNode SequenceNode BehaviorTreeNode SubTreeNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow Assembly: EyeAuras.BehaviorTree.dll Syntax public class SequenceNode : ControlNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description SequenceNode() Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SubTreeNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SubTreeNode.-ctor.html",
    "title": "Constructor SubTreeNode | EyeAuras Docs",
    "keywords": "Constructor SubTreeNode SubTreeNode() Declaration public SubTreeNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SubTreeNode.AutoRemap.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SubTreeNode.AutoRemap.html",
    "title": "Property AutoRemap | EyeAuras Docs",
    "keywords": "Property AutoRemap AutoRemap AutoRemap property that defines the blackboard key remapping behavior. Declaration public bool AutoRemap { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SubTreeNode.FormatToString.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SubTreeNode.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides NodeBase.FormatToString(ToStringBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SubTreeNode.SubTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SubTreeNode.SubTree.html",
    "title": "Property SubTree | EyeAuras Docs",
    "keywords": "Property SubTree SubTree Declaration public BehaviorTreeNode SubTree { get; } Property Value Type Description BehaviorTreeNode"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SubTreeNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SubTreeNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides SequenceNode.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SubTreeNode.TreeId.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SubTreeNode.TreeId.html",
    "title": "Property TreeId | EyeAuras Docs",
    "keywords": "Property TreeId TreeId Declaration public string TreeId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SubTreeNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.SubTreeNode.html",
    "title": "Class SubTreeNode | EyeAuras Docs",
    "keywords": "Class SubTreeNode This class represents a SubTree node in a behavior tree. A SubTree node is a type of control node that encapsulates a subtree within a behavior tree. It can optionally use the \"AutoRemap\" attribute to remap blackboard keys. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ControlNode SequenceNode SubTreeNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow Assembly: EyeAuras.BehaviorTree.dll Syntax public class SubTreeNode : SequenceNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description SubTreeNode() Properties Name Description AutoRemap AutoRemap property that defines the blackboard key remapping behavior. SubTree TreeId Methods Name Description FormatToString(ToStringBuilder) TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow.html",
    "title": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow Classes BehaviorTreeNode This class represents a BehaviorTree node. A BehaviorTree node is a type of SequenceNode and serves as the root of the behavior tree. FallbackNode This class represents a Fallback node in a behavior tree. Fallback nodes are control nodes that tick their children one at a time from top to bottom. If a child succeeds or runs, the fallback node will immediately return the same status. In the next tick, it will start again from the first child, unlike the sequence node. If all children fail, only then does the fallback node fail. IfThenElseNode The IfThenElse node is a type of Control Flow node in the behavior tree with exactly three children nodes. If the condition node returns Success, then it ticks the Then node (the second child). If the condition node returns Failure, then it ticks the Else node (the third child). If the condition node returns Running, then it also returns Running. ParallelNode A composite node that executes all of its children in parallel. It returns Success if the number of child nodes returning Success reaches the successCount. It returns Failure if the number of child nodes returning Failure reaches the failureCount. SelectorNode This class represents a Selector node in a behavior tree. Selector nodes are control nodes that tick their children one at a time from top to bottom. If a child fails, the selector node will move on to the next child. If a child succeeds, the selector node immediately returns with a status of success. If all children fail, only then does the selector node fail. SequenceNode This class represents a Sequence node in a behavior tree. Sequence nodes are control nodes that tick their children one at a time from top to bottom. If a child succeeds, the sequence node will move on to the next child. If a child fails, the sequence node immediately returns with a status of failure. If all children succeed, only then does the sequence node succeed. SubTreeNode This class represents a SubTree node in a behavior tree. A SubTree node is a type of control node that encapsulates a subtree within a behavior tree. It can optionally use the \"AutoRemap\" attribute to remap blackboard keys."
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlNode.-ctor.html",
    "title": "Constructor ControlNode | EyeAuras Docs",
    "keywords": "Constructor ControlNode ControlNode() Declaration protected ControlNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlNode.html",
    "title": "Class ControlNode | EyeAuras Docs",
    "keywords": "Class ControlNode Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ControlNode FallbackNode IfThenElseNode ParallelNode SelectorNode SequenceNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.TickInternal(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes Assembly: EyeAuras.BehaviorTree.dll Syntax public abstract class ControlNode : NodeBase, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description ControlNode() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.DecoratorNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.DecoratorNode.-ctor.html",
    "title": "Constructor DecoratorNode | EyeAuras Docs",
    "keywords": "Constructor DecoratorNode DecoratorNode() Declaration protected DecoratorNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.DecoratorNode.Child.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.DecoratorNode.Child.html",
    "title": "Property Child | EyeAuras Docs",
    "keywords": "Property Child Child Declaration public NodeBase Child { get; } Property Value Type Description NodeBase"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.DecoratorNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.DecoratorNode.html",
    "title": "Class DecoratorNode | EyeAuras Docs",
    "keywords": "Class DecoratorNode Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase DecoratorNode CooldownNode ForceFailureNode ForceSuccessNode InverterNode RepeatNode RetryUntilSuccessfulNode TimeoutNode UntilSuccessNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.TickInternal(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes Assembly: EyeAuras.BehaviorTree.dll Syntax public abstract class DecoratorNode : NodeBase, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description DecoratorNode() Properties Name Description Child Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.CooldownNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.CooldownNode.-ctor.html",
    "title": "Constructor CooldownNode | EyeAuras Docs",
    "keywords": "Constructor CooldownNode CooldownNode() Declaration public CooldownNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.CooldownNode.CooldownDurationInMs.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.CooldownNode.CooldownDurationInMs.html",
    "title": "Property CooldownDurationInMs | EyeAuras Docs",
    "keywords": "Property CooldownDurationInMs CooldownDurationInMs The duration in milliseconds that the node should wait after a successful tick before ticking the child again. Declaration public double CooldownDurationInMs { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.CooldownNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.CooldownNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.CooldownNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.CooldownNode.html",
    "title": "Class CooldownNode | EyeAuras Docs",
    "keywords": "Class CooldownNode A Cooldown node is a type of DecoratorNode that tracks the last time its child node was ticked successfully. If the child node is requested to tick again before the cooldown period is over, the Cooldown node returns a failure status without ticking the child. Once the cooldown period is over, the Cooldown node will allow its child to tick again. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase DecoratorNode CooldownNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members DecoratorNode.Child NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators Assembly: EyeAuras.BehaviorTree.dll Syntax public class CooldownNode : DecoratorNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description CooldownNode() Properties Name Description CooldownDurationInMs The duration in milliseconds that the node should wait after a successful tick before ticking the child again. Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.ForceFailureNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.ForceFailureNode.-ctor.html",
    "title": "Constructor ForceFailureNode | EyeAuras Docs",
    "keywords": "Constructor ForceFailureNode ForceFailureNode() Declaration public ForceFailureNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.ForceFailureNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.ForceFailureNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) Forces the Tick method to return a status of Failure regardless of the child node's execution status. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns NodeStatus.Failure every time it is called. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.ForceFailureNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.ForceFailureNode.html",
    "title": "Class ForceFailureNode | EyeAuras Docs",
    "keywords": "Class ForceFailureNode This node will always return Failure, irrespective of the actual execution status of its child node. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase DecoratorNode ForceFailureNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members DecoratorNode.Child NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators Assembly: EyeAuras.BehaviorTree.dll Syntax public class ForceFailureNode : DecoratorNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description ForceFailureNode() Methods Name Description TickInternal(CancellationToken) Forces the Tick method to return a status of Failure regardless of the child node's execution status. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.ForceSuccessNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.ForceSuccessNode.-ctor.html",
    "title": "Constructor ForceSuccessNode | EyeAuras Docs",
    "keywords": "Constructor ForceSuccessNode ForceSuccessNode() Declaration public ForceSuccessNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.ForceSuccessNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.ForceSuccessNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) Forces the Tick method to return a status of Success regardless of the child node's execution status. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns NodeStatus.Success every time it is called. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.ForceSuccessNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.ForceSuccessNode.html",
    "title": "Class ForceSuccessNode | EyeAuras Docs",
    "keywords": "Class ForceSuccessNode This node will always return Success, irrespective of the actual execution status of its child node. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase DecoratorNode ForceSuccessNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members DecoratorNode.Child NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators Assembly: EyeAuras.BehaviorTree.dll Syntax public class ForceSuccessNode : DecoratorNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description ForceSuccessNode() Methods Name Description TickInternal(CancellationToken) Forces the Tick method to return a status of Success regardless of the child node's execution status. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.InverterNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.InverterNode.-ctor.html",
    "title": "Constructor InverterNode | EyeAuras Docs",
    "keywords": "Constructor InverterNode InverterNode() Declaration public InverterNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.InverterNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.InverterNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.InverterNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.InverterNode.html",
    "title": "Class InverterNode | EyeAuras Docs",
    "keywords": "Class InverterNode This class represents an Inverter node in a behavior tree. An Inverter node is a type of DecoratorNode which negates the success or failure of its child node. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase DecoratorNode InverterNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members DecoratorNode.Child NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators Assembly: EyeAuras.BehaviorTree.dll Syntax public class InverterNode : DecoratorNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description InverterNode() Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RepeatNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RepeatNode.-ctor.html",
    "title": "Constructor RepeatNode | EyeAuras Docs",
    "keywords": "Constructor RepeatNode RepeatNode() Declaration public RepeatNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RepeatNode.Count.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RepeatNode.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count The number of times the child node should be run. Declaration public int Count { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RepeatNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RepeatNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RepeatNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RepeatNode.html",
    "title": "Class RepeatNode | EyeAuras Docs",
    "keywords": "Class RepeatNode This class represents a Repeat node in a behavior tree. A Repeat node is a type of DecoratorNode which runs its child node a certain number of times. It fails if its child node fails, but succeeds if it finishes all repetitions successfully. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase DecoratorNode RepeatNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members DecoratorNode.Child NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators Assembly: EyeAuras.BehaviorTree.dll Syntax public class RepeatNode : DecoratorNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description RepeatNode() Properties Name Description Count The number of times the child node should be run. Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RetryUntilSuccessfulNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RetryUntilSuccessfulNode.-ctor.html",
    "title": "Constructor RetryUntilSuccessfulNode | EyeAuras Docs",
    "keywords": "Constructor RetryUntilSuccessfulNode RetryUntilSuccessfulNode() Declaration public RetryUntilSuccessfulNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RetryUntilSuccessfulNode.MaxAttempts.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RetryUntilSuccessfulNode.MaxAttempts.html",
    "title": "Property MaxAttempts | EyeAuras Docs",
    "keywords": "Property MaxAttempts MaxAttempts The maximum number of attempts the node will make to execute its child. Declaration public int MaxAttempts { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RetryUntilSuccessfulNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RetryUntilSuccessfulNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) Executes its child node repeatedly until the child returns success, or until the maximum number of attempts is reached. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns success if its child node eventually returns success, otherwise returns failure. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RetryUntilSuccessfulNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.RetryUntilSuccessfulNode.html",
    "title": "Class RetryUntilSuccessfulNode | EyeAuras Docs",
    "keywords": "Class RetryUntilSuccessfulNode The RetryUntilSuccessful node executes its child node repeatedly until it returns success. It will return failure if its child does not eventually return success. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase DecoratorNode RetryUntilSuccessfulNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members DecoratorNode.Child NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators Assembly: EyeAuras.BehaviorTree.dll Syntax public class RetryUntilSuccessfulNode : DecoratorNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description RetryUntilSuccessfulNode() Properties Name Description MaxAttempts The maximum number of attempts the node will make to execute its child. Methods Name Description TickInternal(CancellationToken) Executes its child node repeatedly until the child returns success, or until the maximum number of attempts is reached. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.TimeoutNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.TimeoutNode.-ctor.html",
    "title": "Constructor TimeoutNode | EyeAuras Docs",
    "keywords": "Constructor TimeoutNode TimeoutNode() Declaration public TimeoutNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.TimeoutNode.DurationInMs.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.TimeoutNode.DurationInMs.html",
    "title": "Property DurationInMs | EyeAuras Docs",
    "keywords": "Property DurationInMs DurationInMs The duration in milliseconds after which the child node should be run. Declaration public double DurationInMs { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.TimeoutNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.TimeoutNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.TimeoutNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.TimeoutNode.html",
    "title": "Class TimeoutNode | EyeAuras Docs",
    "keywords": "Class TimeoutNode This class represents a Timeout node in a behavior tree. A Timeout node is a type of DecoratorNode that runs its child node after a certain duration. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase DecoratorNode TimeoutNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members DecoratorNode.Child NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators Assembly: EyeAuras.BehaviorTree.dll Syntax public class TimeoutNode : DecoratorNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description TimeoutNode() Properties Name Description DurationInMs The duration in milliseconds after which the child node should be run. Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.UntilSuccessNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.UntilSuccessNode.-ctor.html",
    "title": "Constructor UntilSuccessNode | EyeAuras Docs",
    "keywords": "Constructor UntilSuccessNode UntilSuccessNode() Declaration public UntilSuccessNode()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.UntilSuccessNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.UntilSuccessNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.UntilSuccessNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.UntilSuccessNode.html",
    "title": "Class UntilSuccessNode | EyeAuras Docs",
    "keywords": "Class UntilSuccessNode This class represents an UntilSuccess node in a behavior tree. An UntilSuccess node is a type of DecoratorNode that continuously runs its child node until it succeeds. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase DecoratorNode UntilSuccessNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members DecoratorNode.Child NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators Assembly: EyeAuras.BehaviorTree.dll Syntax public class UntilSuccessNode : DecoratorNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description UntilSuccessNode() Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators.html",
    "title": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators Classes CooldownNode A Cooldown node is a type of DecoratorNode that tracks the last time its child node was ticked successfully. If the child node is requested to tick again before the cooldown period is over, the Cooldown node returns a failure status without ticking the child. Once the cooldown period is over, the Cooldown node will allow its child to tick again. ForceFailureNode This node will always return Failure, irrespective of the actual execution status of its child node. ForceSuccessNode This node will always return Success, irrespective of the actual execution status of its child node. InverterNode This class represents an Inverter node in a behavior tree. An Inverter node is a type of DecoratorNode which negates the success or failure of its child node. RepeatNode This class represents a Repeat node in a behavior tree. A Repeat node is a type of DecoratorNode which runs its child node a certain number of times. It fails if its child node fails, but succeeds if it finishes all repetitions successfully. RetryUntilSuccessfulNode The RetryUntilSuccessful node executes its child node repeatedly until it returns success. It will return failure if its child does not eventually return success. TimeoutNode This class represents a Timeout node in a behavior tree. A Timeout node is a type of DecoratorNode that runs its child node after a certain duration. UntilSuccessNode This class represents an UntilSuccess node in a behavior tree. An UntilSuccess node is a type of DecoratorNode that continuously runs its child node until it succeeds."
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.-ctor.html",
    "title": "Constructor NodeBase | EyeAuras Docs",
    "keywords": "Constructor NodeBase NodeBase() Declaration protected NodeBase()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Blackboard.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Blackboard.html",
    "title": "Property Blackboard | EyeAuras Docs",
    "keywords": "Property Blackboard Blackboard Contains a reference to behavior tree blackboard, which is shared amongst all tree nodes Declaration public BehaviorTreeBlackboard Blackboard { get; set; } Property Value Type Description BehaviorTreeBlackboard"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Children.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Children.html",
    "title": "Property Children | EyeAuras Docs",
    "keywords": "Property Children Children The children nodes of the current node. Declaration public ISourceCacheEx<NodeBase, BehaviorTreeNodeId> Children { get; } Property Value Type Description ISourceCacheEx<NodeBase, BehaviorTreeNodeId>"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.ChildrenAsList.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.ChildrenAsList.html",
    "title": "Property ChildrenAsList | EyeAuras Docs",
    "keywords": "Property ChildrenAsList ChildrenAsList The children nodes of the current node, ordered by position. Declaration public IObservableListEx<NodeBase> ChildrenAsList { get; } Property Value Type Description IObservableListEx<NodeBase>"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Error.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Declaration public Exception Error { get; } Property Value Type Description Exception"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.FormatToString.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides DisposableReactiveObject.FormatToString(ToStringBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Id.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Id.html",
    "title": "Property Id | EyeAuras Docs",
    "keywords": "Property Id Id Declaration public BehaviorTreeNodeId Id { get; } Property Value Type Description BehaviorTreeNodeId"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.IsBusy.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.IsBusy.html",
    "title": "Property IsBusy | EyeAuras Docs",
    "keywords": "Property IsBusy IsBusy Declaration public bool IsBusy { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.IsEnabled.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.IsReferenceNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.IsReferenceNode.html",
    "title": "Property IsReferenceNode | EyeAuras Docs",
    "keywords": "Property IsReferenceNode IsReferenceNode Reference node should not serialize children e.g. SubTree node holds ID of BehaviorTree and is materialized when needed and should not ever be serialized WITH its children Declaration public bool IsReferenceNode { get; protected init; } Property Value Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.LastTickTimestamp.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.LastTickTimestamp.html",
    "title": "Property LastTickTimestamp | EyeAuras Docs",
    "keywords": "Property LastTickTimestamp LastTickTimestamp Declaration public DateTime? LastTickTimestamp { get; } Property Value Type Description DateTime?"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Name.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Any instance of a TreeNode has a name. This identifier is meant to be human-readable and it doesn't need to be unique. Declaration public string Name { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Parent.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Parent.html",
    "title": "Property Parent | EyeAuras Docs",
    "keywords": "Property Parent Parent Contains a reference to a parent, for the root element will be null Declaration public NodeBase Parent { get; } Property Value Type Description NodeBase"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Position.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Position.html",
    "title": "Property Position | EyeAuras Docs",
    "keywords": "Property Position Position Declaration public Vector2 Position { get; set; } Property Value Type Description Vector2"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Reset.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Reset.html",
    "title": "Method Reset | EyeAuras Docs",
    "keywords": "Method Reset Reset() This abstract method allows nodes to reset their state to default (stop timers, clear counters, etc) Declaration protected virtual void Reset()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.ResetStatus.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.ResetStatus.html",
    "title": "Method ResetStatus | EyeAuras Docs",
    "keywords": "Method ResetStatus ResetStatus() Declaration public void ResetStatus()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Root.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Root.html",
    "title": "Property Root | EyeAuras Docs",
    "keywords": "Property Root Root Contains a reference to root node Declaration public NodeBase Root { get; } Property Value Type Description NodeBase"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.ShortDescription.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.ShortDescription.html",
    "title": "Property ShortDescription | EyeAuras Docs",
    "keywords": "Property ShortDescription ShortDescription Declaration public string ShortDescription { get; protected set; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Status.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Status.html",
    "title": "Property Status | EyeAuras Docs",
    "keywords": "Property Status Status The execution status of the node. Default is Failure. Declaration public NodeStatus? Status { get; } Property Value Type Description NodeStatus?"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Tick.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.Tick.html",
    "title": "Method Tick | EyeAuras Docs",
    "keywords": "Method Tick Tick(CancellationToken) Executes the behavior of the node and updates its status. Never throws. Declaration public NodeStatus Tick(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution."
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected abstract NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution."
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.XmlName.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.XmlName.html",
    "title": "Property XmlName | EyeAuras Docs",
    "keywords": "Property XmlName XmlName Any instance of a TreeNode has a name. This identifier is meant to be human-readable and it doesn't need to be unique. Declaration public string XmlName { get; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeBase.html",
    "title": "Class NodeBase | EyeAuras Docs",
    "keywords": "Class NodeBase Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase BehaviorTreeRoot ActionNode ConditionNode ControlNode DecoratorNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes Assembly: EyeAuras.BehaviorTree.dll Syntax public abstract class NodeBase : DisposableReactiveObjectWithLogger, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description NodeBase() Properties Name Description Blackboard Contains a reference to behavior tree blackboard, which is shared amongst all tree nodes Children The children nodes of the current node. ChildrenAsList The children nodes of the current node, ordered by position. Error Id IsBusy IsEnabled IsReferenceNode Reference node should not serialize children e.g. SubTree node holds ID of BehaviorTree and is materialized when needed and should not ever be serialized WITH its children LastTickTimestamp Name Any instance of a TreeNode has a name. This identifier is meant to be human-readable and it doesn't need to be unique. Parent Contains a reference to a parent, for the root element will be null Position Root Contains a reference to root node ShortDescription Status The execution status of the node. Default is Failure. XmlName Any instance of a TreeNode has a name. This identifier is meant to be human-readable and it doesn't need to be unique. Methods Name Description FormatToString(ToStringBuilder) Reset() This abstract method allows nodes to reset their state to default (stop timers, clear counters, etc) ResetStatus() Tick(CancellationToken) Executes the behavior of the node and updates its status. Never throws. TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeStatus.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.NodeStatus.html",
    "title": "Enum NodeStatus | EyeAuras Docs",
    "keywords": "Enum NodeStatus Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes Assembly: EyeAuras.BehaviorTree.dll Syntax public enum NodeStatus Fields Name Description Failure Running Success Extension Methods ObjectExtensions.AddTo<NodeStatus, TCollection>(NodeStatus, ISourceList<TCollection>) ObjectExtensions.AddTo<NodeStatus, TCollection>(NodeStatus, ICollection<TCollection>) ObjectExtensions.CloneJson<NodeStatus>(NodeStatus) ObjectExtensions.CopyPropertiesTo<NodeStatus, TTarget>(NodeStatus, TTarget) ObjectExtensions.DumpToTextRaw<NodeStatus>(NodeStatus) ObjectExtensions.DumpToText<NodeStatus>(NodeStatus) ObjectExtensions.Dump<NodeStatus>(NodeStatus) ObjectExtensions.GetPropertyAccessor<NodeStatus, TValue>(NodeStatus, Expression<Func<NodeStatus, TValue>>) ObjectExtensions.InsertTo<NodeStatus, TCollection>(NodeStatus, IList<TCollection>, int) ObjectExtensions.ToJson<NodeStatus>(NodeStatus) ObjectExtensions.ToStringSafe<NodeStatus>(NodeStatus) ObjectExtensions.TransferPropertiesTo<NodeStatus, TTarget>(NodeStatus, TTarget, params string[]) XDocumentExtensions.AddTo<NodeStatus>(NodeStatus, XContainer)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.html",
    "title": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes Namespaces EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Actions EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Conditions EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.ControlFlow EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes.Decorators Classes ActionNode ConditionNode ControlNode DecoratorNode NodeBase Enums NodeStatus"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BehaviorTreeCsharpFunction-1.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BehaviorTreeCsharpFunction-1.-ctor.html",
    "title": "Constructor BehaviorTreeCsharpFunction | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeCsharpFunction BehaviorTreeCsharpFunction() Declaration public BehaviorTreeCsharpFunction()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BehaviorTreeCsharpFunction-1.DefaultVariableType.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BehaviorTreeCsharpFunction-1.DefaultVariableType.html",
    "title": "Property DefaultVariableType | EyeAuras Docs",
    "keywords": "Property DefaultVariableType DefaultVariableType Declaration public Type DefaultVariableType { get; set; } Property Value Type Description Type"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BehaviorTreeCsharpFunction-1.Delegate.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BehaviorTreeCsharpFunction-1.Delegate.html",
    "title": "Property Delegate | EyeAuras Docs",
    "keywords": "Property Delegate Delegate Declaration public Func<BehaviorTreeBlackboard, T> Delegate { get; } Property Value Type Description Func<BehaviorTreeBlackboard, T>"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BehaviorTreeCsharpFunction-1.ExpressionText.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BehaviorTreeCsharpFunction-1.ExpressionText.html",
    "title": "Property ExpressionText | EyeAuras Docs",
    "keywords": "Property ExpressionText ExpressionText Declaration public string ExpressionText { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BehaviorTreeCsharpFunction-1.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BehaviorTreeCsharpFunction-1.html",
    "title": "Class BehaviorTreeCsharpFunction<T> | EyeAuras Docs",
    "keywords": "Class BehaviorTreeCsharpFunction<T> Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger BehaviorTreeCsharpFunction<T> Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax public class BehaviorTreeCsharpFunction<T> : DisposableReactiveObjectWithLogger, IDisposable, INotifyPropertyChanged Type Parameters Name Description T Constructors Name Description BehaviorTreeCsharpFunction() Properties Name Description DefaultVariableType Delegate ExpressionText Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.-ctor.html",
    "title": "Constructor BlackboardSyntaxRewriter | EyeAuras Docs",
    "keywords": "Constructor BlackboardSyntaxRewriter BlackboardSyntaxRewriter() Declaration public BlackboardSyntaxRewriter()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.BlackboardAccessorName.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.BlackboardAccessorName.html",
    "title": "Field BlackboardAccessorName | EyeAuras Docs",
    "keywords": "Field BlackboardAccessorName Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax public const string BlackboardAccessorName = \"x\" Returns Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.IdentifierReplacer.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.IdentifierReplacer.-ctor.html",
    "title": "Constructor IdentifierReplacer | EyeAuras Docs",
    "keywords": "Constructor IdentifierReplacer IdentifierReplacer(Dictionary<string, IdentifierNameSyntax>) Declaration public IdentifierReplacer(Dictionary<string, IdentifierNameSyntax> replacements) Parameters Type Name Description Dictionary<string, IdentifierNameSyntax> replacements"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.IdentifierReplacer.VisitCastExpression.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.IdentifierReplacer.VisitCastExpression.html",
    "title": "Method VisitCastExpression | EyeAuras Docs",
    "keywords": "Method VisitCastExpression VisitCastExpression(CastExpressionSyntax) Declaration public override SyntaxNode VisitCastExpression(CastExpressionSyntax node) Parameters Type Name Description CastExpressionSyntax node Returns Type Description SyntaxNode"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.IdentifierReplacer.VisitIdentifierName.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.IdentifierReplacer.VisitIdentifierName.html",
    "title": "Method VisitIdentifierName | EyeAuras Docs",
    "keywords": "Method VisitIdentifierName VisitIdentifierName(IdentifierNameSyntax) Declaration public override SyntaxNode VisitIdentifierName(IdentifierNameSyntax node) Parameters Type Name Description IdentifierNameSyntax node Returns Type Description SyntaxNode"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.IdentifierReplacer.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.IdentifierReplacer.html",
    "title": "Class BlackboardSyntaxRewriter.IdentifierReplacer | EyeAuras Docs",
    "keywords": "Class BlackboardSyntaxRewriter.IdentifierReplacer Inheritance object BlackboardSyntaxRewriter.IdentifierReplacer Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax public class BlackboardSyntaxRewriter.IdentifierReplacer : CSharpSyntaxRewriter Constructors Name Description IdentifierReplacer(Dictionary<string, IdentifierNameSyntax>) Methods Name Description VisitCastExpression(CastExpressionSyntax) VisitIdentifierName(IdentifierNameSyntax) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.Visit.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.Visit.html",
    "title": "Method Visit | EyeAuras Docs",
    "keywords": "Method Visit Visit(SyntaxNode, Type) Declaration public SyntaxNode Visit(SyntaxNode syntaxNode, Type defaultType) Parameters Type Name Description SyntaxNode syntaxNode Type defaultType Returns Type Description SyntaxNode Implements IBlackboardSyntaxRewriter.Visit(SyntaxNode, Type)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.BlackboardSyntaxRewriter.html",
    "title": "Class BlackboardSyntaxRewriter | EyeAuras Docs",
    "keywords": "Class BlackboardSyntaxRewriter Inheritance object DisposableReactiveObject LazyReactiveObject<BlackboardSyntaxRewriter> BlackboardSyntaxRewriter Implements IDisposable INotifyPropertyChanged IBlackboardSyntaxRewriter Inherited Members LazyReactiveObject<BlackboardSyntaxRewriter>.Instance object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax public class BlackboardSyntaxRewriter : LazyReactiveObject<BlackboardSyntaxRewriter>, IDisposable, INotifyPropertyChanged, IBlackboardSyntaxRewriter Constructors Name Description BlackboardSyntaxRewriter() Fields Name Description BlackboardAccessorName Methods Name Description Visit(SyntaxNode, Type) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.IBehaviorTreeSerializable.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.IBehaviorTreeSerializable.html",
    "title": "Interface IBehaviorTreeSerializable | EyeAuras Docs",
    "keywords": "Interface IBehaviorTreeSerializable Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax public interface IBehaviorTreeSerializable Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.IBlackboardSyntaxRewriter.Visit.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.IBlackboardSyntaxRewriter.Visit.html",
    "title": "Method Visit | EyeAuras Docs",
    "keywords": "Method Visit Visit(SyntaxNode, Type) Declaration SyntaxNode Visit(SyntaxNode syntaxNode, Type defaultType) Parameters Type Name Description SyntaxNode syntaxNode Type defaultType Returns Type Description SyntaxNode"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.IBlackboardSyntaxRewriter.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.IBlackboardSyntaxRewriter.html",
    "title": "Interface IBlackboardSyntaxRewriter | EyeAuras Docs",
    "keywords": "Interface IBlackboardSyntaxRewriter Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax public interface IBlackboardSyntaxRewriter Methods Name Description Visit(SyntaxNode, Type) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.NodeExtensions.BuildTreeString.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.NodeExtensions.BuildTreeString.html",
    "title": "Method BuildTreeString | EyeAuras Docs",
    "keywords": "Method BuildTreeString BuildTreeString(NodeBase, string, bool) Declaration public static string BuildTreeString(this NodeBase node, string indent = \"\", bool last = true) Parameters Type Name Description NodeBase node string indent bool last Returns Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.NodeExtensions.EnumerateChildren.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.NodeExtensions.EnumerateChildren.html",
    "title": "Method EnumerateChildren | EyeAuras Docs",
    "keywords": "Method EnumerateChildren EnumerateChildren(NodeBase) Declaration public static IEnumerable<NodeBase> EnumerateChildren(this NodeBase instance) Parameters Type Name Description NodeBase instance Returns Type Description IEnumerable<NodeBase>"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.NodeExtensions.FindRoot.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.NodeExtensions.FindRoot.html",
    "title": "Method FindRoot | EyeAuras Docs",
    "keywords": "Method FindRoot FindRoot(NodeBase) Declaration public static NodeBase FindRoot(this NodeBase node) Parameters Type Name Description NodeBase node Returns Type Description NodeBase"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.NodeExtensions.ToXmlName.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.NodeExtensions.ToXmlName.html",
    "title": "Method ToXmlName | EyeAuras Docs",
    "keywords": "Method ToXmlName ToXmlName(NodeBase) Declaration public static string ToXmlName(this NodeBase instance) Parameters Type Name Description NodeBase instance Returns Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.NodeExtensions.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.NodeExtensions.html",
    "title": "Class NodeExtensions | EyeAuras Docs",
    "keywords": "Class NodeExtensions Inheritance object NodeExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax public static class NodeExtensions Methods Name Description BuildTreeString(NodeBase, string, bool) EnumerateChildren(NodeBase) FindRoot(NodeBase) ToXmlName(NodeBase)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.SyntaxNodeExtensions.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.SyntaxNodeExtensions.html",
    "title": "Class SyntaxNodeExtensions | EyeAuras Docs",
    "keywords": "Class SyntaxNodeExtensions Inheritance object SyntaxNodeExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax public static class SyntaxNodeExtensions"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding.html",
    "title": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding Classes BehaviorTreeCsharpFunction<T> BlackboardSyntaxRewriter BlackboardSyntaxRewriter.IdentifierReplacer NodeExtensions SyntaxNodeExtensions Interfaces IBehaviorTreeSerializable IBlackboardSyntaxRewriter"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeCPP.html",
    "title": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree.BehaviorTreeCPP Namespaces EyeAuras.BehaviorTree.BehaviorTreeCPP.Editor EyeAuras.BehaviorTree.BehaviorTreeCPP.Nodes EyeAuras.BehaviorTree.BehaviorTreeCPP.Scaffolding Classes BehaviorTreeBlackboard BehaviorTreeNodeRepository Repository class to handle serialization and deserialization of behavior tree nodes. BehaviorTreeRoot BlackboardException BlackboardVariableNotFoundException Interfaces IBehaviorTreeNodeRegistrator IBehaviorTreeNodeRepository IBehaviorTreeNodeSerializer"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.-ctor.html",
    "title": "Constructor BehaviorTreeDebugger | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeDebugger BehaviorTreeDebugger() Declaration public BehaviorTreeDebugger()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.Blackboard.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.Blackboard.html",
    "title": "Property Blackboard | EyeAuras Docs",
    "keywords": "Property Blackboard Blackboard Declaration public IReadOnlyObservableCollection<AuraVariable> Blackboard { get; } Property Value Type Description IReadOnlyObservableCollection<AuraVariable>"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.BuildRenderTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.RemoveSelected.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.RemoveSelected.html",
    "title": "Method RemoveSelected | EyeAuras Docs",
    "keywords": "Method RemoveSelected RemoveSelected() Declaration protected void RemoveSelected()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.RenderTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.RenderTree.html",
    "title": "Property RenderTree | EyeAuras Docs",
    "keywords": "Property RenderTree RenderTree Declaration public bool RenderTree { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.RenderVariables.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.RenderVariables.html",
    "title": "Property RenderVariables | EyeAuras Docs",
    "keywords": "Property RenderVariables RenderVariables Declaration public bool RenderVariables { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.SelectedItem.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.SelectedItem.html",
    "title": "Property SelectedItem | EyeAuras Docs",
    "keywords": "Property SelectedItem SelectedItem Declaration public NodeBase SelectedItem { get; set; } Property Value Type Description NodeBase"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.SelectedNode.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.SelectedNode.html",
    "title": "Property SelectedNode | EyeAuras Docs",
    "keywords": "Property SelectedNode SelectedNode Declaration public TreeNode<NodeBase> SelectedNode { get; set; } Property Value Type Description TreeNode<NodeBase>"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeDebugger.html",
    "title": "Class BehaviorTreeDebugger | EyeAuras Docs",
    "keywords": "Class BehaviorTreeDebugger Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<BehaviorTreeNode> BehaviorTreeDebugger Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<BehaviorTreeNode>.OnInitialized() BlazorReactiveComponent<BehaviorTreeNode>.TrackState<TOut>(Expression<Func<BehaviorTreeNode, TOut>>) BlazorReactiveComponent<BehaviorTreeNode>.Track<TOut>(Expression<Func<BehaviorTreeNode, TOut>>) BlazorReactiveComponent<BehaviorTreeNode>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeEditor Assembly: EyeAuras.BehaviorTree.dll Syntax public class BehaviorTreeDebugger : BlazorReactiveComponent<BehaviorTreeNode>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description BehaviorTreeDebugger() Properties Name Description Blackboard RenderTree RenderVariables SelectedItem SelectedNode Methods Name Description BuildRenderTree(RenderTreeBuilder) RemoveSelected() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeIcons.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeIcons.-ctor.html",
    "title": "Constructor BehaviorTreeIcons | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeIcons BehaviorTreeIcons() Declaration public BehaviorTreeIcons()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeIcons.BuildRenderTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeIcons.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeIcons.ResolveIconNameByType.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeIcons.ResolveIconNameByType.html",
    "title": "Method ResolveIconNameByType | EyeAuras Docs",
    "keywords": "Method ResolveIconNameByType ResolveIconNameByType(Type) Declaration public static string ResolveIconNameByType(Type type) Parameters Type Name Description Type type Returns Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeIcons.ResolveNodeIconId.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeIcons.ResolveNodeIconId.html",
    "title": "Method ResolveNodeIconId | EyeAuras Docs",
    "keywords": "Method ResolveNodeIconId ResolveNodeIconId(NodeBase) Declaration public static string ResolveNodeIconId(NodeBase node) Parameters Type Name Description NodeBase node Returns Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeIcons.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeIcons.html",
    "title": "Class BehaviorTreeIcons | EyeAuras Docs",
    "keywords": "Class BehaviorTreeIcons Inheritance object ComponentBase BehaviorTreeIcons Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.SetParametersAsync(ParameterView) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeEditor Assembly: EyeAuras.BehaviorTree.dll Syntax public class BehaviorTreeIcons : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Constructors Name Description BehaviorTreeIcons() Methods Name Description BuildRenderTree(RenderTreeBuilder) ResolveIconNameByType(Type) ResolveNodeIconId(NodeBase) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeEditor.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeEditor.-ctor.html",
    "title": "Constructor BehaviorTreeNodeEditor | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeNodeEditor BehaviorTreeNodeEditor() Declaration public BehaviorTreeNodeEditor()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeEditor.BuildRenderTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeEditor.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeEditor.StartTick.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeEditor.StartTick.html",
    "title": "Method StartTick | EyeAuras Docs",
    "keywords": "Method StartTick StartTick() Declaration public void StartTick()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeEditor.StopTick.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeEditor.StopTick.html",
    "title": "Method StopTick | EyeAuras Docs",
    "keywords": "Method StopTick StopTick() Declaration public void StopTick()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeEditor.TickCancellationTokenSource.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeEditor.TickCancellationTokenSource.html",
    "title": "Property TickCancellationTokenSource | EyeAuras Docs",
    "keywords": "Property TickCancellationTokenSource TickCancellationTokenSource Declaration public CancellationTokenSource TickCancellationTokenSource { get; } Property Value Type Description CancellationTokenSource"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeEditor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeEditor.html",
    "title": "Class BehaviorTreeNodeEditor | EyeAuras Docs",
    "keywords": "Class BehaviorTreeNodeEditor Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<NodeBase> BehaviorTreeNodeEditor Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<NodeBase>.OnInitialized() BlazorReactiveComponent<NodeBase>.TrackState<TOut>(Expression<Func<NodeBase, TOut>>) BlazorReactiveComponent<NodeBase>.Track<TOut>(Expression<Func<NodeBase, TOut>>) BlazorReactiveComponent<NodeBase>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeEditor Assembly: EyeAuras.BehaviorTree.dll Syntax public class BehaviorTreeNodeEditor : BlazorReactiveComponent<NodeBase>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description BehaviorTreeNodeEditor() Properties Name Description TickCancellationTokenSource Methods Name Description BuildRenderTree(RenderTreeBuilder) StartTick() StopTick() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeIcon.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeIcon.-ctor.html",
    "title": "Constructor BehaviorTreeNodeIcon | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeNodeIcon BehaviorTreeNodeIcon() Declaration public BehaviorTreeNodeIcon()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeIcon.BuildRenderTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeIcon.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeIcon.SvgIconId.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeIcon.SvgIconId.html",
    "title": "Property SvgIconId | EyeAuras Docs",
    "keywords": "Property SvgIconId SvgIconId Declaration public string SvgIconId { get; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeIcon.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeIcon.html",
    "title": "Class BehaviorTreeNodeIcon | EyeAuras Docs",
    "keywords": "Class BehaviorTreeNodeIcon Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<NodeBase> BehaviorTreeNodeIcon Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<NodeBase>.OnInitialized() BlazorReactiveComponent<NodeBase>.TrackState<TOut>(Expression<Func<NodeBase, TOut>>) BlazorReactiveComponent<NodeBase>.Track<TOut>(Expression<Func<NodeBase, TOut>>) BlazorReactiveComponent<NodeBase>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeEditor Assembly: EyeAuras.BehaviorTree.dll Syntax public class BehaviorTreeNodeIcon : BlazorReactiveComponent<NodeBase>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description BehaviorTreeNodeIcon() Properties Name Description SvgIconId Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeLabel.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeLabel.-ctor.html",
    "title": "Constructor BehaviorTreeNodeLabel | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeNodeLabel BehaviorTreeNodeLabel() Declaration public BehaviorTreeNodeLabel()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeLabel.BuildRenderTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeLabel.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeLabel.NodeIconId.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeLabel.NodeIconId.html",
    "title": "Property NodeIconId | EyeAuras Docs",
    "keywords": "Property NodeIconId NodeIconId Declaration public string NodeIconId { get; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeLabel.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeNodeLabel.html",
    "title": "Class BehaviorTreeNodeLabel | EyeAuras Docs",
    "keywords": "Class BehaviorTreeNodeLabel Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<NodeBase> BehaviorTreeNodeLabel Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<NodeBase>.OnInitialized() BlazorReactiveComponent<NodeBase>.TrackState<TOut>(Expression<Func<NodeBase, TOut>>) BlazorReactiveComponent<NodeBase>.Track<TOut>(Expression<Func<NodeBase, TOut>>) BlazorReactiveComponent<NodeBase>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeEditor Assembly: EyeAuras.BehaviorTree.dll Syntax public class BehaviorTreeNodeLabel : BlazorReactiveComponent<NodeBase>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description BehaviorTreeNodeLabel() Properties Name Description NodeIconId Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeSelector.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeSelector.-ctor.html",
    "title": "Constructor BehaviorTreeSelector | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeSelector BehaviorTreeSelector() Declaration public BehaviorTreeSelector()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeSelector.BuildRenderTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeSelector.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeSelector.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.BehaviorTreeSelector.html",
    "title": "Class BehaviorTreeSelector | EyeAuras Docs",
    "keywords": "Class BehaviorTreeSelector Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<ReactiveBlazorReteControlViewModel> BehaviorTreeSelector Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<ReactiveBlazorReteControlViewModel>.OnInitialized() BlazorReactiveComponent<ReactiveBlazorReteControlViewModel>.TrackState<TOut>(Expression<Func<ReactiveBlazorReteControlViewModel, TOut>>) BlazorReactiveComponent<ReactiveBlazorReteControlViewModel>.Track<TOut>(Expression<Func<ReactiveBlazorReteControlViewModel, TOut>>) BlazorReactiveComponent<ReactiveBlazorReteControlViewModel>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeEditor Assembly: EyeAuras.BehaviorTree.dll Syntax public class BehaviorTreeSelector : BlazorReactiveComponent<ReactiveBlazorReteControlViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description BehaviorTreeSelector() Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.BehaviorTreeNodeEditor.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.BehaviorTreeNodeEditor.-ctor.html",
    "title": "Constructor BehaviorTreeNodeEditor | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeNodeEditor BehaviorTreeNodeEditor() Declaration public BehaviorTreeNodeEditor()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.BehaviorTreeNodeEditor.BuildRenderTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.BehaviorTreeNodeEditor.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.BehaviorTreeNodeEditor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.BehaviorTreeNodeEditor.html",
    "title": "Class BehaviorTreeNodeEditor | EyeAuras Docs",
    "keywords": "Class BehaviorTreeNodeEditor Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<BehaviorTreeNode> BehaviorTreeNodeEditor Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<BehaviorTreeNode>.OnInitialized() BlazorReactiveComponent<BehaviorTreeNode>.TrackState<TOut>(Expression<Func<BehaviorTreeNode, TOut>>) BlazorReactiveComponent<BehaviorTreeNode>.Track<TOut>(Expression<Func<BehaviorTreeNode, TOut>>) BlazorReactiveComponent<BehaviorTreeNode>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes Assembly: EyeAuras.BehaviorTree.dll Syntax public class BehaviorTreeNodeEditor : BlazorReactiveComponent<BehaviorTreeNode>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description BehaviorTreeNodeEditor() Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.CheckBlackboardConditionNodeEditor.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.CheckBlackboardConditionNodeEditor.-ctor.html",
    "title": "Constructor CheckBlackboardConditionNodeEditor | EyeAuras Docs",
    "keywords": "Constructor CheckBlackboardConditionNodeEditor CheckBlackboardConditionNodeEditor() Declaration public CheckBlackboardConditionNodeEditor()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.CheckBlackboardConditionNodeEditor.BuildRenderTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.CheckBlackboardConditionNodeEditor.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.CheckBlackboardConditionNodeEditor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.CheckBlackboardConditionNodeEditor.html",
    "title": "Class CheckBlackboardConditionNodeEditor | EyeAuras Docs",
    "keywords": "Class CheckBlackboardConditionNodeEditor Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<CheckBlackboardConditionNode> CheckBlackboardConditionNodeEditor Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<CheckBlackboardConditionNode>.OnInitialized() BlazorReactiveComponent<CheckBlackboardConditionNode>.TrackState<TOut>(Expression<Func<CheckBlackboardConditionNode, TOut>>) BlazorReactiveComponent<CheckBlackboardConditionNode>.Track<TOut>(Expression<Func<CheckBlackboardConditionNode, TOut>>) BlazorReactiveComponent<CheckBlackboardConditionNode>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes Assembly: EyeAuras.BehaviorTree.dll Syntax public class CheckBlackboardConditionNodeEditor : BlazorReactiveComponent<CheckBlackboardConditionNode>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description CheckBlackboardConditionNodeEditor() Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.CooldownNodeEditor.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.CooldownNodeEditor.-ctor.html",
    "title": "Constructor CooldownNodeEditor | EyeAuras Docs",
    "keywords": "Constructor CooldownNodeEditor CooldownNodeEditor() Declaration public CooldownNodeEditor()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.CooldownNodeEditor.BuildRenderTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.CooldownNodeEditor.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.CooldownNodeEditor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.CooldownNodeEditor.html",
    "title": "Class CooldownNodeEditor | EyeAuras Docs",
    "keywords": "Class CooldownNodeEditor Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<CooldownNode> CooldownNodeEditor Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<CooldownNode>.OnInitialized() BlazorReactiveComponent<CooldownNode>.TrackState<TOut>(Expression<Func<CooldownNode, TOut>>) BlazorReactiveComponent<CooldownNode>.Track<TOut>(Expression<Func<CooldownNode, TOut>>) BlazorReactiveComponent<CooldownNode>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes Assembly: EyeAuras.BehaviorTree.dll Syntax public class CooldownNodeEditor : BlazorReactiveComponent<CooldownNode>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description CooldownNodeEditor() Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.SetBlackboardConditionNodeEditor.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.SetBlackboardConditionNodeEditor.-ctor.html",
    "title": "Constructor SetBlackboardConditionNodeEditor | EyeAuras Docs",
    "keywords": "Constructor SetBlackboardConditionNodeEditor SetBlackboardConditionNodeEditor() Declaration public SetBlackboardConditionNodeEditor()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.SetBlackboardConditionNodeEditor.BuildRenderTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.SetBlackboardConditionNodeEditor.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.SetBlackboardConditionNodeEditor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.SetBlackboardConditionNodeEditor.html",
    "title": "Class SetBlackboardConditionNodeEditor | EyeAuras Docs",
    "keywords": "Class SetBlackboardConditionNodeEditor Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<SetBlackboardActionNode> SetBlackboardConditionNodeEditor Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<SetBlackboardActionNode>.OnInitialized() BlazorReactiveComponent<SetBlackboardActionNode>.TrackState<TOut>(Expression<Func<SetBlackboardActionNode, TOut>>) BlazorReactiveComponent<SetBlackboardActionNode>.Track<TOut>(Expression<Func<SetBlackboardActionNode, TOut>>) BlazorReactiveComponent<SetBlackboardActionNode>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes Assembly: EyeAuras.BehaviorTree.dll Syntax public class SetBlackboardConditionNodeEditor : BlazorReactiveComponent<SetBlackboardActionNode>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description SetBlackboardConditionNodeEditor() Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.SubTreeNodeEditor.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.SubTreeNodeEditor.-ctor.html",
    "title": "Constructor SubTreeNodeEditor | EyeAuras Docs",
    "keywords": "Constructor SubTreeNodeEditor SubTreeNodeEditor() Declaration public SubTreeNodeEditor()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.SubTreeNodeEditor.BuildRenderTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.SubTreeNodeEditor.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.SubTreeNodeEditor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.SubTreeNodeEditor.html",
    "title": "Class SubTreeNodeEditor | EyeAuras Docs",
    "keywords": "Class SubTreeNodeEditor Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<SubTreeNode> SubTreeNodeEditor Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<SubTreeNode>.OnInitialized() BlazorReactiveComponent<SubTreeNode>.TrackState<TOut>(Expression<Func<SubTreeNode, TOut>>) BlazorReactiveComponent<SubTreeNode>.Track<TOut>(Expression<Func<SubTreeNode, TOut>>) BlazorReactiveComponent<SubTreeNode>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes Assembly: EyeAuras.BehaviorTree.dll Syntax public class SubTreeNodeEditor : BlazorReactiveComponent<SubTreeNode>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description SubTreeNodeEditor() Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.TimeoutNodeEditor.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.TimeoutNodeEditor.-ctor.html",
    "title": "Constructor TimeoutNodeEditor | EyeAuras Docs",
    "keywords": "Constructor TimeoutNodeEditor TimeoutNodeEditor() Declaration public TimeoutNodeEditor()"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.TimeoutNodeEditor.BuildRenderTree.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.TimeoutNodeEditor.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.TimeoutNodeEditor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.TimeoutNodeEditor.html",
    "title": "Class TimeoutNodeEditor | EyeAuras Docs",
    "keywords": "Class TimeoutNodeEditor Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<TimeoutNode> TimeoutNodeEditor Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<TimeoutNode>.OnInitialized() BlazorReactiveComponent<TimeoutNode>.TrackState<TOut>(Expression<Func<TimeoutNode, TOut>>) BlazorReactiveComponent<TimeoutNode>.Track<TOut>(Expression<Func<TimeoutNode, TOut>>) BlazorReactiveComponent<TimeoutNode>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes Assembly: EyeAuras.BehaviorTree.dll Syntax public class TimeoutNodeEditor : BlazorReactiveComponent<TimeoutNode>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description TimeoutNodeEditor() Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes.html",
    "title": "Namespace EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes Classes BehaviorTreeNodeEditor CheckBlackboardConditionNodeEditor CooldownNodeEditor SetBlackboardConditionNodeEditor SubTreeNodeEditor TimeoutNodeEditor"
  },
  "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.html": {
    "href": "api/EyeAuras.BehaviorTree.BehaviorTreeEditor.html",
    "title": "Namespace EyeAuras.BehaviorTree.BehaviorTreeEditor | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree.BehaviorTreeEditor Namespaces EyeAuras.BehaviorTree.BehaviorTreeEditor.Nodes Classes BehaviorTreeDebugger BehaviorTreeIcons BehaviorTreeNodeEditor BehaviorTreeNodeIcon BehaviorTreeNodeLabel BehaviorTreeSelector"
  },
  "api/EyeAuras.BehaviorTree.Controllers.ReteReadonlyController.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.Controllers.ReteReadonlyController.-ctor.html",
    "title": "Constructor ReteReadonlyController | EyeAuras Docs",
    "keywords": "Constructor ReteReadonlyController ReteReadonlyController() Declaration public ReteReadonlyController()"
  },
  "api/EyeAuras.BehaviorTree.Controllers.ReteReadonlyController.AcquireAsync.html": {
    "href": "api/EyeAuras.BehaviorTree.Controllers.ReteReadonlyController.AcquireAsync.html",
    "title": "Method AcquireAsync | EyeAuras Docs",
    "keywords": "Method AcquireAsync AcquireAsync() Declaration public Task<ReteReadonlyController> AcquireAsync() Returns Type Description Task<ReteReadonlyController>"
  },
  "api/EyeAuras.BehaviorTree.Controllers.ReteReadonlyController.DisposeAsync.html": {
    "href": "api/EyeAuras.BehaviorTree.Controllers.ReteReadonlyController.DisposeAsync.html",
    "title": "Method DisposeAsync | EyeAuras Docs",
    "keywords": "Method DisposeAsync DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask Implements IAsyncDisposable.DisposeAsync()"
  },
  "api/EyeAuras.BehaviorTree.Controllers.ReteReadonlyController.Editor.html": {
    "href": "api/EyeAuras.BehaviorTree.Controllers.ReteReadonlyController.Editor.html",
    "title": "Property Editor | EyeAuras Docs",
    "keywords": "Property Editor Editor Declaration public BlazorReteEditor Editor { get; set; } Property Value Type Description BlazorReteEditor"
  },
  "api/EyeAuras.BehaviorTree.Controllers.ReteReadonlyController.html": {
    "href": "api/EyeAuras.BehaviorTree.Controllers.ReteReadonlyController.html",
    "title": "Class ReteReadonlyController | EyeAuras Docs",
    "keywords": "Class ReteReadonlyController Inheritance object DisposableReactiveObject ReteReadonlyController Implements IDisposable INotifyPropertyChanged IAsyncDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.Controllers Assembly: EyeAuras.BehaviorTree.dll Syntax public sealed class ReteReadonlyController : DisposableReactiveObject, IDisposable, INotifyPropertyChanged, IAsyncDisposable Constructors Name Description ReteReadonlyController() Properties Name Description Editor Methods Name Description AcquireAsync() DisposeAsync() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.Controllers.html": {
    "href": "api/EyeAuras.BehaviorTree.Controllers.html",
    "title": "Namespace EyeAuras.BehaviorTree.Controllers | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree.Controllers Classes ReteReadonlyController"
  },
  "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.KeyPressActionNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.KeyPressActionNode.-ctor.html",
    "title": "Constructor KeyPressActionNode | EyeAuras Docs",
    "keywords": "Constructor KeyPressActionNode KeyPressActionNode() Declaration public KeyPressActionNode()"
  },
  "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.KeyPressActionNode.Hotkey.html": {
    "href": "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.KeyPressActionNode.Hotkey.html",
    "title": "Property Hotkey | EyeAuras Docs",
    "keywords": "Property Hotkey Hotkey The string representation of the hotkey to be pressed. This can be provided directly or via the behavior tree's Blackboard. Declaration public string Hotkey { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.KeyPressActionNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.KeyPressActionNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.KeyPressActionNode.html": {
    "href": "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.KeyPressActionNode.html",
    "title": "Class KeyPressActionNode | EyeAuras Docs",
    "keywords": "Class KeyPressActionNode Represents a KeyPress action in the behavior tree. This node is used to simulate a key press event. Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ActionNode KeyPressActionNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.ExtendedNodes.Actions Assembly: EyeAuras.BehaviorTree.dll Syntax public class KeyPressActionNode : ActionNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Remarks This node requires the dependencies of ISendInputController and IHotkeyConverter to be set up. The key press action is described by a string attribute 'key', which can be set directly or obtained from the behavior tree's Blackboard. Constructors Name Description KeyPressActionNode() Properties Name Description Hotkey The string representation of the hotkey to be pressed. This can be provided directly or via the behavior tree's Blackboard. Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.MouseMoveToWaypointActionNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.MouseMoveToWaypointActionNode.-ctor.html",
    "title": "Constructor MouseMoveToWaypointActionNode | EyeAuras Docs",
    "keywords": "Constructor MouseMoveToWaypointActionNode MouseMoveToWaypointActionNode() Declaration public MouseMoveToWaypointActionNode()"
  },
  "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.MouseMoveToWaypointActionNode.LocationExpression.html": {
    "href": "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.MouseMoveToWaypointActionNode.LocationExpression.html",
    "title": "Property LocationExpression | EyeAuras Docs",
    "keywords": "Property LocationExpression LocationExpression Declaration public string LocationExpression { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.MouseMoveToWaypointActionNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.MouseMoveToWaypointActionNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.MouseMoveToWaypointActionNode.html": {
    "href": "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.MouseMoveToWaypointActionNode.html",
    "title": "Class MouseMoveToWaypointActionNode | EyeAuras Docs",
    "keywords": "Class MouseMoveToWaypointActionNode Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ActionNode MouseMoveToWaypointActionNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.ExtendedNodes.Actions Assembly: EyeAuras.BehaviorTree.dll Syntax public class MouseMoveToWaypointActionNode : ActionNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description MouseMoveToWaypointActionNode() Properties Name Description LocationExpression Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.html": {
    "href": "api/EyeAuras.BehaviorTree.ExtendedNodes.Actions.html",
    "title": "Namespace EyeAuras.BehaviorTree.ExtendedNodes.Actions | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree.ExtendedNodes.Actions Classes KeyPressActionNode Represents a KeyPress action in the behavior tree. This node is used to simulate a key press event. MouseMoveToWaypointActionNode"
  },
  "api/EyeAuras.BehaviorTree.Nodes.Actions.MouseMoveActionNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.Nodes.Actions.MouseMoveActionNode.-ctor.html",
    "title": "Constructor MouseMoveActionNode | EyeAuras Docs",
    "keywords": "Constructor MouseMoveActionNode MouseMoveActionNode() Declaration public MouseMoveActionNode()"
  },
  "api/EyeAuras.BehaviorTree.Nodes.Actions.MouseMoveActionNode.Location.html": {
    "href": "api/EyeAuras.BehaviorTree.Nodes.Actions.MouseMoveActionNode.Location.html",
    "title": "Property Location | EyeAuras Docs",
    "keywords": "Property Location Location The string representation of the hotkey to be pressed. This can be provided directly or via the behavior tree's Blackboard. Declaration public string Location { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.Nodes.Actions.MouseMoveActionNode.TickInternal.html": {
    "href": "api/EyeAuras.BehaviorTree.Nodes.Actions.MouseMoveActionNode.TickInternal.html",
    "title": "Method TickInternal | EyeAuras Docs",
    "keywords": "Method TickInternal TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Declaration protected override NodeStatus TickInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description NodeStatus Returns the status of the node after execution. Overrides NodeBase.TickInternal(CancellationToken)"
  },
  "api/EyeAuras.BehaviorTree.Nodes.Actions.MouseMoveActionNode.html": {
    "href": "api/EyeAuras.BehaviorTree.Nodes.Actions.MouseMoveActionNode.html",
    "title": "Class MouseMoveActionNode | EyeAuras Docs",
    "keywords": "Class MouseMoveActionNode Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger NodeBase ActionNode MouseMoveActionNode Implements IDisposable INotifyPropertyChanged IBehaviorTreeSerializable Inherited Members NodeBase.ResetStatus() NodeBase.Tick(CancellationToken) NodeBase.Reset() NodeBase.FormatToString(ToStringBuilder) NodeBase.Position NodeBase.Children NodeBase.ChildrenAsList NodeBase.Status NodeBase.LastTickTimestamp NodeBase.IsEnabled NodeBase.IsBusy NodeBase.ShortDescription NodeBase.Error NodeBase.IsReferenceNode NodeBase.Name NodeBase.XmlName NodeBase.Id NodeBase.Parent NodeBase.Root NodeBase.Blackboard object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.Nodes.Actions Assembly: EyeAuras.BehaviorTree.dll Syntax public class MouseMoveActionNode : ActionNode, IDisposable, INotifyPropertyChanged, IBehaviorTreeSerializable Constructors Name Description MouseMoveActionNode() Properties Name Description Location The string representation of the hotkey to be pressed. This can be provided directly or via the behavior tree's Blackboard. Methods Name Description TickInternal(CancellationToken) This abstract method defines the main logic of the node and must be implemented in child classes. Extension Methods NodeExtensions.BuildTreeString(NodeBase, string, bool) NodeExtensions.EnumerateChildren(NodeBase) NodeExtensions.FindRoot(NodeBase) NodeExtensions.ToXmlName(NodeBase) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.Nodes.Actions.html": {
    "href": "api/EyeAuras.BehaviorTree.Nodes.Actions.html",
    "title": "Namespace EyeAuras.BehaviorTree.Nodes.Actions | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree.Nodes.Actions Classes MouseMoveActionNode"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControl.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControl.-ctor.html",
    "title": "Constructor ReactiveBlazorReteControl | EyeAuras Docs",
    "keywords": "Constructor ReactiveBlazorReteControl ReactiveBlazorReteControl() Declaration public ReactiveBlazorReteControl()"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControl.BuildRenderTree.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControl.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControl.ReteEditor.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControl.ReteEditor.html",
    "title": "Property ReteEditor | EyeAuras Docs",
    "keywords": "Property ReteEditor ReteEditor Declaration protected BlazorReteEditor ReteEditor { get; set; } Property Value Type Description BlazorReteEditor"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControl.ReteEditorIsLoaded.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControl.ReteEditorIsLoaded.html",
    "title": "Property ReteEditorIsLoaded | EyeAuras Docs",
    "keywords": "Property ReteEditorIsLoaded ReteEditorIsLoaded Declaration protected bool ReteEditorIsLoaded { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControl.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControl.html",
    "title": "Class ReactiveBlazorReteControl | EyeAuras Docs",
    "keywords": "Class ReactiveBlazorReteControl Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<ReactiveBlazorReteControlViewModel> ReactiveBlazorReteControl Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<ReactiveBlazorReteControlViewModel>.OnInitialized() BlazorReactiveComponent<ReactiveBlazorReteControlViewModel>.TrackState<TOut>(Expression<Func<ReactiveBlazorReteControlViewModel, TOut>>) BlazorReactiveComponent<ReactiveBlazorReteControlViewModel>.Track<TOut>(Expression<Func<ReactiveBlazorReteControlViewModel, TOut>>) BlazorReactiveComponent<ReactiveBlazorReteControlViewModel>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree Assembly: EyeAuras.BehaviorTree.dll Syntax public class ReactiveBlazorReteControl : BlazorReactiveComponent<ReactiveBlazorReteControlViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description ReactiveBlazorReteControl() Properties Name Description ReteEditor ReteEditorIsLoaded Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.-ctor.html",
    "title": "Constructor ReactiveBlazorReteControlViewModel | EyeAuras Docs",
    "keywords": "Constructor ReactiveBlazorReteControlViewModel ReactiveBlazorReteControlViewModel(IBehaviorTreeNodeSerializer, IBehaviorTreeAdapter, IOpenFileDialog, ISaveFileDialog) Declaration public ReactiveBlazorReteControlViewModel(IBehaviorTreeNodeSerializer behaviorTreeNodeSerializer, IBehaviorTreeAdapter behaviorTreeAdapter, IOpenFileDialog openFileDialog, ISaveFileDialog saveFileDialog) Parameters Type Name Description IBehaviorTreeNodeSerializer behaviorTreeNodeSerializer IBehaviorTreeAdapter behaviorTreeAdapter IOpenFileDialog openFileDialog ISaveFileDialog saveFileDialog"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.ArrangeAlgorithm.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.ArrangeAlgorithm.html",
    "title": "Property ArrangeAlgorithm | EyeAuras Docs",
    "keywords": "Property ArrangeAlgorithm ArrangeAlgorithm Declaration public ReteArrangeAlgorithm ArrangeAlgorithm { get; set; } Property Value Type Description ReteArrangeAlgorithm"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.ArrangeAnimate.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.ArrangeAnimate.html",
    "title": "Property ArrangeAnimate | EyeAuras Docs",
    "keywords": "Property ArrangeAnimate ArrangeAnimate Declaration public bool ArrangeAnimate { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.ArrangeCommand.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.ArrangeCommand.html",
    "title": "Property ArrangeCommand | EyeAuras Docs",
    "keywords": "Property ArrangeCommand ArrangeCommand Declaration public ICommand ArrangeCommand { get; } Property Value Type Description ICommand"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.ArrangeDirection.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.ArrangeDirection.html",
    "title": "Property ArrangeDirection | EyeAuras Docs",
    "keywords": "Property ArrangeDirection ArrangeDirection Declaration public ReteArrangeDirection ArrangeDirection { get; set; } Property Value Type Description ReteArrangeDirection"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.AutoArrange.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.AutoArrange.html",
    "title": "Property AutoArrange | EyeAuras Docs",
    "keywords": "Property AutoArrange AutoArrange Declaration public bool AutoArrange { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.BehaviorTreeRoot.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.BehaviorTreeRoot.html",
    "title": "Property BehaviorTreeRoot | EyeAuras Docs",
    "keywords": "Property BehaviorTreeRoot BehaviorTreeRoot Declaration public BehaviorTreeRoot BehaviorTreeRoot { get; set; } Property Value Type Description BehaviorTreeRoot"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.BehaviorTrees.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.BehaviorTrees.html",
    "title": "Property BehaviorTrees | EyeAuras Docs",
    "keywords": "Property BehaviorTrees BehaviorTrees Declaration public IReadOnlyObservableCollection<BehaviorTreeNode> BehaviorTrees { get; } Property Value Type Description IReadOnlyObservableCollection<BehaviorTreeNode>"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.LoadFromFileCommand.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.LoadFromFileCommand.html",
    "title": "Property LoadFromFileCommand | EyeAuras Docs",
    "keywords": "Property LoadFromFileCommand LoadFromFileCommand Declaration public ICommand LoadFromFileCommand { get; } Property Value Type Description ICommand"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.ReteEditor.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.ReteEditor.html",
    "title": "Property ReteEditor | EyeAuras Docs",
    "keywords": "Property ReteEditor ReteEditor Declaration public BlazorReteEditor ReteEditor { get; set; } Property Value Type Description BlazorReteEditor"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.SaveToFileCommand.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.SaveToFileCommand.html",
    "title": "Property SaveToFileCommand | EyeAuras Docs",
    "keywords": "Property SaveToFileCommand SaveToFileCommand Declaration public ICommand SaveToFileCommand { get; } Property Value Type Description ICommand"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.SelectedBehaviorTreeNode.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.SelectedBehaviorTreeNode.html",
    "title": "Property SelectedBehaviorTreeNode | EyeAuras Docs",
    "keywords": "Property SelectedBehaviorTreeNode SelectedBehaviorTreeNode Declaration public BehaviorTreeNode SelectedBehaviorTreeNode { get; set; } Property Value Type Description BehaviorTreeNode"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.SelectedNode.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.SelectedNode.html",
    "title": "Property SelectedNode | EyeAuras Docs",
    "keywords": "Property SelectedNode SelectedNode Declaration public NodeBase SelectedNode { get; } Property Value Type Description NodeBase"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.ShowBackground.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.ShowBackground.html",
    "title": "Property ShowBackground | EyeAuras Docs",
    "keywords": "Property ShowBackground ShowBackground Declaration public bool ShowBackground { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.UnloadCommand.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.UnloadCommand.html",
    "title": "Property UnloadCommand | EyeAuras Docs",
    "keywords": "Property UnloadCommand UnloadCommand Declaration public ICommand UnloadCommand { get; } Property Value Type Description ICommand"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.ZoomCommand.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.ZoomCommand.html",
    "title": "Property ZoomCommand | EyeAuras Docs",
    "keywords": "Property ZoomCommand ZoomCommand Declaration public ICommand ZoomCommand { get; } Property Value Type Description ICommand"
  },
  "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.html": {
    "href": "api/EyeAuras.BehaviorTree.ReactiveBlazorReteControlViewModel.html",
    "title": "Class ReactiveBlazorReteControlViewModel | EyeAuras Docs",
    "keywords": "Class ReactiveBlazorReteControlViewModel Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger ReactiveBlazorReteControlViewModel Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree Assembly: EyeAuras.BehaviorTree.dll Syntax public class ReactiveBlazorReteControlViewModel : DisposableReactiveObjectWithLogger, IDisposable, INotifyPropertyChanged Constructors Name Description ReactiveBlazorReteControlViewModel(IBehaviorTreeNodeSerializer, IBehaviorTreeAdapter, IOpenFileDialog, ISaveFileDialog) Properties Name Description ArrangeAlgorithm ArrangeAnimate ArrangeCommand ArrangeDirection AutoArrange BehaviorTreeRoot BehaviorTrees LoadFromFileCommand ReteEditor SaveToFileCommand SelectedBehaviorTreeNode SelectedNode ShowBackground UnloadCommand ZoomCommand Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.-ctor.html",
    "title": "Constructor BehaviorTreeNodeId | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeNodeId BehaviorTreeNodeId(string) Declaration public BehaviorTreeNodeId(string value) Parameters Type Name Description string value"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.CompareTo.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.CompareTo.html",
    "title": "Method CompareTo | EyeAuras Docs",
    "keywords": "Method CompareTo CompareTo(BehaviorTreeNodeId) Declaration public int CompareTo(BehaviorTreeNodeId other) Parameters Type Name Description BehaviorTreeNodeId other Returns Type Description int Implements IComparable<T>.CompareTo(T)"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.Empty.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.Empty.html",
    "title": "Field Empty | EyeAuras Docs",
    "keywords": "Field Empty Namespace: EyeAuras.BehaviorTree.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax public static readonly BehaviorTreeNodeId Empty Returns Type Description BehaviorTreeNodeId"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.Equals.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(BehaviorTreeNodeId) Declaration public bool Equals(BehaviorTreeNodeId other) Parameters Type Name Description BehaviorTreeNodeId other Returns Type Description bool Implements IEquatable<T>.Equals(T) Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object)"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.GetHashCode.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode()"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.ToString.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.Value.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration public string Value { get; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.html",
    "title": "Struct BehaviorTreeNodeId | EyeAuras Docs",
    "keywords": "Struct BehaviorTreeNodeId Implements IComparable<BehaviorTreeNodeId> IEquatable<BehaviorTreeNodeId> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.BehaviorTree.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax [JsonConverter(typeof(BehaviorTreeNodeId.BehaviorTreeNodeIdSystemTextJsonConverter))] public readonly struct BehaviorTreeNodeId : IComparable<BehaviorTreeNodeId>, IEquatable<BehaviorTreeNodeId> Constructors Name Description BehaviorTreeNodeId(string) Fields Name Description Empty Properties Name Description Value Methods Name Description CompareTo(BehaviorTreeNodeId) Equals(BehaviorTreeNodeId) Equals(object) GetHashCode() ToString() Operators Name Description operator ==(BehaviorTreeNodeId, BehaviorTreeNodeId) operator !=(BehaviorTreeNodeId, BehaviorTreeNodeId) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.op_Equality.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(BehaviorTreeNodeId, BehaviorTreeNodeId) Declaration public static bool operator ==(BehaviorTreeNodeId a, BehaviorTreeNodeId b) Parameters Type Name Description BehaviorTreeNodeId a BehaviorTreeNodeId b Returns Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.op_Inequality.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeNodeId.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(BehaviorTreeNodeId, BehaviorTreeNodeId) Declaration public static bool operator !=(BehaviorTreeNodeId a, BehaviorTreeNodeId b) Parameters Type Name Description BehaviorTreeNodeId a BehaviorTreeNodeId b Returns Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeReteNode.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeReteNode.-ctor.html",
    "title": "Constructor BehaviorTreeReteNode | EyeAuras Docs",
    "keywords": "Constructor BehaviorTreeReteNode BehaviorTreeReteNode(ReteNode) Declaration public BehaviorTreeReteNode(ReteNode node) Parameters Type Name Description ReteNode node BehaviorTreeReteNode(string, IJSRuntime, IJSObjectReference) Declaration public BehaviorTreeReteNode(string nodeId, IJSRuntime jsRuntime, IJSObjectReference nodeRef) Parameters Type Name Description string nodeId IJSRuntime jsRuntime IJSObjectReference nodeRef"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeReteNode.BehaviorTreeNodeId.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeReteNode.BehaviorTreeNodeId.html",
    "title": "Property BehaviorTreeNodeId | EyeAuras Docs",
    "keywords": "Property BehaviorTreeNodeId BehaviorTreeNodeId Declaration public IJsField<BehaviorTreeNodeId?> BehaviorTreeNodeId { get; } Property Value Type Description IJsField<BehaviorTreeNodeId?>"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeReteNode.Id.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeReteNode.Id.html",
    "title": "Property Id | EyeAuras Docs",
    "keywords": "Property Id Id Declaration public ReteNodeId Id { get; } Property Value Type Description ReteNodeId"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeReteNode.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.BehaviorTreeReteNode.html",
    "title": "Class BehaviorTreeReteNode | EyeAuras Docs",
    "keywords": "Class BehaviorTreeReteNode Inheritance object ReteNode BehaviorTreeReteNode Inherited Members ReteNode.GetParams() ReteNode.UpdateParams(ReteNodeParams) ReteNode.FromJsNode(IJSRuntime, IJSObjectReference) ReteNode.ToString() ReteNode.IsSelected ReteNode.IsBusy ReteNode.JsRuntime ReteNode.NodeRef ReteNode.Label object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BehaviorTree.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax public class BehaviorTreeReteNode : ReteNode Constructors Name Description BehaviorTreeReteNode(ReteNode) BehaviorTreeReteNode(string, IJSRuntime, IJSObjectReference) Properties Name Description BehaviorTreeNodeId Id Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.IBehaviorTreeAdapter.ReteConnections.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.IBehaviorTreeAdapter.ReteConnections.html",
    "title": "Property ReteConnections | EyeAuras Docs",
    "keywords": "Property ReteConnections ReteConnections Declaration IObservableCache<ReteConnection, ReteConnectionId> ReteConnections { get; } Property Value Type Description IObservableCache<ReteConnection, ReteConnectionId>"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.IBehaviorTreeAdapter.ReteEditor.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.IBehaviorTreeAdapter.ReteEditor.html",
    "title": "Property ReteEditor | EyeAuras Docs",
    "keywords": "Property ReteEditor ReteEditor Declaration BlazorReteEditor ReteEditor { get; set; } Property Value Type Description BlazorReteEditor"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.IBehaviorTreeAdapter.ReteNodes.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.IBehaviorTreeAdapter.ReteNodes.html",
    "title": "Property ReteNodes | EyeAuras Docs",
    "keywords": "Property ReteNodes ReteNodes Declaration IObservableCache<BehaviorTreeReteNode, ReteNodeId> ReteNodes { get; } Property Value Type Description IObservableCache<BehaviorTreeReteNode, ReteNodeId>"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.IBehaviorTreeAdapter.RootNode.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.IBehaviorTreeAdapter.RootNode.html",
    "title": "Property RootNode | EyeAuras Docs",
    "keywords": "Property RootNode RootNode Declaration NodeBase RootNode { get; set; } Property Value Type Description NodeBase"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.IBehaviorTreeAdapter.SelectedNodeIds.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.IBehaviorTreeAdapter.SelectedNodeIds.html",
    "title": "Property SelectedNodeIds | EyeAuras Docs",
    "keywords": "Property SelectedNodeIds SelectedNodeIds Declaration IObservableList<ReteNodeId> SelectedNodeIds { get; } Property Value Type Description IObservableList<ReteNodeId>"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.IBehaviorTreeAdapter.SelectedNodes.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.IBehaviorTreeAdapter.SelectedNodes.html",
    "title": "Property SelectedNodes | EyeAuras Docs",
    "keywords": "Property SelectedNodes SelectedNodes Declaration IObservableList<NodeBase> SelectedNodes { get; } Property Value Type Description IObservableList<NodeBase>"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.IBehaviorTreeAdapter.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.IBehaviorTreeAdapter.html",
    "title": "Interface IBehaviorTreeAdapter | EyeAuras Docs",
    "keywords": "Interface IBehaviorTreeAdapter Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.BehaviorTree.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax public interface IBehaviorTreeAdapter : IDisposable, INotifyPropertyChanged Properties Name Description ReteConnections ReteEditor ReteNodes RootNode SelectedNodeIds SelectedNodes Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.-ctor.html",
    "title": "Constructor ReteConnectionId | EyeAuras Docs",
    "keywords": "Constructor ReteConnectionId ReteConnectionId(string) Declaration public ReteConnectionId(string value) Parameters Type Name Description string value"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.CompareTo.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.CompareTo.html",
    "title": "Method CompareTo | EyeAuras Docs",
    "keywords": "Method CompareTo CompareTo(ReteConnectionId) Declaration public int CompareTo(ReteConnectionId other) Parameters Type Name Description ReteConnectionId other Returns Type Description int Implements IComparable<T>.CompareTo(T)"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.Empty.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.Empty.html",
    "title": "Field Empty | EyeAuras Docs",
    "keywords": "Field Empty Namespace: EyeAuras.BehaviorTree.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax public static readonly ReteConnectionId Empty Returns Type Description ReteConnectionId"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.Equals.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(ReteConnectionId) Declaration public bool Equals(ReteConnectionId other) Parameters Type Name Description ReteConnectionId other Returns Type Description bool Implements IEquatable<T>.Equals(T) Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object)"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.GetHashCode.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode()"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.ToString.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.Value.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration public string Value { get; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.html",
    "title": "Struct ReteConnectionId | EyeAuras Docs",
    "keywords": "Struct ReteConnectionId Implements IComparable<ReteConnectionId> IEquatable<ReteConnectionId> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.BehaviorTree.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax [JsonConverter(typeof(ReteConnectionId.ReteConnectionIdSystemTextJsonConverter))] public readonly struct ReteConnectionId : IComparable<ReteConnectionId>, IEquatable<ReteConnectionId> Constructors Name Description ReteConnectionId(string) Fields Name Description Empty Properties Name Description Value Methods Name Description CompareTo(ReteConnectionId) Equals(ReteConnectionId) Equals(object) GetHashCode() ToString() Operators Name Description operator ==(ReteConnectionId, ReteConnectionId) operator !=(ReteConnectionId, ReteConnectionId) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.op_Equality.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ReteConnectionId, ReteConnectionId) Declaration public static bool operator ==(ReteConnectionId a, ReteConnectionId b) Parameters Type Name Description ReteConnectionId a ReteConnectionId b Returns Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.op_Inequality.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteConnectionId.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ReteConnectionId, ReteConnectionId) Declaration public static bool operator !=(ReteConnectionId a, ReteConnectionId b) Parameters Type Name Description ReteConnectionId a ReteConnectionId b Returns Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.-ctor.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.-ctor.html",
    "title": "Constructor ReteNodeId | EyeAuras Docs",
    "keywords": "Constructor ReteNodeId ReteNodeId(string) Declaration public ReteNodeId(string value) Parameters Type Name Description string value"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.CompareTo.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.CompareTo.html",
    "title": "Method CompareTo | EyeAuras Docs",
    "keywords": "Method CompareTo CompareTo(ReteNodeId) Declaration public int CompareTo(ReteNodeId other) Parameters Type Name Description ReteNodeId other Returns Type Description int Implements IComparable<T>.CompareTo(T)"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.Empty.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.Empty.html",
    "title": "Field Empty | EyeAuras Docs",
    "keywords": "Field Empty Namespace: EyeAuras.BehaviorTree.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax public static readonly ReteNodeId Empty Returns Type Description ReteNodeId"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.Equals.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(ReteNodeId) Declaration public bool Equals(ReteNodeId other) Parameters Type Name Description ReteNodeId other Returns Type Description bool Implements IEquatable<T>.Equals(T) Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object)"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.GetHashCode.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode()"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.ToString.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.Value.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration public string Value { get; } Property Value Type Description string"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.html",
    "title": "Struct ReteNodeId | EyeAuras Docs",
    "keywords": "Struct ReteNodeId Implements IComparable<ReteNodeId> IEquatable<ReteNodeId> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.BehaviorTree.Scaffolding Assembly: EyeAuras.BehaviorTree.dll Syntax [JsonConverter(typeof(ReteNodeId.ReteNodeIdSystemTextJsonConverter))] public readonly struct ReteNodeId : IComparable<ReteNodeId>, IEquatable<ReteNodeId> Constructors Name Description ReteNodeId(string) Fields Name Description Empty Properties Name Description Value Methods Name Description CompareTo(ReteNodeId) Equals(ReteNodeId) Equals(object) GetHashCode() ToString() Operators Name Description operator ==(ReteNodeId, ReteNodeId) operator !=(ReteNodeId, ReteNodeId) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.op_Equality.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ReteNodeId, ReteNodeId) Declaration public static bool operator ==(ReteNodeId a, ReteNodeId b) Parameters Type Name Description ReteNodeId a ReteNodeId b Returns Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.op_Inequality.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.ReteNodeId.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ReteNodeId, ReteNodeId) Declaration public static bool operator !=(ReteNodeId a, ReteNodeId b) Parameters Type Name Description ReteNodeId a ReteNodeId b Returns Type Description bool"
  },
  "api/EyeAuras.BehaviorTree.Scaffolding.html": {
    "href": "api/EyeAuras.BehaviorTree.Scaffolding.html",
    "title": "Namespace EyeAuras.BehaviorTree.Scaffolding | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree.Scaffolding Classes BehaviorTreeReteNode Structs BehaviorTreeNodeId ReteConnectionId ReteNodeId Interfaces IBehaviorTreeAdapter"
  },
  "api/EyeAuras.BehaviorTree.html": {
    "href": "api/EyeAuras.BehaviorTree.html",
    "title": "Namespace EyeAuras.BehaviorTree | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BehaviorTree Namespaces EyeAuras.BehaviorTree.BehaviorTreeCPP EyeAuras.BehaviorTree.BehaviorTreeEditor EyeAuras.BehaviorTree.Controllers EyeAuras.BehaviorTree.ExtendedNodes.Actions EyeAuras.BehaviorTree.Nodes.Actions EyeAuras.BehaviorTree.Scaffolding Classes ReactiveBlazorReteControl ReactiveBlazorReteControlViewModel"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewer.-ctor.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewer.-ctor.html",
    "title": "Constructor AuraEventLogViewer | EyeAuras Docs",
    "keywords": "Constructor AuraEventLogViewer AuraEventLogViewer() Declaration public AuraEventLogViewer()"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewer.BuildRenderTree.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewer.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewer.OnAfterRenderAsync.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewer.OnAfterRenderAsync.html",
    "title": "Method OnAfterRenderAsync | EyeAuras Docs",
    "keywords": "Method OnAfterRenderAsync OnAfterRenderAsync(bool) Declaration protected override Task OnAfterRenderAsync(bool firstRender) Parameters Type Name Description bool firstRender Returns Type Description Task Overrides ReactiveComponentBase.OnAfterRenderAsync(bool)"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewer.OnParametersSet.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewer.OnParametersSet.html",
    "title": "Method OnParametersSet | EyeAuras Docs",
    "keywords": "Method OnParametersSet OnParametersSet() Declaration protected override void OnParametersSet() Overrides ReactiveComponentBase.OnParametersSet()"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewer.ToBootstrapClass.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewer.ToBootstrapClass.html",
    "title": "Method ToBootstrapClass | EyeAuras Docs",
    "keywords": "Method ToBootstrapClass ToBootstrapClass(FluentLogLevel) Declaration public string ToBootstrapClass(FluentLogLevel logLevel) Parameters Type Name Description FluentLogLevel logLevel Returns Type Description string"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewer.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewer.html",
    "title": "Class AuraEventLogViewer | EyeAuras Docs",
    "keywords": "Class AuraEventLogViewer Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<AuraEventLogViewerViewModel> AuraEventLogViewer Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<AuraEventLogViewerViewModel>.OnInitialized() BlazorReactiveComponent<AuraEventLogViewerViewModel>.TrackState<TOut>(Expression<Func<AuraEventLogViewerViewModel, TOut>>) BlazorReactiveComponent<AuraEventLogViewerViewModel>.Track<TOut>(Expression<Func<AuraEventLogViewerViewModel, TOut>>) BlazorReactiveComponent<AuraEventLogViewerViewModel>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Blazor.Controls Assembly: EyeAuras.Blazor.Controls.dll Syntax public class AuraEventLogViewer : BlazorReactiveComponent<AuraEventLogViewerViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description AuraEventLogViewer() Methods Name Description BuildRenderTree(RenderTreeBuilder) OnAfterRenderAsync(bool) OnParametersSet() ToBootstrapClass(FluentLogLevel) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.-ctor.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.-ctor.html",
    "title": "Constructor AuraEventLogViewerViewModel | EyeAuras Docs",
    "keywords": "Constructor AuraEventLogViewerViewModel AuraEventLogViewerViewModel(IAuraEventLoggingService) Declaration public AuraEventLogViewerViewModel(IAuraEventLoggingService eventLoggingService) Parameters Type Name Description IAuraEventLoggingService eventLoggingService"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.EventLog.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.EventLog.html",
    "title": "Property EventLog | EyeAuras Docs",
    "keywords": "Property EventLog EventLog Declaration public IReadOnlyObservableCollection<AuraEventLogViewerViewModel.LogRecord> EventLog { get; } Property Value Type Description IReadOnlyObservableCollection<AuraEventLogViewerViewModel.LogRecord>"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.Filter.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.Filter.html",
    "title": "Property Filter | EyeAuras Docs",
    "keywords": "Property Filter Filter Declaration public Func<AuraEventLogViewerViewModel.LogRecord, AnnotatedBoolean> Filter { get; } Property Value Type Description Func<AuraEventLogViewerViewModel.LogRecord, AnnotatedBoolean>"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.FilterText.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.FilterText.html",
    "title": "Property FilterText | EyeAuras Docs",
    "keywords": "Property FilterText FilterText Declaration public string FilterText { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.IsEnabled.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.IsPaused.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.IsPaused.html",
    "title": "Property IsPaused | EyeAuras Docs",
    "keywords": "Property IsPaused IsPaused Declaration public bool IsPaused { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.LogRecord.-ctor.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.LogRecord.-ctor.html",
    "title": "Constructor LogRecord | EyeAuras Docs",
    "keywords": "Constructor LogRecord LogRecord(AuraEvent) Declaration public LogRecord(AuraEvent source) Parameters Type Name Description AuraEvent source"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.LogRecord.Event.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.LogRecord.Event.html",
    "title": "Property Event | EyeAuras Docs",
    "keywords": "Property Event Event Declaration public AuraEvent Event { get; } Property Value Type Description AuraEvent"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.LogRecord.Id.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.LogRecord.Id.html",
    "title": "Property Id | EyeAuras Docs",
    "keywords": "Property Id Id Declaration public long Id { get; } Property Value Type Description long"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.LogRecord.IsActive.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.LogRecord.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Declaration public bool? IsActive { get; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.LogRecord.SenderInfo.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.LogRecord.SenderInfo.html",
    "title": "Property SenderInfo | EyeAuras Docs",
    "keywords": "Property SenderInfo SenderInfo Declaration public string SenderInfo { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.LogRecord.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.LogRecord.html",
    "title": "Struct AuraEventLogViewerViewModel.LogRecord | EyeAuras Docs",
    "keywords": "Struct AuraEventLogViewerViewModel.LogRecord Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Blazor.Controls Assembly: EyeAuras.Blazor.Controls.dll Syntax public readonly struct AuraEventLogViewerViewModel.LogRecord Constructors Name Description LogRecord(AuraEvent) Properties Name Description Event Id IsActive SenderInfo Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.MinLogLevel.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.MinLogLevel.html",
    "title": "Property MinLogLevel | EyeAuras Docs",
    "keywords": "Property MinLogLevel MinLogLevel Declaration public FluentLogLevel MinLogLevel { get; set; } Property Value Type Description FluentLogLevel"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.ScrollToBottom.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.ScrollToBottom.html",
    "title": "Property ScrollToBottom | EyeAuras Docs",
    "keywords": "Property ScrollToBottom ScrollToBottom Declaration public CommandWrapper ScrollToBottom { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.ScrollToTop.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.ScrollToTop.html",
    "title": "Property ScrollToTop | EyeAuras Docs",
    "keywords": "Property ScrollToTop ScrollToTop Declaration public CommandWrapper ScrollToTop { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.ShowAuraMessages.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.ShowAuraMessages.html",
    "title": "Property ShowAuraMessages | EyeAuras Docs",
    "keywords": "Property ShowAuraMessages ShowAuraMessages Declaration public bool ShowAuraMessages { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.ShowCommunicationMessages.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.ShowCommunicationMessages.html",
    "title": "Property ShowCommunicationMessages | EyeAuras Docs",
    "keywords": "Property ShowCommunicationMessages ShowCommunicationMessages Declaration public bool ShowCommunicationMessages { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.ShowCompilerMessages.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.ShowCompilerMessages.html",
    "title": "Property ShowCompilerMessages | EyeAuras Docs",
    "keywords": "Property ShowCompilerMessages ShowCompilerMessages Declaration public bool ShowCompilerMessages { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.ShowScriptMessages.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.ShowScriptMessages.html",
    "title": "Property ShowScriptMessages | EyeAuras Docs",
    "keywords": "Property ShowScriptMessages ShowScriptMessages Declaration public bool ShowScriptMessages { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.ShowSystemMessages.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.ShowSystemMessages.html",
    "title": "Property ShowSystemMessages | EyeAuras Docs",
    "keywords": "Property ShowSystemMessages ShowSystemMessages Declaration public bool ShowSystemMessages { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.TotalEvents.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.TotalEvents.html",
    "title": "Property TotalEvents | EyeAuras Docs",
    "keywords": "Property TotalEvents TotalEvents Declaration public int TotalEvents { get; } Property Value Type Description int"
  },
  "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.html": {
    "href": "api/EyeAuras.Blazor.Controls.AuraEventLogViewerViewModel.html",
    "title": "Class AuraEventLogViewerViewModel | EyeAuras Docs",
    "keywords": "Class AuraEventLogViewerViewModel Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger AuraEventLogViewerViewModel Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Blazor.Controls Assembly: EyeAuras.Blazor.Controls.dll Syntax public sealed class AuraEventLogViewerViewModel : DisposableReactiveObjectWithLogger, IDisposable, INotifyPropertyChanged Constructors Name Description AuraEventLogViewerViewModel(IAuraEventLoggingService) Properties Name Description EventLog Filter FilterText IsEnabled IsPaused MinLogLevel ScrollToBottom ScrollToTop ShowAuraMessages ShowCommunicationMessages ShowCompilerMessages ShowScriptMessages ShowSystemMessages TotalEvents Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Blazor.Controls.MainCounterView.-ctor.html": {
    "href": "api/EyeAuras.Blazor.Controls.MainCounterView.-ctor.html",
    "title": "Constructor MainCounterView | EyeAuras Docs",
    "keywords": "Constructor MainCounterView MainCounterView() Declaration public MainCounterView()"
  },
  "api/EyeAuras.Blazor.Controls.MainCounterView.BuildRenderTree.html": {
    "href": "api/EyeAuras.Blazor.Controls.MainCounterView.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.Blazor.Controls.MainCounterView.html": {
    "href": "api/EyeAuras.Blazor.Controls.MainCounterView.html",
    "title": "Class MainCounterView | EyeAuras Docs",
    "keywords": "Class MainCounterView Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<MainCounterViewModel> MainCounterView Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<MainCounterViewModel>.OnInitialized() BlazorReactiveComponent<MainCounterViewModel>.TrackState<TOut>(Expression<Func<MainCounterViewModel, TOut>>) BlazorReactiveComponent<MainCounterViewModel>.Track<TOut>(Expression<Func<MainCounterViewModel, TOut>>) BlazorReactiveComponent<MainCounterViewModel>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Blazor.Controls Assembly: EyeAuras.Blazor.Controls.dll Syntax public class MainCounterView : BlazorReactiveComponent<MainCounterViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description MainCounterView() Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Blazor.Controls.MainCounterViewModel.-ctor.html": {
    "href": "api/EyeAuras.Blazor.Controls.MainCounterViewModel.-ctor.html",
    "title": "Constructor MainCounterViewModel | EyeAuras Docs",
    "keywords": "Constructor MainCounterViewModel MainCounterViewModel() Declaration public MainCounterViewModel()"
  },
  "api/EyeAuras.Blazor.Controls.MainCounterViewModel.Count.html": {
    "href": "api/EyeAuras.Blazor.Controls.MainCounterViewModel.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public int Count { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.Blazor.Controls.MainCounterViewModel.html": {
    "href": "api/EyeAuras.Blazor.Controls.MainCounterViewModel.html",
    "title": "Class MainCounterViewModel | EyeAuras Docs",
    "keywords": "Class MainCounterViewModel Inheritance object DisposableReactiveObject MainCounterViewModel Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Blazor.Controls Assembly: EyeAuras.Blazor.Controls.dll Syntax public class MainCounterViewModel : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Constructors Name Description MainCounterViewModel() Properties Name Description Count Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Blazor.Controls.RazorTestClass.-ctor.html": {
    "href": "api/EyeAuras.Blazor.Controls.RazorTestClass.-ctor.html",
    "title": "Constructor RazorTestClass | EyeAuras Docs",
    "keywords": "Constructor RazorTestClass RazorTestClass() Declaration public RazorTestClass()"
  },
  "api/EyeAuras.Blazor.Controls.RazorTestClass.BuildRenderTree.html": {
    "href": "api/EyeAuras.Blazor.Controls.RazorTestClass.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.Blazor.Controls.RazorTestClass.Instance.html": {
    "href": "api/EyeAuras.Blazor.Controls.RazorTestClass.Instance.html",
    "title": "Property Instance | EyeAuras Docs",
    "keywords": "Property Instance Instance Declaration public TestClass Instance { get; } Property Value Type Description TestClass"
  },
  "api/EyeAuras.Blazor.Controls.RazorTestClass.html": {
    "href": "api/EyeAuras.Blazor.Controls.RazorTestClass.html",
    "title": "Class RazorTestClass | EyeAuras Docs",
    "keywords": "Class RazorTestClass Inheritance object ComponentBase RazorTestClass Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.SetParametersAsync(ParameterView) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Blazor.Controls Assembly: EyeAuras.Blazor.Controls.dll Syntax public class RazorTestClass : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Constructors Name Description RazorTestClass() Properties Name Description Instance Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Blazor.Controls.RazorTestClassHolder.-ctor.html": {
    "href": "api/EyeAuras.Blazor.Controls.RazorTestClassHolder.-ctor.html",
    "title": "Constructor RazorTestClassHolder | EyeAuras Docs",
    "keywords": "Constructor RazorTestClassHolder RazorTestClassHolder() Declaration public RazorTestClassHolder()"
  },
  "api/EyeAuras.Blazor.Controls.RazorTestClassHolder.RazorTestClass.html": {
    "href": "api/EyeAuras.Blazor.Controls.RazorTestClassHolder.RazorTestClass.html",
    "title": "Property RazorTestClass | EyeAuras Docs",
    "keywords": "Property RazorTestClass RazorTestClass Declaration public RazorTestClass RazorTestClass { get; } Property Value Type Description RazorTestClass"
  },
  "api/EyeAuras.Blazor.Controls.RazorTestClassHolder.html": {
    "href": "api/EyeAuras.Blazor.Controls.RazorTestClassHolder.html",
    "title": "Class RazorTestClassHolder | EyeAuras Docs",
    "keywords": "Class RazorTestClassHolder Inheritance object RazorTestClassHolder Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Blazor.Controls Assembly: EyeAuras.Blazor.Controls.dll Syntax public class RazorTestClassHolder Constructors Name Description RazorTestClassHolder() Properties Name Description RazorTestClass Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Blazor.Controls.TestClass.-ctor.html": {
    "href": "api/EyeAuras.Blazor.Controls.TestClass.-ctor.html",
    "title": "Constructor TestClass | EyeAuras Docs",
    "keywords": "Constructor TestClass TestClass() Declaration public TestClass()"
  },
  "api/EyeAuras.Blazor.Controls.TestClass.html": {
    "href": "api/EyeAuras.Blazor.Controls.TestClass.html",
    "title": "Class TestClass | EyeAuras Docs",
    "keywords": "Class TestClass Inheritance object TestClass Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Blazor.Controls Assembly: EyeAuras.Blazor.Controls.dll Syntax public class TestClass Constructors Name Description TestClass() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Blazor.Controls.html": {
    "href": "api/EyeAuras.Blazor.Controls.html",
    "title": "Namespace EyeAuras.Blazor.Controls | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Blazor.Controls Classes AuraEventLogViewer AuraEventLogViewerViewModel MainCounterView MainCounterViewModel RazorTestClass RazorTestClassHolder TestClass Structs AuraEventLogViewerViewModel.LogRecord"
  },
  "api/EyeAuras.Blazor.Shared.Controls.EyePagination-1.-ctor.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.EyePagination-1.-ctor.html",
    "title": "Constructor EyePagination | EyeAuras Docs",
    "keywords": "Constructor EyePagination EyePagination() Declaration public EyePagination()"
  },
  "api/EyeAuras.Blazor.Shared.Controls.EyePagination-1.BuildRenderTree.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.EyePagination-1.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.Blazor.Shared.Controls.EyePagination-1.ItemTemplate.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.EyePagination-1.ItemTemplate.html",
    "title": "Property ItemTemplate | EyeAuras Docs",
    "keywords": "Property ItemTemplate ItemTemplate Declaration [Parameter] public RenderFragment<TItem> ItemTemplate { get; set; } Property Value Type Description RenderFragment<TItem>"
  },
  "api/EyeAuras.Blazor.Shared.Controls.EyePagination-1.ItemsSource.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.EyePagination-1.ItemsSource.html",
    "title": "Property ItemsSource | EyeAuras Docs",
    "keywords": "Property ItemsSource ItemsSource Declaration [Parameter] public IEnumerable<TItem> ItemsSource { get; set; } Property Value Type Description IEnumerable<TItem>"
  },
  "api/EyeAuras.Blazor.Shared.Controls.EyePagination-1.SelectedItem.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.EyePagination-1.SelectedItem.html",
    "title": "Property SelectedItem | EyeAuras Docs",
    "keywords": "Property SelectedItem SelectedItem Declaration [Parameter] public TItem SelectedItem { get; set; } Property Value Type Description TItem"
  },
  "api/EyeAuras.Blazor.Shared.Controls.EyePagination-1.SelectedItemChanged.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.EyePagination-1.SelectedItemChanged.html",
    "title": "Property SelectedItemChanged | EyeAuras Docs",
    "keywords": "Property SelectedItemChanged SelectedItemChanged Declaration [Parameter] public EventCallback<TItem> SelectedItemChanged { get; set; } Property Value Type Description EventCallback<TItem>"
  },
  "api/EyeAuras.Blazor.Shared.Controls.EyePagination-1.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.EyePagination-1.html",
    "title": "Class EyePagination<TItem> | EyeAuras Docs",
    "keywords": "Class EyePagination<TItem> Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent EyePagination<TItem> Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.DataContext BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitialized() ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Blazor.Shared.Controls Assembly: EyeAuras.Blazor.Shared.dll Syntax public class EyePagination<TItem> : BlazorReactiveComponent, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Type Parameters Name Description TItem Constructors Name Description EyePagination() Properties Name Description ItemTemplate ItemsSource SelectedItem SelectedItemChanged Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Blazor.Shared.Controls.InputTextAreaEx.-ctor.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.InputTextAreaEx.-ctor.html",
    "title": "Constructor InputTextAreaEx | EyeAuras Docs",
    "keywords": "Constructor InputTextAreaEx InputTextAreaEx() Declaration public InputTextAreaEx()"
  },
  "api/EyeAuras.Blazor.Shared.Controls.InputTextAreaEx.BuildRenderTree.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.InputTextAreaEx.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides InputTextArea.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.Blazor.Shared.Controls.InputTextAreaEx.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.InputTextAreaEx.html",
    "title": "Class InputTextAreaEx | EyeAuras Docs",
    "keywords": "Class InputTextAreaEx Inheritance object ComponentBase InputBase<string> InputTextArea InputTextAreaEx Implements IComponent IHandleEvent IHandleAfterRender IDisposable Inherited Members InputTextArea.TryParseValueFromString(string, out string, out string) InputTextArea.Element InputBase<string>.FormatValueAsString(string) InputBase<string>.SetParametersAsync(ParameterView) InputBase<string>.Dispose(bool) InputBase<string>.AdditionalAttributes InputBase<string>.Value InputBase<string>.ValueChanged InputBase<string>.ValueExpression InputBase<string>.DisplayName InputBase<string>.EditContext InputBase<string>.FieldIdentifier InputBase<string>.CurrentValue InputBase<string>.CurrentValueAsString InputBase<string>.CssClass ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Blazor.Shared.Controls Assembly: EyeAuras.Blazor.Shared.dll Syntax public class InputTextAreaEx : InputTextArea, IComponent, IHandleEvent, IHandleAfterRender, IDisposable Constructors Name Description InputTextAreaEx() Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Blazor.Shared.Controls.InputTextEx.-ctor.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.InputTextEx.-ctor.html",
    "title": "Constructor InputTextEx | EyeAuras Docs",
    "keywords": "Constructor InputTextEx InputTextEx() Declaration public InputTextEx()"
  },
  "api/EyeAuras.Blazor.Shared.Controls.InputTextEx.BuildRenderTree.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.InputTextEx.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides InputText.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.Blazor.Shared.Controls.InputTextEx.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.InputTextEx.html",
    "title": "Class InputTextEx | EyeAuras Docs",
    "keywords": "Class InputTextEx Inheritance object ComponentBase InputBase<string> InputText InputTextEx Implements IComponent IHandleEvent IHandleAfterRender IDisposable Inherited Members InputText.TryParseValueFromString(string, out string, out string) InputText.Element InputBase<string>.FormatValueAsString(string) InputBase<string>.SetParametersAsync(ParameterView) InputBase<string>.Dispose(bool) InputBase<string>.AdditionalAttributes InputBase<string>.Value InputBase<string>.ValueChanged InputBase<string>.ValueExpression InputBase<string>.DisplayName InputBase<string>.EditContext InputBase<string>.FieldIdentifier InputBase<string>.CurrentValue InputBase<string>.CurrentValueAsString InputBase<string>.CssClass ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Blazor.Shared.Controls Assembly: EyeAuras.Blazor.Shared.dll Syntax public class InputTextEx : InputText, IComponent, IHandleEvent, IHandleAfterRender, IDisposable Constructors Name Description InputTextEx() Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.-ctor.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.-ctor.html",
    "title": "Constructor ProgressBar | EyeAuras Docs",
    "keywords": "Constructor ProgressBar ProgressBar() Declaration public ProgressBar()"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.BuildRenderTree.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.ChildContent.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.ChildContent.html",
    "title": "Property ChildContent | EyeAuras Docs",
    "keywords": "Property ChildContent ChildContent Declaration [Parameter] public RenderFragment ChildContent { get; set; } Property Value Type Description RenderFragment"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.Class.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.Class.html",
    "title": "Property Class | EyeAuras Docs",
    "keywords": "Property Class Class Declaration [Parameter] public string Class { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.IsIndeterminate.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.IsIndeterminate.html",
    "title": "Property IsIndeterminate | EyeAuras Docs",
    "keywords": "Property IsIndeterminate IsIndeterminate Declaration [Parameter] public bool IsIndeterminate { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.Maximum.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.Maximum.html",
    "title": "Property Maximum | EyeAuras Docs",
    "keywords": "Property Maximum Maximum Declaration [Parameter] public double Maximum { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.Minimum.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.Minimum.html",
    "title": "Property Minimum | EyeAuras Docs",
    "keywords": "Property Minimum Minimum Declaration [Parameter] public double Minimum { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.Percent.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.Percent.html",
    "title": "Property Percent | EyeAuras Docs",
    "keywords": "Property Percent Percent Declaration public double Percent { get; } Property Value Type Description double"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.Style.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.Style.html",
    "title": "Property Style | EyeAuras Docs",
    "keywords": "Property Style Style Declaration [Parameter] public string Style { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.Value.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration [Parameter] public double Value { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ProgressBar.html",
    "title": "Class ProgressBar | EyeAuras Docs",
    "keywords": "Class ProgressBar Inheritance object ComponentBase ProgressBar Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.SetParametersAsync(ParameterView) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Blazor.Shared.Controls Assembly: EyeAuras.Blazor.Shared.dll Syntax public class ProgressBar : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Constructors Name Description ProgressBar() Properties Name Description ChildContent Class IsIndeterminate Maximum Minimum Percent Style Value Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.-ctor.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.-ctor.html",
    "title": "Constructor ReactiveButton | EyeAuras Docs",
    "keywords": "Constructor ReactiveButton ReactiveButton() Declaration public ReactiveButton()"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.BuildRenderTree.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.CanExecute.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.CanExecute.html",
    "title": "Property CanExecute | EyeAuras Docs",
    "keywords": "Property CanExecute CanExecute Declaration [Parameter] public bool CanExecute { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.ChildContent.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.ChildContent.html",
    "title": "Property ChildContent | EyeAuras Docs",
    "keywords": "Property ChildContent ChildContent Declaration [Parameter] public RenderFragment ChildContent { get; set; } Property Value Type Description RenderFragment"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.Class.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.Class.html",
    "title": "Property Class | EyeAuras Docs",
    "keywords": "Property Class Class Declaration [Parameter] public string Class { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.Command.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.Command.html",
    "title": "Property Command | EyeAuras Docs",
    "keywords": "Property Command Command Declaration [Parameter] public Func<Task> Command { get; set; } Property Value Type Description Func<Task>"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.Error.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Declaration public string Error { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.HideIfDisabled.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.HideIfDisabled.html",
    "title": "Property HideIfDisabled | EyeAuras Docs",
    "keywords": "Property HideIfDisabled HideIfDisabled Declaration [Parameter] public bool HideIfDisabled { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.IsBusy.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.IsBusy.html",
    "title": "Property IsBusy | EyeAuras Docs",
    "keywords": "Property IsBusy IsBusy Declaration public bool IsBusy { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.IsEnabled.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Declaration [Parameter] public bool IsEnabled { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.MinExecutionTime.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.MinExecutionTime.html",
    "title": "Property MinExecutionTime | EyeAuras Docs",
    "keywords": "Property MinExecutionTime MinExecutionTime Declaration [Parameter] public TimeSpan MinExecutionTime { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.Style.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.Style.html",
    "title": "Property Style | EyeAuras Docs",
    "keywords": "Property Style Style Declaration [Parameter] public string Style { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.ReactiveButton.html",
    "title": "Class ReactiveButton | EyeAuras Docs",
    "keywords": "Class ReactiveButton Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent ReactiveButton Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.DataContext BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitialized() ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Blazor.Shared.Controls Assembly: EyeAuras.Blazor.Shared.dll Syntax public class ReactiveButton : BlazorReactiveComponent, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description ReactiveButton() Properties Name Description CanExecute ChildContent Class Command Error HideIfDisabled IsBusy IsEnabled MinExecutionTime Style Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Blazor.Shared.Controls.html": {
    "href": "api/EyeAuras.Blazor.Shared.Controls.html",
    "title": "Namespace EyeAuras.Blazor.Shared.Controls | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Blazor.Shared.Controls Classes EyePagination<TItem> InputTextAreaEx InputTextEx ProgressBar ReactiveButton"
  },
  "api/EyeAuras.Blazor.html": {
    "href": "api/EyeAuras.Blazor.html",
    "title": "Namespace EyeAuras.Blazor | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Blazor Namespaces EyeAuras.Blazor.Controls EyeAuras.Blazor.Shared.Controls"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIAuraOverlay.Compiler.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIAuraOverlay.Compiler.html",
    "title": "Property Compiler | EyeAuras Docs",
    "keywords": "Property Compiler Compiler Declaration IContinuousCompiler Compiler { get; } Property Value Type Description IContinuousCompiler"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIAuraOverlay.Diagnostics.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIAuraOverlay.Diagnostics.html",
    "title": "Property Diagnostics | EyeAuras Docs",
    "keywords": "Property Diagnostics Diagnostics Declaration IObservableList<CompilationDiagnostic> Diagnostics { get; } Property Value Type Description IObservableList<CompilationDiagnostic>"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIAuraOverlay.EnableBrowserHotkeys.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIAuraOverlay.EnableBrowserHotkeys.html",
    "title": "Property EnableBrowserHotkeys | EyeAuras Docs",
    "keywords": "Property EnableBrowserHotkeys EnableBrowserHotkeys Declaration bool EnableBrowserHotkeys { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIAuraOverlay.ViewType.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIAuraOverlay.ViewType.html",
    "title": "Property ViewType | EyeAuras Docs",
    "keywords": "Property ViewType ViewType Declaration Type ViewType { get; } Property Value Type Description Type"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIAuraOverlay.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIAuraOverlay.html",
    "title": "Interface IWebUIAuraOverlay | EyeAuras Docs",
    "keywords": "Interface IWebUIAuraOverlay Inherited Members IAuraOverlay.IsIgnored IAuraOverlay.OverlayPosition IAuraOverlay.BorderColor IAuraOverlay.BackgroundColor IAuraOverlay.ThumbnailOpacity IAuraOverlay.BorderThickness IAuraOverlay.IsClickThrough IAuraOverlay.EnableHeader IAuraOverlay.Title IAuraOverlay.MaintainAspectRatio IAuraOverlay.AuraModelController IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description INotifyPropertyChanged.PropertyChanged IHasReplProject.Project IHasLinkedAuras.LinkedAuras Namespace: EyeAuras.BlazorAuras.Overlays.WebUI Assembly: EyeAuras.BlazorAuras.Metadata.dll Syntax public interface IWebUIAuraOverlay : IAuraOverlay, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, IHasId, ICanSetContext, IHasName, IHasDescription, INotifyPropertyChanged, IHasReplProject, IHasContext, IHasLinkedAuras Properties Name Description Compiler Diagnostics EnableBrowserHotkeys ViewType Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIComponent.AuraTree.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIComponent.AuraTree.html",
    "title": "Property AuraTree | EyeAuras Docs",
    "keywords": "Property AuraTree AuraTree Declaration IAuraTreeScriptingApi AuraTree { get; init; } Property Value Type Description IAuraTreeScriptingApi"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIComponent.Context.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIComponent.Context.html",
    "title": "Property Context | EyeAuras Docs",
    "keywords": "Property Context Context Declaration [Bindable(false)] IEyeContext Context { get; init; } Property Value Type Description IEyeContext"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIComponent.DataContext.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIComponent.DataContext.html",
    "title": "Property DataContext | EyeAuras Docs",
    "keywords": "Property DataContext DataContext Declaration IWebUIAuraOverlay DataContext { get; set; } Property Value Type Description IWebUIAuraOverlay"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIComponent.JsRuntime.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIComponent.JsRuntime.html",
    "title": "Property JsRuntime | EyeAuras Docs",
    "keywords": "Property JsRuntime JsRuntime Declaration IJSRuntime JsRuntime { get; } Property Value Type Description IJSRuntime"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIComponent.RefreshTimeout.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIComponent.RefreshTimeout.html",
    "title": "Property RefreshTimeout | EyeAuras Docs",
    "keywords": "Property RefreshTimeout RefreshTimeout Declaration TimeSpan RefreshTimeout { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIComponent.Variables.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIComponent.Variables.html",
    "title": "Property Variables | EyeAuras Docs",
    "keywords": "Property Variables Variables Declaration IVariablesScriptingApi Variables { get; init; } Property Value Type Description IVariablesScriptingApi"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIComponent.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIComponent.html",
    "title": "Interface IWebUIComponent | EyeAuras Docs",
    "keywords": "Interface IWebUIComponent Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.BlazorAuras.Overlays.WebUI Assembly: EyeAuras.BlazorAuras.Metadata.dll Syntax public interface IWebUIComponent : IDisposable, INotifyPropertyChanged Properties Name Description AuraTree Context DataContext JsRuntime RefreshTimeout Variables Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayContent.Activate.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayContent.Activate.html",
    "title": "Method Activate | EyeAuras Docs",
    "keywords": "Method Activate Activate() Declaration bool Activate() Returns Type Description bool"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayContent.Container.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayContent.Container.html",
    "title": "Property Container | EyeAuras Docs",
    "keywords": "Property Container Container Declaration IUnityContainer Container { get; } Property Value Type Description IUnityContainer"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayContent.ContentControl.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayContent.ContentControl.html",
    "title": "Property ContentControl | EyeAuras Docs",
    "keywords": "Property ContentControl ContentControl Declaration IBlazorContentControl ContentControl { get; set; } Property Value Type Description IBlazorContentControl"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayContent.ViewType.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayContent.ViewType.html",
    "title": "Property ViewType | EyeAuras Docs",
    "keywords": "Property ViewType ViewType Declaration Type ViewType { get; set; } Property Value Type Description Type"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayContent.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayContent.html",
    "title": "Interface IWebUIOverlayContent | EyeAuras Docs",
    "keywords": "Interface IWebUIOverlayContent Inherited Members IAuraOverlayContent.IsInitialized IAuraOverlayContent.OverlayBounds IAuraOverlayContent.BorderColor IAuraOverlayContent.BackgroundColor IAuraOverlayContent.ThumbnailOpacity IAuraOverlayContent.BorderThickness IAuraOverlayContent.TargetAspectRatio IAuraOverlayContent.IsClickThrough IAuraOverlayContent.MaintainAspectRatio IAuraOverlayContent.IsFocusable IAuraOverlayContent.EnableHeader IAuraOverlayContent.Title IAuraOverlayContent.Overlay IAuraOverlayContent.AuraModelController IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.BlazorAuras.Overlays.WebUI Assembly: EyeAuras.BlazorAuras.Metadata.dll Syntax public interface IWebUIOverlayContent : IAuraOverlayContent, IDisposable, INotifyPropertyChanged Properties Name Description Container ContentControl ViewType Methods Name Description Activate() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayScriptingApi.Activate.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayScriptingApi.Activate.html",
    "title": "Method Activate | EyeAuras Docs",
    "keywords": "Method Activate Activate() Declaration bool Activate() Returns Type Description bool"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayScriptingApi.IsActive.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayScriptingApi.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Declaration bool IsActive { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayScriptingApi.WhenPreviewKeyDown.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayScriptingApi.WhenPreviewKeyDown.html",
    "title": "Property WhenPreviewKeyDown | EyeAuras Docs",
    "keywords": "Property WhenPreviewKeyDown WhenPreviewKeyDown Declaration IObservable<KeyEventArgs> WhenPreviewKeyDown { get; } Property Value Type Description IObservable<KeyEventArgs>"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayScriptingApi.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIOverlayScriptingApi.html",
    "title": "Interface IWebUIOverlayScriptingApi | EyeAuras Docs",
    "keywords": "Interface IWebUIOverlayScriptingApi Inherited Members IScriptingApi.Name Namespace: EyeAuras.BlazorAuras.Overlays.WebUI Assembly: EyeAuras.BlazorAuras.Metadata.dll Syntax public interface IWebUIOverlayScriptingApi : IScriptingApi Properties Name Description IsActive WhenPreviewKeyDown Methods Name Description Activate() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.-ctor.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.-ctor.html",
    "title": "Constructor WebUIComponent | EyeAuras Docs",
    "keywords": "Constructor WebUIComponent WebUIComponent() Declaration protected WebUIComponent()"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.AuraTree.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.AuraTree.html",
    "title": "Property AuraTree | EyeAuras Docs",
    "keywords": "Property AuraTree AuraTree Declaration public IAuraTreeScriptingApi AuraTree { get; init; } Property Value Type Description IAuraTreeScriptingApi Implements IWebUIComponent.AuraTree"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.Context.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.Context.html",
    "title": "Property Context | EyeAuras Docs",
    "keywords": "Property Context Context Declaration public IEyeContext Context { get; init; } Property Value Type Description IEyeContext Implements IWebUIComponent.Context"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.CreateBinder.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.CreateBinder.html",
    "title": "Method CreateBinder | EyeAuras Docs",
    "keywords": "Method CreateBinder CreateBinder<TContext>() Declaration protected static Binder<TContext> CreateBinder<TContext>() where TContext : class Returns Type Description Binder<TContext> Type Parameters Name Description TContext"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.HandleAfterFirstRender.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.HandleAfterFirstRender.html",
    "title": "Method HandleAfterFirstRender | EyeAuras Docs",
    "keywords": "Method HandleAfterFirstRender HandleAfterFirstRender() Called right after first render has completed Declaration protected virtual Task HandleAfterFirstRender() Returns Type Description Task"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.OnAfterRender.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.OnAfterRender.html",
    "title": "Method OnAfterRender | EyeAuras Docs",
    "keywords": "Method OnAfterRender OnAfterRender(bool) Declaration protected override sealed void OnAfterRender(bool firstRender) Parameters Type Name Description bool firstRender Overrides ReactiveComponentBase.OnAfterRender(bool)"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.OnAfterRenderAsync.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.OnAfterRenderAsync.html",
    "title": "Method OnAfterRenderAsync | EyeAuras Docs",
    "keywords": "Method OnAfterRenderAsync OnAfterRenderAsync(bool) Declaration protected override sealed Task OnAfterRenderAsync(bool firstRender) Parameters Type Name Description bool firstRender Returns Type Description Task Overrides ReactiveComponentBase.OnAfterRenderAsync(bool)"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.OnInitialized.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.OnInitialized.html",
    "title": "Method OnInitialized | EyeAuras Docs",
    "keywords": "Method OnInitialized OnInitialized() Declaration protected override sealed void OnInitialized() Overrides PoeShared.Blazor.BlazorReactiveComponent<EyeAuras.BlazorAuras.Overlays.WebUI.IWebUIAuraOverlay>.OnInitialized()"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.OnInitializedAsync.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.OnInitializedAsync.html",
    "title": "Method OnInitializedAsync | EyeAuras Docs",
    "keywords": "Method OnInitializedAsync OnInitializedAsync() Declaration protected override sealed Task OnInitializedAsync() Returns Type Description Task Overrides ReactiveComponentBase.OnInitializedAsync()"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.OnParametersSet.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.OnParametersSet.html",
    "title": "Method OnParametersSet | EyeAuras Docs",
    "keywords": "Method OnParametersSet OnParametersSet() Declaration protected override sealed void OnParametersSet() Overrides ReactiveComponentBase.OnParametersSet()"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.OnParametersSetAsync.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.OnParametersSetAsync.html",
    "title": "Method OnParametersSetAsync | EyeAuras Docs",
    "keywords": "Method OnParametersSetAsync OnParametersSetAsync() Declaration protected override sealed Task OnParametersSetAsync() Returns Type Description Task Overrides ReactiveComponentBase.OnParametersSetAsync()"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.PrepareLogger.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.PrepareLogger.html",
    "title": "Method PrepareLogger | EyeAuras Docs",
    "keywords": "Method PrepareLogger PrepareLogger() Declaration protected override IFluentLog PrepareLogger() Returns Type Description IFluentLog Overrides ReactiveComponentBase.PrepareLogger()"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.RefreshTimeout.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.RefreshTimeout.html",
    "title": "Property RefreshTimeout | EyeAuras Docs",
    "keywords": "Property RefreshTimeout RefreshTimeout Declaration public TimeSpan RefreshTimeout { get; set; } Property Value Type Description TimeSpan Implements IWebUIComponent.RefreshTimeout"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.SetParametersAsync.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.SetParametersAsync.html",
    "title": "Method SetParametersAsync | EyeAuras Docs",
    "keywords": "Method SetParametersAsync SetParametersAsync(ParameterView) Declaration public override sealed Task SetParametersAsync(ParameterView parameters) Parameters Type Name Description ParameterView parameters Returns Type Description Task Overrides ReactiveComponentBase.SetParametersAsync(ParameterView)"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.ShouldRender.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.ShouldRender.html",
    "title": "Method ShouldRender | EyeAuras Docs",
    "keywords": "Method ShouldRender ShouldRender() Declaration protected override sealed bool ShouldRender() Returns Type Description bool Overrides ReactiveComponentBase.ShouldRender()"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.Variables.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.Variables.html",
    "title": "Property Variables | EyeAuras Docs",
    "keywords": "Property Variables Variables Declaration public IVariablesScriptingApi Variables { get; init; } Property Value Type Description IVariablesScriptingApi Implements IWebUIComponent.Variables"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.WebUIComponent.html",
    "title": "Class WebUIComponent | EyeAuras Docs",
    "keywords": "Class WebUIComponent Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<IWebUIAuraOverlay> WebUIComponent Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IRefreshableComponent IWebUIComponent IDisposable INotifyPropertyChanged Inherited Members BlazorReactiveComponent<IWebUIAuraOverlay>.TrackState<TOut>(Expression<Func<IWebUIAuraOverlay, TOut>>) BlazorReactiveComponent<IWebUIAuraOverlay>.Track<TOut>(Expression<Func<IWebUIAuraOverlay, TOut>>) BlazorReactiveComponent<IWebUIAuraOverlay>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder) ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.BlazorAuras.Overlays.WebUI Assembly: EyeAuras.BlazorAuras.Metadata.dll Syntax public abstract class WebUIComponent : BlazorReactiveComponent<IWebUIAuraOverlay>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IRefreshableComponent, IWebUIComponent, IDisposable, INotifyPropertyChanged Constructors Name Description WebUIComponent() Properties Name Description AuraTree Context RefreshTimeout Variables Methods Name Description CreateBinder<TContext>() HandleAfterFirstRender() Called right after first render has completed OnAfterRender(bool) OnAfterRenderAsync(bool) OnInitialized() OnInitializedAsync() OnParametersSet() OnParametersSetAsync() PrepareLogger() SetParametersAsync(ParameterView) ShouldRender() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.BlazorAuras.Overlays.WebUI.html": {
    "href": "api/EyeAuras.BlazorAuras.Overlays.WebUI.html",
    "title": "Namespace EyeAuras.BlazorAuras.Overlays.WebUI | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.BlazorAuras.Overlays.WebUI Classes WebUIComponent Interfaces IWebUIAuraOverlay IWebUIComponent IWebUIOverlayContent IWebUIOverlayScriptingApi"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionExecutor.-ctor.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionExecutor.-ctor.html",
    "title": "Constructor CsharpScriptActionExecutor | EyeAuras Docs",
    "keywords": "Constructor CsharpScriptActionExecutor CsharpScriptActionExecutor() Declaration protected CsharpScriptActionExecutor()"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionExecutor.AuraTree.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionExecutor.AuraTree.html",
    "title": "Property AuraTree | EyeAuras Docs",
    "keywords": "Property AuraTree AuraTree Declaration public IAuraTreeScriptingApi AuraTree { get; init; } Property Value Type Description IAuraTreeScriptingApi Implements ICsharpScriptActionExecutor.AuraTree"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionExecutor.Context.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionExecutor.Context.html",
    "title": "Property Context | EyeAuras Docs",
    "keywords": "Property Context Context Declaration public IEyeContext Context { get; init; } Property Value Type Description IEyeContext Implements ICsharpScriptActionExecutor.Context"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionExecutor.Execute.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionExecutor.Execute.html",
    "title": "Method Execute | EyeAuras Docs",
    "keywords": "Method Execute Execute(CancellationToken) Declaration public abstract Task Execute(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Implements ICsharpScriptActionExecutor.Execute(CancellationToken)"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionExecutor.PrepareLogger.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionExecutor.PrepareLogger.html",
    "title": "Method PrepareLogger | EyeAuras Docs",
    "keywords": "Method PrepareLogger PrepareLogger() Declaration protected override IFluentLog PrepareLogger() Returns Type Description IFluentLog Overrides PoeShared.Scaffolding.DisposableReactiveObjectWithLogger.PrepareLogger()"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionExecutor.Variables.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionExecutor.Variables.html",
    "title": "Property Variables | EyeAuras Docs",
    "keywords": "Property Variables Variables Declaration public IVariablesScriptingApi Variables { get; init; } Property Value Type Description IVariablesScriptingApi Implements ICsharpScriptActionExecutor.Variables"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionExecutor.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionExecutor.html",
    "title": "Class CsharpScriptActionExecutor | EyeAuras Docs",
    "keywords": "Class CsharpScriptActionExecutor Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger CsharpScriptActionExecutor Implements ICsharpScriptActionExecutor IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.CsScriptAuras.Actions.CsharpScript Assembly: EyeAuras.CsScriptAuras.dll Syntax public abstract class CsharpScriptActionExecutor : DisposableReactiveObjectWithLogger, ICsharpScriptActionExecutor, IDisposable, INotifyPropertyChanged Constructors Name Description CsharpScriptActionExecutor() Properties Name Description AuraTree Context Variables Methods Name Description Execute(CancellationToken) PrepareLogger() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.-Clone--.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override CsharpScriptActionProperties <Clone>$() Returns Type Description CsharpScriptActionProperties Overrides AuraActionPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.-ctor.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.-ctor.html",
    "title": "Constructor CsharpScriptActionProperties | EyeAuras Docs",
    "keywords": "Constructor CsharpScriptActionProperties CsharpScriptActionProperties() Declaration public CsharpScriptActionProperties()"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.EqualityContract.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraActionPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.Equals.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(object?) Equals(AuraActionPropertiesBase?) Declaration public override sealed bool Equals(AuraActionPropertiesBase? other) Parameters Type Name Description AuraActionPropertiesBase other Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(AuraActionPropertiesBase?) Equals(CsharpScriptActionProperties?) Declaration public bool Equals(CsharpScriptActionProperties? other) Parameters Type Name Description CsharpScriptActionProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.GetHashCode.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraActionPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.LinkedAuraIds.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.LinkedAuraIds.html",
    "title": "Property LinkedAuraIds | EyeAuras Docs",
    "keywords": "Property LinkedAuraIds LinkedAuraIds Declaration public IReadOnlyList<string> LinkedAuraIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedAuraIds"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.LinkedFolderIds.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.LinkedFolderIds.html",
    "title": "Property LinkedFolderIds | EyeAuras Docs",
    "keywords": "Property LinkedFolderIds LinkedFolderIds Declaration public IReadOnlyList<string> LinkedFolderIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedFolderIds"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.PrintMembers.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraActionPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.ProjectProperties.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.ProjectProperties.html",
    "title": "Property ProjectProperties | EyeAuras Docs",
    "keywords": "Property ProjectProperties ProjectProperties Declaration public EyeProjectProperties ProjectProperties { get; set; } Property Value Type Description EyeProjectProperties"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.ReplaceId.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.ReplaceId.html",
    "title": "Method ReplaceId | EyeAuras Docs",
    "keywords": "Method ReplaceId ReplaceId(string, string) Declaration public void ReplaceId(string previousId, string newId) Parameters Type Name Description string previousId string newId Implements IHasLinkedAuraIds.ReplaceId(string, string)"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.ScriptReferences.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.ScriptReferences.html",
    "title": "Property ScriptReferences | EyeAuras Docs",
    "keywords": "Property ScriptReferences ScriptReferences Declaration public AuraEvaluatorProperties ScriptReferences { get; set; } Property Value Type Description AuraEvaluatorProperties"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.ToString.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraActionPropertiesBase.ToString()"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.Version.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.html",
    "title": "Class CsharpScriptActionProperties | EyeAuras Docs",
    "keywords": "Class CsharpScriptActionProperties Inheritance object AuraPropertiesBase AuraActionPropertiesBase CsharpScriptActionProperties Implements IEquatable<AuraPropertiesBase> IAuraActionProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraActionPropertiesBase> IHasLinkedAuraIds IEquatable<CsharpScriptActionProperties> Inherited Members AuraActionPropertiesBase.Equals(AuraPropertiesBase) AuraActionPropertiesBase.IsIgnored AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.CsScriptAuras.Actions.CsharpScript Assembly: EyeAuras.CsScriptAuras.Metadata.dll Syntax public sealed record CsharpScriptActionProperties : AuraActionPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraActionProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraActionPropertiesBase>, IHasLinkedAuraIds, IEquatable<CsharpScriptActionProperties> Constructors Name Description CsharpScriptActionProperties() Properties Name Description EqualityContract LinkedAuraIds LinkedFolderIds ProjectProperties ScriptReferences Version Methods Name Description Equals(CsharpScriptActionProperties?) Equals(AuraActionPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ReplaceId(string, string) ToString() <Clone>$() Operators Name Description operator ==(CsharpScriptActionProperties?, CsharpScriptActionProperties?) operator !=(CsharpScriptActionProperties?, CsharpScriptActionProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.op_Equality.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(CsharpScriptActionProperties?, CsharpScriptActionProperties?) Declaration public static bool operator ==(CsharpScriptActionProperties? left, CsharpScriptActionProperties? right) Parameters Type Name Description CsharpScriptActionProperties left CsharpScriptActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.op_Inequality.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.CsharpScriptActionProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(CsharpScriptActionProperties?, CsharpScriptActionProperties?) Declaration public static bool operator !=(CsharpScriptActionProperties? left, CsharpScriptActionProperties? right) Parameters Type Name Description CsharpScriptActionProperties left CsharpScriptActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.ICsharpScriptAction.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.ICsharpScriptAction.html",
    "title": "Interface ICsharpScriptAction | EyeAuras Docs",
    "keywords": "Interface ICsharpScriptAction Inherited Members IAuraAction.Cancel() IAuraAction.Execute() IAuraAction.Execute(CancellationToken) IAuraAction.IsIgnored IAuraAction.IsBusy IAuraAction.Error IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description IHasReplProject.Project IHasReplProject.Compiler IHasLinkedAuras.LinkedAuras Namespace: EyeAuras.CsScriptAuras.Actions.CsharpScript Assembly: EyeAuras.CsScriptAuras.dll Syntax public interface ICsharpScriptAction : IAuraAction, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasName, IHasDescription, IHasReplProject, IHasContext, IHasLinkedAuras Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.ICsharpScriptActionExecutor.AuraTree.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.ICsharpScriptActionExecutor.AuraTree.html",
    "title": "Property AuraTree | EyeAuras Docs",
    "keywords": "Property AuraTree AuraTree Declaration IAuraTreeScriptingApi AuraTree { get; init; } Property Value Type Description IAuraTreeScriptingApi"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.ICsharpScriptActionExecutor.Context.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.ICsharpScriptActionExecutor.Context.html",
    "title": "Property Context | EyeAuras Docs",
    "keywords": "Property Context Context Declaration IEyeContext Context { get; init; } Property Value Type Description IEyeContext"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.ICsharpScriptActionExecutor.Execute.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.ICsharpScriptActionExecutor.Execute.html",
    "title": "Method Execute | EyeAuras Docs",
    "keywords": "Method Execute Execute(CancellationToken) Declaration Task Execute(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.ICsharpScriptActionExecutor.Log.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.ICsharpScriptActionExecutor.Log.html",
    "title": "Property Log | EyeAuras Docs",
    "keywords": "Property Log Log Declaration IFluentLog Log { get; } Property Value Type Description IFluentLog"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.ICsharpScriptActionExecutor.Variables.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.ICsharpScriptActionExecutor.Variables.html",
    "title": "Property Variables | EyeAuras Docs",
    "keywords": "Property Variables Variables Declaration IVariablesScriptingApi Variables { get; init; } Property Value Type Description IVariablesScriptingApi"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.ICsharpScriptActionExecutor.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.ICsharpScriptActionExecutor.html",
    "title": "Interface ICsharpScriptActionExecutor | EyeAuras Docs",
    "keywords": "Interface ICsharpScriptActionExecutor Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.CsScriptAuras.Actions.CsharpScript Assembly: EyeAuras.CsScriptAuras.dll Syntax public interface ICsharpScriptActionExecutor : IDisposable, INotifyPropertyChanged Properties Name Description AuraTree Context Log Variables Methods Name Description Execute(CancellationToken) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.CsharpScript.html",
    "title": "Namespace EyeAuras.CsScriptAuras.Actions.CsharpScript | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.CsScriptAuras.Actions.CsharpScript Classes CsharpScriptActionExecutor CsharpScriptActionProperties Interfaces ICsharpScriptAction ICsharpScriptActionExecutor"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.-Clone--.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override ExecuteScriptActionProperties <Clone>$() Returns Type Description ExecuteScriptActionProperties Overrides AuraActionPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.-ctor.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.-ctor.html",
    "title": "Constructor ExecuteScriptActionProperties | EyeAuras Docs",
    "keywords": "Constructor ExecuteScriptActionProperties ExecuteScriptActionProperties() Declaration public ExecuteScriptActionProperties()"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.EqualityContract.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraActionPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.Equals.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(object?) Equals(AuraActionPropertiesBase?) Declaration public override sealed bool Equals(AuraActionPropertiesBase? other) Parameters Type Name Description AuraActionPropertiesBase other Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(AuraActionPropertiesBase?) Equals(ExecuteScriptActionProperties?) Declaration public bool Equals(ExecuteScriptActionProperties? other) Parameters Type Name Description ExecuteScriptActionProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.GetHashCode.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraActionPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.LinkedAuraIds.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.LinkedAuraIds.html",
    "title": "Property LinkedAuraIds | EyeAuras Docs",
    "keywords": "Property LinkedAuraIds LinkedAuraIds Declaration public IReadOnlyList<string> LinkedAuraIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedAuraIds"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.LinkedFolderIds.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.LinkedFolderIds.html",
    "title": "Property LinkedFolderIds | EyeAuras Docs",
    "keywords": "Property LinkedFolderIds LinkedFolderIds Declaration public IReadOnlyList<string> LinkedFolderIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedFolderIds"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.PrintMembers.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraActionPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.ReplaceId.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.ReplaceId.html",
    "title": "Method ReplaceId | EyeAuras Docs",
    "keywords": "Method ReplaceId ReplaceId(string, string) Declaration public void ReplaceId(string previousId, string newId) Parameters Type Name Description string previousId string newId Implements IHasLinkedAuraIds.ReplaceId(string, string)"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.ScriptReferences.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.ScriptReferences.html",
    "title": "Property ScriptReferences | EyeAuras Docs",
    "keywords": "Property ScriptReferences ScriptReferences Declaration public AuraEvaluatorProperties ScriptReferences { get; set; } Property Value Type Description AuraEvaluatorProperties"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.ShowScriptLog.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.ShowScriptLog.html",
    "title": "Property ShowScriptLog | EyeAuras Docs",
    "keywords": "Property ShowScriptLog ShowScriptLog Declaration public bool ShowScriptLog { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.SourceCode.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.SourceCode.html",
    "title": "Property SourceCode | EyeAuras Docs",
    "keywords": "Property SourceCode SourceCode Declaration public string SourceCode { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.ToString.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraActionPropertiesBase.ToString()"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.Version.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version Implements IHasVersion.Version"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.html",
    "title": "Class ExecuteScriptActionProperties | EyeAuras Docs",
    "keywords": "Class ExecuteScriptActionProperties Inheritance object AuraPropertiesBase AuraActionPropertiesBase ExecuteScriptActionProperties Implements IEquatable<AuraPropertiesBase> IAuraActionProperties IEquatable<AuraActionPropertiesBase> IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IHasLinkedAuraIds IEquatable<ExecuteScriptActionProperties> Inherited Members AuraActionPropertiesBase.Equals(AuraPropertiesBase) AuraActionPropertiesBase.IsIgnored AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.CsScriptAuras.Actions.ExecuteScript Assembly: EyeAuras.CsScriptAuras.Metadata.dll Syntax [Obsolete(\"Replaced by CsharpScriptTrigger\")] public sealed record ExecuteScriptActionProperties : AuraActionPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraActionProperties, IEquatable<AuraActionPropertiesBase>, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IHasLinkedAuraIds, IEquatable<ExecuteScriptActionProperties> Constructors Name Description ExecuteScriptActionProperties() Properties Name Description EqualityContract LinkedAuraIds LinkedFolderIds ScriptReferences ShowScriptLog SourceCode Version Methods Name Description Equals(ExecuteScriptActionProperties?) Equals(AuraActionPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ReplaceId(string, string) ToString() <Clone>$() Operators Name Description operator ==(ExecuteScriptActionProperties?, ExecuteScriptActionProperties?) operator !=(ExecuteScriptActionProperties?, ExecuteScriptActionProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.op_Equality.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ExecuteScriptActionProperties?, ExecuteScriptActionProperties?) Declaration public static bool operator ==(ExecuteScriptActionProperties? left, ExecuteScriptActionProperties? right) Parameters Type Name Description ExecuteScriptActionProperties left ExecuteScriptActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.op_Inequality.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.ExecuteScriptActionProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ExecuteScriptActionProperties?, ExecuteScriptActionProperties?) Declaration public static bool operator !=(ExecuteScriptActionProperties? left, ExecuteScriptActionProperties? right) Parameters Type Name Description ExecuteScriptActionProperties left ExecuteScriptActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.IExecuteScriptAction.LinkedAuras.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.IExecuteScriptAction.LinkedAuras.html",
    "title": "Property LinkedAuras | EyeAuras Docs",
    "keywords": "Property LinkedAuras LinkedAuras Declaration IAuraListStateEvaluator LinkedAuras { get; } Property Value Type Description IAuraListStateEvaluator"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.IExecuteScriptAction.SourceCode.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.IExecuteScriptAction.SourceCode.html",
    "title": "Property SourceCode | EyeAuras Docs",
    "keywords": "Property SourceCode SourceCode Declaration string SourceCode { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.IExecuteScriptAction.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.IExecuteScriptAction.html",
    "title": "Interface IExecuteScriptAction | EyeAuras Docs",
    "keywords": "Interface IExecuteScriptAction Inherited Members IAuraAction.Cancel() IAuraAction.Execute() IAuraAction.Execute(CancellationToken) IAuraAction.IsIgnored IAuraAction.IsBusy IAuraAction.Error IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.CsScriptAuras.Actions.ExecuteScript Assembly: EyeAuras.CsScriptAuras.dll Syntax [Obsolete(\"Replaced by CsharpScriptAction\")] public interface IExecuteScriptAction : IAuraAction, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description LinkedAuras SourceCode Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.ExecuteScript.html",
    "title": "Namespace EyeAuras.CsScriptAuras.Actions.ExecuteScript | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.CsScriptAuras.Actions.ExecuteScript Classes ExecuteScriptActionProperties Interfaces IExecuteScriptAction"
  },
  "api/EyeAuras.CsScriptAuras.Actions.html": {
    "href": "api/EyeAuras.CsScriptAuras.Actions.html",
    "title": "Namespace EyeAuras.CsScriptAuras.Actions | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.CsScriptAuras.Actions Namespaces EyeAuras.CsScriptAuras.Actions.CsharpScript EyeAuras.CsScriptAuras.Actions.ExecuteScript"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerExecutor.-ctor.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerExecutor.-ctor.html",
    "title": "Constructor CsharpScriptTriggerExecutor | EyeAuras Docs",
    "keywords": "Constructor CsharpScriptTriggerExecutor CsharpScriptTriggerExecutor() Declaration protected CsharpScriptTriggerExecutor()"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerExecutor.AuraTree.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerExecutor.AuraTree.html",
    "title": "Property AuraTree | EyeAuras Docs",
    "keywords": "Property AuraTree AuraTree Declaration public IAuraTreeScriptingApi AuraTree { get; init; } Property Value Type Description IAuraTreeScriptingApi Implements ICsharpScriptTriggerExecutor.AuraTree"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerExecutor.Context.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerExecutor.Context.html",
    "title": "Property Context | EyeAuras Docs",
    "keywords": "Property Context Context Declaration public IEyeContext Context { get; init; } Property Value Type Description IEyeContext Implements ICsharpScriptTriggerExecutor.Context"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerExecutor.Execute.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerExecutor.Execute.html",
    "title": "Method Execute | EyeAuras Docs",
    "keywords": "Method Execute Execute(CancellationToken) Declaration public abstract Task<bool?> Execute(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task<bool?> Implements ICsharpScriptTriggerExecutor.Execute(CancellationToken)"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerExecutor.PrepareLogger.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerExecutor.PrepareLogger.html",
    "title": "Method PrepareLogger | EyeAuras Docs",
    "keywords": "Method PrepareLogger PrepareLogger() Declaration protected override IFluentLog PrepareLogger() Returns Type Description IFluentLog Overrides PoeShared.Scaffolding.DisposableReactiveObjectWithLogger.PrepareLogger()"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerExecutor.Variables.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerExecutor.Variables.html",
    "title": "Property Variables | EyeAuras Docs",
    "keywords": "Property Variables Variables Declaration public IVariablesScriptingApi Variables { get; init; } Property Value Type Description IVariablesScriptingApi Implements ICsharpScriptTriggerExecutor.Variables"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerExecutor.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerExecutor.html",
    "title": "Class CsharpScriptTriggerExecutor | EyeAuras Docs",
    "keywords": "Class CsharpScriptTriggerExecutor Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger CsharpScriptTriggerExecutor Implements ICsharpScriptTriggerExecutor IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.CsScriptAuras.Triggers.CsharpScript Assembly: EyeAuras.CsScriptAuras.dll Syntax public abstract class CsharpScriptTriggerExecutor : DisposableReactiveObjectWithLogger, ICsharpScriptTriggerExecutor, IDisposable, INotifyPropertyChanged Constructors Name Description CsharpScriptTriggerExecutor() Properties Name Description AuraTree Context Variables Methods Name Description Execute(CancellationToken) PrepareLogger() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override CsharpScriptTriggerProperties <Clone>$() Returns Type Description CsharpScriptTriggerProperties Overrides AuraTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.-ctor.html",
    "title": "Constructor CsharpScriptTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor CsharpScriptTriggerProperties CsharpScriptTriggerProperties() Declaration public CsharpScriptTriggerProperties()"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(object?) Equals(AuraTriggerPropertiesBase?) Declaration public override sealed bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase?) Equals(CsharpScriptTriggerProperties?) Declaration public bool Equals(CsharpScriptTriggerProperties? other) Parameters Type Name Description CsharpScriptTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.EvaluationPeriod.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.EvaluationPeriod.html",
    "title": "Property EvaluationPeriod | EyeAuras Docs",
    "keywords": "Property EvaluationPeriod EvaluationPeriod Declaration public TimeSpan EvaluationPeriod { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.LinkedAuraIds.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.LinkedAuraIds.html",
    "title": "Property LinkedAuraIds | EyeAuras Docs",
    "keywords": "Property LinkedAuraIds LinkedAuraIds Declaration public IReadOnlyList<string> LinkedAuraIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedAuraIds"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.LinkedFolderIds.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.LinkedFolderIds.html",
    "title": "Property LinkedFolderIds | EyeAuras Docs",
    "keywords": "Property LinkedFolderIds LinkedFolderIds Declaration public IReadOnlyList<string> LinkedFolderIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedFolderIds"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.ProjectProperties.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.ProjectProperties.html",
    "title": "Property ProjectProperties | EyeAuras Docs",
    "keywords": "Property ProjectProperties ProjectProperties Declaration public EyeProjectProperties ProjectProperties { get; set; } Property Value Type Description EyeProjectProperties"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.ReplaceId.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.ReplaceId.html",
    "title": "Method ReplaceId | EyeAuras Docs",
    "keywords": "Method ReplaceId ReplaceId(string, string) Declaration public void ReplaceId(string previousId, string newId) Parameters Type Name Description string previousId string newId Implements IHasLinkedAuraIds.ReplaceId(string, string)"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.ScriptReferences.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.ScriptReferences.html",
    "title": "Property ScriptReferences | EyeAuras Docs",
    "keywords": "Property ScriptReferences ScriptReferences Declaration public AuraEvaluatorProperties ScriptReferences { get; set; } Property Value Type Description AuraEvaluatorProperties"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.Version.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.html",
    "title": "Class CsharpScriptTriggerProperties | EyeAuras Docs",
    "keywords": "Class CsharpScriptTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase CsharpScriptTriggerProperties Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> IHasLinkedAuraIds IEquatable<CsharpScriptTriggerProperties> Inherited Members AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.CsScriptAuras.Triggers.CsharpScript Assembly: EyeAuras.CsScriptAuras.Metadata.dll Syntax public sealed record CsharpScriptTriggerProperties : AuraTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase>, IHasLinkedAuraIds, IEquatable<CsharpScriptTriggerProperties> Constructors Name Description CsharpScriptTriggerProperties() Properties Name Description EqualityContract EvaluationPeriod LinkedAuraIds LinkedFolderIds ProjectProperties ScriptReferences Version Methods Name Description Equals(CsharpScriptTriggerProperties?) Equals(AuraTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ReplaceId(string, string) ToString() <Clone>$() Operators Name Description operator ==(CsharpScriptTriggerProperties?, CsharpScriptTriggerProperties?) operator !=(CsharpScriptTriggerProperties?, CsharpScriptTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(CsharpScriptTriggerProperties?, CsharpScriptTriggerProperties?) Declaration public static bool operator ==(CsharpScriptTriggerProperties? left, CsharpScriptTriggerProperties? right) Parameters Type Name Description CsharpScriptTriggerProperties left CsharpScriptTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.CsharpScriptTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(CsharpScriptTriggerProperties?, CsharpScriptTriggerProperties?) Declaration public static bool operator !=(CsharpScriptTriggerProperties? left, CsharpScriptTriggerProperties? right) Parameters Type Name Description CsharpScriptTriggerProperties left CsharpScriptTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTrigger.EvaluationPeriod.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTrigger.EvaluationPeriod.html",
    "title": "Property EvaluationPeriod | EyeAuras Docs",
    "keywords": "Property EvaluationPeriod EvaluationPeriod Declaration TimeSpan EvaluationPeriod { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTrigger.Execute.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTrigger.Execute.html",
    "title": "Method Execute | EyeAuras Docs",
    "keywords": "Method Execute Execute() Declaration Task Execute() Returns Type Description Task"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTrigger.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTrigger.html",
    "title": "Interface ICsharpScriptTrigger | EyeAuras Docs",
    "keywords": "Interface ICsharpScriptTrigger Inherited Members IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description IHasReplProject.Project IHasReplProject.Compiler IHasLinkedAuras.LinkedAuras Namespace: EyeAuras.CsScriptAuras.Triggers.CsharpScript Assembly: EyeAuras.CsScriptAuras.dll Syntax public interface ICsharpScriptTrigger : IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasName, IHasDescription, IHasReplProject, IHasContext, IHasLinkedAuras Properties Name Description EvaluationPeriod Methods Name Description Execute() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTriggerExecutor.AuraTree.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTriggerExecutor.AuraTree.html",
    "title": "Property AuraTree | EyeAuras Docs",
    "keywords": "Property AuraTree AuraTree Declaration IAuraTreeScriptingApi AuraTree { get; init; } Property Value Type Description IAuraTreeScriptingApi"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTriggerExecutor.Context.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTriggerExecutor.Context.html",
    "title": "Property Context | EyeAuras Docs",
    "keywords": "Property Context Context Declaration IEyeContext Context { get; init; } Property Value Type Description IEyeContext"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTriggerExecutor.Execute.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTriggerExecutor.Execute.html",
    "title": "Method Execute | EyeAuras Docs",
    "keywords": "Method Execute Execute(CancellationToken) Declaration Task<bool?> Execute(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task<bool?>"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTriggerExecutor.Log.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTriggerExecutor.Log.html",
    "title": "Property Log | EyeAuras Docs",
    "keywords": "Property Log Log Declaration IFluentLog Log { get; } Property Value Type Description IFluentLog"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTriggerExecutor.Variables.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTriggerExecutor.Variables.html",
    "title": "Property Variables | EyeAuras Docs",
    "keywords": "Property Variables Variables Declaration IVariablesScriptingApi Variables { get; init; } Property Value Type Description IVariablesScriptingApi"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTriggerExecutor.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.ICsharpScriptTriggerExecutor.html",
    "title": "Interface ICsharpScriptTriggerExecutor | EyeAuras Docs",
    "keywords": "Interface ICsharpScriptTriggerExecutor Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.CsScriptAuras.Triggers.CsharpScript Assembly: EyeAuras.CsScriptAuras.dll Syntax public interface ICsharpScriptTriggerExecutor : IDisposable, INotifyPropertyChanged Properties Name Description AuraTree Context Log Variables Methods Name Description Execute(CancellationToken) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.CsharpScript.html",
    "title": "Namespace EyeAuras.CsScriptAuras.Triggers.CsharpScript | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.CsScriptAuras.Triggers.CsharpScript Classes CsharpScriptTriggerExecutor CsharpScriptTriggerProperties Interfaces ICsharpScriptTrigger ICsharpScriptTriggerExecutor"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override ExecuteScriptTriggerProperties <Clone>$() Returns Type Description ExecuteScriptTriggerProperties Overrides AuraTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.-ctor.html",
    "title": "Constructor ExecuteScriptTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor ExecuteScriptTriggerProperties ExecuteScriptTriggerProperties() Declaration public ExecuteScriptTriggerProperties()"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(object?) Equals(AuraTriggerPropertiesBase?) Declaration public override sealed bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase?) Equals(ExecuteScriptTriggerProperties?) Declaration public bool Equals(ExecuteScriptTriggerProperties? other) Parameters Type Name Description ExecuteScriptTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.EvaluationPeriod.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.EvaluationPeriod.html",
    "title": "Property EvaluationPeriod | EyeAuras Docs",
    "keywords": "Property EvaluationPeriod EvaluationPeriod Declaration public TimeSpan EvaluationPeriod { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.LinkedAuraIds.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.LinkedAuraIds.html",
    "title": "Property LinkedAuraIds | EyeAuras Docs",
    "keywords": "Property LinkedAuraIds LinkedAuraIds Declaration public IReadOnlyList<string> LinkedAuraIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedAuraIds"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.LinkedFolderIds.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.LinkedFolderIds.html",
    "title": "Property LinkedFolderIds | EyeAuras Docs",
    "keywords": "Property LinkedFolderIds LinkedFolderIds Declaration public IReadOnlyList<string> LinkedFolderIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedFolderIds"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.ReplaceId.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.ReplaceId.html",
    "title": "Method ReplaceId | EyeAuras Docs",
    "keywords": "Method ReplaceId ReplaceId(string, string) Declaration public void ReplaceId(string previousId, string newId) Parameters Type Name Description string previousId string newId Implements IHasLinkedAuraIds.ReplaceId(string, string)"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.ScriptReferences.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.ScriptReferences.html",
    "title": "Property ScriptReferences | EyeAuras Docs",
    "keywords": "Property ScriptReferences ScriptReferences Declaration public AuraEvaluatorProperties ScriptReferences { get; set; } Property Value Type Description AuraEvaluatorProperties"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.ShowScriptLog.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.ShowScriptLog.html",
    "title": "Property ShowScriptLog | EyeAuras Docs",
    "keywords": "Property ShowScriptLog ShowScriptLog Declaration public bool ShowScriptLog { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.SourceCode.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.SourceCode.html",
    "title": "Property SourceCode | EyeAuras Docs",
    "keywords": "Property SourceCode SourceCode Declaration public string SourceCode { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.Version.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version Implements IHasVersion.Version"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.html",
    "title": "Class ExecuteScriptTriggerProperties | EyeAuras Docs",
    "keywords": "Class ExecuteScriptTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase ExecuteScriptTriggerProperties Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IEquatable<AuraTriggerPropertiesBase> IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IHasLinkedAuraIds IEquatable<ExecuteScriptTriggerProperties> Inherited Members AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.CsScriptAuras.Triggers.ExecuteScript Assembly: EyeAuras.CsScriptAuras.Metadata.dll Syntax public sealed record ExecuteScriptTriggerProperties : AuraTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IEquatable<AuraTriggerPropertiesBase>, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IHasLinkedAuraIds, IEquatable<ExecuteScriptTriggerProperties> Constructors Name Description ExecuteScriptTriggerProperties() Properties Name Description EqualityContract EvaluationPeriod LinkedAuraIds LinkedFolderIds ScriptReferences ShowScriptLog SourceCode Version Methods Name Description Equals(ExecuteScriptTriggerProperties?) Equals(AuraTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ReplaceId(string, string) ToString() <Clone>$() Operators Name Description operator ==(ExecuteScriptTriggerProperties?, ExecuteScriptTriggerProperties?) operator !=(ExecuteScriptTriggerProperties?, ExecuteScriptTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ExecuteScriptTriggerProperties?, ExecuteScriptTriggerProperties?) Declaration public static bool operator ==(ExecuteScriptTriggerProperties? left, ExecuteScriptTriggerProperties? right) Parameters Type Name Description ExecuteScriptTriggerProperties left ExecuteScriptTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.ExecuteScriptTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ExecuteScriptTriggerProperties?, ExecuteScriptTriggerProperties?) Declaration public static bool operator !=(ExecuteScriptTriggerProperties? left, ExecuteScriptTriggerProperties? right) Parameters Type Name Description ExecuteScriptTriggerProperties left ExecuteScriptTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.IExecuteScriptTrigger.EvaluationPeriod.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.IExecuteScriptTrigger.EvaluationPeriod.html",
    "title": "Property EvaluationPeriod | EyeAuras Docs",
    "keywords": "Property EvaluationPeriod EvaluationPeriod Declaration TimeSpan EvaluationPeriod { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.IExecuteScriptTrigger.LinkedAuras.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.IExecuteScriptTrigger.LinkedAuras.html",
    "title": "Property LinkedAuras | EyeAuras Docs",
    "keywords": "Property LinkedAuras LinkedAuras Declaration IAuraListStateEvaluator LinkedAuras { get; } Property Value Type Description IAuraListStateEvaluator"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.IExecuteScriptTrigger.ShowScriptLog.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.IExecuteScriptTrigger.ShowScriptLog.html",
    "title": "Property ShowScriptLog | EyeAuras Docs",
    "keywords": "Property ShowScriptLog ShowScriptLog Declaration bool ShowScriptLog { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.IExecuteScriptTrigger.SourceCode.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.IExecuteScriptTrigger.SourceCode.html",
    "title": "Property SourceCode | EyeAuras Docs",
    "keywords": "Property SourceCode SourceCode Declaration string SourceCode { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.IExecuteScriptTrigger.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.IExecuteScriptTrigger.html",
    "title": "Interface IExecuteScriptTrigger | EyeAuras Docs",
    "keywords": "Interface IExecuteScriptTrigger Inherited Members IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.CsScriptAuras.Triggers.ExecuteScript Assembly: EyeAuras.CsScriptAuras.dll Syntax [Obsolete(\"Replaced by CsharpScriptTrigger\")] public interface IExecuteScriptTrigger : IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description EvaluationPeriod LinkedAuras ShowScriptLog SourceCode Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.ExecuteScript.html",
    "title": "Namespace EyeAuras.CsScriptAuras.Triggers.ExecuteScript | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.CsScriptAuras.Triggers.ExecuteScript Classes ExecuteScriptTriggerProperties Interfaces IExecuteScriptTrigger"
  },
  "api/EyeAuras.CsScriptAuras.Triggers.html": {
    "href": "api/EyeAuras.CsScriptAuras.Triggers.html",
    "title": "Namespace EyeAuras.CsScriptAuras.Triggers | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.CsScriptAuras.Triggers Namespaces EyeAuras.CsScriptAuras.Triggers.CsharpScript EyeAuras.CsScriptAuras.Triggers.ExecuteScript"
  },
  "api/EyeAuras.CsScriptAuras.html": {
    "href": "api/EyeAuras.CsScriptAuras.html",
    "title": "Namespace EyeAuras.CsScriptAuras | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.CsScriptAuras Namespaces EyeAuras.CsScriptAuras.Actions EyeAuras.CsScriptAuras.Triggers"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override DelayActionProperties <Clone>$() Returns Type Description DelayActionProperties Overrides AuraActionPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.-ctor.html",
    "title": "Constructor DelayActionProperties | EyeAuras Docs",
    "keywords": "Constructor DelayActionProperties DelayActionProperties() Declaration public DelayActionProperties()"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.Delay.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.Delay.html",
    "title": "Property Delay | EyeAuras Docs",
    "keywords": "Property Delay Delay Declaration public TimeSpan Delay { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraActionPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(object?) Equals(AuraActionPropertiesBase?) Declaration public override sealed bool Equals(AuraActionPropertiesBase? other) Parameters Type Name Description AuraActionPropertiesBase other Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(AuraActionPropertiesBase?) Equals(DelayActionProperties?) Declaration public bool Equals(DelayActionProperties? other) Parameters Type Name Description DelayActionProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraActionPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.MaxDelay.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.MaxDelay.html",
    "title": "Property MaxDelay | EyeAuras Docs",
    "keywords": "Property MaxDelay MaxDelay Declaration public TimeSpan MaxDelay { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraActionPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.RandomizeDelay.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.RandomizeDelay.html",
    "title": "Property RandomizeDelay | EyeAuras Docs",
    "keywords": "Property RandomizeDelay RandomizeDelay Declaration public bool RandomizeDelay { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraActionPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.html",
    "title": "Class DelayActionProperties | EyeAuras Docs",
    "keywords": "Class DelayActionProperties Inheritance object AuraPropertiesBase AuraActionPropertiesBase DelayActionProperties Implements IEquatable<AuraPropertiesBase> IAuraActionProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraActionPropertiesBase> IEquatable<DelayActionProperties> Inherited Members AuraActionPropertiesBase.Equals(AuraPropertiesBase) AuraActionPropertiesBase.IsIgnored AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Actions.Delay Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public sealed record DelayActionProperties : AuraActionPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraActionProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraActionPropertiesBase>, IEquatable<DelayActionProperties> Constructors Name Description DelayActionProperties() Properties Name Description Delay EqualityContract MaxDelay RandomizeDelay Version Methods Name Description Equals(DelayActionProperties?) Equals(AuraActionPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(DelayActionProperties?, DelayActionProperties?) operator !=(DelayActionProperties?, DelayActionProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(DelayActionProperties?, DelayActionProperties?) Declaration public static bool operator ==(DelayActionProperties? left, DelayActionProperties? right) Parameters Type Name Description DelayActionProperties left DelayActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.DelayActionProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(DelayActionProperties?, DelayActionProperties?) Declaration public static bool operator !=(DelayActionProperties? left, DelayActionProperties? right) Parameters Type Name Description DelayActionProperties left DelayActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.IDelayAction.DelaySelector.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.IDelayAction.DelaySelector.html",
    "title": "Property DelaySelector | EyeAuras Docs",
    "keywords": "Property DelaySelector DelaySelector Declaration IRandomPeriodSelector DelaySelector { get; } Property Value Type Description IRandomPeriodSelector"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.IDelayAction.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.IDelayAction.html",
    "title": "Interface IDelayAction | EyeAuras Docs",
    "keywords": "Interface IDelayAction Inherited Members IAuraAction.Cancel() IAuraAction.Execute() IAuraAction.Execute(CancellationToken) IAuraAction.IsIgnored IAuraAction.IsBusy IAuraAction.Error IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.DefaultAuras.Actions.Delay Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IDelayAction : IAuraAction, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description DelaySelector Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.Delay.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.Delay.html",
    "title": "Namespace EyeAuras.DefaultAuras.Actions.Delay | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Actions.Delay Classes DelayActionProperties Interfaces IDelayAction"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override ExecuteAuraActionProperties <Clone>$() Returns Type Description ExecuteAuraActionProperties Overrides AuraActionPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.-ctor.html",
    "title": "Constructor ExecuteAuraActionProperties | EyeAuras Docs",
    "keywords": "Constructor ExecuteAuraActionProperties ExecuteAuraActionProperties() Declaration public ExecuteAuraActionProperties()"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraActionPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(object?) Equals(AuraActionPropertiesBase?) Declaration public override sealed bool Equals(AuraActionPropertiesBase? other) Parameters Type Name Description AuraActionPropertiesBase other Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(AuraActionPropertiesBase?) Equals(ExecuteAuraActionProperties?) Declaration public bool Equals(ExecuteAuraActionProperties? other) Parameters Type Name Description ExecuteAuraActionProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.EvaluatorProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.EvaluatorProperties.html",
    "title": "Property EvaluatorProperties | EyeAuras Docs",
    "keywords": "Property EvaluatorProperties EvaluatorProperties Declaration public AuraEvaluatorProperties EvaluatorProperties { get; set; } Property Value Type Description AuraEvaluatorProperties"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraActionPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.LinkedAuraIds.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.LinkedAuraIds.html",
    "title": "Property LinkedAuraIds | EyeAuras Docs",
    "keywords": "Property LinkedAuraIds LinkedAuraIds Declaration public IReadOnlyList<string> LinkedAuraIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedAuraIds"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.LinkedFolderIds.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.LinkedFolderIds.html",
    "title": "Property LinkedFolderIds | EyeAuras Docs",
    "keywords": "Property LinkedFolderIds LinkedFolderIds Declaration public IReadOnlyList<string> LinkedFolderIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedFolderIds"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraActionPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.ReplaceId.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.ReplaceId.html",
    "title": "Method ReplaceId | EyeAuras Docs",
    "keywords": "Method ReplaceId ReplaceId(string, string) Declaration public void ReplaceId(string previousId, string newId) Parameters Type Name Description string previousId string newId Implements IHasLinkedAuraIds.ReplaceId(string, string)"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.Times.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.Times.html",
    "title": "Property Times | EyeAuras Docs",
    "keywords": "Property Times Times Declaration public int Times { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraActionPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.html",
    "title": "Class ExecuteAuraActionProperties | EyeAuras Docs",
    "keywords": "Class ExecuteAuraActionProperties Inheritance object AuraPropertiesBase AuraActionPropertiesBase ExecuteAuraActionProperties Implements IEquatable<AuraPropertiesBase> IAuraActionProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraActionPropertiesBase> IHasLinkedAuraIds IEquatable<ExecuteAuraActionProperties> Inherited Members AuraActionPropertiesBase.Equals(AuraPropertiesBase) AuraActionPropertiesBase.IsIgnored AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Actions.ExecuteAura Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public sealed record ExecuteAuraActionProperties : AuraActionPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraActionProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraActionPropertiesBase>, IHasLinkedAuraIds, IEquatable<ExecuteAuraActionProperties> Constructors Name Description ExecuteAuraActionProperties() Properties Name Description EqualityContract EvaluatorProperties LinkedAuraIds LinkedFolderIds Times Version Methods Name Description Equals(ExecuteAuraActionProperties?) Equals(AuraActionPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ReplaceId(string, string) ToString() <Clone>$() Operators Name Description operator ==(ExecuteAuraActionProperties?, ExecuteAuraActionProperties?) operator !=(ExecuteAuraActionProperties?, ExecuteAuraActionProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ExecuteAuraActionProperties?, ExecuteAuraActionProperties?) Declaration public static bool operator ==(ExecuteAuraActionProperties? left, ExecuteAuraActionProperties? right) Parameters Type Name Description ExecuteAuraActionProperties left ExecuteAuraActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.ExecuteAuraActionProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ExecuteAuraActionProperties?, ExecuteAuraActionProperties?) Declaration public static bool operator !=(ExecuteAuraActionProperties? left, ExecuteAuraActionProperties? right) Parameters Type Name Description ExecuteAuraActionProperties left ExecuteAuraActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.IExecuteAuraAction.LinkedAuras.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.IExecuteAuraAction.LinkedAuras.html",
    "title": "Property LinkedAuras | EyeAuras Docs",
    "keywords": "Property LinkedAuras LinkedAuras Declaration IAuraListStateEvaluator LinkedAuras { get; } Property Value Type Description IAuraListStateEvaluator"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.IExecuteAuraAction.Times.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.IExecuteAuraAction.Times.html",
    "title": "Property Times | EyeAuras Docs",
    "keywords": "Property Times Times Declaration int Times { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.IExecuteAuraAction.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.IExecuteAuraAction.html",
    "title": "Interface IExecuteAuraAction | EyeAuras Docs",
    "keywords": "Interface IExecuteAuraAction Inherited Members IAuraAction.Cancel() IAuraAction.Execute() IAuraAction.Execute(CancellationToken) IAuraAction.IsIgnored IAuraAction.IsBusy IAuraAction.Error IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.DefaultAuras.Actions.ExecuteAura Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IExecuteAuraAction : IAuraAction, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description LinkedAuras Times Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.ExecuteAura.html",
    "title": "Namespace EyeAuras.DefaultAuras.Actions.ExecuteAura | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Actions.ExecuteAura Classes ExecuteAuraActionProperties Interfaces IExecuteAuraAction"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.ILoadAuraAction.ActionType.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.ILoadAuraAction.ActionType.html",
    "title": "Property ActionType | EyeAuras Docs",
    "keywords": "Property ActionType ActionType Declaration LoadAuraActionType ActionType { get; set; } Property Value Type Description LoadAuraActionType"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.ILoadAuraAction.LinkedAuras.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.ILoadAuraAction.LinkedAuras.html",
    "title": "Property LinkedAuras | EyeAuras Docs",
    "keywords": "Property LinkedAuras LinkedAuras Declaration IAuraListStateEvaluator LinkedAuras { get; } Property Value Type Description IAuraListStateEvaluator"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.ILoadAuraAction.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.ILoadAuraAction.html",
    "title": "Interface ILoadAuraAction | EyeAuras Docs",
    "keywords": "Interface ILoadAuraAction Inherited Members IAuraAction.Cancel() IAuraAction.Execute() IAuraAction.Execute(CancellationToken) IAuraAction.IsIgnored IAuraAction.IsBusy IAuraAction.Error IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.DefaultAuras.Actions.LoadAura Assembly: EyeAuras.DefaultAuras.dll Syntax public interface ILoadAuraAction : IAuraAction, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description ActionType LinkedAuras Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override LoadAuraActionProperties <Clone>$() Returns Type Description LoadAuraActionProperties Overrides AuraActionPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.-ctor.html",
    "title": "Constructor LoadAuraActionProperties | EyeAuras Docs",
    "keywords": "Constructor LoadAuraActionProperties LoadAuraActionProperties() Declaration public LoadAuraActionProperties()"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.ActionType.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.ActionType.html",
    "title": "Property ActionType | EyeAuras Docs",
    "keywords": "Property ActionType ActionType Declaration public LoadAuraActionType ActionType { get; set; } Property Value Type Description LoadAuraActionType"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraActionPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(object?) Equals(AuraActionPropertiesBase?) Declaration public override sealed bool Equals(AuraActionPropertiesBase? other) Parameters Type Name Description AuraActionPropertiesBase other Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(AuraActionPropertiesBase?) Equals(LoadAuraActionProperties?) Declaration public bool Equals(LoadAuraActionProperties? other) Parameters Type Name Description LoadAuraActionProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.EvaluatorProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.EvaluatorProperties.html",
    "title": "Property EvaluatorProperties | EyeAuras Docs",
    "keywords": "Property EvaluatorProperties EvaluatorProperties Declaration public AuraEvaluatorProperties EvaluatorProperties { get; set; } Property Value Type Description AuraEvaluatorProperties"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraActionPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.LinkedAuraIds.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.LinkedAuraIds.html",
    "title": "Property LinkedAuraIds | EyeAuras Docs",
    "keywords": "Property LinkedAuraIds LinkedAuraIds Declaration public IReadOnlyList<string> LinkedAuraIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedAuraIds"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.LinkedFolderIds.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.LinkedFolderIds.html",
    "title": "Property LinkedFolderIds | EyeAuras Docs",
    "keywords": "Property LinkedFolderIds LinkedFolderIds Declaration public IReadOnlyList<string> LinkedFolderIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedFolderIds"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraActionPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.ReplaceId.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.ReplaceId.html",
    "title": "Method ReplaceId | EyeAuras Docs",
    "keywords": "Method ReplaceId ReplaceId(string, string) Declaration public void ReplaceId(string previousId, string newId) Parameters Type Name Description string previousId string newId Implements IHasLinkedAuraIds.ReplaceId(string, string)"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraActionPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.html",
    "title": "Class LoadAuraActionProperties | EyeAuras Docs",
    "keywords": "Class LoadAuraActionProperties Inheritance object AuraPropertiesBase AuraActionPropertiesBase LoadAuraActionProperties Implements IEquatable<AuraPropertiesBase> IAuraActionProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraActionPropertiesBase> IHasLinkedAuraIds IEquatable<LoadAuraActionProperties> Inherited Members AuraActionPropertiesBase.Equals(AuraPropertiesBase) AuraActionPropertiesBase.IsIgnored AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Actions.LoadAura Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public sealed record LoadAuraActionProperties : AuraActionPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraActionProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraActionPropertiesBase>, IHasLinkedAuraIds, IEquatable<LoadAuraActionProperties> Constructors Name Description LoadAuraActionProperties() Properties Name Description ActionType EqualityContract EvaluatorProperties LinkedAuraIds LinkedFolderIds Version Methods Name Description Equals(LoadAuraActionProperties?) Equals(AuraActionPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ReplaceId(string, string) ToString() <Clone>$() Operators Name Description operator ==(LoadAuraActionProperties?, LoadAuraActionProperties?) operator !=(LoadAuraActionProperties?, LoadAuraActionProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(LoadAuraActionProperties?, LoadAuraActionProperties?) Declaration public static bool operator ==(LoadAuraActionProperties? left, LoadAuraActionProperties? right) Parameters Type Name Description LoadAuraActionProperties left LoadAuraActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(LoadAuraActionProperties?, LoadAuraActionProperties?) Declaration public static bool operator !=(LoadAuraActionProperties? left, LoadAuraActionProperties? right) Parameters Type Name Description LoadAuraActionProperties left LoadAuraActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionType.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.LoadAuraActionType.html",
    "title": "Enum LoadAuraActionType | EyeAuras Docs",
    "keywords": "Enum LoadAuraActionType Namespace: EyeAuras.DefaultAuras.Actions.LoadAura Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public enum LoadAuraActionType Fields Name Description Load Toggle Unload Extension Methods ObjectExtensions.AddTo<LoadAuraActionType, TCollection>(LoadAuraActionType, ISourceList<TCollection>) ObjectExtensions.AddTo<LoadAuraActionType, TCollection>(LoadAuraActionType, ICollection<TCollection>) ObjectExtensions.CloneJson<LoadAuraActionType>(LoadAuraActionType) ObjectExtensions.CopyPropertiesTo<LoadAuraActionType, TTarget>(LoadAuraActionType, TTarget) ObjectExtensions.DumpToTextRaw<LoadAuraActionType>(LoadAuraActionType) ObjectExtensions.DumpToText<LoadAuraActionType>(LoadAuraActionType) ObjectExtensions.Dump<LoadAuraActionType>(LoadAuraActionType) ObjectExtensions.GetPropertyAccessor<LoadAuraActionType, TValue>(LoadAuraActionType, Expression<Func<LoadAuraActionType, TValue>>) ObjectExtensions.InsertTo<LoadAuraActionType, TCollection>(LoadAuraActionType, IList<TCollection>, int) ObjectExtensions.ToJson<LoadAuraActionType>(LoadAuraActionType) ObjectExtensions.ToStringSafe<LoadAuraActionType>(LoadAuraActionType) ObjectExtensions.TransferPropertiesTo<LoadAuraActionType, TTarget>(LoadAuraActionType, TTarget, params string[]) XDocumentExtensions.AddTo<LoadAuraActionType>(LoadAuraActionType, XContainer)"
  },
  "api/EyeAuras.DefaultAuras.Actions.LoadAura.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.LoadAura.html",
    "title": "Namespace EyeAuras.DefaultAuras.Actions.LoadAura | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Actions.LoadAura Classes LoadAuraActionProperties Interfaces ILoadAuraAction Enums LoadAuraActionType"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.IPlaySoundAction.Notification.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.IPlaySoundAction.Notification.html",
    "title": "Property Notification | EyeAuras Docs",
    "keywords": "Property Notification Notification Declaration string Notification { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.IPlaySoundAction.PlayInBackground.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.IPlaySoundAction.PlayInBackground.html",
    "title": "Property PlayInBackground | EyeAuras Docs",
    "keywords": "Property PlayInBackground PlayInBackground Declaration bool PlayInBackground { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.IPlaySoundAction.Volume.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.IPlaySoundAction.Volume.html",
    "title": "Property Volume | EyeAuras Docs",
    "keywords": "Property Volume Volume Declaration float Volume { get; set; } Property Value Type Description float"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.IPlaySoundAction.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.IPlaySoundAction.html",
    "title": "Interface IPlaySoundAction | EyeAuras Docs",
    "keywords": "Interface IPlaySoundAction Namespace: EyeAuras.DefaultAuras.Actions.PlaySound Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IPlaySoundAction Properties Name Description Notification PlayInBackground Volume Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override PlaySoundActionProperties <Clone>$() Returns Type Description PlaySoundActionProperties Overrides AuraActionPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.-ctor.html",
    "title": "Constructor PlaySoundActionProperties | EyeAuras Docs",
    "keywords": "Constructor PlaySoundActionProperties PlaySoundActionProperties() Declaration public PlaySoundActionProperties()"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraActionPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(object?) Equals(AuraActionPropertiesBase?) Declaration public override sealed bool Equals(AuraActionPropertiesBase? other) Parameters Type Name Description AuraActionPropertiesBase other Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(AuraActionPropertiesBase?) Equals(PlaySoundActionProperties?) Declaration public bool Equals(PlaySoundActionProperties? other) Parameters Type Name Description PlaySoundActionProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraActionPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.Notification.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.Notification.html",
    "title": "Property Notification | EyeAuras Docs",
    "keywords": "Property Notification Notification Declaration public string Notification { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.NotificationWav.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.NotificationWav.html",
    "title": "Property NotificationWav | EyeAuras Docs",
    "keywords": "Property NotificationWav NotificationWav Declaration public byte[] NotificationWav { get; set; } Property Value Type Description byte[]"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.PlayInBackground.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.PlayInBackground.html",
    "title": "Property PlayInBackground | EyeAuras Docs",
    "keywords": "Property PlayInBackground PlayInBackground Declaration public bool PlayInBackground { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraActionPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraActionPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.Volume.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.Volume.html",
    "title": "Property Volume | EyeAuras Docs",
    "keywords": "Property Volume Volume Declaration public float Volume { get; set; } Property Value Type Description float"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.html",
    "title": "Class PlaySoundActionProperties | EyeAuras Docs",
    "keywords": "Class PlaySoundActionProperties Inheritance object AuraPropertiesBase AuraActionPropertiesBase PlaySoundActionProperties Implements IEquatable<AuraPropertiesBase> IAuraActionProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraActionPropertiesBase> IEquatable<PlaySoundActionProperties> Inherited Members AuraActionPropertiesBase.Equals(AuraPropertiesBase) AuraActionPropertiesBase.IsIgnored AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Actions.PlaySound Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public sealed record PlaySoundActionProperties : AuraActionPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraActionProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraActionPropertiesBase>, IEquatable<PlaySoundActionProperties> Constructors Name Description PlaySoundActionProperties() Properties Name Description EqualityContract Notification NotificationWav PlayInBackground Version Volume Methods Name Description Equals(PlaySoundActionProperties?) Equals(AuraActionPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(PlaySoundActionProperties?, PlaySoundActionProperties?) operator !=(PlaySoundActionProperties?, PlaySoundActionProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(PlaySoundActionProperties?, PlaySoundActionProperties?) Declaration public static bool operator ==(PlaySoundActionProperties? left, PlaySoundActionProperties? right) Parameters Type Name Description PlaySoundActionProperties left PlaySoundActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.PlaySoundActionProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(PlaySoundActionProperties?, PlaySoundActionProperties?) Declaration public static bool operator !=(PlaySoundActionProperties? left, PlaySoundActionProperties? right) Parameters Type Name Description PlaySoundActionProperties left PlaySoundActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.PlaySound.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.PlaySound.html",
    "title": "Namespace EyeAuras.DefaultAuras.Actions.PlaySound | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Actions.PlaySound Classes PlaySoundActionProperties Interfaces IPlaySoundAction"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.IWaitForAuraAction.IsActive.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.IWaitForAuraAction.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Declaration bool IsActive { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.IWaitForAuraAction.LinkedAuras.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.IWaitForAuraAction.LinkedAuras.html",
    "title": "Property LinkedAuras | EyeAuras Docs",
    "keywords": "Property LinkedAuras LinkedAuras Declaration IAuraListStateEvaluator LinkedAuras { get; } Property Value Type Description IAuraListStateEvaluator"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.IWaitForAuraAction.Timeout.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.IWaitForAuraAction.Timeout.html",
    "title": "Property Timeout | EyeAuras Docs",
    "keywords": "Property Timeout Timeout Declaration TimeSpan Timeout { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.IWaitForAuraAction.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.IWaitForAuraAction.html",
    "title": "Interface IWaitForAuraAction | EyeAuras Docs",
    "keywords": "Interface IWaitForAuraAction Inherited Members IAuraAction.Cancel() IAuraAction.Execute() IAuraAction.Execute(CancellationToken) IAuraAction.IsIgnored IAuraAction.IsBusy IAuraAction.Error IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.DefaultAuras.Actions.WaitForAura Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IWaitForAuraAction : IAuraAction, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description IsActive LinkedAuras Timeout Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override WaitForAuraActionProperties <Clone>$() Returns Type Description WaitForAuraActionProperties Overrides AuraActionPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.-ctor.html",
    "title": "Constructor WaitForAuraActionProperties | EyeAuras Docs",
    "keywords": "Constructor WaitForAuraActionProperties WaitForAuraActionProperties() Declaration public WaitForAuraActionProperties()"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraActionPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(object?) Equals(AuraActionPropertiesBase?) Declaration public override sealed bool Equals(AuraActionPropertiesBase? other) Parameters Type Name Description AuraActionPropertiesBase other Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(AuraActionPropertiesBase?) Equals(WaitForAuraActionProperties?) Declaration public bool Equals(WaitForAuraActionProperties? other) Parameters Type Name Description WaitForAuraActionProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.EvaluatorProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.EvaluatorProperties.html",
    "title": "Property EvaluatorProperties | EyeAuras Docs",
    "keywords": "Property EvaluatorProperties EvaluatorProperties Declaration public AuraEvaluatorProperties EvaluatorProperties { get; set; } Property Value Type Description AuraEvaluatorProperties"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraActionPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.LinkedAuraIds.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.LinkedAuraIds.html",
    "title": "Property LinkedAuraIds | EyeAuras Docs",
    "keywords": "Property LinkedAuraIds LinkedAuraIds Declaration public IReadOnlyList<string> LinkedAuraIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedAuraIds"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.LinkedFolderIds.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.LinkedFolderIds.html",
    "title": "Property LinkedFolderIds | EyeAuras Docs",
    "keywords": "Property LinkedFolderIds LinkedFolderIds Declaration public IReadOnlyList<string> LinkedFolderIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedFolderIds"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraActionPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.ReplaceId.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.ReplaceId.html",
    "title": "Method ReplaceId | EyeAuras Docs",
    "keywords": "Method ReplaceId ReplaceId(string, string) Declaration public void ReplaceId(string previousId, string newId) Parameters Type Name Description string previousId string newId Implements IHasLinkedAuraIds.ReplaceId(string, string)"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.Timeout.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.Timeout.html",
    "title": "Property Timeout | EyeAuras Docs",
    "keywords": "Property Timeout Timeout Declaration public TimeSpan Timeout { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraActionPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.html",
    "title": "Class WaitForAuraActionProperties | EyeAuras Docs",
    "keywords": "Class WaitForAuraActionProperties Inheritance object AuraPropertiesBase AuraActionPropertiesBase WaitForAuraActionProperties Implements IEquatable<AuraPropertiesBase> IAuraActionProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraActionPropertiesBase> IHasLinkedAuraIds IEquatable<WaitForAuraActionProperties> Inherited Members AuraActionPropertiesBase.Equals(AuraPropertiesBase) AuraActionPropertiesBase.IsIgnored AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Actions.WaitForAura Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public sealed record WaitForAuraActionProperties : AuraActionPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraActionProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraActionPropertiesBase>, IHasLinkedAuraIds, IEquatable<WaitForAuraActionProperties> Constructors Name Description WaitForAuraActionProperties() Properties Name Description EqualityContract EvaluatorProperties LinkedAuraIds LinkedFolderIds Timeout Version Methods Name Description Equals(WaitForAuraActionProperties?) Equals(AuraActionPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ReplaceId(string, string) ToString() <Clone>$() Operators Name Description operator ==(WaitForAuraActionProperties?, WaitForAuraActionProperties?) operator !=(WaitForAuraActionProperties?, WaitForAuraActionProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(WaitForAuraActionProperties?, WaitForAuraActionProperties?) Declaration public static bool operator ==(WaitForAuraActionProperties? left, WaitForAuraActionProperties? right) Parameters Type Name Description WaitForAuraActionProperties left WaitForAuraActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.WaitForAuraActionProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(WaitForAuraActionProperties?, WaitForAuraActionProperties?) Declaration public static bool operator !=(WaitForAuraActionProperties? left, WaitForAuraActionProperties? right) Parameters Type Name Description WaitForAuraActionProperties left WaitForAuraActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.WaitForAura.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WaitForAura.html",
    "title": "Namespace EyeAuras.DefaultAuras.Actions.WaitForAura | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Actions.WaitForAura Classes WaitForAuraActionProperties Interfaces IWaitForAuraAction"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.IWinActivateAction.ActiveWindow.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.IWinActivateAction.ActiveWindow.html",
    "title": "Property ActiveWindow | EyeAuras Docs",
    "keywords": "Property ActiveWindow ActiveWindow Resolved window that matches TargetWindow expression Declaration IWindowHandle ActiveWindow { get; } Property Value Type Description IWindowHandle"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.IWinActivateAction.TargetWindow.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.IWinActivateAction.TargetWindow.html",
    "title": "Property TargetWindow | EyeAuras Docs",
    "keywords": "Property TargetWindow TargetWindow Specifies expression that will be used to find specific window Declaration WindowMatchExpression TargetWindow { get; set; } Property Value Type Description WindowMatchExpression"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.IWinActivateAction.Timeout.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.IWinActivateAction.Timeout.html",
    "title": "Property Timeout | EyeAuras Docs",
    "keywords": "Property Timeout Timeout Declaration TimeSpan Timeout { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.IWinActivateAction.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.IWinActivateAction.html",
    "title": "Interface IWinActivateAction | EyeAuras Docs",
    "keywords": "Interface IWinActivateAction Inherited Members IAuraAction.Cancel() IAuraAction.Execute() IAuraAction.Execute(CancellationToken) IAuraAction.IsIgnored IAuraAction.IsBusy IAuraAction.Error IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.DefaultAuras.Actions.WinActivate Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IWinActivateAction : IAuraAction, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description ActiveWindow Resolved window that matches TargetWindow expression TargetWindow Specifies expression that will be used to find specific window Timeout Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override WinActivateActionProperties <Clone>$() Returns Type Description WinActivateActionProperties Overrides AuraActionPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.-ctor.html",
    "title": "Constructor WinActivateActionProperties | EyeAuras Docs",
    "keywords": "Constructor WinActivateActionProperties WinActivateActionProperties() Declaration public WinActivateActionProperties()"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraActionPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(object?) Equals(AuraActionPropertiesBase?) Declaration public override sealed bool Equals(AuraActionPropertiesBase? other) Parameters Type Name Description AuraActionPropertiesBase other Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(AuraActionPropertiesBase?) Equals(WinActivateActionProperties?) Declaration public bool Equals(WinActivateActionProperties? other) Parameters Type Name Description WinActivateActionProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraActionPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraActionPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.Timeout.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.Timeout.html",
    "title": "Property Timeout | EyeAuras Docs",
    "keywords": "Property Timeout Timeout Declaration public TimeSpan Timeout { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraActionPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.WindowMatchParams.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.WindowMatchParams.html",
    "title": "Property WindowMatchParams | EyeAuras Docs",
    "keywords": "Property WindowMatchParams WindowMatchParams Declaration public WindowMatchExpression WindowMatchParams { get; set; } Property Value Type Description WindowMatchExpression"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.html",
    "title": "Class WinActivateActionProperties | EyeAuras Docs",
    "keywords": "Class WinActivateActionProperties Inheritance object AuraPropertiesBase AuraActionPropertiesBase WinActivateActionProperties Implements IEquatable<AuraPropertiesBase> IAuraActionProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraActionPropertiesBase> IEquatable<WinActivateActionProperties> Inherited Members AuraActionPropertiesBase.Equals(AuraPropertiesBase) AuraActionPropertiesBase.IsIgnored AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Actions.WinActivate Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public sealed record WinActivateActionProperties : AuraActionPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraActionProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraActionPropertiesBase>, IEquatable<WinActivateActionProperties> Constructors Name Description WinActivateActionProperties() Properties Name Description EqualityContract Timeout Version WindowMatchParams Methods Name Description Equals(WinActivateActionProperties?) Equals(AuraActionPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(WinActivateActionProperties?, WinActivateActionProperties?) operator !=(WinActivateActionProperties?, WinActivateActionProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(WinActivateActionProperties?, WinActivateActionProperties?) Declaration public static bool operator ==(WinActivateActionProperties? left, WinActivateActionProperties? right) Parameters Type Name Description WinActivateActionProperties left WinActivateActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.WinActivateActionProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(WinActivateActionProperties?, WinActivateActionProperties?) Declaration public static bool operator !=(WinActivateActionProperties? left, WinActivateActionProperties? right) Parameters Type Name Description WinActivateActionProperties left WinActivateActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Actions.WinActivate.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.WinActivate.html",
    "title": "Namespace EyeAuras.DefaultAuras.Actions.WinActivate | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Actions.WinActivate Classes WinActivateActionProperties Interfaces IWinActivateAction"
  },
  "api/EyeAuras.DefaultAuras.Actions.html": {
    "href": "api/EyeAuras.DefaultAuras.Actions.html",
    "title": "Namespace EyeAuras.DefaultAuras.Actions | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Actions Namespaces EyeAuras.DefaultAuras.Actions.Delay EyeAuras.DefaultAuras.Actions.ExecuteAura EyeAuras.DefaultAuras.Actions.LoadAura EyeAuras.DefaultAuras.Actions.PlaySound EyeAuras.DefaultAuras.Actions.WaitForAura EyeAuras.DefaultAuras.Actions.WinActivate"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.Add.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.Add.html",
    "title": "Method Add | EyeAuras Docs",
    "keywords": "Method Add Add(IAura) Declaration void Add(IAura aura) Parameters Type Name Description IAura aura"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.Items.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.Items.html",
    "title": "Property Items | EyeAuras Docs",
    "keywords": "Property Items Items Declaration IEnumerable<IAura> Items { get; } Property Value Type Description IEnumerable<IAura>"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.LinkedAuras.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.LinkedAuras.html",
    "title": "Property LinkedAuras | EyeAuras Docs",
    "keywords": "Property LinkedAuras LinkedAuras Declaration ISourceCache<IAura, string> LinkedAuras { get; } Property Value Type Description ISourceCache<IAura, string>"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.Remove.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.Remove.html",
    "title": "Method Remove | EyeAuras Docs",
    "keywords": "Method Remove Remove(IAura) Declaration void Remove(IAura aura) Parameters Type Name Description IAura aura"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.ShowBackground.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.ShowBackground.html",
    "title": "Property ShowBackground | EyeAuras Docs",
    "keywords": "Property ShowBackground ShowBackground Declaration bool ShowBackground { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.ShowDependencies.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.ShowDependencies.html",
    "title": "Property ShowDependencies | EyeAuras Docs",
    "keywords": "Property ShowDependencies ShowDependencies Declaration bool ShowDependencies { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.ShowEdges.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.ShowEdges.html",
    "title": "Property ShowEdges | EyeAuras Docs",
    "keywords": "Property ShowEdges ShowEdges Declaration bool ShowEdges { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.IAuraDependenciesGraph.html",
    "title": "Interface IAuraDependenciesGraph | EyeAuras Docs",
    "keywords": "Interface IAuraDependenciesGraph Namespace: EyeAuras.DefaultAuras.DependenciesViewer Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IAuraDependenciesGraph Properties Name Description Items LinkedAuras ShowBackground ShowDependencies ShowEdges Methods Name Description Add(IAura) Remove(IAura) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.IWebAuraDependenciesGraph.ArrangeAlgorithm.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.IWebAuraDependenciesGraph.ArrangeAlgorithm.html",
    "title": "Property ArrangeAlgorithm | EyeAuras Docs",
    "keywords": "Property ArrangeAlgorithm ArrangeAlgorithm Declaration ReteArrangeAlgorithm ArrangeAlgorithm { get; set; } Property Value Type Description ReteArrangeAlgorithm"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.IWebAuraDependenciesGraph.ArrangeDirection.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.IWebAuraDependenciesGraph.ArrangeDirection.html",
    "title": "Property ArrangeDirection | EyeAuras Docs",
    "keywords": "Property ArrangeDirection ArrangeDirection Declaration ReteArrangeDirection ArrangeDirection { get; set; } Property Value Type Description ReteArrangeDirection"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.IWebAuraDependenciesGraph.AutoArrange.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.IWebAuraDependenciesGraph.AutoArrange.html",
    "title": "Property AutoArrange | EyeAuras Docs",
    "keywords": "Property AutoArrange AutoArrange Declaration bool AutoArrange { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.IWebAuraDependenciesGraph.ReteEditor.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.IWebAuraDependenciesGraph.ReteEditor.html",
    "title": "Property ReteEditor | EyeAuras Docs",
    "keywords": "Property ReteEditor ReteEditor Declaration BlazorReteEditor ReteEditor { get; set; } Property Value Type Description BlazorReteEditor"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.IWebAuraDependenciesGraph.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.IWebAuraDependenciesGraph.html",
    "title": "Interface IWebAuraDependenciesGraph | EyeAuras Docs",
    "keywords": "Interface IWebAuraDependenciesGraph Inherited Members IAuraDependenciesGraph.Add(IAura) IAuraDependenciesGraph.Remove(IAura) IAuraDependenciesGraph.Items IAuraDependenciesGraph.ShowEdges IAuraDependenciesGraph.ShowDependencies IAuraDependenciesGraph.ShowBackground IAuraDependenciesGraph.LinkedAuras Namespace: EyeAuras.DefaultAuras.DependenciesViewer Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IWebAuraDependenciesGraph : IAuraDependenciesGraph Properties Name Description ArrangeAlgorithm ArrangeDirection AutoArrange ReteEditor Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.WebAuraGraph.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.WebAuraGraph.-ctor.html",
    "title": "Constructor WebAuraGraph | EyeAuras Docs",
    "keywords": "Constructor WebAuraGraph WebAuraGraph() Declaration public WebAuraGraph()"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.WebAuraGraph.BuildRenderTree.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.WebAuraGraph.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.WebAuraGraph.ReteEditor.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.WebAuraGraph.ReteEditor.html",
    "title": "Property ReteEditor | EyeAuras Docs",
    "keywords": "Property ReteEditor ReteEditor Declaration protected BlazorReteEditor ReteEditor { get; set; } Property Value Type Description BlazorReteEditor"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.WebAuraGraph.ReteEditorIsLoaded.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.WebAuraGraph.ReteEditorIsLoaded.html",
    "title": "Property ReteEditorIsLoaded | EyeAuras Docs",
    "keywords": "Property ReteEditorIsLoaded ReteEditorIsLoaded Declaration protected bool ReteEditorIsLoaded { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.WebAuraGraph.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.WebAuraGraph.html",
    "title": "Class WebAuraGraph | EyeAuras Docs",
    "keywords": "Class WebAuraGraph Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<IWebAuraDependenciesGraph> WebAuraGraph Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponent<IWebAuraDependenciesGraph>.OnInitialized() BlazorReactiveComponent<IWebAuraDependenciesGraph>.TrackState<TOut>(Expression<Func<IWebAuraDependenciesGraph, TOut>>) BlazorReactiveComponent<IWebAuraDependenciesGraph>.Track<TOut>(Expression<Func<IWebAuraDependenciesGraph, TOut>>) BlazorReactiveComponent<IWebAuraDependenciesGraph>.DataContext BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.DefaultAuras.DependenciesViewer Assembly: EyeAuras.DefaultAuras.dll Syntax public class WebAuraGraph : BlazorReactiveComponent<IWebAuraDependenciesGraph>, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description WebAuraGraph() Properties Name Description ReteEditor ReteEditorIsLoaded Methods Name Description BuildRenderTree(RenderTreeBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.DependenciesViewer.html": {
    "href": "api/EyeAuras.DefaultAuras.DependenciesViewer.html",
    "title": "Namespace EyeAuras.DefaultAuras.DependenciesViewer | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.DependenciesViewer Classes WebAuraGraph Interfaces IAuraDependenciesGraph IWebAuraDependenciesGraph"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.ArrangeAlgorithm.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.ArrangeAlgorithm.html",
    "title": "Property ArrangeAlgorithm | EyeAuras Docs",
    "keywords": "Property ArrangeAlgorithm ArrangeAlgorithm Declaration ReteArrangeAlgorithm ArrangeAlgorithm { get; set; } Property Value Type Description ReteArrangeAlgorithm"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.ArrangeDirection.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.ArrangeDirection.html",
    "title": "Property ArrangeDirection | EyeAuras Docs",
    "keywords": "Property ArrangeDirection ArrangeDirection Declaration ReteArrangeDirection ArrangeDirection { get; set; } Property Value Type Description ReteArrangeDirection"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.AutoArrange.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.AutoArrange.html",
    "title": "Property AutoArrange | EyeAuras Docs",
    "keywords": "Property AutoArrange AutoArrange Declaration bool AutoArrange { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.Links.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.Links.html",
    "title": "Property Links | EyeAuras Docs",
    "keywords": "Property Links Links Declaration IAuraListStateEvaluator Links { get; } Property Value Type Description IAuraListStateEvaluator"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.ShowBackground.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.ShowBackground.html",
    "title": "Property ShowBackground | EyeAuras Docs",
    "keywords": "Property ShowBackground ShowBackground Declaration bool ShowBackground { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.ShowDependencies.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.ShowDependencies.html",
    "title": "Property ShowDependencies | EyeAuras Docs",
    "keywords": "Property ShowDependencies ShowDependencies Declaration bool ShowDependencies { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.ShowEdges.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.ShowEdges.html",
    "title": "Property ShowEdges | EyeAuras Docs",
    "keywords": "Property ShowEdges ShowEdges Declaration bool ShowEdges { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.IDependenciesGraphAuraOverlay.html",
    "title": "Interface IDependenciesGraphAuraOverlay | EyeAuras Docs",
    "keywords": "Interface IDependenciesGraphAuraOverlay Inherited Members IAuraOverlay.IsIgnored IAuraOverlay.OverlayPosition IAuraOverlay.BorderColor IAuraOverlay.BackgroundColor IAuraOverlay.ThumbnailOpacity IAuraOverlay.BorderThickness IAuraOverlay.IsClickThrough IAuraOverlay.EnableHeader IAuraOverlay.Title IAuraOverlay.MaintainAspectRatio IAuraOverlay.AuraModelController IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.DefaultAuras.Overlays.Graph Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IDependenciesGraphAuraOverlay : IAuraOverlay, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription, INotifyPropertyChanged Properties Name Description ArrangeAlgorithm ArrangeDirection AutoArrange Links ShowBackground ShowDependencies ShowEdges Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override OverlayDependenciesViewerProperties <Clone>$() Returns Type Description OverlayDependenciesViewerProperties Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.-ctor.html",
    "title": "Constructor OverlayDependenciesViewerProperties | EyeAuras Docs",
    "keywords": "Constructor OverlayDependenciesViewerProperties OverlayDependenciesViewerProperties() Declaration public OverlayDependenciesViewerProperties()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.ArrangeAlgorithm.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.ArrangeAlgorithm.html",
    "title": "Property ArrangeAlgorithm | EyeAuras Docs",
    "keywords": "Property ArrangeAlgorithm ArrangeAlgorithm Declaration public ReteArrangeAlgorithm ArrangeAlgorithm { get; set; } Property Value Type Description ReteArrangeAlgorithm"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.ArrangeDirection.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.ArrangeDirection.html",
    "title": "Property ArrangeDirection | EyeAuras Docs",
    "keywords": "Property ArrangeDirection ArrangeDirection Declaration public ReteArrangeDirection ArrangeDirection { get; set; } Property Value Type Description ReteArrangeDirection"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.AutoArrange.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.AutoArrange.html",
    "title": "Property AutoArrange | EyeAuras Docs",
    "keywords": "Property AutoArrange AutoArrange Declaration public bool AutoArrange { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraOverlayPropertiesBase.Equals(object) Equals(AuraOverlayPropertiesBase?) Declaration public override sealed bool Equals(AuraOverlayPropertiesBase? other) Parameters Type Name Description AuraOverlayPropertiesBase other Returns Type Description bool Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.Equals(EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase) Equals(OverlayDependenciesViewerProperties?) Declaration public bool Equals(OverlayDependenciesViewerProperties? other) Parameters Type Name Description OverlayDependenciesViewerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.EvaluatorProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.EvaluatorProperties.html",
    "title": "Property EvaluatorProperties | EyeAuras Docs",
    "keywords": "Property EvaluatorProperties EvaluatorProperties Declaration public AuraEvaluatorProperties EvaluatorProperties { get; set; } Property Value Type Description AuraEvaluatorProperties"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.LinkedAuraIds.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.LinkedAuraIds.html",
    "title": "Property LinkedAuraIds | EyeAuras Docs",
    "keywords": "Property LinkedAuraIds LinkedAuraIds Declaration public IReadOnlyList<string> LinkedAuraIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedAuraIds"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.LinkedFolderIds.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.LinkedFolderIds.html",
    "title": "Property LinkedFolderIds | EyeAuras Docs",
    "keywords": "Property LinkedFolderIds LinkedFolderIds Declaration public IReadOnlyList<string> LinkedFolderIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedFolderIds"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraOverlayPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.ReplaceId.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.ReplaceId.html",
    "title": "Method ReplaceId | EyeAuras Docs",
    "keywords": "Method ReplaceId ReplaceId(string, string) Declaration public void ReplaceId(string previousId, string newId) Parameters Type Name Description string previousId string newId Implements IHasLinkedAuraIds.ReplaceId(string, string)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.ShowBackground.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.ShowBackground.html",
    "title": "Property ShowBackground | EyeAuras Docs",
    "keywords": "Property ShowBackground ShowBackground Declaration public bool ShowBackground { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.ShowDependencies.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.ShowDependencies.html",
    "title": "Property ShowDependencies | EyeAuras Docs",
    "keywords": "Property ShowDependencies ShowDependencies Declaration public bool ShowDependencies { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.ShowEdges.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.ShowEdges.html",
    "title": "Property ShowEdges | EyeAuras Docs",
    "keywords": "Property ShowEdges ShowEdges Declaration public bool ShowEdges { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.html",
    "title": "Class OverlayDependenciesViewerProperties | EyeAuras Docs",
    "keywords": "Class OverlayDependenciesViewerProperties Inheritance object AuraPropertiesBase AuraOverlayPropertiesBase OverlayDependenciesViewerProperties Implements IEquatable<AuraPropertiesBase> IAuraOverlayProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraOverlayPropertiesBase> IHasLinkedAuraIds IEquatable<OverlayDependenciesViewerProperties> Inherited Members AuraOverlayPropertiesBase.Equals(AuraPropertiesBase) AuraOverlayPropertiesBase.OverlayPosition AuraOverlayPropertiesBase.BorderThickness AuraOverlayPropertiesBase.BorderColor AuraOverlayPropertiesBase.BackgroundColor AuraOverlayPropertiesBase.IsClickThrough AuraOverlayPropertiesBase.ThumbnailOpacity AuraOverlayPropertiesBase.IsIgnored AuraOverlayPropertiesBase.MaintainAspectRatio AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Overlays.Graph Assembly: EyeAuras.DefaultAuras.dll Syntax public sealed record OverlayDependenciesViewerProperties : AuraOverlayPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraOverlayProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraOverlayPropertiesBase>, IHasLinkedAuraIds, IEquatable<OverlayDependenciesViewerProperties> Constructors Name Description OverlayDependenciesViewerProperties() Properties Name Description ArrangeAlgorithm ArrangeDirection AutoArrange EqualityContract EvaluatorProperties LinkedAuraIds LinkedFolderIds ShowBackground ShowDependencies ShowEdges Version Methods Name Description Equals(AuraOverlayPropertiesBase?) Equals(OverlayDependenciesViewerProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ReplaceId(string, string) ToString() <Clone>$() Operators Name Description operator ==(OverlayDependenciesViewerProperties?, OverlayDependenciesViewerProperties?) operator !=(OverlayDependenciesViewerProperties?, OverlayDependenciesViewerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(OverlayDependenciesViewerProperties?, OverlayDependenciesViewerProperties?) Declaration public static bool operator ==(OverlayDependenciesViewerProperties? left, OverlayDependenciesViewerProperties? right) Parameters Type Name Description OverlayDependenciesViewerProperties left OverlayDependenciesViewerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.OverlayDependenciesViewerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(OverlayDependenciesViewerProperties?, OverlayDependenciesViewerProperties?) Declaration public static bool operator !=(OverlayDependenciesViewerProperties? left, OverlayDependenciesViewerProperties? right) Parameters Type Name Description OverlayDependenciesViewerProperties left OverlayDependenciesViewerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Graph.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Graph.html",
    "title": "Namespace EyeAuras.DefaultAuras.Overlays.Graph | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Overlays.Graph Classes OverlayDependenciesViewerProperties Interfaces IDependenciesGraphAuraOverlay"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.IImageAuraOverlay.ConvertedImageData.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.IImageAuraOverlay.ConvertedImageData.html",
    "title": "Property ConvertedImageData | EyeAuras Docs",
    "keywords": "Property ConvertedImageData ConvertedImageData Declaration byte[] ConvertedImageData { get; } Property Value Type Description byte[]"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.IImageAuraOverlay.ImageData.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.IImageAuraOverlay.ImageData.html",
    "title": "Property ImageData | EyeAuras Docs",
    "keywords": "Property ImageData ImageData Declaration byte[] ImageData { get; set; } Property Value Type Description byte[]"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.IImageAuraOverlay.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.IImageAuraOverlay.html",
    "title": "Interface IImageAuraOverlay | EyeAuras Docs",
    "keywords": "Interface IImageAuraOverlay Inherited Members IAuraOverlay.IsIgnored IAuraOverlay.OverlayPosition IAuraOverlay.BorderColor IAuraOverlay.BackgroundColor IAuraOverlay.ThumbnailOpacity IAuraOverlay.BorderThickness IAuraOverlay.IsClickThrough IAuraOverlay.EnableHeader IAuraOverlay.Title IAuraOverlay.MaintainAspectRatio IAuraOverlay.AuraModelController IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.DefaultAuras.Overlays.Image Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IImageAuraOverlay : IAuraOverlay, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription, INotifyPropertyChanged Properties Name Description ConvertedImageData ImageData Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.ImageAuraOverlayContent.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.ImageAuraOverlayContent.-ctor.html",
    "title": "Constructor ImageAuraOverlayContent | EyeAuras Docs",
    "keywords": "Constructor ImageAuraOverlayContent ImageAuraOverlayContent(IImageAuraOverlay, IScheduler) Declaration public ImageAuraOverlayContent(IImageAuraOverlay parent, IScheduler scheduler) Parameters Type Name Description IImageAuraOverlay parent IScheduler scheduler"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.ImageAuraOverlayContent.Image.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.ImageAuraOverlayContent.Image.html",
    "title": "Property Image | EyeAuras Docs",
    "keywords": "Property Image Image Declaration public BitmapSource Image { get; } Property Value Type Description BitmapSource"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.ImageAuraOverlayContent.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.ImageAuraOverlayContent.html",
    "title": "Class ImageAuraOverlayContent | EyeAuras Docs",
    "keywords": "Class ImageAuraOverlayContent Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger AuraOverlayContentBase AuraOverlayContentBase<IImageAuraOverlay> ImageAuraOverlayContent Implements IAuraOverlayContent IDisposable INotifyPropertyChanged Inherited Members AuraOverlayContentBase<IImageAuraOverlay>.Parent AuraOverlayContentBase.EditModeThumbnailOpacity AuraOverlayContentBase.ScaleOverlay(double) AuraOverlayContentBase.Scheduler AuraOverlayContentBase.IsLocked AuraOverlayContentBase.IsUnlockable AuraOverlayContentBase.IsActive AuraOverlayContentBase.IsInitialized AuraOverlayContentBase.IsVisible AuraOverlayContentBase.OverlayBounds AuraOverlayContentBase.BorderColor AuraOverlayContentBase.BackgroundColor AuraOverlayContentBase.BorderThickness AuraOverlayContentBase.ThumbnailOpacity AuraOverlayContentBase.TargetAspectRatio AuraOverlayContentBase.IsClickThrough AuraOverlayContentBase.MaintainAspectRatio AuraOverlayContentBase.IsFocusable AuraOverlayContentBase.EnableHeader AuraOverlayContentBase.Title AuraOverlayContentBase.Overlay AuraOverlayContentBase.WhenPreviewKeyDown AuraOverlayContentBase.AuraModelController AuraOverlayContentBase.ThumbnailSize AuraOverlayContentBase.SourceWindowSize AuraOverlayContentBase.SetClickThroughCommand AuraOverlayContentBase.UnloadAuraCommand AuraOverlayContentBase.CloseCommand AuraOverlayContentBase.LockWindowCommand AuraOverlayContentBase.UnlockWindowCommand AuraOverlayContentBase.FitOverlayCommand AuraOverlayContentBase.ToggleWindowLockCommand AuraOverlayContentBase.ScaleRatioHalf AuraOverlayContentBase.ScaleRatioQuarter AuraOverlayContentBase.ScaleRatioActual AuraOverlayContentBase.ScaleRatioDouble object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.DefaultAuras.Overlays.Image Assembly: EyeAuras.DefaultAuras.dll Syntax public class ImageAuraOverlayContent : AuraOverlayContentBase<IImageAuraOverlay>, IAuraOverlayContent, IDisposable, INotifyPropertyChanged Constructors Name Description ImageAuraOverlayContent(IImageAuraOverlay, IScheduler) Properties Name Description Image Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override OverlayImageCoreProperties <Clone>$() Returns Type Description OverlayImageCoreProperties Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.-ctor.html",
    "title": "Constructor OverlayImageCoreProperties | EyeAuras Docs",
    "keywords": "Constructor OverlayImageCoreProperties OverlayImageCoreProperties() Declaration public OverlayImageCoreProperties()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraOverlayPropertiesBase.Equals(object) Equals(AuraOverlayPropertiesBase?) Declaration public override sealed bool Equals(AuraOverlayPropertiesBase? other) Parameters Type Name Description AuraOverlayPropertiesBase other Returns Type Description bool Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.Equals(EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase) Equals(OverlayImageCoreProperties?) Declaration public bool Equals(OverlayImageCoreProperties? other) Parameters Type Name Description OverlayImageCoreProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.ImageData.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.ImageData.html",
    "title": "Property ImageData | EyeAuras Docs",
    "keywords": "Property ImageData ImageData Declaration public byte[] ImageData { get; set; } Property Value Type Description byte[]"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraOverlayPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.html",
    "title": "Class OverlayImageCoreProperties | EyeAuras Docs",
    "keywords": "Class OverlayImageCoreProperties Inheritance object AuraPropertiesBase AuraOverlayPropertiesBase OverlayImageCoreProperties Implements IEquatable<AuraPropertiesBase> IAuraOverlayProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraOverlayPropertiesBase> IEquatable<OverlayImageCoreProperties> Inherited Members AuraOverlayPropertiesBase.Equals(AuraPropertiesBase) AuraOverlayPropertiesBase.OverlayPosition AuraOverlayPropertiesBase.BorderThickness AuraOverlayPropertiesBase.BorderColor AuraOverlayPropertiesBase.BackgroundColor AuraOverlayPropertiesBase.IsClickThrough AuraOverlayPropertiesBase.ThumbnailOpacity AuraOverlayPropertiesBase.IsIgnored AuraOverlayPropertiesBase.MaintainAspectRatio AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Overlays.Image Assembly: EyeAuras.DefaultAuras.dll Syntax public sealed record OverlayImageCoreProperties : AuraOverlayPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraOverlayProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraOverlayPropertiesBase>, IEquatable<OverlayImageCoreProperties> Constructors Name Description OverlayImageCoreProperties() Properties Name Description EqualityContract ImageData Version Methods Name Description Equals(AuraOverlayPropertiesBase?) Equals(OverlayImageCoreProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(OverlayImageCoreProperties?, OverlayImageCoreProperties?) operator !=(OverlayImageCoreProperties?, OverlayImageCoreProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(OverlayImageCoreProperties?, OverlayImageCoreProperties?) Declaration public static bool operator ==(OverlayImageCoreProperties? left, OverlayImageCoreProperties? right) Parameters Type Name Description OverlayImageCoreProperties left OverlayImageCoreProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.OverlayImageCoreProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(OverlayImageCoreProperties?, OverlayImageCoreProperties?) Declaration public static bool operator !=(OverlayImageCoreProperties? left, OverlayImageCoreProperties? right) Parameters Type Name Description OverlayImageCoreProperties left OverlayImageCoreProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Image.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Image.html",
    "title": "Namespace EyeAuras.DefaultAuras.Overlays.Image | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Overlays.Image Classes ImageAuraOverlayContent OverlayImageCoreProperties Interfaces IImageAuraOverlay"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.IReplicaAuraOverlay.ReplicaRegion.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.IReplicaAuraOverlay.ReplicaRegion.html",
    "title": "Property ReplicaRegion | EyeAuras Docs",
    "keywords": "Property ReplicaRegion ReplicaRegion Declaration IComplexPositionModel ReplicaRegion { get; } Property Value Type Description IComplexPositionModel"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.IReplicaAuraOverlay.TargetWindow.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.IReplicaAuraOverlay.TargetWindow.html",
    "title": "Property TargetWindow | EyeAuras Docs",
    "keywords": "Property TargetWindow TargetWindow Declaration WindowMatchExpression TargetWindow { get; set; } Property Value Type Description WindowMatchExpression"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.IReplicaAuraOverlay.WindowSelector.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.IReplicaAuraOverlay.WindowSelector.html",
    "title": "Property WindowSelector | EyeAuras Docs",
    "keywords": "Property WindowSelector WindowSelector Declaration IWindowSelector WindowSelector { get; } Property Value Type Description IWindowSelector"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.IReplicaAuraOverlay.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.IReplicaAuraOverlay.html",
    "title": "Interface IReplicaAuraOverlay | EyeAuras Docs",
    "keywords": "Interface IReplicaAuraOverlay Inherited Members IAuraOverlay.IsIgnored IAuraOverlay.OverlayPosition IAuraOverlay.BorderColor IAuraOverlay.BackgroundColor IAuraOverlay.ThumbnailOpacity IAuraOverlay.BorderThickness IAuraOverlay.IsClickThrough IAuraOverlay.EnableHeader IAuraOverlay.Title IAuraOverlay.MaintainAspectRatio IAuraOverlay.AuraModelController IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.DefaultAuras.Overlays.Replica Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IReplicaAuraOverlay : IAuraOverlay, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription, INotifyPropertyChanged Properties Name Description ReplicaRegion TargetWindow WindowSelector Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.IReplicaAuraOverlayContent.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.IReplicaAuraOverlayContent.html",
    "title": "Interface IReplicaAuraOverlayContent | EyeAuras Docs",
    "keywords": "Interface IReplicaAuraOverlayContent Inherited Members IAuraOverlayContent.IsInitialized IAuraOverlayContent.OverlayBounds IAuraOverlayContent.BorderColor IAuraOverlayContent.BackgroundColor IAuraOverlayContent.ThumbnailOpacity IAuraOverlayContent.BorderThickness IAuraOverlayContent.TargetAspectRatio IAuraOverlayContent.IsClickThrough IAuraOverlayContent.MaintainAspectRatio IAuraOverlayContent.IsFocusable IAuraOverlayContent.EnableHeader IAuraOverlayContent.Title IAuraOverlayContent.Overlay IAuraOverlayContent.AuraModelController IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.DefaultAuras.Overlays.Replica Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IReplicaAuraOverlayContent : IAuraOverlayContent, IDisposable, INotifyPropertyChanged Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayConfigEditor.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayConfigEditor.-ctor.html",
    "title": "Constructor OverlayConfigEditor | EyeAuras Docs",
    "keywords": "Constructor OverlayConfigEditor OverlayConfigEditor() Declaration public OverlayConfigEditor()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayConfigEditor.InitializeComponent.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayConfigEditor.InitializeComponent.html",
    "title": "Method InitializeComponent | EyeAuras Docs",
    "keywords": "Method InitializeComponent InitializeComponent() InitializeComponent Declaration public void InitializeComponent() Implements IComponentConnector.InitializeComponent()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayConfigEditor.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayConfigEditor.html",
    "title": "Class OverlayConfigEditor | EyeAuras Docs",
    "keywords": "Class OverlayConfigEditor OverlayConfigEditor Inheritance object ReactiveMetroWindowBase ReactiveMetroWindow OverlayConfigEditor Implements IDisposable INotifyPropertyChanged IComponentConnector Namespace: EyeAuras.DefaultAuras.Overlays.Replica Assembly: EyeAuras.DefaultAuras.dll Syntax public class OverlayConfigEditor : ReactiveMetroWindow, IDisposable, INotifyPropertyChanged, IComponentConnector Constructors Name Description OverlayConfigEditor() Methods Name Description InitializeComponent() InitializeComponent Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override OverlayReplicaCoreProperties <Clone>$() Returns Type Description OverlayReplicaCoreProperties Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.-ctor.html",
    "title": "Constructor OverlayReplicaCoreProperties | EyeAuras Docs",
    "keywords": "Constructor OverlayReplicaCoreProperties OverlayReplicaCoreProperties() Declaration public OverlayReplicaCoreProperties()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraOverlayPropertiesBase.Equals(object) Equals(AuraOverlayPropertiesBase?) Declaration public override sealed bool Equals(AuraOverlayPropertiesBase? other) Parameters Type Name Description AuraOverlayPropertiesBase other Returns Type Description bool Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.Equals(EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase) Equals(OverlayReplicaCoreProperties?) Declaration public bool Equals(OverlayReplicaCoreProperties? other) Parameters Type Name Description OverlayReplicaCoreProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraOverlayPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.SourceRegionProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.SourceRegionProperties.html",
    "title": "Property SourceRegionProperties | EyeAuras Docs",
    "keywords": "Property SourceRegionProperties SourceRegionProperties Declaration public ComplexPositionProperties SourceRegionProperties { get; set; } Property Value Type Description ComplexPositionProperties"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.WindowMatch.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.WindowMatch.html",
    "title": "Property WindowMatch | EyeAuras Docs",
    "keywords": "Property WindowMatch WindowMatch Declaration public WindowMatchExpression WindowMatch { get; set; } Property Value Type Description WindowMatchExpression"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.html",
    "title": "Class OverlayReplicaCoreProperties | EyeAuras Docs",
    "keywords": "Class OverlayReplicaCoreProperties Inheritance object AuraPropertiesBase AuraOverlayPropertiesBase OverlayReplicaCoreProperties Implements IEquatable<AuraPropertiesBase> IAuraOverlayProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraOverlayPropertiesBase> IEquatable<OverlayReplicaCoreProperties> Inherited Members AuraOverlayPropertiesBase.Equals(AuraPropertiesBase) AuraOverlayPropertiesBase.OverlayPosition AuraOverlayPropertiesBase.BorderThickness AuraOverlayPropertiesBase.BorderColor AuraOverlayPropertiesBase.BackgroundColor AuraOverlayPropertiesBase.IsClickThrough AuraOverlayPropertiesBase.ThumbnailOpacity AuraOverlayPropertiesBase.IsIgnored AuraOverlayPropertiesBase.MaintainAspectRatio AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Overlays.Replica Assembly: EyeAuras.DefaultAuras.dll Syntax public sealed record OverlayReplicaCoreProperties : AuraOverlayPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraOverlayProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraOverlayPropertiesBase>, IEquatable<OverlayReplicaCoreProperties> Constructors Name Description OverlayReplicaCoreProperties() Properties Name Description EqualityContract SourceRegionProperties Version WindowMatch Methods Name Description Equals(AuraOverlayPropertiesBase?) Equals(OverlayReplicaCoreProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(OverlayReplicaCoreProperties?, OverlayReplicaCoreProperties?) operator !=(OverlayReplicaCoreProperties?, OverlayReplicaCoreProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(OverlayReplicaCoreProperties?, OverlayReplicaCoreProperties?) Declaration public static bool operator ==(OverlayReplicaCoreProperties? left, OverlayReplicaCoreProperties? right) Parameters Type Name Description OverlayReplicaCoreProperties left OverlayReplicaCoreProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.OverlayReplicaCoreProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(OverlayReplicaCoreProperties?, OverlayReplicaCoreProperties?) Declaration public static bool operator !=(OverlayReplicaCoreProperties? left, OverlayReplicaCoreProperties? right) Parameters Type Name Description OverlayReplicaCoreProperties left OverlayReplicaCoreProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Replica.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Replica.html",
    "title": "Namespace EyeAuras.DefaultAuras.Overlays.Replica | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Overlays.Replica Classes OverlayConfigEditor OverlayConfigEditor OverlayReplicaCoreProperties Interfaces IReplicaAuraOverlay IReplicaAuraOverlayContent"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.AnchorType.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.AnchorType.html",
    "title": "Property AnchorType | EyeAuras Docs",
    "keywords": "Property AnchorType AnchorType Declaration RegionAnchorType AnchorType { get; set; } Property Value Type Description RegionAnchorType"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.Content.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.Content.html",
    "title": "Property Content | EyeAuras Docs",
    "keywords": "Property Content Content Declaration string Content { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.FontColor.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.FontColor.html",
    "title": "Property FontColor | EyeAuras Docs",
    "keywords": "Property FontColor FontColor Declaration Color FontColor { get; set; } Property Value Type Description Color"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.FontSize.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.FontSize.html",
    "title": "Property FontSize | EyeAuras Docs",
    "keywords": "Property FontSize FontSize Declaration double FontSize { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.OutlineColor.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.OutlineColor.html",
    "title": "Property OutlineColor | EyeAuras Docs",
    "keywords": "Property OutlineColor OutlineColor Declaration Color OutlineColor { get; set; } Property Value Type Description Color"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.OutlineThickness.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.OutlineThickness.html",
    "title": "Property OutlineThickness | EyeAuras Docs",
    "keywords": "Property OutlineThickness OutlineThickness Declaration double OutlineThickness { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.SizeToFit.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.SizeToFit.html",
    "title": "Property SizeToFit | EyeAuras Docs",
    "keywords": "Property SizeToFit SizeToFit Declaration bool SizeToFit { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.ITextAuraOverlay.html",
    "title": "Interface ITextAuraOverlay | EyeAuras Docs",
    "keywords": "Interface ITextAuraOverlay Inherited Members IAuraOverlay.IsIgnored IAuraOverlay.OverlayPosition IAuraOverlay.BorderColor IAuraOverlay.BackgroundColor IAuraOverlay.ThumbnailOpacity IAuraOverlay.BorderThickness IAuraOverlay.IsClickThrough IAuraOverlay.EnableHeader IAuraOverlay.Title IAuraOverlay.MaintainAspectRatio IAuraOverlay.AuraModelController IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.DefaultAuras.Overlays.Text Assembly: EyeAuras.DefaultAuras.dll Syntax public interface ITextAuraOverlay : IAuraOverlay, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription, INotifyPropertyChanged Properties Name Description AnchorType Content FontColor FontSize OutlineColor OutlineThickness SizeToFit Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override OverlayTextCoreProperties <Clone>$() Returns Type Description OverlayTextCoreProperties Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.-ctor.html",
    "title": "Constructor OverlayTextCoreProperties | EyeAuras Docs",
    "keywords": "Constructor OverlayTextCoreProperties OverlayTextCoreProperties() Declaration public OverlayTextCoreProperties()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.AnchorType.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.AnchorType.html",
    "title": "Property AnchorType | EyeAuras Docs",
    "keywords": "Property AnchorType AnchorType Declaration public RegionAnchorType AnchorType { get; set; } Property Value Type Description RegionAnchorType"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraOverlayPropertiesBase.Equals(object) Equals(AuraOverlayPropertiesBase?) Declaration public override sealed bool Equals(AuraOverlayPropertiesBase? other) Parameters Type Name Description AuraOverlayPropertiesBase other Returns Type Description bool Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.Equals(EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase) Equals(OverlayTextCoreProperties?) Declaration public bool Equals(OverlayTextCoreProperties? other) Parameters Type Name Description OverlayTextCoreProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.FontColor.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.FontColor.html",
    "title": "Property FontColor | EyeAuras Docs",
    "keywords": "Property FontColor FontColor Declaration public Color FontColor { get; set; } Property Value Type Description Color"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.FontSize.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.FontSize.html",
    "title": "Property FontSize | EyeAuras Docs",
    "keywords": "Property FontSize FontSize Declaration public double FontSize { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.OutlineColor.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.OutlineColor.html",
    "title": "Property OutlineColor | EyeAuras Docs",
    "keywords": "Property OutlineColor OutlineColor Declaration public Color OutlineColor { get; set; } Property Value Type Description Color"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.OutlineThickness.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.OutlineThickness.html",
    "title": "Property OutlineThickness | EyeAuras Docs",
    "keywords": "Property OutlineThickness OutlineThickness Declaration public double OutlineThickness { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraOverlayPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.SizeToFit.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.SizeToFit.html",
    "title": "Property SizeToFit | EyeAuras Docs",
    "keywords": "Property SizeToFit SizeToFit Declaration public bool SizeToFit { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.Text.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.Text.html",
    "title": "Property Text | EyeAuras Docs",
    "keywords": "Property Text Text Declaration public string Text { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides EyeAuras.Controls.Overlay.Models.AuraOverlayPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.html",
    "title": "Class OverlayTextCoreProperties | EyeAuras Docs",
    "keywords": "Class OverlayTextCoreProperties Inheritance object AuraPropertiesBase AuraOverlayPropertiesBase OverlayTextCoreProperties Implements IEquatable<AuraPropertiesBase> IAuraOverlayProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraOverlayPropertiesBase> IEquatable<OverlayTextCoreProperties> Inherited Members AuraOverlayPropertiesBase.Equals(AuraPropertiesBase) AuraOverlayPropertiesBase.OverlayPosition AuraOverlayPropertiesBase.BorderThickness AuraOverlayPropertiesBase.BorderColor AuraOverlayPropertiesBase.BackgroundColor AuraOverlayPropertiesBase.IsClickThrough AuraOverlayPropertiesBase.ThumbnailOpacity AuraOverlayPropertiesBase.IsIgnored AuraOverlayPropertiesBase.MaintainAspectRatio AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Overlays.Text Assembly: EyeAuras.DefaultAuras.dll Syntax public sealed record OverlayTextCoreProperties : AuraOverlayPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraOverlayProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraOverlayPropertiesBase>, IEquatable<OverlayTextCoreProperties> Constructors Name Description OverlayTextCoreProperties() Properties Name Description AnchorType EqualityContract FontColor FontSize OutlineColor OutlineThickness SizeToFit Text Version Methods Name Description Equals(AuraOverlayPropertiesBase?) Equals(OverlayTextCoreProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(OverlayTextCoreProperties?, OverlayTextCoreProperties?) operator !=(OverlayTextCoreProperties?, OverlayTextCoreProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(OverlayTextCoreProperties?, OverlayTextCoreProperties?) Declaration public static bool operator ==(OverlayTextCoreProperties? left, OverlayTextCoreProperties? right) Parameters Type Name Description OverlayTextCoreProperties left OverlayTextCoreProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.OverlayTextCoreProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(OverlayTextCoreProperties?, OverlayTextCoreProperties?) Declaration public static bool operator !=(OverlayTextCoreProperties? left, OverlayTextCoreProperties? right) Parameters Type Name Description OverlayTextCoreProperties left OverlayTextCoreProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Overlays.Text.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.Text.html",
    "title": "Namespace EyeAuras.DefaultAuras.Overlays.Text | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Overlays.Text Classes OverlayTextCoreProperties Interfaces ITextAuraOverlay"
  },
  "api/EyeAuras.DefaultAuras.Overlays.html": {
    "href": "api/EyeAuras.DefaultAuras.Overlays.html",
    "title": "Namespace EyeAuras.DefaultAuras.Overlays | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Overlays Namespaces EyeAuras.DefaultAuras.Overlays.Graph EyeAuras.DefaultAuras.Overlays.Image EyeAuras.DefaultAuras.Overlays.Replica EyeAuras.DefaultAuras.Overlays.Text"
  },
  "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public DefaultAurasConfig <Clone>$() Returns Type Description DefaultAurasConfig"
  },
  "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.-ctor.html",
    "title": "Constructor DefaultAurasConfig | EyeAuras Docs",
    "keywords": "Constructor DefaultAurasConfig DefaultAurasConfig() Declaration public DefaultAurasConfig()"
  },
  "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(DefaultAurasConfig?) Declaration public bool Equals(DefaultAurasConfig? other) Parameters Type Name Description DefaultAurasConfig other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.RegionSelectHotkey.html": {
    "href": "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.RegionSelectHotkey.html",
    "title": "Property RegionSelectHotkey | EyeAuras Docs",
    "keywords": "Property RegionSelectHotkey RegionSelectHotkey Declaration public string RegionSelectHotkey { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public int Version { get; set; } Property Value Type Description int Implements IHasVersion.Version"
  },
  "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.html": {
    "href": "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.html",
    "title": "Class DefaultAurasConfig | EyeAuras Docs",
    "keywords": "Class DefaultAurasConfig Inheritance object DefaultAurasConfig Implements IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion IEquatable<DefaultAurasConfig> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Prism Assembly: EyeAuras.DefaultAuras.dll Syntax public sealed record DefaultAurasConfig : IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, IEquatable<DefaultAurasConfig> Constructors Name Description DefaultAurasConfig() Properties Name Description RegionSelectHotkey Version Methods Name Description Equals(DefaultAurasConfig?) Equals(object?) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(DefaultAurasConfig?, DefaultAurasConfig?) operator !=(DefaultAurasConfig?, DefaultAurasConfig?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(DefaultAurasConfig?, DefaultAurasConfig?) Declaration public static bool operator ==(DefaultAurasConfig? left, DefaultAurasConfig? right) Parameters Type Name Description DefaultAurasConfig left DefaultAurasConfig right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Prism.DefaultAurasConfig.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(DefaultAurasConfig?, DefaultAurasConfig?) Declaration public static bool operator !=(DefaultAurasConfig? left, DefaultAurasConfig? right) Parameters Type Name Description DefaultAurasConfig left DefaultAurasConfig right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Prism.html": {
    "href": "api/EyeAuras.DefaultAuras.Prism.html",
    "title": "Namespace EyeAuras.DefaultAuras.Prism | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Prism Classes DefaultAurasConfig"
  },
  "api/EyeAuras.DefaultAuras.Scripting.IPlaySoundScriptingApi.ShowConfirmation.html": {
    "href": "api/EyeAuras.DefaultAuras.Scripting.IPlaySoundScriptingApi.ShowConfirmation.html",
    "title": "Method ShowConfirmation | EyeAuras Docs",
    "keywords": "Method ShowConfirmation ShowConfirmation(string, string) Declaration Task<bool> ShowConfirmation(string title, string content) Parameters Type Name Description string title string content Returns Type Description Task<bool>"
  },
  "api/EyeAuras.DefaultAuras.Scripting.IPlaySoundScriptingApi.ShowMessage.html": {
    "href": "api/EyeAuras.DefaultAuras.Scripting.IPlaySoundScriptingApi.ShowMessage.html",
    "title": "Method ShowMessage | EyeAuras Docs",
    "keywords": "Method ShowMessage ShowMessage(string, string) Declaration Task ShowMessage(string title, string content) Parameters Type Name Description string title string content Returns Type Description Task"
  },
  "api/EyeAuras.DefaultAuras.Scripting.IPlaySoundScriptingApi.html": {
    "href": "api/EyeAuras.DefaultAuras.Scripting.IPlaySoundScriptingApi.html",
    "title": "Interface IPlaySoundScriptingApi | EyeAuras Docs",
    "keywords": "Interface IPlaySoundScriptingApi Inherited Members IScriptingApi.Name Namespace: EyeAuras.DefaultAuras.Scripting Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IPlaySoundScriptingApi : IScriptingApi Methods Name Description ShowConfirmation(string, string) ShowMessage(string, string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Scripting.html": {
    "href": "api/EyeAuras.DefaultAuras.Scripting.html",
    "title": "Namespace EyeAuras.DefaultAuras.Scripting | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Scripting Interfaces IPlaySoundScriptingApi"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveOperationMode.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveOperationMode.html",
    "title": "Enum AuraIsActiveOperationMode | EyeAuras Docs",
    "keywords": "Enum AuraIsActiveOperationMode Namespace: EyeAuras.DefaultAuras.Triggers.AuraIsActive Assembly: EyeAuras.DefaultAuras.dll Syntax public enum AuraIsActiveOperationMode Fields Name Description All Any Extension Methods ObjectExtensions.AddTo<AuraIsActiveOperationMode, TCollection>(AuraIsActiveOperationMode, ISourceList<TCollection>) ObjectExtensions.AddTo<AuraIsActiveOperationMode, TCollection>(AuraIsActiveOperationMode, ICollection<TCollection>) ObjectExtensions.CloneJson<AuraIsActiveOperationMode>(AuraIsActiveOperationMode) ObjectExtensions.CopyPropertiesTo<AuraIsActiveOperationMode, TTarget>(AuraIsActiveOperationMode, TTarget) ObjectExtensions.DumpToTextRaw<AuraIsActiveOperationMode>(AuraIsActiveOperationMode) ObjectExtensions.DumpToText<AuraIsActiveOperationMode>(AuraIsActiveOperationMode) ObjectExtensions.Dump<AuraIsActiveOperationMode>(AuraIsActiveOperationMode) ObjectExtensions.GetPropertyAccessor<AuraIsActiveOperationMode, TValue>(AuraIsActiveOperationMode, Expression<Func<AuraIsActiveOperationMode, TValue>>) ObjectExtensions.InsertTo<AuraIsActiveOperationMode, TCollection>(AuraIsActiveOperationMode, IList<TCollection>, int) ObjectExtensions.ToJson<AuraIsActiveOperationMode>(AuraIsActiveOperationMode) ObjectExtensions.ToStringSafe<AuraIsActiveOperationMode>(AuraIsActiveOperationMode) ObjectExtensions.TransferPropertiesTo<AuraIsActiveOperationMode, TTarget>(AuraIsActiveOperationMode, TTarget, params string[]) XDocumentExtensions.AddTo<AuraIsActiveOperationMode>(AuraIsActiveOperationMode, XContainer)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override AuraIsActiveTriggerProperties <Clone>$() Returns Type Description AuraIsActiveTriggerProperties Overrides AuraTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.-ctor.html",
    "title": "Constructor AuraIsActiveTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor AuraIsActiveTriggerProperties AuraIsActiveTriggerProperties() Declaration public AuraIsActiveTriggerProperties()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.AuraIds.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.AuraIds.html",
    "title": "Property AuraIds | EyeAuras Docs",
    "keywords": "Property AuraIds AuraIds Declaration [Obsolete(\"Replaced with EvaluatorProperties\")] public string[] AuraIds { get; set; } Property Value Type Description string[]"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(object?) Equals(AuraTriggerPropertiesBase?) Declaration public override sealed bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase?) Equals(AuraIsActiveTriggerProperties?) Declaration public bool Equals(AuraIsActiveTriggerProperties? other) Parameters Type Name Description AuraIsActiveTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.EvaluatorProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.EvaluatorProperties.html",
    "title": "Property EvaluatorProperties | EyeAuras Docs",
    "keywords": "Property EvaluatorProperties EvaluatorProperties Declaration public AuraEvaluatorProperties EvaluatorProperties { get; set; } Property Value Type Description AuraEvaluatorProperties"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.LinkedAuraIds.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.LinkedAuraIds.html",
    "title": "Property LinkedAuraIds | EyeAuras Docs",
    "keywords": "Property LinkedAuraIds LinkedAuraIds Declaration public IReadOnlyList<string> LinkedAuraIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedAuraIds"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.LinkedFolderIds.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.LinkedFolderIds.html",
    "title": "Property LinkedFolderIds | EyeAuras Docs",
    "keywords": "Property LinkedFolderIds LinkedFolderIds Declaration public IReadOnlyList<string> LinkedFolderIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedFolderIds"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.OperationMode.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.OperationMode.html",
    "title": "Property OperationMode | EyeAuras Docs",
    "keywords": "Property OperationMode OperationMode Declaration [Obsolete(\"Replaced with EvaluatorProperties\")] public AuraIsActiveOperationMode OperationMode { get; set; } Property Value Type Description AuraIsActiveOperationMode"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.ReplaceId.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.ReplaceId.html",
    "title": "Method ReplaceId | EyeAuras Docs",
    "keywords": "Method ReplaceId ReplaceId(string, string) Declaration public void ReplaceId(string previousId, string newId) Parameters Type Name Description string previousId string newId Implements IHasLinkedAuraIds.ReplaceId(string, string)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.html",
    "title": "Class AuraIsActiveTriggerProperties | EyeAuras Docs",
    "keywords": "Class AuraIsActiveTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase AuraIsActiveTriggerProperties Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> IHasLinkedAuraIds IEquatable<AuraIsActiveTriggerProperties> Inherited Members AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Triggers.AuraIsActive Assembly: EyeAuras.DefaultAuras.dll Syntax public sealed record AuraIsActiveTriggerProperties : AuraTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase>, IHasLinkedAuraIds, IEquatable<AuraIsActiveTriggerProperties> Constructors Name Description AuraIsActiveTriggerProperties() Properties Name Description AuraIds EqualityContract EvaluatorProperties LinkedAuraIds LinkedFolderIds OperationMode Version Methods Name Description Equals(AuraIsActiveTriggerProperties?) Equals(AuraTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ReplaceId(string, string) ToString() <Clone>$() Operators Name Description operator ==(AuraIsActiveTriggerProperties?, AuraIsActiveTriggerProperties?) operator !=(AuraIsActiveTriggerProperties?, AuraIsActiveTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(AuraIsActiveTriggerProperties?, AuraIsActiveTriggerProperties?) Declaration public static bool operator ==(AuraIsActiveTriggerProperties? left, AuraIsActiveTriggerProperties? right) Parameters Type Name Description AuraIsActiveTriggerProperties left AuraIsActiveTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.AuraIsActiveTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(AuraIsActiveTriggerProperties?, AuraIsActiveTriggerProperties?) Declaration public static bool operator !=(AuraIsActiveTriggerProperties? left, AuraIsActiveTriggerProperties? right) Parameters Type Name Description AuraIsActiveTriggerProperties left AuraIsActiveTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.IAuraIsActiveTrigger.LinkedAuras.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.IAuraIsActiveTrigger.LinkedAuras.html",
    "title": "Property LinkedAuras | EyeAuras Docs",
    "keywords": "Property LinkedAuras LinkedAuras Declaration IAuraListStateEvaluator LinkedAuras { get; } Property Value Type Description IAuraListStateEvaluator"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.IAuraIsActiveTrigger.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.IAuraIsActiveTrigger.html",
    "title": "Interface IAuraIsActiveTrigger | EyeAuras Docs",
    "keywords": "Interface IAuraIsActiveTrigger Inherited Members IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.DefaultAuras.Triggers.AuraIsActive Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IAuraIsActiveTrigger : IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description LinkedAuras Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.AuraIsActive.html",
    "title": "Namespace EyeAuras.DefaultAuras.Triggers.AuraIsActive | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Triggers.AuraIsActive Classes AuraIsActiveTriggerProperties Interfaces IAuraIsActiveTrigger Enums AuraIsActiveOperationMode"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override DefaultTriggerProperties <Clone>$() Returns Type Description DefaultTriggerProperties Overrides AuraTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.-ctor.html",
    "title": "Constructor DefaultTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor DefaultTriggerProperties DefaultTriggerProperties() Declaration public DefaultTriggerProperties()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(object?) Equals(AuraTriggerPropertiesBase?) Declaration public override sealed bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase?) Equals(DefaultTriggerProperties?) Declaration public bool Equals(DefaultTriggerProperties? other) Parameters Type Name Description DefaultTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.TriggerValue.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.TriggerValue.html",
    "title": "Property TriggerValue | EyeAuras Docs",
    "keywords": "Property TriggerValue TriggerValue Declaration public bool? TriggerValue { get; set; } Property Value Type Description bool?"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.html",
    "title": "Class DefaultTriggerProperties | EyeAuras Docs",
    "keywords": "Class DefaultTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase DefaultTriggerProperties Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> IEquatable<DefaultTriggerProperties> Inherited Members AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Triggers.Default Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public sealed record DefaultTriggerProperties : AuraTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase>, IEquatable<DefaultTriggerProperties> Constructors Name Description DefaultTriggerProperties() Properties Name Description EqualityContract TriggerValue Version Methods Name Description Equals(DefaultTriggerProperties?) Equals(AuraTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(DefaultTriggerProperties?, DefaultTriggerProperties?) operator !=(DefaultTriggerProperties?, DefaultTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(DefaultTriggerProperties?, DefaultTriggerProperties?) Declaration public static bool operator ==(DefaultTriggerProperties? left, DefaultTriggerProperties? right) Parameters Type Name Description DefaultTriggerProperties left DefaultTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.DefaultTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(DefaultTriggerProperties?, DefaultTriggerProperties?) Declaration public static bool operator !=(DefaultTriggerProperties? left, DefaultTriggerProperties? right) Parameters Type Name Description DefaultTriggerProperties left DefaultTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.IDefaultTrigger.TriggerValue.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.IDefaultTrigger.TriggerValue.html",
    "title": "Property TriggerValue | EyeAuras Docs",
    "keywords": "Property TriggerValue TriggerValue Declaration bool? TriggerValue { get; set; } Property Value Type Description bool?"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.IDefaultTrigger.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.IDefaultTrigger.html",
    "title": "Interface IDefaultTrigger | EyeAuras Docs",
    "keywords": "Interface IDefaultTrigger Inherited Members IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.DefaultAuras.Triggers.Default Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IDefaultTrigger : IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description TriggerValue Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Default.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Default.html",
    "title": "Namespace EyeAuras.DefaultAuras.Triggers.Default | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Triggers.Default Classes DefaultTriggerProperties Interfaces IDefaultTrigger"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override FileContainsTriggerProperties <Clone>$() Returns Type Description FileContainsTriggerProperties Overrides AuraTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.-ctor.html",
    "title": "Constructor FileContainsTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor FileContainsTriggerProperties FileContainsTriggerProperties() Declaration public FileContainsTriggerProperties()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(object?) Equals(AuraTriggerPropertiesBase?) Declaration public override sealed bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase?) Equals(FileContainsTriggerProperties?) Declaration public bool Equals(FileContainsTriggerProperties? other) Parameters Type Name Description FileContainsTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.EvaluatorExpression.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.EvaluatorExpression.html",
    "title": "Property EvaluatorExpression | EyeAuras Docs",
    "keywords": "Property EvaluatorExpression EvaluatorExpression Declaration public string EvaluatorExpression { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.EvaluatorIgnoreCase.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.EvaluatorIgnoreCase.html",
    "title": "Property EvaluatorIgnoreCase | EyeAuras Docs",
    "keywords": "Property EvaluatorIgnoreCase EvaluatorIgnoreCase Declaration public bool EvaluatorIgnoreCase { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.EvaluatorType.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.EvaluatorType.html",
    "title": "Property EvaluatorType | EyeAuras Docs",
    "keywords": "Property EvaluatorType EvaluatorType Declaration public TextEvaluatorType EvaluatorType { get; set; } Property Value Type Description TextEvaluatorType"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.TargetFilePath.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.TargetFilePath.html",
    "title": "Property TargetFilePath | EyeAuras Docs",
    "keywords": "Property TargetFilePath TargetFilePath Declaration public string TargetFilePath { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.html",
    "title": "Class FileContainsTriggerProperties | EyeAuras Docs",
    "keywords": "Class FileContainsTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase FileContainsTriggerProperties Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> IEquatable<FileContainsTriggerProperties> Inherited Members AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Triggers.FileContains Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public sealed record FileContainsTriggerProperties : AuraTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase>, IEquatable<FileContainsTriggerProperties> Constructors Name Description FileContainsTriggerProperties() Properties Name Description EqualityContract EvaluatorExpression EvaluatorIgnoreCase EvaluatorType TargetFilePath Version Methods Name Description Equals(FileContainsTriggerProperties?) Equals(AuraTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(FileContainsTriggerProperties?, FileContainsTriggerProperties?) operator !=(FileContainsTriggerProperties?, FileContainsTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(FileContainsTriggerProperties?, FileContainsTriggerProperties?) Declaration public static bool operator ==(FileContainsTriggerProperties? left, FileContainsTriggerProperties? right) Parameters Type Name Description FileContainsTriggerProperties left FileContainsTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.FileContainsTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(FileContainsTriggerProperties?, FileContainsTriggerProperties?) Declaration public static bool operator !=(FileContainsTriggerProperties? left, FileContainsTriggerProperties? right) Parameters Type Name Description FileContainsTriggerProperties left FileContainsTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.IFileContainsTrigger.TargetFile.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.IFileContainsTrigger.TargetFile.html",
    "title": "Property TargetFile | EyeAuras Docs",
    "keywords": "Property TargetFile TargetFile Declaration FileInfo TargetFile { get; set; } Property Value Type Description FileInfo"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.IFileContainsTrigger.TextEvaluator.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.IFileContainsTrigger.TextEvaluator.html",
    "title": "Property TextEvaluator | EyeAuras Docs",
    "keywords": "Property TextEvaluator TextEvaluator Declaration ISwitchableTextEvaluatorViewModel TextEvaluator { get; } Property Value Type Description ISwitchableTextEvaluatorViewModel"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.IFileContainsTrigger.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.IFileContainsTrigger.html",
    "title": "Interface IFileContainsTrigger | EyeAuras Docs",
    "keywords": "Interface IFileContainsTrigger Inherited Members IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.DefaultAuras.Triggers.FileContains Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IFileContainsTrigger : IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description TargetFile TextEvaluator Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.FileContains.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.FileContains.html",
    "title": "Namespace EyeAuras.DefaultAuras.Triggers.FileContains | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Triggers.FileContains Classes FileContainsTriggerProperties Interfaces IFileContainsTrigger"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override HotkeyIsActiveProperties <Clone>$() Returns Type Description HotkeyIsActiveProperties Overrides AuraTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.-ctor.html",
    "title": "Constructor HotkeyIsActiveProperties | EyeAuras Docs",
    "keywords": "Constructor HotkeyIsActiveProperties HotkeyIsActiveProperties() Declaration public HotkeyIsActiveProperties()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.AuraIds.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.AuraIds.html",
    "title": "Property AuraIds | EyeAuras Docs",
    "keywords": "Property AuraIds AuraIds Declaration [Obsolete(\"Replaced with EvaluatorProperties\")] public string[] AuraIds { get; set; } Property Value Type Description string[]"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(object?) Equals(AuraTriggerPropertiesBase?) Declaration public override sealed bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase?) Equals(HotkeyIsActiveProperties?) Declaration public bool Equals(HotkeyIsActiveProperties? other) Parameters Type Name Description HotkeyIsActiveProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.EvaluatorProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.EvaluatorProperties.html",
    "title": "Property EvaluatorProperties | EyeAuras Docs",
    "keywords": "Property EvaluatorProperties EvaluatorProperties Declaration public AuraEvaluatorProperties EvaluatorProperties { get; set; } Property Value Type Description AuraEvaluatorProperties"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.HandleApplicationKeys.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.HandleApplicationKeys.html",
    "title": "Property HandleApplicationKeys | EyeAuras Docs",
    "keywords": "Property HandleApplicationKeys HandleApplicationKeys Declaration public bool HandleApplicationKeys { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.Hotkey.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.Hotkey.html",
    "title": "Property Hotkey | EyeAuras Docs",
    "keywords": "Property Hotkey Hotkey Declaration public string Hotkey { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.HotkeyMode.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.HotkeyMode.html",
    "title": "Property HotkeyMode | EyeAuras Docs",
    "keywords": "Property HotkeyMode HotkeyMode Declaration public HotkeyMode HotkeyMode { get; set; } Property Value Type Description HotkeyMode"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.HotkeySet.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.HotkeySet.html",
    "title": "Property HotkeySet | EyeAuras Docs",
    "keywords": "Property HotkeySet HotkeySet Declaration public HotkeySet HotkeySet { get; set; } Property Value Type Description HotkeySet"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.IgnoreModifiers.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.IgnoreModifiers.html",
    "title": "Property IgnoreModifiers | EyeAuras Docs",
    "keywords": "Property IgnoreModifiers IgnoreModifiers Declaration public bool IgnoreModifiers { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.LinkedAuraIds.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.LinkedAuraIds.html",
    "title": "Property LinkedAuraIds | EyeAuras Docs",
    "keywords": "Property LinkedAuraIds LinkedAuraIds Declaration public IReadOnlyList<string> LinkedAuraIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedAuraIds"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.LinkedFolderIds.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.LinkedFolderIds.html",
    "title": "Property LinkedFolderIds | EyeAuras Docs",
    "keywords": "Property LinkedFolderIds LinkedFolderIds Declaration public IReadOnlyList<string> LinkedFolderIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedFolderIds"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.ReplaceId.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.ReplaceId.html",
    "title": "Method ReplaceId | EyeAuras Docs",
    "keywords": "Method ReplaceId ReplaceId(string, string) Declaration public void ReplaceId(string previousId, string newId) Parameters Type Name Description string previousId string newId Implements IHasLinkedAuraIds.ReplaceId(string, string)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.SuppressKey.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.SuppressKey.html",
    "title": "Property SuppressKey | EyeAuras Docs",
    "keywords": "Property SuppressKey SuppressKey Declaration public bool SuppressKey { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.html",
    "title": "Class HotkeyIsActiveProperties | EyeAuras Docs",
    "keywords": "Class HotkeyIsActiveProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase HotkeyIsActiveProperties Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> IHasLinkedAuraIds IEquatable<HotkeyIsActiveProperties> Inherited Members AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Triggers.HotkeyIsActive Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public sealed record HotkeyIsActiveProperties : AuraTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase>, IHasLinkedAuraIds, IEquatable<HotkeyIsActiveProperties> Constructors Name Description HotkeyIsActiveProperties() Properties Name Description AuraIds EqualityContract EvaluatorProperties HandleApplicationKeys Hotkey HotkeyMode HotkeySet IgnoreModifiers LinkedAuraIds LinkedFolderIds SuppressKey Version Methods Name Description Equals(HotkeyIsActiveProperties?) Equals(AuraTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ReplaceId(string, string) ToString() <Clone>$() Operators Name Description operator ==(HotkeyIsActiveProperties?, HotkeyIsActiveProperties?) operator !=(HotkeyIsActiveProperties?, HotkeyIsActiveProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(HotkeyIsActiveProperties?, HotkeyIsActiveProperties?) Declaration public static bool operator ==(HotkeyIsActiveProperties? left, HotkeyIsActiveProperties? right) Parameters Type Name Description HotkeyIsActiveProperties left HotkeyIsActiveProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeyIsActiveProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(HotkeyIsActiveProperties?, HotkeyIsActiveProperties?) Declaration public static bool operator !=(HotkeyIsActiveProperties? left, HotkeyIsActiveProperties? right) Parameters Type Name Description HotkeyIsActiveProperties left HotkeyIsActiveProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeySet.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.HotkeySet.html",
    "title": "Enum HotkeySet | EyeAuras Docs",
    "keywords": "Enum HotkeySet Namespace: EyeAuras.DefaultAuras.Triggers.HotkeyIsActive Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public enum HotkeySet Fields Name Description Any Keyboard Mouse None Extension Methods ObjectExtensions.AddTo<HotkeySet, TCollection>(HotkeySet, ISourceList<TCollection>) ObjectExtensions.AddTo<HotkeySet, TCollection>(HotkeySet, ICollection<TCollection>) ObjectExtensions.CloneJson<HotkeySet>(HotkeySet) ObjectExtensions.CopyPropertiesTo<HotkeySet, TTarget>(HotkeySet, TTarget) ObjectExtensions.DumpToTextRaw<HotkeySet>(HotkeySet) ObjectExtensions.DumpToText<HotkeySet>(HotkeySet) ObjectExtensions.Dump<HotkeySet>(HotkeySet) ObjectExtensions.GetPropertyAccessor<HotkeySet, TValue>(HotkeySet, Expression<Func<HotkeySet, TValue>>) ObjectExtensions.InsertTo<HotkeySet, TCollection>(HotkeySet, IList<TCollection>, int) ObjectExtensions.ToJson<HotkeySet>(HotkeySet) ObjectExtensions.ToStringSafe<HotkeySet>(HotkeySet) ObjectExtensions.TransferPropertiesTo<HotkeySet, TTarget>(HotkeySet, TTarget, params string[]) XDocumentExtensions.AddTo<HotkeySet>(HotkeySet, XContainer)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.HandleApplicationKeys.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.HandleApplicationKeys.html",
    "title": "Property HandleApplicationKeys | EyeAuras Docs",
    "keywords": "Property HandleApplicationKeys HandleApplicationKeys Declaration bool HandleApplicationKeys { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.HasModifiersInHotkey.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.HasModifiersInHotkey.html",
    "title": "Property HasModifiersInHotkey | EyeAuras Docs",
    "keywords": "Property HasModifiersInHotkey HasModifiersInHotkey Declaration bool HasModifiersInHotkey { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.Hotkey.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.Hotkey.html",
    "title": "Property Hotkey | EyeAuras Docs",
    "keywords": "Property Hotkey Hotkey Declaration HotkeyGesture Hotkey { get; set; } Property Value Type Description HotkeyGesture"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.HotkeyMode.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.HotkeyMode.html",
    "title": "Property HotkeyMode | EyeAuras Docs",
    "keywords": "Property HotkeyMode HotkeyMode Declaration HotkeyMode HotkeyMode { get; set; } Property Value Type Description HotkeyMode"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.HotkeySet.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.HotkeySet.html",
    "title": "Property HotkeySet | EyeAuras Docs",
    "keywords": "Property HotkeySet HotkeySet Declaration HotkeySet HotkeySet { get; set; } Property Value Type Description HotkeySet"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.IgnoreModifiers.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.IgnoreModifiers.html",
    "title": "Property IgnoreModifiers | EyeAuras Docs",
    "keywords": "Property IgnoreModifiers IgnoreModifiers Declaration bool IgnoreModifiers { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.LinkIsActive.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.LinkIsActive.html",
    "title": "Property LinkIsActive | EyeAuras Docs",
    "keywords": "Property LinkIsActive LinkIsActive Declaration bool LinkIsActive { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.LinkedAuras.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.LinkedAuras.html",
    "title": "Property LinkedAuras | EyeAuras Docs",
    "keywords": "Property LinkedAuras LinkedAuras Declaration IAuraListStateEvaluator LinkedAuras { get; } Property Value Type Description IAuraListStateEvaluator"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.SuppressKey.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.SuppressKey.html",
    "title": "Property SuppressKey | EyeAuras Docs",
    "keywords": "Property SuppressKey SuppressKey Declaration bool SuppressKey { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.TriggerValue.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.TriggerValue.html",
    "title": "Property TriggerValue | EyeAuras Docs",
    "keywords": "Property TriggerValue TriggerValue Declaration bool? TriggerValue { get; set; } Property Value Type Description bool?"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.IHotkeyIsActiveTrigger.html",
    "title": "Interface IHotkeyIsActiveTrigger | EyeAuras Docs",
    "keywords": "Interface IHotkeyIsActiveTrigger Inherited Members IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.DefaultAuras.Triggers.HotkeyIsActive Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IHotkeyIsActiveTrigger : IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description HandleApplicationKeys HasModifiersInHotkey Hotkey HotkeyMode HotkeySet IgnoreModifiers LinkIsActive LinkedAuras SuppressKey TriggerValue Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.HotkeyIsActive.html",
    "title": "Namespace EyeAuras.DefaultAuras.Triggers.HotkeyIsActive | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Triggers.HotkeyIsActive Classes HotkeyIsActiveProperties Interfaces IHotkeyIsActiveTrigger Enums HotkeySet"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.ITimerTrigger.TimerActivationPeriod.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.ITimerTrigger.TimerActivationPeriod.html",
    "title": "Property TimerActivationPeriod | EyeAuras Docs",
    "keywords": "Property TimerActivationPeriod TimerActivationPeriod Declaration TimeSpan TimerActivationPeriod { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.ITimerTrigger.TimerActivationTimestamp.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.ITimerTrigger.TimerActivationTimestamp.html",
    "title": "Property TimerActivationTimestamp | EyeAuras Docs",
    "keywords": "Property TimerActivationTimestamp TimerActivationTimestamp Declaration DateTime? TimerActivationTimestamp { get; set; } Property Value Type Description DateTime?"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.ITimerTrigger.TimerDeactivationPeriod.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.ITimerTrigger.TimerDeactivationPeriod.html",
    "title": "Property TimerDeactivationPeriod | EyeAuras Docs",
    "keywords": "Property TimerDeactivationPeriod TimerDeactivationPeriod Declaration TimeSpan TimerDeactivationPeriod { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.ITimerTrigger.TimerDeactivationTimestamp.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.ITimerTrigger.TimerDeactivationTimestamp.html",
    "title": "Property TimerDeactivationTimestamp | EyeAuras Docs",
    "keywords": "Property TimerDeactivationTimestamp TimerDeactivationTimestamp Declaration DateTime? TimerDeactivationTimestamp { get; set; } Property Value Type Description DateTime?"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.ITimerTrigger.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.ITimerTrigger.html",
    "title": "Interface ITimerTrigger | EyeAuras Docs",
    "keywords": "Interface ITimerTrigger Inherited Members IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.DefaultAuras.Triggers.Timer Assembly: EyeAuras.DefaultAuras.dll Syntax public interface ITimerTrigger : IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description TimerActivationPeriod TimerActivationTimestamp TimerDeactivationPeriod TimerDeactivationTimestamp Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override TimerTriggerProperties <Clone>$() Returns Type Description TimerTriggerProperties Overrides TimerTriggerPropertiesV2.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.-ctor.html",
    "title": "Constructor TimerTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor TimerTriggerProperties TimerTriggerProperties() Declaration public TimerTriggerProperties()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides TimerTriggerPropertiesV2.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides TimerTriggerPropertiesV2.Equals(object?) Equals(TimerTriggerPropertiesV2?) Declaration public override sealed bool Equals(TimerTriggerPropertiesV2? other) Parameters Type Name Description TimerTriggerPropertiesV2 other Returns Type Description bool Overrides TimerTriggerPropertiesV2.Equals(TimerTriggerPropertiesV2?) Equals(TimerTriggerProperties?) Declaration public bool Equals(TimerTriggerProperties? other) Parameters Type Name Description TimerTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides TimerTriggerPropertiesV2.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides TimerTriggerPropertiesV2.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides TimerTriggerPropertiesV2.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.html",
    "title": "Class TimerTriggerProperties | EyeAuras Docs",
    "keywords": "Class TimerTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase TimerTriggerPropertiesV2 TimerTriggerProperties Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> IEquatable<TimerTriggerPropertiesV2> IEquatable<TimerTriggerProperties> Inherited Members TimerTriggerPropertiesV2.Equals(AuraTriggerPropertiesBase) TimerTriggerPropertiesV2.ActivationPeriod TimerTriggerPropertiesV2.DeactivationPeriod TimerTriggerPropertiesV2.Version AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Triggers.Timer Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public sealed record TimerTriggerProperties : TimerTriggerPropertiesV2, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase>, IEquatable<TimerTriggerPropertiesV2>, IEquatable<TimerTriggerProperties> Constructors Name Description TimerTriggerProperties() Properties Name Description EqualityContract Methods Name Description Equals(TimerTriggerProperties?) Equals(TimerTriggerPropertiesV2?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(TimerTriggerProperties?, TimerTriggerProperties?) operator !=(TimerTriggerProperties?, TimerTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(TimerTriggerProperties?, TimerTriggerProperties?) Declaration public static bool operator ==(TimerTriggerProperties? left, TimerTriggerProperties? right) Parameters Type Name Description TimerTriggerProperties left TimerTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(TimerTriggerProperties?, TimerTriggerProperties?) Declaration public static bool operator !=(TimerTriggerProperties? left, TimerTriggerProperties? right) Parameters Type Name Description TimerTriggerProperties left TimerTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override TimerTriggerPropertiesV1 <Clone>$() Returns Type Description TimerTriggerPropertiesV1 Overrides AuraTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.-ctor.html",
    "title": "Constructor TimerTriggerPropertiesV1 | EyeAuras Docs",
    "keywords": "Constructor TimerTriggerPropertiesV1 TimerTriggerPropertiesV1(TimerTriggerPropertiesV1) Declaration protected TimerTriggerPropertiesV1(TimerTriggerPropertiesV1 original) Parameters Type Name Description TimerTriggerPropertiesV1 original TimerTriggerPropertiesV1() Declaration public TimerTriggerPropertiesV1()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.ActivationPeriod.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.ActivationPeriod.html",
    "title": "Property ActivationPeriod | EyeAuras Docs",
    "keywords": "Property ActivationPeriod ActivationPeriod Timer activation period, i.e. the period of time that trigger will stay Inactive before Activating Declaration public TimeSpan ActivationPeriod { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(object?) Equals(AuraTriggerPropertiesBase?) Declaration public override sealed bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase?) Equals(TimerTriggerPropertiesV1?) Declaration public virtual bool Equals(TimerTriggerPropertiesV1? other) Parameters Type Name Description TimerTriggerPropertiesV1 other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.html",
    "title": "Class TimerTriggerPropertiesV1 | EyeAuras Docs",
    "keywords": "Class TimerTriggerPropertiesV1 Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase TimerTriggerPropertiesV1 Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> IEquatable<TimerTriggerPropertiesV1> Inherited Members AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Triggers.Timer Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public record TimerTriggerPropertiesV1 : AuraTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase>, IEquatable<TimerTriggerPropertiesV1> Constructors Name Description TimerTriggerPropertiesV1() TimerTriggerPropertiesV1(TimerTriggerPropertiesV1) Properties Name Description ActivationPeriod Timer activation period, i.e. the period of time that trigger will stay Inactive before Activating EqualityContract Version Methods Name Description Equals(TimerTriggerPropertiesV1?) Equals(AuraTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(TimerTriggerPropertiesV1?, TimerTriggerPropertiesV1?) operator !=(TimerTriggerPropertiesV1?, TimerTriggerPropertiesV1?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(TimerTriggerPropertiesV1?, TimerTriggerPropertiesV1?) Declaration public static bool operator ==(TimerTriggerPropertiesV1? left, TimerTriggerPropertiesV1? right) Parameters Type Name Description TimerTriggerPropertiesV1 left TimerTriggerPropertiesV1 right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV1.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(TimerTriggerPropertiesV1?, TimerTriggerPropertiesV1?) Declaration public static bool operator !=(TimerTriggerPropertiesV1? left, TimerTriggerPropertiesV1? right) Parameters Type Name Description TimerTriggerPropertiesV1 left TimerTriggerPropertiesV1 right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override TimerTriggerPropertiesV2 <Clone>$() Returns Type Description TimerTriggerPropertiesV2 Overrides AuraTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.-ctor.html",
    "title": "Constructor TimerTriggerPropertiesV2 | EyeAuras Docs",
    "keywords": "Constructor TimerTriggerPropertiesV2 TimerTriggerPropertiesV2(TimerTriggerPropertiesV2) Declaration protected TimerTriggerPropertiesV2(TimerTriggerPropertiesV2 original) Parameters Type Name Description TimerTriggerPropertiesV2 original TimerTriggerPropertiesV2() Declaration public TimerTriggerPropertiesV2()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.ActivationPeriod.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.ActivationPeriod.html",
    "title": "Property ActivationPeriod | EyeAuras Docs",
    "keywords": "Property ActivationPeriod ActivationPeriod Timer activation period, i.e. the period of time that trigger will stay Inactive before Activating Declaration public TimeSpan ActivationPeriod { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.DeactivationPeriod.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.DeactivationPeriod.html",
    "title": "Property DeactivationPeriod | EyeAuras Docs",
    "keywords": "Property DeactivationPeriod DeactivationPeriod Timer deactivation period, i.e. the period of time that trigger will stay Active before Deactivating Declaration public TimeSpan DeactivationPeriod { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(object?) Equals(AuraTriggerPropertiesBase?) Declaration public override sealed bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase?) Equals(TimerTriggerPropertiesV2?) Declaration public virtual bool Equals(TimerTriggerPropertiesV2? other) Parameters Type Name Description TimerTriggerPropertiesV2 other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.html",
    "title": "Class TimerTriggerPropertiesV2 | EyeAuras Docs",
    "keywords": "Class TimerTriggerPropertiesV2 Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase TimerTriggerPropertiesV2 TimerTriggerProperties Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> IEquatable<TimerTriggerPropertiesV2> Inherited Members AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Triggers.Timer Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public record TimerTriggerPropertiesV2 : AuraTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase>, IEquatable<TimerTriggerPropertiesV2> Constructors Name Description TimerTriggerPropertiesV2() TimerTriggerPropertiesV2(TimerTriggerPropertiesV2) Properties Name Description ActivationPeriod Timer activation period, i.e. the period of time that trigger will stay Inactive before Activating DeactivationPeriod Timer deactivation period, i.e. the period of time that trigger will stay Active before Deactivating EqualityContract Version Methods Name Description Equals(TimerTriggerPropertiesV2?) Equals(AuraTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(TimerTriggerPropertiesV2?, TimerTriggerPropertiesV2?) operator !=(TimerTriggerPropertiesV2?, TimerTriggerPropertiesV2?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(TimerTriggerPropertiesV2?, TimerTriggerPropertiesV2?) Declaration public static bool operator ==(TimerTriggerPropertiesV2? left, TimerTriggerPropertiesV2? right) Parameters Type Name Description TimerTriggerPropertiesV2 left TimerTriggerPropertiesV2 right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.TimerTriggerPropertiesV2.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(TimerTriggerPropertiesV2?, TimerTriggerPropertiesV2?) Declaration public static bool operator !=(TimerTriggerPropertiesV2? left, TimerTriggerPropertiesV2? right) Parameters Type Name Description TimerTriggerPropertiesV2 left TimerTriggerPropertiesV2 right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.Timer.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.Timer.html",
    "title": "Namespace EyeAuras.DefaultAuras.Triggers.Timer | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Triggers.Timer Classes TimerTriggerProperties TimerTriggerPropertiesV1 TimerTriggerPropertiesV2 Interfaces ITimerTrigger"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.IWinActiveTrigger.ActiveWindow.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.IWinActiveTrigger.ActiveWindow.html",
    "title": "Property ActiveWindow | EyeAuras Docs",
    "keywords": "Property ActiveWindow ActiveWindow Resolved window that matches TargetWindow expression Declaration IWindowHandle ActiveWindow { get; } Property Value Type Description IWindowHandle"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.IWinActiveTrigger.TargetWindow.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.IWinActiveTrigger.TargetWindow.html",
    "title": "Property TargetWindow | EyeAuras Docs",
    "keywords": "Property TargetWindow TargetWindow Specifies expression that will be used to find specific window Declaration WindowMatchExpression TargetWindow { get; set; } Property Value Type Description WindowMatchExpression"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.IWinActiveTrigger.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.IWinActiveTrigger.html",
    "title": "Interface IWinActiveTrigger | EyeAuras Docs",
    "keywords": "Interface IWinActiveTrigger Inherited Members IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.DefaultAuras.Triggers.WinActive Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IWinActiveTrigger : IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description ActiveWindow Resolved window that matches TargetWindow expression TargetWindow Specifies expression that will be used to find specific window Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override WinActiveTriggerProperties <Clone>$() Returns Type Description WinActiveTriggerProperties Overrides AuraTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.-ctor.html",
    "title": "Constructor WinActiveTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor WinActiveTriggerProperties WinActiveTriggerProperties() Declaration public WinActiveTriggerProperties()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(object?) Equals(AuraTriggerPropertiesBase?) Declaration public override sealed bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase?) Equals(WinActiveTriggerProperties?) Declaration public bool Equals(WinActiveTriggerProperties? other) Parameters Type Name Description WinActiveTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.WindowMatchParams.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.WindowMatchParams.html",
    "title": "Property WindowMatchParams | EyeAuras Docs",
    "keywords": "Property WindowMatchParams WindowMatchParams Declaration public WindowMatchExpression WindowMatchParams { get; set; } Property Value Type Description WindowMatchExpression"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.html",
    "title": "Class WinActiveTriggerProperties | EyeAuras Docs",
    "keywords": "Class WinActiveTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase WinActiveTriggerProperties Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> IEquatable<WinActiveTriggerProperties> Inherited Members AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Triggers.WinActive Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public sealed record WinActiveTriggerProperties : AuraTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase>, IEquatable<WinActiveTriggerProperties> Constructors Name Description WinActiveTriggerProperties() Properties Name Description EqualityContract Version WindowMatchParams Methods Name Description Equals(WinActiveTriggerProperties?) Equals(AuraTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(WinActiveTriggerProperties?, WinActiveTriggerProperties?) operator !=(WinActiveTriggerProperties?, WinActiveTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(WinActiveTriggerProperties?, WinActiveTriggerProperties?) Declaration public static bool operator ==(WinActiveTriggerProperties? left, WinActiveTriggerProperties? right) Parameters Type Name Description WinActiveTriggerProperties left WinActiveTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.WinActiveTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(WinActiveTriggerProperties?, WinActiveTriggerProperties?) Declaration public static bool operator !=(WinActiveTriggerProperties? left, WinActiveTriggerProperties? right) Parameters Type Name Description WinActiveTriggerProperties left WinActiveTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinActive.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinActive.html",
    "title": "Namespace EyeAuras.DefaultAuras.Triggers.WinActive | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Triggers.WinActive Classes WinActiveTriggerProperties Interfaces IWinActiveTrigger"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.IWinExistsTrigger.ActiveWindow.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.IWinExistsTrigger.ActiveWindow.html",
    "title": "Property ActiveWindow | EyeAuras Docs",
    "keywords": "Property ActiveWindow ActiveWindow Resolved window that matches TargetWindow expression Declaration IWindowHandle ActiveWindow { get; } Property Value Type Description IWindowHandle"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.IWinExistsTrigger.TargetWindow.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.IWinExistsTrigger.TargetWindow.html",
    "title": "Property TargetWindow | EyeAuras Docs",
    "keywords": "Property TargetWindow TargetWindow Specifies expression that will be used to find specific window Declaration WindowMatchExpression TargetWindow { get; set; } Property Value Type Description WindowMatchExpression"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.IWinExistsTrigger.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.IWinExistsTrigger.html",
    "title": "Interface IWinExistsTrigger | EyeAuras Docs",
    "keywords": "Interface IWinExistsTrigger Inherited Members IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.DefaultAuras.Triggers.WinExists Assembly: EyeAuras.DefaultAuras.dll Syntax public interface IWinExistsTrigger : IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description ActiveWindow Resolved window that matches TargetWindow expression TargetWindow Specifies expression that will be used to find specific window Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override WinExistsTriggerProperties <Clone>$() Returns Type Description WinExistsTriggerProperties Overrides AuraTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.-ctor.html",
    "title": "Constructor WinExistsTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor WinExistsTriggerProperties WinExistsTriggerProperties() Declaration public WinExistsTriggerProperties()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(object?) Equals(AuraTriggerPropertiesBase?) Declaration public override sealed bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase?) Equals(WinExistsTriggerProperties?) Declaration public bool Equals(WinExistsTriggerProperties? other) Parameters Type Name Description WinExistsTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.Version.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.WindowMatchParams.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.WindowMatchParams.html",
    "title": "Property WindowMatchParams | EyeAuras Docs",
    "keywords": "Property WindowMatchParams WindowMatchParams Declaration public WindowMatchExpression WindowMatchParams { get; set; } Property Value Type Description WindowMatchExpression"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.html",
    "title": "Class WinExistsTriggerProperties | EyeAuras Docs",
    "keywords": "Class WinExistsTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase WinExistsTriggerProperties Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> IEquatable<WinExistsTriggerProperties> Inherited Members AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.DefaultAuras.Triggers.WinExists Assembly: EyeAuras.DefaultAuras.Metadata.dll Syntax public sealed record WinExistsTriggerProperties : AuraTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase>, IEquatable<WinExistsTriggerProperties> Constructors Name Description WinExistsTriggerProperties() Properties Name Description EqualityContract Version WindowMatchParams Methods Name Description Equals(WinExistsTriggerProperties?) Equals(AuraTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(WinExistsTriggerProperties?, WinExistsTriggerProperties?) operator !=(WinExistsTriggerProperties?, WinExistsTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(WinExistsTriggerProperties?, WinExistsTriggerProperties?) Declaration public static bool operator ==(WinExistsTriggerProperties? left, WinExistsTriggerProperties? right) Parameters Type Name Description WinExistsTriggerProperties left WinExistsTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.WinExistsTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(WinExistsTriggerProperties?, WinExistsTriggerProperties?) Declaration public static bool operator !=(WinExistsTriggerProperties? left, WinExistsTriggerProperties? right) Parameters Type Name Description WinExistsTriggerProperties left WinExistsTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.DefaultAuras.Triggers.WinExists.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.WinExists.html",
    "title": "Namespace EyeAuras.DefaultAuras.Triggers.WinExists | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Triggers.WinExists Classes WinExistsTriggerProperties Interfaces IWinExistsTrigger"
  },
  "api/EyeAuras.DefaultAuras.Triggers.html": {
    "href": "api/EyeAuras.DefaultAuras.Triggers.html",
    "title": "Namespace EyeAuras.DefaultAuras.Triggers | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras.Triggers Namespaces EyeAuras.DefaultAuras.Triggers.AuraIsActive EyeAuras.DefaultAuras.Triggers.Default EyeAuras.DefaultAuras.Triggers.FileContains EyeAuras.DefaultAuras.Triggers.HotkeyIsActive EyeAuras.DefaultAuras.Triggers.Timer EyeAuras.DefaultAuras.Triggers.WinActive EyeAuras.DefaultAuras.Triggers.WinExists"
  },
  "api/EyeAuras.DefaultAuras.html": {
    "href": "api/EyeAuras.DefaultAuras.html",
    "title": "Namespace EyeAuras.DefaultAuras | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.DefaultAuras Namespaces EyeAuras.DefaultAuras.Actions EyeAuras.DefaultAuras.DependenciesViewer EyeAuras.DefaultAuras.Overlays EyeAuras.DefaultAuras.Prism EyeAuras.DefaultAuras.Scripting EyeAuras.DefaultAuras.Triggers"
  },
  "api/EyeAuras.Graphics.ImageEffects.ResizeImageMethod.html": {
    "href": "api/EyeAuras.Graphics.ImageEffects.ResizeImageMethod.html",
    "title": "Enum ResizeImageMethod | EyeAuras Docs",
    "keywords": "Enum ResizeImageMethod Namespace: EyeAuras.Graphics.ImageEffects Assembly: EyeAuras.Graphics.dll Syntax public enum ResizeImageMethod Fields Name Description Letterbox LetterboxWhite Stretch Extension Methods OpenCvExtensions.CalculateTransformation(ResizeImageMethod, Size, Size) ObjectExtensions.AddTo<ResizeImageMethod, TCollection>(ResizeImageMethod, ISourceList<TCollection>) ObjectExtensions.AddTo<ResizeImageMethod, TCollection>(ResizeImageMethod, ICollection<TCollection>) ObjectExtensions.CloneJson<ResizeImageMethod>(ResizeImageMethod) ObjectExtensions.CopyPropertiesTo<ResizeImageMethod, TTarget>(ResizeImageMethod, TTarget) ObjectExtensions.DumpToTextRaw<ResizeImageMethod>(ResizeImageMethod) ObjectExtensions.DumpToText<ResizeImageMethod>(ResizeImageMethod) ObjectExtensions.Dump<ResizeImageMethod>(ResizeImageMethod) ObjectExtensions.GetPropertyAccessor<ResizeImageMethod, TValue>(ResizeImageMethod, Expression<Func<ResizeImageMethod, TValue>>) ObjectExtensions.InsertTo<ResizeImageMethod, TCollection>(ResizeImageMethod, IList<TCollection>, int) ObjectExtensions.ToJson<ResizeImageMethod>(ResizeImageMethod) ObjectExtensions.ToStringSafe<ResizeImageMethod>(ResizeImageMethod) ObjectExtensions.TransferPropertiesTo<ResizeImageMethod, TTarget>(ResizeImageMethod, TTarget, params string[]) XDocumentExtensions.AddTo<ResizeImageMethod>(ResizeImageMethod, XContainer)"
  },
  "api/EyeAuras.Graphics.ImageEffects.html": {
    "href": "api/EyeAuras.Graphics.ImageEffects.html",
    "title": "Namespace EyeAuras.Graphics.ImageEffects | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Graphics.ImageEffects Enums ResizeImageMethod"
  },
  "api/EyeAuras.Graphics.Properties.ModuleInitializer.Initialize.html": {
    "href": "api/EyeAuras.Graphics.Properties.ModuleInitializer.Initialize.html",
    "title": "Method Initialize | EyeAuras Docs",
    "keywords": "Method Initialize Initialize() Declaration public static void Initialize()"
  },
  "api/EyeAuras.Graphics.Properties.ModuleInitializer.html": {
    "href": "api/EyeAuras.Graphics.Properties.ModuleInitializer.html",
    "title": "Class ModuleInitializer | EyeAuras Docs",
    "keywords": "Class ModuleInitializer Inheritance object ModuleInitializer Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Graphics.Properties Assembly: EyeAuras.Graphics.dll Syntax public static class ModuleInitializer Methods Name Description Initialize()"
  },
  "api/EyeAuras.Graphics.Properties.html": {
    "href": "api/EyeAuras.Graphics.Properties.html",
    "title": "Namespace EyeAuras.Graphics.Properties | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Graphics.Properties Classes ModuleInitializer"
  },
  "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToColor.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToColor.html",
    "title": "Method ToColor | EyeAuras Docs",
    "keywords": "Method ToColor ToColor<TColor>(Color) Declaration public static TColor ToColor<TColor>(this Color color) where TColor : struct, IColor Parameters Type Name Description Color color Returns Type Description TColor Type Parameters Name Description TColor ToColor<TColor>(Color?) Declaration public static TColor? ToColor<TColor>(this Color? color) where TColor : struct, IColor Parameters Type Name Description Color? color Returns Type Description TColor? Type Parameters Name Description TColor ToColor<TColor>(Color) Declaration public static TColor ToColor<TColor>(this Color color) where TColor : struct, IColor Parameters Type Name Description Color color Returns Type Description TColor Type Parameters Name Description TColor ToColor<TColor>(Color?) Declaration public static TColor? ToColor<TColor>(this Color? color) where TColor : struct, IColor Parameters Type Name Description Color? color Returns Type Description TColor? Type Parameters Name Description TColor ToColor<TColor, TOtherColor>(TColor) Declaration public static TOtherColor ToColor<TColor, TOtherColor>(this TColor color) where TColor : struct, IColor where TOtherColor : struct, IColor Parameters Type Name Description TColor color Returns Type Description TOtherColor Type Parameters Name Description TColor TOtherColor"
  },
  "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToHsv.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToHsv.html",
    "title": "Method ToHsv | EyeAuras Docs",
    "keywords": "Method ToHsv ToHsv(Color) Declaration public static Hsv ToHsv(this Color color) Parameters Type Name Description Color color Returns Type Description Hsv"
  },
  "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToLabColor.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToLabColor.html",
    "title": "Method ToLabColor | EyeAuras Docs",
    "keywords": "Method ToLabColor ToLabColor(Color) Declaration public static LabColor ToLabColor(this Color color) Parameters Type Name Description Color color Returns Type Description LabColor"
  },
  "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToLabColorOrDefault.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToLabColorOrDefault.html",
    "title": "Method ToLabColorOrDefault | EyeAuras Docs",
    "keywords": "Method ToLabColorOrDefault ToLabColorOrDefault(Color?) Declaration public static LabColor? ToLabColorOrDefault(this Color? color) Parameters Type Name Description Color? color Returns Type Description LabColor?"
  },
  "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToWinColor.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToWinColor.html",
    "title": "Method ToWinColor | EyeAuras Docs",
    "keywords": "Method ToWinColor ToWinColor<TColor>(TColor) Declaration public static Color ToWinColor<TColor>(this TColor color) where TColor : struct, IColor Parameters Type Name Description TColor color Returns Type Description Color Type Parameters Name Description TColor"
  },
  "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToWinPixelFormat.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToWinPixelFormat.html",
    "title": "Method ToWinPixelFormat | EyeAuras Docs",
    "keywords": "Method ToWinPixelFormat ToWinPixelFormat<TColor, TDepth>(Image<TColor, TDepth>) Declaration public static PixelFormat ToWinPixelFormat<TColor, TDepth>(this Image<TColor, TDepth> image) where TColor : struct, IColor where TDepth : new() Parameters Type Name Description Image<TColor, TDepth> image Returns Type Description PixelFormat Type Parameters Name Description TColor TDepth"
  },
  "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToWpfColor.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToWpfColor.html",
    "title": "Method ToWpfColor | EyeAuras Docs",
    "keywords": "Method ToWpfColor ToWpfColor<TColor>(TColor) Declaration public static Color ToWpfColor<TColor>(this TColor color) where TColor : struct, IColor Parameters Type Name Description TColor color Returns Type Description Color Type Parameters Name Description TColor ToWpfColor<TColor>(TColor?) Declaration public static Color? ToWpfColor<TColor>(this TColor? color) where TColor : struct, IColor Parameters Type Name Description TColor? color Returns Type Description Color? Type Parameters Name Description TColor"
  },
  "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToWpfPixelFormat.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.ToWpfPixelFormat.html",
    "title": "Method ToWpfPixelFormat | EyeAuras Docs",
    "keywords": "Method ToWpfPixelFormat ToWpfPixelFormat(Type) Declaration public static PixelFormat ToWpfPixelFormat(Type colorType) Parameters Type Name Description Type colorType Returns Type Description PixelFormat ToWpfPixelFormat<TColor, TDepth>(Image<TColor, TDepth>) Declaration public static PixelFormat ToWpfPixelFormat<TColor, TDepth>(this Image<TColor, TDepth> image) where TColor : struct, IColor where TDepth : new() Parameters Type Name Description Image<TColor, TDepth> image Returns Type Description PixelFormat Type Parameters Name Description TColor TDepth"
  },
  "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ColorExtensions.html",
    "title": "Class ColorExtensions | EyeAuras Docs",
    "keywords": "Class ColorExtensions Inheritance object ColorExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Graphics.Scaffolding Assembly: EyeAuras.Graphics.dll Syntax public static class ColorExtensions Methods Name Description ToColor<TColor>(Color) ToColor<TColor>(Color?) ToColor<TColor>(Color?) ToColor<TColor>(Color) ToColor<TColor, TOtherColor>(TColor) ToHsv(Color) ToLabColor(Color) ToLabColorOrDefault(Color?) ToWinColor<TColor>(TColor) ToWinPixelFormat<TColor, TDepth>(Image<TColor, TDepth>) ToWpfColor<TColor>(TColor?) ToWpfColor<TColor>(TColor) ToWpfPixelFormat(Type) ToWpfPixelFormat<TColor, TDepth>(Image<TColor, TDepth>)"
  },
  "api/EyeAuras.Graphics.Scaffolding.DirectXExtensions.CopyToBitmap.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.DirectXExtensions.CopyToBitmap.html",
    "title": "Method CopyToBitmap | EyeAuras Docs",
    "keywords": "Method CopyToBitmap CopyToBitmap(Texture2D, Device, Rectangle) Declaration public static Bitmap CopyToBitmap(this Texture2D textureToCopy, Device device, Rectangle region) Parameters Type Name Description Texture2D textureToCopy Device device Rectangle region Returns Type Description Bitmap"
  },
  "api/EyeAuras.Graphics.Scaffolding.DirectXExtensions.GetBytesPerPixel.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.DirectXExtensions.GetBytesPerPixel.html",
    "title": "Method GetBytesPerPixel | EyeAuras Docs",
    "keywords": "Method GetBytesPerPixel GetBytesPerPixel(PixelFormat) Declaration public static int GetBytesPerPixel(this PixelFormat pixelFormat) Parameters Type Name Description PixelFormat pixelFormat Returns Type Description int"
  },
  "api/EyeAuras.Graphics.Scaffolding.DirectXExtensions.ToBitmap.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.DirectXExtensions.ToBitmap.html",
    "title": "Method ToBitmap | EyeAuras Docs",
    "keywords": "Method ToBitmap ToBitmap(Texture2D, Device) Declaration public static Bitmap ToBitmap(this Texture2D textureToCopy, Device device) Parameters Type Name Description Texture2D textureToCopy Device device Returns Type Description Bitmap ToBitmap(Texture2D, Device, Rectangle) Declaration public static Bitmap ToBitmap(this Texture2D textureToCopy, Device device, Rectangle region) Parameters Type Name Description Texture2D textureToCopy Device device Rectangle region Returns Type Description Bitmap ToBitmap(Texture2D, Texture2D, Device, Rectangle) Declaration public static Bitmap ToBitmap(this Texture2D textureToCopy, Texture2D outputTexture, Device device, Rectangle region) Parameters Type Name Description Texture2D textureToCopy Texture2D outputTexture Device device Rectangle region Returns Type Description Bitmap"
  },
  "api/EyeAuras.Graphics.Scaffolding.DirectXExtensions.ToPixelFormat.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.DirectXExtensions.ToPixelFormat.html",
    "title": "Method ToPixelFormat | EyeAuras Docs",
    "keywords": "Method ToPixelFormat ToPixelFormat(Format) Declaration public static PixelFormat ToPixelFormat(this Format format) Parameters Type Name Description Format format Returns Type Description PixelFormat"
  },
  "api/EyeAuras.Graphics.Scaffolding.DirectXExtensions.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.DirectXExtensions.html",
    "title": "Class DirectXExtensions | EyeAuras Docs",
    "keywords": "Class DirectXExtensions Inheritance object DirectXExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Graphics.Scaffolding Assembly: EyeAuras.Graphics.dll Syntax public static class DirectXExtensions Methods Name Description CopyToBitmap(Texture2D, Device, Rectangle) GetBytesPerPixel(PixelFormat) ToBitmap(Texture2D, Device) ToBitmap(Texture2D, Device, Rectangle) ToBitmap(Texture2D, Texture2D, Device, Rectangle) ToPixelFormat(Format)"
  },
  "api/EyeAuras.Graphics.Scaffolding.DrawingExtensions.DrawMask.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.DrawingExtensions.DrawMask.html",
    "title": "Method DrawMask | EyeAuras Docs",
    "keywords": "Method DrawMask DrawMask<TColor, TDepth>(Image<TColor, TDepth>, Image<Gray, byte>, TColor, double) Declaration public static void DrawMask<TColor, TDepth>(this Image<TColor, TDepth> image, Image<Gray, byte> mask, TColor color, double alpha = 0.5) where TColor : struct, IColor where TDepth : new() Parameters Type Name Description Image<TColor, TDepth> image Image<Gray, byte> mask TColor color double alpha Type Parameters Name Description TColor TDepth"
  },
  "api/EyeAuras.Graphics.Scaffolding.DrawingExtensions.DrawPolygon.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.DrawingExtensions.DrawPolygon.html",
    "title": "Method DrawPolygon | EyeAuras Docs",
    "keywords": "Method DrawPolygon DrawPolygon<TColor>(Image<TColor, byte>, PointF[], TColor, int) Declaration public static void DrawPolygon<TColor>(this Image<TColor, byte> image, PointF[] polygonPoints, TColor color, int thickness) where TColor : struct, IColor Parameters Type Name Description Image<TColor, byte> image PointF[] polygonPoints TColor color int thickness Type Parameters Name Description TColor"
  },
  "api/EyeAuras.Graphics.Scaffolding.DrawingExtensions.DrawPolygonWithClipping.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.DrawingExtensions.DrawPolygonWithClipping.html",
    "title": "Method DrawPolygonWithClipping | EyeAuras Docs",
    "keywords": "Method DrawPolygonWithClipping DrawPolygonWithClipping<TColor>(Image<TColor, byte>, PointF[], TColor, int) Declaration public static void DrawPolygonWithClipping<TColor>(this Image<TColor, byte> image, PointF[] polygonPoints, TColor color, int thickness) where TColor : struct, IColor Parameters Type Name Description Image<TColor, byte> image PointF[] polygonPoints TColor color int thickness Type Parameters Name Description TColor"
  },
  "api/EyeAuras.Graphics.Scaffolding.DrawingExtensions.PreparePolygonMask.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.DrawingExtensions.PreparePolygonMask.html",
    "title": "Method PreparePolygonMask | EyeAuras Docs",
    "keywords": "Method PreparePolygonMask PreparePolygonMask(Size, PointF[], int) Declaration public static Image<Gray, byte> PreparePolygonMask(Size size, PointF[] polygonPoints, int thickness) Parameters Type Name Description Size size PointF[] polygonPoints int thickness Returns Type Description Image<Gray, byte>"
  },
  "api/EyeAuras.Graphics.Scaffolding.DrawingExtensions.ToPoint.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.DrawingExtensions.ToPoint.html",
    "title": "Method ToPoint | EyeAuras Docs",
    "keywords": "Method ToPoint ToPoint(PointF) Declaration public static Point ToPoint(this PointF point) Parameters Type Name Description PointF point Returns Type Description Point"
  },
  "api/EyeAuras.Graphics.Scaffolding.DrawingExtensions.ToPointF.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.DrawingExtensions.ToPointF.html",
    "title": "Method ToPointF | EyeAuras Docs",
    "keywords": "Method ToPointF ToPointF(Point) Declaration public static PointF ToPointF(this Point point) Parameters Type Name Description Point point Returns Type Description PointF"
  },
  "api/EyeAuras.Graphics.Scaffolding.DrawingExtensions.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.DrawingExtensions.html",
    "title": "Class DrawingExtensions | EyeAuras Docs",
    "keywords": "Class DrawingExtensions Inheritance object DrawingExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Graphics.Scaffolding Assembly: EyeAuras.Graphics.dll Syntax public static class DrawingExtensions Methods Name Description DrawMask<TColor, TDepth>(Image<TColor, TDepth>, Image<Gray, byte>, TColor, double) DrawPolygonWithClipping<TColor>(Image<TColor, byte>, PointF[], TColor, int) DrawPolygon<TColor>(Image<TColor, byte>, PointF[], TColor, int) PreparePolygonMask(Size, PointF[], int) ToPoint(PointF) ToPointF(Point)"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageStitcher.-ctor.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageStitcher.-ctor.html",
    "title": "Constructor ImageStitcher | EyeAuras Docs",
    "keywords": "Constructor ImageStitcher ImageStitcher() Declaration public ImageStitcher()"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageStitcher.Add.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageStitcher.Add.html",
    "title": "Method Add | EyeAuras Docs",
    "keywords": "Method Add Add(ImageWithKeyPoints) Declaration public void Add(ImageWithKeyPoints imageWithKeyPoints) Parameters Type Name Description ImageWithKeyPoints imageWithKeyPoints Add(Image<Bgr, byte>) Declaration public ImageWithKeyPoints Add(Image<Bgr, byte> inputImage) Parameters Type Name Description Image<Bgr, byte> inputImage Returns Type Description ImageWithKeyPoints"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageStitcher.Canvas.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageStitcher.Canvas.html",
    "title": "Property Canvas | EyeAuras Docs",
    "keywords": "Property Canvas Canvas Declaration public Image<Bgr, byte> Canvas { get; } Property Value Type Description Image<Bgr, byte>"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageStitcher.KeyPoints.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageStitcher.KeyPoints.html",
    "title": "Property KeyPoints | EyeAuras Docs",
    "keywords": "Property KeyPoints KeyPoints Declaration public VectorOfKeyPoint KeyPoints { get; } Property Value Type Description VectorOfKeyPoint"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageStitcher.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageStitcher.html",
    "title": "Class ImageStitcher | EyeAuras Docs",
    "keywords": "Class ImageStitcher Inheritance object ImageStitcher Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Graphics.Scaffolding Assembly: EyeAuras.Graphics.dll Syntax public sealed class ImageStitcher Constructors Name Description ImageStitcher() Properties Name Description Canvas KeyPoints Methods Name Description Add(Image<Bgr, byte>) Add(ImageWithKeyPoints) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.-Clone--.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public ImageWithKeyPoints <Clone>$() Returns Type Description ImageWithKeyPoints"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.-ctor.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.-ctor.html",
    "title": "Constructor ImageWithKeyPoints | EyeAuras Docs",
    "keywords": "Constructor ImageWithKeyPoints ImageWithKeyPoints() Declaration public ImageWithKeyPoints()"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.Descriptors.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.Descriptors.html",
    "title": "Property Descriptors | EyeAuras Docs",
    "keywords": "Property Descriptors Descriptors Declaration public Mat Descriptors { get; init; } Property Value Type Description Mat"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.Dispose.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.Dispose.html",
    "title": "Method Dispose | EyeAuras Docs",
    "keywords": "Method Dispose Dispose() Declaration public void Dispose() Implements IDisposable.Dispose()"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.Equals.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(ImageWithKeyPoints?) Declaration public bool Equals(ImageWithKeyPoints? other) Parameters Type Name Description ImageWithKeyPoints other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.GetHashCode.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.Image.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.Image.html",
    "title": "Property Image | EyeAuras Docs",
    "keywords": "Property Image Image Declaration public Image<Bgr, byte> Image { get; init; } Property Value Type Description Image<Bgr, byte>"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.KeyPoints.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.KeyPoints.html",
    "title": "Property KeyPoints | EyeAuras Docs",
    "keywords": "Property KeyPoints KeyPoints Declaration public VectorOfKeyPoint KeyPoints { get; init; } Property Value Type Description VectorOfKeyPoint"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.ToString.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.html",
    "title": "Class ImageWithKeyPoints | EyeAuras Docs",
    "keywords": "Class ImageWithKeyPoints Inheritance object ImageWithKeyPoints Implements IDisposable IEquatable<ImageWithKeyPoints> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Graphics.Scaffolding Assembly: EyeAuras.Graphics.dll Syntax public sealed record ImageWithKeyPoints : IDisposable, IEquatable<ImageWithKeyPoints> Constructors Name Description ImageWithKeyPoints() Properties Name Description Descriptors Image KeyPoints Methods Name Description Dispose() Equals(ImageWithKeyPoints?) Equals(object?) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(ImageWithKeyPoints?, ImageWithKeyPoints?) operator !=(ImageWithKeyPoints?, ImageWithKeyPoints?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.op_Equality.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ImageWithKeyPoints?, ImageWithKeyPoints?) Declaration public static bool operator ==(ImageWithKeyPoints? left, ImageWithKeyPoints? right) Parameters Type Name Description ImageWithKeyPoints left ImageWithKeyPoints right Returns Type Description bool"
  },
  "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.op_Inequality.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.ImageWithKeyPoints.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ImageWithKeyPoints?, ImageWithKeyPoints?) Declaration public static bool operator !=(ImageWithKeyPoints? left, ImageWithKeyPoints? right) Parameters Type Name Description ImageWithKeyPoints left ImageWithKeyPoints right Returns Type Description bool"
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.AddNoise.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.AddNoise.html",
    "title": "Method AddNoise | EyeAuras Docs",
    "keywords": "Method AddNoise AddNoise(Mat) Declaration public static void AddNoise(this Mat mat) Parameters Type Name Description Mat mat"
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.AsReadOnlySpan.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.AsReadOnlySpan.html",
    "title": "Method AsReadOnlySpan | EyeAuras Docs",
    "keywords": "Method AsReadOnlySpan AsReadOnlySpan<T>(Mat) Declaration public static ReadOnlySpan<T> AsReadOnlySpan<T>(this Mat mat) where T : unmanaged Parameters Type Name Description Mat mat Returns Type Description ReadOnlySpan<T> Type Parameters Name Description T"
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.AsSpan.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.AsSpan.html",
    "title": "Method AsSpan | EyeAuras Docs",
    "keywords": "Method AsSpan AsSpan<T>(Mat) Declaration public static Span<T> AsSpan<T>(this Mat mat) where T : unmanaged Parameters Type Name Description Mat mat Returns Type Description Span<T> Type Parameters Name Description T"
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.CalculateTransformation.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.CalculateTransformation.html",
    "title": "Method CalculateTransformation | EyeAuras Docs",
    "keywords": "Method CalculateTransformation CalculateTransformation(ResizeImageMethod, Size, Size) Declaration public static Matrix3x2 CalculateTransformation(this ResizeImageMethod resizeImageMethod, Size originalSize, Size targetSize) Parameters Type Name Description ResizeImageMethod resizeImageMethod Size originalSize Size targetSize Returns Type Description Matrix3x2"
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.ConvertEdgePixels.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.ConvertEdgePixels.html",
    "title": "Method ConvertEdgePixels | EyeAuras Docs",
    "keywords": "Method ConvertEdgePixels ConvertEdgePixels(Image<Gray, byte>, Image<Gray, byte>, Size, Predicate<byte>, Func<byte, byte>) Scans the edges of an image and compares them against a condition. If the condition is met, a converter function is applied. Declaration public static void ConvertEdgePixels(this Image<Gray, byte> input, Image<Gray, byte> output, Size proximity, Predicate<byte> condition, Func<byte, byte> converter) Parameters Type Name Description Image<Gray, byte> input The input image. This image will not be modified. Image<Gray, byte> output The output image. This image will be modified by the converter function when the condition is met. Size proximity Specifies the size of the edge area to scan. This area extends inward from the edge of the image. Predicate<byte> condition A predicate function that determines whether a pixel should be converted. Func<byte, byte> converter A function that converts a pixel value. This function is only applied when the condition is met."
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.CopyFrom.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.CopyFrom.html",
    "title": "Method CopyFrom | EyeAuras Docs",
    "keywords": "Method CopyFrom CopyFrom(Mat, DataBox) Declaration public static void CopyFrom(this Mat mat, DataBox dataBox) Parameters Type Name Description Mat mat DataBox dataBox CopyFrom(Mat, nint) Declaration public static void CopyFrom(this Mat mat, nint src) Parameters Type Name Description Mat mat nint src CopyFrom(Mat, ReadOnlySpan<byte>) Declaration public static void CopyFrom(this Mat mat, ReadOnlySpan<byte> sourceData) Parameters Type Name Description Mat mat ReadOnlySpan<byte> sourceData"
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.CopyFromBitmap.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.CopyFromBitmap.html",
    "title": "Method CopyFromBitmap | EyeAuras Docs",
    "keywords": "Method CopyFromBitmap CopyFromBitmap<TColor, TDepth>(Image<TColor, TDepth>, Bitmap) Declaration public static void CopyFromBitmap<TColor, TDepth>(this Image<TColor, TDepth> image, Bitmap bitmap) where TColor : struct, IColor where TDepth : new() Parameters Type Name Description Image<TColor, TDepth> image Bitmap bitmap Type Parameters Name Description TColor TDepth"
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.DrawImage.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.DrawImage.html",
    "title": "Method DrawImage | EyeAuras Docs",
    "keywords": "Method DrawImage DrawImage<TColor, TDepth>(Image<TColor, TDepth>, Image<TColor, TDepth>, ResizeImageMethod) Declaration public static void DrawImage<TColor, TDepth>(this Image<TColor, TDepth> canvas, Image<TColor, TDepth> imageToDraw, ResizeImageMethod method = ResizeImageMethod.Stretch) where TColor : struct, IColor where TDepth : struct Parameters Type Name Description Image<TColor, TDepth> canvas Image<TColor, TDepth> imageToDraw ResizeImageMethod method Type Parameters Name Description TColor TDepth"
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.DrawImageCentered.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.DrawImageCentered.html",
    "title": "Method DrawImageCentered | EyeAuras Docs",
    "keywords": "Method DrawImageCentered DrawImageCentered<TColor, TDepth>(Image<TColor, TDepth>, Image<TColor, TDepth>, TColor) Declaration public static void DrawImageCentered<TColor, TDepth>(this Image<TColor, TDepth> canvas, Image<TColor, TDepth> imageToDraw, TColor backgroundColor = default) where TColor : struct, IColor where TDepth : struct Parameters Type Name Description Image<TColor, TDepth> canvas Image<TColor, TDepth> imageToDraw TColor backgroundColor Type Parameters Name Description TColor TDepth"
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.FindNonZero.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.FindNonZero.html",
    "title": "Method FindNonZero | EyeAuras Docs",
    "keywords": "Method FindNonZero FindNonZero<TColor, TDepth>(Image<TColor, TDepth>) Declaration public static Point[] FindNonZero<TColor, TDepth>(this Image<TColor, TDepth> image) where TColor : struct, IColor where TDepth : new() Parameters Type Name Description Image<TColor, TDepth> image Returns Type Description Point[] Type Parameters Name Description TColor TDepth"
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.FindPixels.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.FindPixels.html",
    "title": "Method FindPixels | EyeAuras Docs",
    "keywords": "Method FindPixels FindPixels<TColor, TDepth>(Image<TColor, TDepth>, TColor) Declaration public static Point[] FindPixels<TColor, TDepth>(this Image<TColor, TDepth> image, TColor lower) where TColor : struct, IColor where TDepth : new() Parameters Type Name Description Image<TColor, TDepth> image TColor lower Returns Type Description Point[] Type Parameters Name Description TColor TDepth FindPixels<TColor, TDepth>(Image<TColor, TDepth>, TColor, TColor) Declaration public static Point[] FindPixels<TColor, TDepth>(this Image<TColor, TDepth> image, TColor lower, TColor higher) where TColor : struct, IColor where TDepth : new() Parameters Type Name Description Image<TColor, TDepth> image TColor lower TColor higher Returns Type Description Point[] Type Parameters Name Description TColor TDepth"
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.GetDataSize.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.GetDataSize.html",
    "title": "Method GetDataSize | EyeAuras Docs",
    "keywords": "Method GetDataSize GetDataSize(Mat) Gets the total data size in bytes of the given Mat object, considering any byte alignment. Declaration public static int GetDataSize(this Mat mat) Parameters Type Name Description Mat mat The Mat object for which the data size is calculated. Returns Type Description int The total data size in bytes of the given Mat object, considering any byte alignment. Exceptions Type Condition ArgumentException Thrown when the calculated aligned size is smaller than the unaligned size."
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.Multiply.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.Multiply.html",
    "title": "Method Multiply | EyeAuras Docs",
    "keywords": "Method Multiply Multiply(Mat, Mat) Multiplies the elements of two matrices. Declaration public static Mat Multiply(this Mat mat1, Mat mat2) Parameters Type Name Description Mat mat1 The first input matrix. Mat mat2 The second input matrix. Returns Type Description Mat A new matrix that is the product of mat1 and mat2."
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.ReplacePixels.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.ReplacePixels.html",
    "title": "Method ReplacePixels | EyeAuras Docs",
    "keywords": "Method ReplacePixels ReplacePixels<TColor, TDepth>(Image<TColor, TDepth>, TColor, TColor) Declaration public static void ReplacePixels<TColor, TDepth>(this Image<TColor, TDepth> image, TColor replacementColor, TColor lower) where TColor : struct, IColor where TDepth : new() Parameters Type Name Description Image<TColor, TDepth> image TColor replacementColor TColor lower Type Parameters Name Description TColor TDepth ReplacePixels<TColor, TDepth>(Image<TColor, TDepth>, TColor, TColor, TColor) Declaration public static void ReplacePixels<TColor, TDepth>(this Image<TColor, TDepth> image, TColor replacementColor, TColor lower, TColor higher) where TColor : struct, IColor where TDepth : new() Parameters Type Name Description Image<TColor, TDepth> image TColor replacementColor TColor lower TColor higher Type Parameters Name Description TColor TDepth"
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.Sigmoid.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.Sigmoid.html",
    "title": "Method Sigmoid | EyeAuras Docs",
    "keywords": "Method Sigmoid Sigmoid(Mat, Mat) Applies the sigmoid function to the input matrix and stores the result in the output matrix. Declaration public static void Sigmoid(this Mat mat, Mat output) Parameters Type Name Description Mat mat The input matrix. Mat output The output matrix, where the result is stored. Sigmoid(Mat) Applies the sigmoid function to the input matrix and stores the result in the same matrix. Declaration public static void Sigmoid(this Mat mat) Parameters Type Name Description Mat mat The input matrix, where the result is also stored."
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.UseROI.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.UseROI.html",
    "title": "Method UseROI | EyeAuras Docs",
    "keywords": "Method UseROI UseROI<TColor, TDepth>(Image<TColor, TDepth>, Rectangle) Temporarily sets the region of interest (ROI) of the given image and provides a IDisposable object to revert the changes. Declaration public static IDisposable UseROI<TColor, TDepth>(this Image<TColor, TDepth> image, Rectangle roi) where TColor : struct, IColor where TDepth : struct Parameters Type Name Description Image<TColor, TDepth> image The Image object for which the ROI is set. Rectangle roi The rectangle that defines the ROI. Returns Type Description IDisposable An IDisposable object which resets the ROI to its previous value upon disposal. Type Parameters Name Description TColor The color structure for the image. TDepth The depth structure for the image."
  },
  "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.OpenCvExtensions.html",
    "title": "Class OpenCvExtensions | EyeAuras Docs",
    "keywords": "Class OpenCvExtensions Inheritance object OpenCvExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Graphics.Scaffolding Assembly: EyeAuras.Graphics.dll Syntax public static class OpenCvExtensions Methods Name Description AddNoise(Mat) AsReadOnlySpan<T>(Mat) AsSpan<T>(Mat) CalculateTransformation(ResizeImageMethod, Size, Size) ConvertEdgePixels(Image<Gray, byte>, Image<Gray, byte>, Size, Predicate<byte>, Func<byte, byte>) Scans the edges of an image and compares them against a condition. If the condition is met, a converter function is applied. CopyFrom(Mat, DataBox) CopyFrom(Mat, nint) CopyFrom(Mat, ReadOnlySpan<byte>) CopyFromBitmap<TColor, TDepth>(Image<TColor, TDepth>, Bitmap) DrawImageCentered<TColor, TDepth>(Image<TColor, TDepth>, Image<TColor, TDepth>, TColor) DrawImage<TColor, TDepth>(Image<TColor, TDepth>, Image<TColor, TDepth>, ResizeImageMethod) FindNonZero<TColor, TDepth>(Image<TColor, TDepth>) FindPixels<TColor, TDepth>(Image<TColor, TDepth>, TColor) FindPixels<TColor, TDepth>(Image<TColor, TDepth>, TColor, TColor) GetDataSize(Mat) Gets the total data size in bytes of the given Mat object, considering any byte alignment. Multiply(Mat, Mat) Multiplies the elements of two matrices. ReplacePixels<TColor, TDepth>(Image<TColor, TDepth>, TColor, TColor) ReplacePixels<TColor, TDepth>(Image<TColor, TDepth>, TColor, TColor, TColor) Sigmoid(Mat) Applies the sigmoid function to the input matrix and stores the result in the same matrix. Sigmoid(Mat, Mat) Applies the sigmoid function to the input matrix and stores the result in the output matrix. UseROI<TColor, TDepth>(Image<TColor, TDepth>, Rectangle) Temporarily sets the region of interest (ROI) of the given image and provides a IDisposable object to revert the changes."
  },
  "api/EyeAuras.Graphics.Scaffolding.PfimExtensions.ToBitmap.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.PfimExtensions.ToBitmap.html",
    "title": "Method ToBitmap | EyeAuras Docs",
    "keywords": "Method ToBitmap ToBitmap(IImage) Declaration public static Bitmap ToBitmap(this IImage image) Parameters Type Name Description IImage image Returns Type Description Bitmap"
  },
  "api/EyeAuras.Graphics.Scaffolding.PfimExtensions.ToPixelFormat.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.PfimExtensions.ToPixelFormat.html",
    "title": "Method ToPixelFormat | EyeAuras Docs",
    "keywords": "Method ToPixelFormat ToPixelFormat(ImageFormat) Declaration public static PixelFormat ToPixelFormat(this ImageFormat format) Parameters Type Name Description ImageFormat format Returns Type Description PixelFormat"
  },
  "api/EyeAuras.Graphics.Scaffolding.PfimExtensions.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.PfimExtensions.html",
    "title": "Class PfimExtensions | EyeAuras Docs",
    "keywords": "Class PfimExtensions Inheritance object PfimExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Graphics.Scaffolding Assembly: EyeAuras.Graphics.dll Syntax public static class PfimExtensions Methods Name Description ToBitmap(IImage) ToPixelFormat(ImageFormat)"
  },
  "api/EyeAuras.Graphics.Scaffolding.WellKnownBitmapPalettes.Rgb.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.WellKnownBitmapPalettes.Rgb.html",
    "title": "Property Rgb | EyeAuras Docs",
    "keywords": "Property Rgb Rgb Declaration public static BitmapPalette Rgb { get; } Property Value Type Description BitmapPalette"
  },
  "api/EyeAuras.Graphics.Scaffolding.WellKnownBitmapPalettes.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.WellKnownBitmapPalettes.html",
    "title": "Class WellKnownBitmapPalettes | EyeAuras Docs",
    "keywords": "Class WellKnownBitmapPalettes Inheritance object WellKnownBitmapPalettes Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Graphics.Scaffolding Assembly: EyeAuras.Graphics.dll Syntax public static class WellKnownBitmapPalettes Properties Name Description Rgb"
  },
  "api/EyeAuras.Graphics.Scaffolding.html": {
    "href": "api/EyeAuras.Graphics.Scaffolding.html",
    "title": "Namespace EyeAuras.Graphics.Scaffolding | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Graphics.Scaffolding Classes ColorExtensions DirectXExtensions DrawingExtensions ImageStitcher ImageWithKeyPoints OpenCvExtensions PfimExtensions WellKnownBitmapPalettes"
  },
  "api/EyeAuras.Graphics.Services.CIEDE2000ColorSimilarityCalculator.-ctor.html": {
    "href": "api/EyeAuras.Graphics.Services.CIEDE2000ColorSimilarityCalculator.-ctor.html",
    "title": "Constructor CIEDE2000ColorSimilarityCalculator | EyeAuras Docs",
    "keywords": "Constructor CIEDE2000ColorSimilarityCalculator CIEDE2000ColorSimilarityCalculator() Declaration public CIEDE2000ColorSimilarityCalculator()"
  },
  "api/EyeAuras.Graphics.Services.CIEDE2000ColorSimilarityCalculator.CalculateSimilarityPercent.html": {
    "href": "api/EyeAuras.Graphics.Services.CIEDE2000ColorSimilarityCalculator.CalculateSimilarityPercent.html",
    "title": "Method CalculateSimilarityPercent | EyeAuras Docs",
    "keywords": "Method CalculateSimilarityPercent CalculateSimilarityPercent(Color, Color) Declaration public double CalculateSimilarityPercent(Color color1, Color color2) Parameters Type Name Description Color color1 Color color2 Returns Type Description double Implements IColorSimilarityCalculator.CalculateSimilarityPercent(Color, Color)"
  },
  "api/EyeAuras.Graphics.Services.CIEDE2000ColorSimilarityCalculator.html": {
    "href": "api/EyeAuras.Graphics.Services.CIEDE2000ColorSimilarityCalculator.html",
    "title": "Class CIEDE2000ColorSimilarityCalculator | EyeAuras Docs",
    "keywords": "Class CIEDE2000ColorSimilarityCalculator Inheritance object DisposableReactiveObject LazyReactiveObject<CIEDE2000ColorSimilarityCalculator> CIEDE2000ColorSimilarityCalculator Implements IDisposable INotifyPropertyChanged IColorSimilarityCalculator Inherited Members LazyReactiveObject<CIEDE2000ColorSimilarityCalculator>.Instance object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Graphics.Services Assembly: EyeAuras.Graphics.dll Syntax public sealed class CIEDE2000ColorSimilarityCalculator : LazyReactiveObject<CIEDE2000ColorSimilarityCalculator>, IDisposable, INotifyPropertyChanged, IColorSimilarityCalculator Constructors Name Description CIEDE2000ColorSimilarityCalculator() Methods Name Description CalculateSimilarityPercent(Color, Color) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Graphics.Services.EuclideanDistanceColorSimilarityCalculator.-ctor.html": {
    "href": "api/EyeAuras.Graphics.Services.EuclideanDistanceColorSimilarityCalculator.-ctor.html",
    "title": "Constructor EuclideanDistanceColorSimilarityCalculator | EyeAuras Docs",
    "keywords": "Constructor EuclideanDistanceColorSimilarityCalculator EuclideanDistanceColorSimilarityCalculator() Declaration public EuclideanDistanceColorSimilarityCalculator()"
  },
  "api/EyeAuras.Graphics.Services.EuclideanDistanceColorSimilarityCalculator.CalculateColorDifferencePercent.html": {
    "href": "api/EyeAuras.Graphics.Services.EuclideanDistanceColorSimilarityCalculator.CalculateColorDifferencePercent.html",
    "title": "Method CalculateColorDifferencePercent | EyeAuras Docs",
    "keywords": "Method CalculateColorDifferencePercent CalculateColorDifferencePercent(Color, Color) Declaration public static double CalculateColorDifferencePercent(Color color1, Color color2) Parameters Type Name Description Color color1 Color color2 Returns Type Description double"
  },
  "api/EyeAuras.Graphics.Services.EuclideanDistanceColorSimilarityCalculator.CalculateSimilarityPercent.html": {
    "href": "api/EyeAuras.Graphics.Services.EuclideanDistanceColorSimilarityCalculator.CalculateSimilarityPercent.html",
    "title": "Method CalculateSimilarityPercent | EyeAuras Docs",
    "keywords": "Method CalculateSimilarityPercent CalculateSimilarityPercent(Color, Color) Declaration public double CalculateSimilarityPercent(Color color1, Color color2) Parameters Type Name Description Color color1 Color color2 Returns Type Description double Implements IColorSimilarityCalculator.CalculateSimilarityPercent(Color, Color)"
  },
  "api/EyeAuras.Graphics.Services.EuclideanDistanceColorSimilarityCalculator.FindSimilarColoredPixelsUsingSpan.html": {
    "href": "api/EyeAuras.Graphics.Services.EuclideanDistanceColorSimilarityCalculator.FindSimilarColoredPixelsUsingSpan.html",
    "title": "Method FindSimilarColoredPixelsUsingSpan | EyeAuras Docs",
    "keywords": "Method FindSimilarColoredPixelsUsingSpan FindSimilarColoredPixelsUsingSpan(Image<Bgr, byte>, Bgr, double) Declaration public static PixelColorSimilarityInfo? FindSimilarColoredPixelsUsingSpan(Image<Bgr, byte> image, Bgr targetColor, double similarityThreshold) Parameters Type Name Description Image<Bgr, byte> image Bgr targetColor double similarityThreshold Returns Type Description PixelColorSimilarityInfo?"
  },
  "api/EyeAuras.Graphics.Services.EuclideanDistanceColorSimilarityCalculator.html": {
    "href": "api/EyeAuras.Graphics.Services.EuclideanDistanceColorSimilarityCalculator.html",
    "title": "Class EuclideanDistanceColorSimilarityCalculator | EyeAuras Docs",
    "keywords": "Class EuclideanDistanceColorSimilarityCalculator Inheritance object DisposableReactiveObject LazyReactiveObject<EuclideanDistanceColorSimilarityCalculator> EuclideanDistanceColorSimilarityCalculator Implements IDisposable INotifyPropertyChanged IColorSimilarityCalculator Inherited Members LazyReactiveObject<EuclideanDistanceColorSimilarityCalculator>.Instance object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Graphics.Services Assembly: EyeAuras.Graphics.dll Syntax public sealed class EuclideanDistanceColorSimilarityCalculator : LazyReactiveObject<EuclideanDistanceColorSimilarityCalculator>, IDisposable, INotifyPropertyChanged, IColorSimilarityCalculator Constructors Name Description EuclideanDistanceColorSimilarityCalculator() Methods Name Description CalculateColorDifferencePercent(Color, Color) CalculateSimilarityPercent(Color, Color) FindSimilarColoredPixelsUsingSpan(Image<Bgr, byte>, Bgr, double) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Graphics.Services.IColorSimilarityCalculator.CalculateSimilarityPercent.html": {
    "href": "api/EyeAuras.Graphics.Services.IColorSimilarityCalculator.CalculateSimilarityPercent.html",
    "title": "Method CalculateSimilarityPercent | EyeAuras Docs",
    "keywords": "Method CalculateSimilarityPercent CalculateSimilarityPercent(Color, Color) Declaration double CalculateSimilarityPercent(Color color1, Color color2) Parameters Type Name Description Color color1 Color color2 Returns Type Description double"
  },
  "api/EyeAuras.Graphics.Services.IColorSimilarityCalculator.html": {
    "href": "api/EyeAuras.Graphics.Services.IColorSimilarityCalculator.html",
    "title": "Interface IColorSimilarityCalculator | EyeAuras Docs",
    "keywords": "Interface IColorSimilarityCalculator Namespace: EyeAuras.Graphics.Services Assembly: EyeAuras.Graphics.dll Syntax public interface IColorSimilarityCalculator Methods Name Description CalculateSimilarityPercent(Color, Color) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.Color.html": {
    "href": "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.Color.html",
    "title": "Property Color | EyeAuras Docs",
    "keywords": "Property Color Color Declaration public required Bgr Color { get; init; } Property Value Type Description Bgr"
  },
  "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.Equals.html": {
    "href": "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) Equals(PixelColorSimilarityInfo) Declaration public bool Equals(PixelColorSimilarityInfo other) Parameters Type Name Description PixelColorSimilarityInfo other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.GetHashCode.html": {
    "href": "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode()"
  },
  "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.Location.html": {
    "href": "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.Location.html",
    "title": "Property Location | EyeAuras Docs",
    "keywords": "Property Location Location Declaration public required Point Location { get; init; } Property Value Type Description Point"
  },
  "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.SimilarityPercentage.html": {
    "href": "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.SimilarityPercentage.html",
    "title": "Property SimilarityPercentage | EyeAuras Docs",
    "keywords": "Property SimilarityPercentage SimilarityPercentage Declaration public required double SimilarityPercentage { get; init; } Property Value Type Description double"
  },
  "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.ToString.html": {
    "href": "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.html": {
    "href": "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.html",
    "title": "Struct PixelColorSimilarityInfo | EyeAuras Docs",
    "keywords": "Struct PixelColorSimilarityInfo Implements IEquatable<PixelColorSimilarityInfo> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Graphics.Services Assembly: EyeAuras.Graphics.dll Syntax public readonly struct PixelColorSimilarityInfo : IEquatable<PixelColorSimilarityInfo> Properties Name Description Color Location SimilarityPercentage Methods Name Description Equals(PixelColorSimilarityInfo) Equals(object) GetHashCode() ToString() Operators Name Description operator ==(PixelColorSimilarityInfo, PixelColorSimilarityInfo) operator !=(PixelColorSimilarityInfo, PixelColorSimilarityInfo) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.op_Equality.html": {
    "href": "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(PixelColorSimilarityInfo, PixelColorSimilarityInfo) Declaration public static bool operator ==(PixelColorSimilarityInfo left, PixelColorSimilarityInfo right) Parameters Type Name Description PixelColorSimilarityInfo left PixelColorSimilarityInfo right Returns Type Description bool"
  },
  "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.op_Inequality.html": {
    "href": "api/EyeAuras.Graphics.Services.PixelColorSimilarityInfo.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(PixelColorSimilarityInfo, PixelColorSimilarityInfo) Declaration public static bool operator !=(PixelColorSimilarityInfo left, PixelColorSimilarityInfo right) Parameters Type Name Description PixelColorSimilarityInfo left PixelColorSimilarityInfo right Returns Type Description bool"
  },
  "api/EyeAuras.Graphics.Services.html": {
    "href": "api/EyeAuras.Graphics.Services.html",
    "title": "Namespace EyeAuras.Graphics.Services | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Graphics.Services Classes CIEDE2000ColorSimilarityCalculator EuclideanDistanceColorSimilarityCalculator Structs PixelColorSimilarityInfo Interfaces IColorSimilarityCalculator"
  },
  "api/EyeAuras.Graphics.html": {
    "href": "api/EyeAuras.Graphics.html",
    "title": "Namespace EyeAuras.Graphics | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Graphics Namespaces EyeAuras.Graphics.ImageEffects EyeAuras.Graphics.Properties EyeAuras.Graphics.Scaffolding EyeAuras.Graphics.Services"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.ISendMessageAction.ChannelId.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.ISendMessageAction.ChannelId.html",
    "title": "Property ChannelId | EyeAuras Docs",
    "keywords": "Property ChannelId ChannelId Declaration string ChannelId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.ISendMessageAction.Text.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.ISendMessageAction.Text.html",
    "title": "Property Text | EyeAuras Docs",
    "keywords": "Property Text Text Declaration string Text { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.ISendMessageAction.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.ISendMessageAction.html",
    "title": "Interface ISendMessageAction | EyeAuras Docs",
    "keywords": "Interface ISendMessageAction Inherited Members IAuraAction.Cancel() IAuraAction.Execute() IAuraAction.Execute(CancellationToken) IAuraAction.IsIgnored IAuraAction.IsBusy IAuraAction.Error IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.NetworkAuras.Actions.SendMessage Assembly: EyeAuras.NetworkAuras.dll Syntax public interface ISendMessageAction : IAuraAction, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description ChannelId Text Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.-Clone--.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override SendMessageActionProperties <Clone>$() Returns Type Description SendMessageActionProperties Overrides AuraActionPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.-ctor.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.-ctor.html",
    "title": "Constructor SendMessageActionProperties | EyeAuras Docs",
    "keywords": "Constructor SendMessageActionProperties SendMessageActionProperties() Declaration public SendMessageActionProperties()"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.ChannelId.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.ChannelId.html",
    "title": "Property ChannelId | EyeAuras Docs",
    "keywords": "Property ChannelId ChannelId Declaration public string ChannelId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.EqualityContract.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraActionPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.Equals.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(object?) Equals(AuraActionPropertiesBase?) Declaration public override sealed bool Equals(AuraActionPropertiesBase? other) Parameters Type Name Description AuraActionPropertiesBase other Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(AuraActionPropertiesBase?) Equals(SendMessageActionProperties?) Declaration public bool Equals(SendMessageActionProperties? other) Parameters Type Name Description SendMessageActionProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.GetHashCode.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraActionPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.PrintMembers.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraActionPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.Text.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.Text.html",
    "title": "Property Text | EyeAuras Docs",
    "keywords": "Property Text Text Declaration public string Text { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.ToString.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraActionPropertiesBase.ToString()"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.Version.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.html",
    "title": "Class SendMessageActionProperties | EyeAuras Docs",
    "keywords": "Class SendMessageActionProperties Inheritance object AuraPropertiesBase AuraActionPropertiesBase SendMessageActionProperties Implements IEquatable<AuraPropertiesBase> IAuraActionProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraActionPropertiesBase> IEquatable<SendMessageActionProperties> Inherited Members AuraActionPropertiesBase.Equals(AuraPropertiesBase) AuraActionPropertiesBase.IsIgnored AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.NetworkAuras.Actions.SendMessage Assembly: EyeAuras.NetworkAuras.dll Syntax public sealed record SendMessageActionProperties : AuraActionPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraActionProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraActionPropertiesBase>, IEquatable<SendMessageActionProperties> Constructors Name Description SendMessageActionProperties() Properties Name Description ChannelId EqualityContract Text Version Methods Name Description Equals(SendMessageActionProperties?) Equals(AuraActionPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(SendMessageActionProperties?, SendMessageActionProperties?) operator !=(SendMessageActionProperties?, SendMessageActionProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.op_Equality.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(SendMessageActionProperties?, SendMessageActionProperties?) Declaration public static bool operator ==(SendMessageActionProperties? left, SendMessageActionProperties? right) Parameters Type Name Description SendMessageActionProperties left SendMessageActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.op_Inequality.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.SendMessageActionProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(SendMessageActionProperties?, SendMessageActionProperties?) Declaration public static bool operator !=(SendMessageActionProperties? left, SendMessageActionProperties? right) Parameters Type Name Description SendMessageActionProperties left SendMessageActionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.NetworkAuras.Actions.SendMessage.html": {
    "href": "api/EyeAuras.NetworkAuras.Actions.SendMessage.html",
    "title": "Namespace EyeAuras.NetworkAuras.Actions.SendMessage | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.NetworkAuras.Actions.SendMessage Classes SendMessageActionProperties Interfaces ISendMessageAction"
  },
  "api/EyeAuras.NetworkAuras.Services.IMessageService.SendMessage.html": {
    "href": "api/EyeAuras.NetworkAuras.Services.IMessageService.SendMessage.html",
    "title": "Method SendMessage | EyeAuras Docs",
    "keywords": "Method SendMessage SendMessage(string, string) Declaration Task SendMessage(string channelId, string message) Parameters Type Name Description string channelId string message Returns Type Description Task"
  },
  "api/EyeAuras.NetworkAuras.Services.IMessageService.State.html": {
    "href": "api/EyeAuras.NetworkAuras.Services.IMessageService.State.html",
    "title": "Property State | EyeAuras Docs",
    "keywords": "Property State State Declaration ConnectionState? State { get; } Property Value Type Description ConnectionState?"
  },
  "api/EyeAuras.NetworkAuras.Services.IMessageService.SubscribeToChannel.html": {
    "href": "api/EyeAuras.NetworkAuras.Services.IMessageService.SubscribeToChannel.html",
    "title": "Method SubscribeToChannel | EyeAuras Docs",
    "keywords": "Method SubscribeToChannel SubscribeToChannel(string) Declaration IObservable<TextMessage> SubscribeToChannel(string channelId) Parameters Type Name Description string channelId Returns Type Description IObservable<TextMessage>"
  },
  "api/EyeAuras.NetworkAuras.Services.IMessageService.html": {
    "href": "api/EyeAuras.NetworkAuras.Services.IMessageService.html",
    "title": "Interface IMessageService | EyeAuras Docs",
    "keywords": "Interface IMessageService Inherited Members INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.NetworkAuras.Services Assembly: EyeAuras.NetworkAuras.dll Syntax public interface IMessageService : INotifyPropertyChanged Properties Name Description State Methods Name Description SendMessage(string, string) SubscribeToChannel(string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.NetworkAuras.Services.html": {
    "href": "api/EyeAuras.NetworkAuras.Services.html",
    "title": "Namespace EyeAuras.NetworkAuras.Services | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.NetworkAuras.Services Interfaces IMessageService"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.ChannelTextMessage.-ctor.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.ChannelTextMessage.-ctor.html",
    "title": "Constructor ChannelTextMessage | EyeAuras Docs",
    "keywords": "Constructor ChannelTextMessage ChannelTextMessage() Declaration public ChannelTextMessage()"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.ChannelTextMessage.ChannelId.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.ChannelTextMessage.ChannelId.html",
    "title": "Property ChannelId | EyeAuras Docs",
    "keywords": "Property ChannelId ChannelId Declaration public string ChannelId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.ChannelTextMessage.Content.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.ChannelTextMessage.Content.html",
    "title": "Property Content | EyeAuras Docs",
    "keywords": "Property Content Content Declaration public string Content { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.ChannelTextMessage.Latency.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.ChannelTextMessage.Latency.html",
    "title": "Property Latency | EyeAuras Docs",
    "keywords": "Property Latency Latency Declaration public TimeSpan Latency { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.ChannelTextMessage.Timestamp.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.ChannelTextMessage.Timestamp.html",
    "title": "Property Timestamp | EyeAuras Docs",
    "keywords": "Property Timestamp Timestamp Declaration public DateTime Timestamp { get; set; } Property Value Type Description DateTime"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.ChannelTextMessage.Username.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.ChannelTextMessage.Username.html",
    "title": "Property Username | EyeAuras Docs",
    "keywords": "Property Username Username Declaration public string Username { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.ChannelTextMessage.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.ChannelTextMessage.html",
    "title": "Class ChannelTextMessage | EyeAuras Docs",
    "keywords": "Class ChannelTextMessage Inheritance object DisposableReactiveObject ChannelTextMessage Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.NetworkAuras.Triggers.MessageSubscription Assembly: EyeAuras.NetworkAuras.dll Syntax public sealed class ChannelTextMessage : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Constructors Name Description ChannelTextMessage() Properties Name Description ChannelId Content Latency Timestamp Username Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.IMessageSubscriptionTrigger.ActivationTextEvaluator.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.IMessageSubscriptionTrigger.ActivationTextEvaluator.html",
    "title": "Property ActivationTextEvaluator | EyeAuras Docs",
    "keywords": "Property ActivationTextEvaluator ActivationTextEvaluator Declaration ISwitchableTextEvaluatorViewModel ActivationTextEvaluator { get; } Property Value Type Description ISwitchableTextEvaluatorViewModel"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.IMessageSubscriptionTrigger.ChannelId.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.IMessageSubscriptionTrigger.ChannelId.html",
    "title": "Property ChannelId | EyeAuras Docs",
    "keywords": "Property ChannelId ChannelId Declaration string ChannelId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.IMessageSubscriptionTrigger.DeactivateAutomatically.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.IMessageSubscriptionTrigger.DeactivateAutomatically.html",
    "title": "Property DeactivateAutomatically | EyeAuras Docs",
    "keywords": "Property DeactivateAutomatically DeactivateAutomatically Declaration bool DeactivateAutomatically { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.IMessageSubscriptionTrigger.DeactivationTextEvaluator.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.IMessageSubscriptionTrigger.DeactivationTextEvaluator.html",
    "title": "Property DeactivationTextEvaluator | EyeAuras Docs",
    "keywords": "Property DeactivationTextEvaluator DeactivationTextEvaluator Declaration ISwitchableTextEvaluatorViewModel DeactivationTextEvaluator { get; } Property Value Type Description ISwitchableTextEvaluatorViewModel"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.IMessageSubscriptionTrigger.LastAuraMessage.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.IMessageSubscriptionTrigger.LastAuraMessage.html",
    "title": "Property LastAuraMessage | EyeAuras Docs",
    "keywords": "Property LastAuraMessage LastAuraMessage Declaration AuraTextMessage LastAuraMessage { get; } Property Value Type Description AuraTextMessage"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.IMessageSubscriptionTrigger.Messages.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.IMessageSubscriptionTrigger.Messages.html",
    "title": "Property Messages | EyeAuras Docs",
    "keywords": "Property Messages Messages Declaration IObservableList<ChannelTextMessage> Messages { get; } Property Value Type Description IObservableList<ChannelTextMessage>"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.IMessageSubscriptionTrigger.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.IMessageSubscriptionTrigger.html",
    "title": "Interface IMessageSubscriptionTrigger | EyeAuras Docs",
    "keywords": "Interface IMessageSubscriptionTrigger Inherited Members IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.NetworkAuras.Triggers.MessageSubscription Assembly: EyeAuras.NetworkAuras.dll Syntax public interface IMessageSubscriptionTrigger : IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description ActivationTextEvaluator ChannelId DeactivateAutomatically DeactivationTextEvaluator LastAuraMessage Messages Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override MessageSubscriptionTriggerProperties <Clone>$() Returns Type Description MessageSubscriptionTriggerProperties Overrides MessageSubscriptionTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.-ctor.html",
    "title": "Constructor MessageSubscriptionTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor MessageSubscriptionTriggerProperties MessageSubscriptionTriggerProperties() Declaration public MessageSubscriptionTriggerProperties()"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.ChannelId.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.ChannelId.html",
    "title": "Property ChannelId | EyeAuras Docs",
    "keywords": "Property ChannelId ChannelId Declaration public string ChannelId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides MessageSubscriptionTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides MessageSubscriptionTriggerPropertiesBase.Equals(object?) Equals(MessageSubscriptionTriggerPropertiesBase?) Declaration public override sealed bool Equals(MessageSubscriptionTriggerPropertiesBase? other) Parameters Type Name Description MessageSubscriptionTriggerPropertiesBase other Returns Type Description bool Overrides MessageSubscriptionTriggerPropertiesBase.Equals(MessageSubscriptionTriggerPropertiesBase?) Equals(MessageSubscriptionTriggerProperties?) Declaration public bool Equals(MessageSubscriptionTriggerProperties? other) Parameters Type Name Description MessageSubscriptionTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides MessageSubscriptionTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides MessageSubscriptionTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides MessageSubscriptionTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.Version.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.html",
    "title": "Class MessageSubscriptionTriggerProperties | EyeAuras Docs",
    "keywords": "Class MessageSubscriptionTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase MessageSubscriptionTriggerPropertiesBase MessageSubscriptionTriggerProperties Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> IEquatable<MessageSubscriptionTriggerPropertiesBase> IEquatable<MessageSubscriptionTriggerProperties> Inherited Members MessageSubscriptionTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase) MessageSubscriptionTriggerPropertiesBase.ActivationText MessageSubscriptionTriggerPropertiesBase.ActivationEvaluatorType MessageSubscriptionTriggerPropertiesBase.ActivationIgnoreCase MessageSubscriptionTriggerPropertiesBase.DeactivationText MessageSubscriptionTriggerPropertiesBase.DeactivationEvaluatorType MessageSubscriptionTriggerPropertiesBase.DeactivationIgnoreCase MessageSubscriptionTriggerPropertiesBase.DeactivateAutomatically AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.NetworkAuras.Triggers.MessageSubscription Assembly: EyeAuras.NetworkAuras.dll Syntax public sealed record MessageSubscriptionTriggerProperties : MessageSubscriptionTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase>, IEquatable<MessageSubscriptionTriggerPropertiesBase>, IEquatable<MessageSubscriptionTriggerProperties> Constructors Name Description MessageSubscriptionTriggerProperties() Properties Name Description ChannelId EqualityContract Version Methods Name Description Equals(MessageSubscriptionTriggerProperties?) Equals(MessageSubscriptionTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(MessageSubscriptionTriggerProperties?, MessageSubscriptionTriggerProperties?) operator !=(MessageSubscriptionTriggerProperties?, MessageSubscriptionTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(MessageSubscriptionTriggerProperties?, MessageSubscriptionTriggerProperties?) Declaration public static bool operator ==(MessageSubscriptionTriggerProperties? left, MessageSubscriptionTriggerProperties? right) Parameters Type Name Description MessageSubscriptionTriggerProperties left MessageSubscriptionTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.MessageSubscriptionTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(MessageSubscriptionTriggerProperties?, MessageSubscriptionTriggerProperties?) Declaration public static bool operator !=(MessageSubscriptionTriggerProperties? left, MessageSubscriptionTriggerProperties? right) Parameters Type Name Description MessageSubscriptionTriggerProperties left MessageSubscriptionTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.html": {
    "href": "api/EyeAuras.NetworkAuras.Triggers.MessageSubscription.html",
    "title": "Namespace EyeAuras.NetworkAuras.Triggers.MessageSubscription | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.NetworkAuras.Triggers.MessageSubscription Classes ChannelTextMessage MessageSubscriptionTriggerProperties Interfaces IMessageSubscriptionTrigger"
  },
  "api/EyeAuras.NetworkAuras.html": {
    "href": "api/EyeAuras.NetworkAuras.html",
    "title": "Namespace EyeAuras.NetworkAuras | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.NetworkAuras Namespaces EyeAuras.NetworkAuras.Actions.SendMessage EyeAuras.NetworkAuras.Services EyeAuras.NetworkAuras.Triggers.MessageSubscription"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.IImageEffectProperties.IsEnabled.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.IImageEffectProperties.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Declaration bool IsEnabled { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.IImageEffectProperties.RegionOfInterest.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.IImageEffectProperties.RegionOfInterest.html",
    "title": "Property RegionOfInterest | EyeAuras Docs",
    "keywords": "Property RegionOfInterest RegionOfInterest Declaration Rectangle RegionOfInterest { get; set; } Property Value Type Description Rectangle"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.IImageEffectProperties.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.IImageEffectProperties.html",
    "title": "Interface IImageEffectProperties | EyeAuras Docs",
    "keywords": "Interface IImageEffectProperties Inherited Members IAuraProperties.Bindings IHasVersion.Version ICanSetId.Id Namespace: EyeAuras.OpenCVAuras.ImageEffects Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface IImageEffectProperties : IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId Properties Name Description IsEnabled RegionOfInterest Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override abstract ImageEffectProperties <Clone>$() Returns Type Description ImageEffectProperties Overrides AuraPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.-ctor.html",
    "title": "Constructor ImageEffectProperties | EyeAuras Docs",
    "keywords": "Constructor ImageEffectProperties ImageEffectProperties(ImageEffectProperties) Declaration protected ImageEffectProperties(ImageEffectProperties original) Parameters Type Name Description ImageEffectProperties original ImageEffectProperties() Declaration protected ImageEffectProperties()"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.EqualityContract.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraPropertiesBase.Equals(object?) Equals(AuraPropertiesBase?) Declaration public override sealed bool Equals(AuraPropertiesBase? other) Parameters Type Name Description AuraPropertiesBase other Returns Type Description bool Overrides AuraPropertiesBase.Equals(AuraPropertiesBase?) Equals(ImageEffectProperties?) Declaration public virtual bool Equals(ImageEffectProperties? other) Parameters Type Name Description ImageEffectProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.IsEnabled.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description bool Implements IImageEffectProperties.IsEnabled"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.IsValid.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.IsValid.html",
    "title": "Property IsValid | EyeAuras Docs",
    "keywords": "Property IsValid IsValid Declaration public bool IsValid { get; } Property Value Type Description bool Implements IHasValidation.IsValid"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.PrintMembers.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.RegionOfInterest.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.RegionOfInterest.html",
    "title": "Property RegionOfInterest | EyeAuras Docs",
    "keywords": "Property RegionOfInterest RegionOfInterest Declaration public Rectangle RegionOfInterest { get; set; } Property Value Type Description Rectangle Implements IImageEffectProperties.RegionOfInterest"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraPropertiesBase.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.html",
    "title": "Class ImageEffectProperties | EyeAuras Docs",
    "keywords": "Class ImageEffectProperties Inheritance object AuraPropertiesBase ImageEffectProperties Implements IEquatable<AuraPropertiesBase> IHasValidation IImageEffectProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<ImageEffectProperties> Inherited Members AuraPropertiesBase.Id AuraPropertiesBase.Bindings AuraPropertiesBase.Version object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.ImageEffects Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public abstract record ImageEffectProperties : AuraPropertiesBase, IEquatable<AuraPropertiesBase>, IHasValidation, IImageEffectProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<ImageEffectProperties> Constructors Name Description ImageEffectProperties() ImageEffectProperties(ImageEffectProperties) Properties Name Description EqualityContract IsEnabled IsValid RegionOfInterest Methods Name Description Equals(ImageEffectProperties?) Equals(AuraPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(ImageEffectProperties?, ImageEffectProperties?) operator !=(ImageEffectProperties?, ImageEffectProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ImageEffectProperties?, ImageEffectProperties?) Declaration public static bool operator ==(ImageEffectProperties? left, ImageEffectProperties? right) Parameters Type Name Description ImageEffectProperties left ImageEffectProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.ImageEffectProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ImageEffectProperties?, ImageEffectProperties?) Declaration public static bool operator !=(ImageEffectProperties? left, ImageEffectProperties? right) Parameters Type Name Description ImageEffectProperties left ImageEffectProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.ImageEffects.html": {
    "href": "api/EyeAuras.OpenCVAuras.ImageEffects.html",
    "title": "Namespace EyeAuras.OpenCVAuras.ImageEffects | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.OpenCVAuras.ImageEffects Classes ImageEffectProperties Interfaces IImageEffectProperties"
  },
  "api/EyeAuras.OpenCVAuras.ML.IMLModel.Classify.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.IMLModel.Classify.html",
    "title": "Method Classify | EyeAuras Docs",
    "keywords": "Method Classify Classify(Image<Bgr, byte>) Declaration IReadOnlyList<YoloClassification> Classify(Image<Bgr, byte> image) Parameters Type Name Description Image<Bgr, byte> image Returns Type Description IReadOnlyList<YoloClassification>"
  },
  "api/EyeAuras.OpenCVAuras.ML.IMLModel.ConfidenceThreshold.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.IMLModel.ConfidenceThreshold.html",
    "title": "Property ConfidenceThreshold | EyeAuras Docs",
    "keywords": "Property ConfidenceThreshold ConfidenceThreshold Declaration float ConfidenceThreshold { get; set; } Property Value Type Description float"
  },
  "api/EyeAuras.OpenCVAuras.ML.IMLModel.Description.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.IMLModel.Description.html",
    "title": "Property Description | EyeAuras Docs",
    "keywords": "Property Description Description Declaration YoloModelDescription Description { get; } Property Value Type Description YoloModelDescription"
  },
  "api/EyeAuras.OpenCVAuras.ML.IMLModel.Inference.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.IMLModel.Inference.html",
    "title": "Method Inference | EyeAuras Docs",
    "keywords": "Method Inference Inference(DenseTensor<float>, Size) Declaration IReadOnlyCollection<NamedOnnxValue> Inference(DenseTensor<float> imageTensor, Size imageSize) Parameters Type Name Description DenseTensor<float> imageTensor Size imageSize Returns Type Description IReadOnlyCollection<NamedOnnxValue>"
  },
  "api/EyeAuras.OpenCVAuras.ML.IMLModel.InferenceSession.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.IMLModel.InferenceSession.html",
    "title": "Property InferenceSession | EyeAuras Docs",
    "keywords": "Property InferenceSession InferenceSession Declaration InferenceSession InferenceSession { get; } Property Value Type Description InferenceSession"
  },
  "api/EyeAuras.OpenCVAuras.ML.IMLModel.ModelSize.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.IMLModel.ModelSize.html",
    "title": "Property ModelSize | EyeAuras Docs",
    "keywords": "Property ModelSize ModelSize Declaration Size ModelSize { get; } Property Value Type Description Size"
  },
  "api/EyeAuras.OpenCVAuras.ML.IMLModel.ModelType.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.IMLModel.ModelType.html",
    "title": "Property ModelType | EyeAuras Docs",
    "keywords": "Property ModelType ModelType Declaration YoloModelType ModelType { get; } Property Value Type Description YoloModelType"
  },
  "api/EyeAuras.OpenCVAuras.ML.IMLModel.OutputParser.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.IMLModel.OutputParser.html",
    "title": "Property OutputParser | EyeAuras Docs",
    "keywords": "Property OutputParser OutputParser Declaration IYoloOutputParser OutputParser { get; } Property Value Type Description IYoloOutputParser"
  },
  "api/EyeAuras.OpenCVAuras.ML.IMLModel.OverlapThreshold.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.IMLModel.OverlapThreshold.html",
    "title": "Property OverlapThreshold | EyeAuras Docs",
    "keywords": "Property OverlapThreshold OverlapThreshold Declaration float OverlapThreshold { get; set; } Property Value Type Description float"
  },
  "api/EyeAuras.OpenCVAuras.ML.IMLModel.Predict.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.IMLModel.Predict.html",
    "title": "Method Predict | EyeAuras Docs",
    "keywords": "Method Predict Predict(Image<Bgr, byte>, MLMaskProcessingType) Declaration IReadOnlyList<YoloPrediction> Predict(Image<Bgr, byte> image, MLMaskProcessingType maskProcessingType) Parameters Type Name Description Image<Bgr, byte> image MLMaskProcessingType maskProcessingType Returns Type Description IReadOnlyList<YoloPrediction> Predict(DenseTensor<float>, Size, MLMaskProcessingType) Declaration IReadOnlyList<YoloPrediction> Predict(DenseTensor<float> imageTensor, Size imageSize, MLMaskProcessingType maskProcessingType) Parameters Type Name Description DenseTensor<float> imageTensor Size imageSize MLMaskProcessingType maskProcessingType Returns Type Description IReadOnlyList<YoloPrediction>"
  },
  "api/EyeAuras.OpenCVAuras.ML.IMLModel.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.IMLModel.html",
    "title": "Interface IMLModel | EyeAuras Docs",
    "keywords": "Interface IMLModel Inherited Members IDisposable.Dispose() Namespace: EyeAuras.OpenCVAuras.ML Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface IMLModel : IDisposable Properties Name Description ConfidenceThreshold Description InferenceSession ModelSize ModelType OutputParser OverlapThreshold Methods Name Description Classify(Image<Bgr, byte>) Inference(DenseTensor<float>, Size) Predict(Image<Bgr, byte>, MLMaskProcessingType) Predict(DenseTensor<float>, Size, MLMaskProcessingType) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.ML.MLExecutionProvider.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.MLExecutionProvider.html",
    "title": "Enum MLExecutionProvider | EyeAuras Docs",
    "keywords": "Enum MLExecutionProvider Namespace: EyeAuras.OpenCVAuras.ML Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public enum MLExecutionProvider Fields Name Description Cpu Cuda Default DirectML TensorRt Extension Methods ObjectExtensions.AddTo<MLExecutionProvider, TCollection>(MLExecutionProvider, ISourceList<TCollection>) ObjectExtensions.AddTo<MLExecutionProvider, TCollection>(MLExecutionProvider, ICollection<TCollection>) ObjectExtensions.CloneJson<MLExecutionProvider>(MLExecutionProvider) ObjectExtensions.CopyPropertiesTo<MLExecutionProvider, TTarget>(MLExecutionProvider, TTarget) ObjectExtensions.DumpToTextRaw<MLExecutionProvider>(MLExecutionProvider) ObjectExtensions.DumpToText<MLExecutionProvider>(MLExecutionProvider) ObjectExtensions.Dump<MLExecutionProvider>(MLExecutionProvider) ObjectExtensions.GetPropertyAccessor<MLExecutionProvider, TValue>(MLExecutionProvider, Expression<Func<MLExecutionProvider, TValue>>) ObjectExtensions.InsertTo<MLExecutionProvider, TCollection>(MLExecutionProvider, IList<TCollection>, int) ObjectExtensions.ToJson<MLExecutionProvider>(MLExecutionProvider) ObjectExtensions.ToStringSafe<MLExecutionProvider>(MLExecutionProvider) ObjectExtensions.TransferPropertiesTo<MLExecutionProvider, TTarget>(MLExecutionProvider, TTarget, params string[]) XDocumentExtensions.AddTo<MLExecutionProvider>(MLExecutionProvider, XContainer)"
  },
  "api/EyeAuras.OpenCVAuras.ML.MLMaskProcessingType.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.MLMaskProcessingType.html",
    "title": "Enum MLMaskProcessingType | EyeAuras Docs",
    "keywords": "Enum MLMaskProcessingType Namespace: EyeAuras.OpenCVAuras.ML Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public enum MLMaskProcessingType Fields Name Description Include IncludeMergedByClass None Extension Methods ObjectExtensions.AddTo<MLMaskProcessingType, TCollection>(MLMaskProcessingType, ISourceList<TCollection>) ObjectExtensions.AddTo<MLMaskProcessingType, TCollection>(MLMaskProcessingType, ICollection<TCollection>) ObjectExtensions.CloneJson<MLMaskProcessingType>(MLMaskProcessingType) ObjectExtensions.CopyPropertiesTo<MLMaskProcessingType, TTarget>(MLMaskProcessingType, TTarget) ObjectExtensions.DumpToTextRaw<MLMaskProcessingType>(MLMaskProcessingType) ObjectExtensions.DumpToText<MLMaskProcessingType>(MLMaskProcessingType) ObjectExtensions.Dump<MLMaskProcessingType>(MLMaskProcessingType) ObjectExtensions.GetPropertyAccessor<MLMaskProcessingType, TValue>(MLMaskProcessingType, Expression<Func<MLMaskProcessingType, TValue>>) ObjectExtensions.InsertTo<MLMaskProcessingType, TCollection>(MLMaskProcessingType, IList<TCollection>, int) ObjectExtensions.ToJson<MLMaskProcessingType>(MLMaskProcessingType) ObjectExtensions.ToStringSafe<MLMaskProcessingType>(MLMaskProcessingType) ObjectExtensions.TransferPropertiesTo<MLMaskProcessingType, TTarget>(MLMaskProcessingType, TTarget, params string[]) XDocumentExtensions.AddTo<MLMaskProcessingType>(MLMaskProcessingType, XContainer)"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.IYoloOutputParser.Parse.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.IYoloOutputParser.Parse.html",
    "title": "Method Parse | EyeAuras Docs",
    "keywords": "Method Parse Parse(IReadOnlyCollection<NamedOnnxValue>, Size, YoloModelDescription, MLMaskProcessingType) Declaration IReadOnlyList<YoloPrediction> Parse(IReadOnlyCollection<NamedOnnxValue> outputs, Size imageSize, YoloModelDescription model, MLMaskProcessingType maskProcessingType) Parameters Type Name Description IReadOnlyCollection<NamedOnnxValue> outputs Size imageSize YoloModelDescription model MLMaskProcessingType maskProcessingType Returns Type Description IReadOnlyList<YoloPrediction>"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.IYoloOutputParser.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.IYoloOutputParser.html",
    "title": "Interface IYoloOutputParser | EyeAuras Docs",
    "keywords": "Interface IYoloOutputParser Namespace: EyeAuras.OpenCVAuras.ML.Yolo Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface IYoloOutputParser Methods Name Description Parse(IReadOnlyCollection<NamedOnnxValue>, Size, YoloModelDescription, MLMaskProcessingType) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.ClassIdx.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.ClassIdx.html",
    "title": "Property ClassIdx | EyeAuras Docs",
    "keywords": "Property ClassIdx ClassIdx Declaration public int ClassIdx { get; init; } Property Value Type Description int"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) Equals(YoloClassification) Declaration public bool Equals(YoloClassification other) Parameters Type Name Description YoloClassification other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.Label.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.Label.html",
    "title": "Property Label | EyeAuras Docs",
    "keywords": "Property Label Label Declaration public required YoloLabel Label { get; init; } Property Value Type Description YoloLabel"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.Score.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.Score.html",
    "title": "Property Score | EyeAuras Docs",
    "keywords": "Property Score Score Declaration public required float Score { get; init; } Property Value Type Description float"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.html",
    "title": "Struct YoloClassification | EyeAuras Docs",
    "keywords": "Struct YoloClassification Implements IEquatable<YoloClassification> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.ML.Yolo Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public readonly struct YoloClassification : IEquatable<YoloClassification> Properties Name Description ClassIdx Label Score Methods Name Description Equals(YoloClassification) Equals(object) GetHashCode() ToString() Operators Name Description operator ==(YoloClassification, YoloClassification) operator !=(YoloClassification, YoloClassification) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(YoloClassification, YoloClassification) Declaration public static bool operator ==(YoloClassification left, YoloClassification right) Parameters Type Name Description YoloClassification left YoloClassification right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloClassification.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(YoloClassification, YoloClassification) Declaration public static bool operator !=(YoloClassification left, YoloClassification right) Parameters Type Name Description YoloClassification left YoloClassification right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.Color.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.Color.html",
    "title": "Property Color | EyeAuras Docs",
    "keywords": "Property Color Color Declaration public Color Color { get; init; } Property Value Type Description Color"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) Equals(YoloLabel) Declaration public bool Equals(YoloLabel other) Parameters Type Name Description YoloLabel other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.Id.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.Id.html",
    "title": "Property Id | EyeAuras Docs",
    "keywords": "Property Id Id Declaration public int Id { get; init; } Property Value Type Description int"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.Kind.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.Kind.html",
    "title": "Property Kind | EyeAuras Docs",
    "keywords": "Property Kind Kind Declaration public YoloLabelKind Kind { get; init; } Property Value Type Description YoloLabelKind"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.Name.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration public string Name { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.html",
    "title": "Struct YoloLabel | EyeAuras Docs",
    "keywords": "Struct YoloLabel Implements IEquatable<YoloLabel> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.ML.Yolo Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public readonly struct YoloLabel : IEquatable<YoloLabel> Properties Name Description Color Id Kind Name Methods Name Description Equals(YoloLabel) Equals(object) GetHashCode() ToString() Operators Name Description operator ==(YoloLabel, YoloLabel) operator !=(YoloLabel, YoloLabel) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(YoloLabel, YoloLabel) Declaration public static bool operator ==(YoloLabel left, YoloLabel right) Parameters Type Name Description YoloLabel left YoloLabel right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabel.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(YoloLabel, YoloLabel) Declaration public static bool operator !=(YoloLabel left, YoloLabel right) Parameters Type Name Description YoloLabel left YoloLabel right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabelKind.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloLabelKind.html",
    "title": "Enum YoloLabelKind | EyeAuras Docs",
    "keywords": "Enum YoloLabelKind Namespace: EyeAuras.OpenCVAuras.ML.Yolo Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public enum YoloLabelKind Fields Name Description Generic InstanceSeg Extension Methods ObjectExtensions.AddTo<YoloLabelKind, TCollection>(YoloLabelKind, ISourceList<TCollection>) ObjectExtensions.AddTo<YoloLabelKind, TCollection>(YoloLabelKind, ICollection<TCollection>) ObjectExtensions.CloneJson<YoloLabelKind>(YoloLabelKind) ObjectExtensions.CopyPropertiesTo<YoloLabelKind, TTarget>(YoloLabelKind, TTarget) ObjectExtensions.DumpToTextRaw<YoloLabelKind>(YoloLabelKind) ObjectExtensions.DumpToText<YoloLabelKind>(YoloLabelKind) ObjectExtensions.Dump<YoloLabelKind>(YoloLabelKind) ObjectExtensions.GetPropertyAccessor<YoloLabelKind, TValue>(YoloLabelKind, Expression<Func<YoloLabelKind, TValue>>) ObjectExtensions.InsertTo<YoloLabelKind, TCollection>(YoloLabelKind, IList<TCollection>, int) ObjectExtensions.ToJson<YoloLabelKind>(YoloLabelKind) ObjectExtensions.ToStringSafe<YoloLabelKind>(YoloLabelKind) ObjectExtensions.TransferPropertiesTo<YoloLabelKind, TTarget>(YoloLabelKind, TTarget, params string[]) XDocumentExtensions.AddTo<YoloLabelKind>(YoloLabelKind, XContainer)"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.Dispose.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.Dispose.html",
    "title": "Method Dispose | EyeAuras Docs",
    "keywords": "Method Dispose Dispose() Declaration public void Dispose() Implements IDisposable.Dispose()"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) Equals(YoloMask) Declaration public bool Equals(YoloMask other) Parameters Type Name Description YoloMask other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.MaskBounds.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.MaskBounds.html",
    "title": "Property MaskBounds | EyeAuras Docs",
    "keywords": "Property MaskBounds MaskBounds Declaration public required RectangleF MaskBounds { get; init; } Property Value Type Description RectangleF"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.MaskImage.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.MaskImage.html",
    "title": "Property MaskImage | EyeAuras Docs",
    "keywords": "Property MaskImage MaskImage Declaration public required Image<Gray, float> MaskImage { get; init; } Property Value Type Description Image<Gray, float>"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.html",
    "title": "Struct YoloMask | EyeAuras Docs",
    "keywords": "Struct YoloMask Implements IDisposable IEquatable<YoloMask> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.ML.Yolo Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public readonly struct YoloMask : IDisposable, IEquatable<YoloMask> Properties Name Description MaskBounds MaskImage Methods Name Description Dispose() Equals(YoloMask) Equals(object) GetHashCode() ToString() Operators Name Description operator ==(YoloMask, YoloMask) operator !=(YoloMask, YoloMask) Extension Methods YoloMaskExtensions.DrawMask(YoloMask, Image<Gray, byte>, float) YoloMaskExtensions.ToBinaryMask(YoloMask, Size, float) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(YoloMask, YoloMask) Declaration public static bool operator ==(YoloMask left, YoloMask right) Parameters Type Name Description YoloMask left YoloMask right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloMask.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(YoloMask, YoloMask) Declaration public static bool operator !=(YoloMask left, YoloMask right) Parameters Type Name Description YoloMask left YoloMask right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public YoloModelDescription <Clone>$() Returns Type Description YoloModelDescription"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.-ctor.html",
    "title": "Constructor YoloModelDescription | EyeAuras Docs",
    "keywords": "Constructor YoloModelDescription YoloModelDescription() Declaration public YoloModelDescription()"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.Confidence.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.Confidence.html",
    "title": "Property Confidence | EyeAuras Docs",
    "keywords": "Property Confidence Confidence Declaration public float Confidence { get; set; } Property Value Type Description float"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.Dimensions.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.Dimensions.html",
    "title": "Property Dimensions | EyeAuras Docs",
    "keywords": "Property Dimensions Dimensions Declaration public int Dimensions { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(YoloModelDescription?) Declaration public bool Equals(YoloModelDescription? other) Parameters Type Name Description YoloModelDescription other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.Labels.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.Labels.html",
    "title": "Property Labels | EyeAuras Docs",
    "keywords": "Property Labels Labels Declaration public IList<YoloLabel> Labels { get; set; } Property Value Type Description IList<YoloLabel>"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.Outputs.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.Outputs.html",
    "title": "Property Outputs | EyeAuras Docs",
    "keywords": "Property Outputs Outputs Declaration public string[] Outputs { get; set; } Property Value Type Description string[]"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.Overlap.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.Overlap.html",
    "title": "Property Overlap | EyeAuras Docs",
    "keywords": "Property Overlap Overlap Declaration public float Overlap { get; set; } Property Value Type Description float"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.Size.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.Size.html",
    "title": "Property Size | EyeAuras Docs",
    "keywords": "Property Size Size Declaration public Size Size { get; set; } Property Value Type Description Size"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.html",
    "title": "Class YoloModelDescription | EyeAuras Docs",
    "keywords": "Class YoloModelDescription Inheritance object YoloModelDescription Implements IEquatable<YoloModelDescription> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.ML.Yolo Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public sealed record YoloModelDescription : IEquatable<YoloModelDescription> Constructors Name Description YoloModelDescription() Properties Name Description Confidence Dimensions Labels Outputs Overlap Size Methods Name Description Equals(YoloModelDescription?) Equals(object?) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(YoloModelDescription?, YoloModelDescription?) operator !=(YoloModelDescription?, YoloModelDescription?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(YoloModelDescription?, YoloModelDescription?) Declaration public static bool operator ==(YoloModelDescription? left, YoloModelDescription? right) Parameters Type Name Description YoloModelDescription left YoloModelDescription right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelDescription.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(YoloModelDescription?, YoloModelDescription?) Declaration public static bool operator !=(YoloModelDescription? left, YoloModelDescription? right) Parameters Type Name Description YoloModelDescription left YoloModelDescription right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelType.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloModelType.html",
    "title": "Enum YoloModelType | EyeAuras Docs",
    "keywords": "Enum YoloModelType Namespace: EyeAuras.OpenCVAuras.ML.Yolo Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public enum YoloModelType Fields Name Description Classification ObjectDetection PoseDetection Segmentation Extension Methods ObjectExtensions.AddTo<YoloModelType, TCollection>(YoloModelType, ISourceList<TCollection>) ObjectExtensions.AddTo<YoloModelType, TCollection>(YoloModelType, ICollection<TCollection>) ObjectExtensions.CloneJson<YoloModelType>(YoloModelType) ObjectExtensions.CopyPropertiesTo<YoloModelType, TTarget>(YoloModelType, TTarget) ObjectExtensions.DumpToTextRaw<YoloModelType>(YoloModelType) ObjectExtensions.DumpToText<YoloModelType>(YoloModelType) ObjectExtensions.Dump<YoloModelType>(YoloModelType) ObjectExtensions.GetPropertyAccessor<YoloModelType, TValue>(YoloModelType, Expression<Func<YoloModelType, TValue>>) ObjectExtensions.InsertTo<YoloModelType, TCollection>(YoloModelType, IList<TCollection>, int) ObjectExtensions.ToJson<YoloModelType>(YoloModelType) ObjectExtensions.ToStringSafe<YoloModelType>(YoloModelType) ObjectExtensions.TransferPropertiesTo<YoloModelType, TTarget>(YoloModelType, TTarget, params string[]) XDocumentExtensions.AddTo<YoloModelType>(YoloModelType, XContainer)"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.ClassIdx.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.ClassIdx.html",
    "title": "Property ClassIdx | EyeAuras Docs",
    "keywords": "Property ClassIdx ClassIdx Declaration public int ClassIdx { get; init; } Property Value Type Description int"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) Equals(YoloPrediction) Declaration public bool Equals(YoloPrediction other) Parameters Type Name Description YoloPrediction other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.Label.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.Label.html",
    "title": "Property Label | EyeAuras Docs",
    "keywords": "Property Label Label Declaration public YoloLabel Label { get; init; } Property Value Type Description YoloLabel"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.Mask.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.Mask.html",
    "title": "Property Mask | EyeAuras Docs",
    "keywords": "Property Mask Mask Declaration public YoloMask Mask { get; init; } Property Value Type Description YoloMask"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.Rectangle.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.Rectangle.html",
    "title": "Property Rectangle | EyeAuras Docs",
    "keywords": "Property Rectangle Rectangle Declaration public required RectangleF Rectangle { get; init; } Property Value Type Description RectangleF"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.SampleIdx.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.SampleIdx.html",
    "title": "Property SampleIdx | EyeAuras Docs",
    "keywords": "Property SampleIdx SampleIdx Declaration public int SampleIdx { get; init; } Property Value Type Description int"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.Score.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.Score.html",
    "title": "Property Score | EyeAuras Docs",
    "keywords": "Property Score Score Declaration public required float Score { get; init; } Property Value Type Description float"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.html",
    "title": "Struct YoloPrediction | EyeAuras Docs",
    "keywords": "Struct YoloPrediction Implements IEquatable<YoloPrediction> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.ML.Yolo Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public readonly struct YoloPrediction : IEquatable<YoloPrediction> Properties Name Description ClassIdx Label Mask Rectangle SampleIdx Score Methods Name Description Equals(YoloPrediction) Equals(object) GetHashCode() ToString() Operators Name Description operator ==(YoloPrediction, YoloPrediction) operator !=(YoloPrediction, YoloPrediction) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(YoloPrediction, YoloPrediction) Declaration public static bool operator ==(YoloPrediction left, YoloPrediction right) Parameters Type Name Description YoloPrediction left YoloPrediction right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.YoloPrediction.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(YoloPrediction, YoloPrediction) Declaration public static bool operator !=(YoloPrediction left, YoloPrediction right) Parameters Type Name Description YoloPrediction left YoloPrediction right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.ML.Yolo.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.Yolo.html",
    "title": "Namespace EyeAuras.OpenCVAuras.ML.Yolo | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.OpenCVAuras.ML.Yolo Classes YoloModelDescription Structs YoloClassification YoloLabel YoloMask YoloPrediction Interfaces IYoloOutputParser Enums YoloLabelKind YoloModelType"
  },
  "api/EyeAuras.OpenCVAuras.ML.html": {
    "href": "api/EyeAuras.OpenCVAuras.ML.html",
    "title": "Namespace EyeAuras.OpenCVAuras.ML | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.OpenCVAuras.ML Namespaces EyeAuras.OpenCVAuras.ML.Yolo Interfaces IMLModel Enums MLExecutionProvider MLMaskProcessingType"
  },
  "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override ImageEffectsPipelineProperties <Clone>$() Returns Type Description ImageEffectsPipelineProperties Overrides AuraPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.-ctor.html",
    "title": "Constructor ImageEffectsPipelineProperties | EyeAuras Docs",
    "keywords": "Constructor ImageEffectsPipelineProperties ImageEffectsPipelineProperties() Declaration public ImageEffectsPipelineProperties()"
  },
  "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.Effects.html": {
    "href": "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.Effects.html",
    "title": "Property Effects | EyeAuras Docs",
    "keywords": "Property Effects Effects Declaration public PoeConfigMetadata<IAuraProperties>[] Effects { get; set; } Property Value Type Description PoeConfigMetadata<IAuraProperties>[]"
  },
  "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.EqualityContract.html": {
    "href": "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraPropertiesBase.Equals(object?) Equals(AuraPropertiesBase?) Declaration public override sealed bool Equals(AuraPropertiesBase? other) Parameters Type Name Description AuraPropertiesBase other Returns Type Description bool Overrides AuraPropertiesBase.Equals(AuraPropertiesBase?) Equals(ImageEffectsPipelineProperties?) Declaration public bool Equals(ImageEffectsPipelineProperties? other) Parameters Type Name Description ImageEffectsPipelineProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.PrintMembers.html": {
    "href": "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraPropertiesBase.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.Version.html": {
    "href": "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.html": {
    "href": "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.html",
    "title": "Class ImageEffectsPipelineProperties | EyeAuras Docs",
    "keywords": "Class ImageEffectsPipelineProperties Inheritance object AuraPropertiesBase ImageEffectsPipelineProperties Implements IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraPropertiesBase> IEquatable<ImageEffectsPipelineProperties> Inherited Members AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.Pipeline Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public sealed record ImageEffectsPipelineProperties : AuraPropertiesBase, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraPropertiesBase>, IEquatable<ImageEffectsPipelineProperties> Constructors Name Description ImageEffectsPipelineProperties() Properties Name Description Effects EqualityContract Version Methods Name Description Equals(ImageEffectsPipelineProperties?) Equals(AuraPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(ImageEffectsPipelineProperties?, ImageEffectsPipelineProperties?) operator !=(ImageEffectsPipelineProperties?, ImageEffectsPipelineProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ImageEffectsPipelineProperties?, ImageEffectsPipelineProperties?) Declaration public static bool operator ==(ImageEffectsPipelineProperties? left, ImageEffectsPipelineProperties? right) Parameters Type Name Description ImageEffectsPipelineProperties left ImageEffectsPipelineProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Pipeline.ImageEffectsPipelineProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ImageEffectsPipelineProperties?, ImageEffectsPipelineProperties?) Declaration public static bool operator !=(ImageEffectsPipelineProperties? left, ImageEffectsPipelineProperties? right) Parameters Type Name Description ImageEffectsPipelineProperties left ImageEffectsPipelineProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Pipeline.html": {
    "href": "api/EyeAuras.OpenCVAuras.Pipeline.html",
    "title": "Namespace EyeAuras.OpenCVAuras.Pipeline | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.OpenCVAuras.Pipeline Classes ImageEffectsPipelineProperties"
  },
  "api/EyeAuras.OpenCVAuras.Scaffolding.WindowCaptureTriggerExtensions.FetchNextResult.html": {
    "href": "api/EyeAuras.OpenCVAuras.Scaffolding.WindowCaptureTriggerExtensions.FetchNextResult.html",
    "title": "Method FetchNextResult | EyeAuras Docs",
    "keywords": "Method FetchNextResult FetchNextResult<TTriggerResult>(IWindowCaptureTrigger<TTriggerResult>) Triggers a refresh of the image source and returns the result of the processing operation. Note: The InputImage, OutputImage and any other Images of the result should not be accessed directly through this method as their lifecycle is managed externally and they are subject to constant refreshes. If you want to use them subscribe to ResultStream Declaration public static Task<TTriggerResult> FetchNextResult<TTriggerResult>(this IWindowCaptureTrigger<TTriggerResult> trigger) where TTriggerResult : ICaptureTriggerResult Parameters Type Name Description IWindowCaptureTrigger<TTriggerResult> trigger Returns Type Description Task<TTriggerResult> The processing result after refreshing the image source. Type Parameters Name Description TTriggerResult"
  },
  "api/EyeAuras.OpenCVAuras.Scaffolding.WindowCaptureTriggerExtensions.html": {
    "href": "api/EyeAuras.OpenCVAuras.Scaffolding.WindowCaptureTriggerExtensions.html",
    "title": "Class WindowCaptureTriggerExtensions | EyeAuras Docs",
    "keywords": "Class WindowCaptureTriggerExtensions Inheritance object WindowCaptureTriggerExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.OpenCVAuras.Scaffolding Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public static class WindowCaptureTriggerExtensions Methods Name Description FetchNextResult<TTriggerResult>(IWindowCaptureTrigger<TTriggerResult>) Triggers a refresh of the image source and returns the result of the processing operation. Note: The InputImage, OutputImage and any other Images of the result should not be accessed directly through this method as their lifecycle is managed externally and they are subject to constant refreshes. If you want to use them subscribe to ResultStream"
  },
  "api/EyeAuras.OpenCVAuras.Scaffolding.YoloMaskExtensions.DrawMask.html": {
    "href": "api/EyeAuras.OpenCVAuras.Scaffolding.YoloMaskExtensions.DrawMask.html",
    "title": "Method DrawMask | EyeAuras Docs",
    "keywords": "Method DrawMask DrawMask(YoloMask, Image<Gray, byte>, float) Declaration public static void DrawMask(this YoloMask mask, Image<Gray, byte> output, float threshold = 0.5) Parameters Type Name Description YoloMask mask Image<Gray, byte> output float threshold"
  },
  "api/EyeAuras.OpenCVAuras.Scaffolding.YoloMaskExtensions.ToBinaryMask.html": {
    "href": "api/EyeAuras.OpenCVAuras.Scaffolding.YoloMaskExtensions.ToBinaryMask.html",
    "title": "Method ToBinaryMask | EyeAuras Docs",
    "keywords": "Method ToBinaryMask ToBinaryMask(YoloMask, Size, float) Declaration public static Image<Gray, byte> ToBinaryMask(this YoloMask mask, Size size, float threshold = 0.5) Parameters Type Name Description YoloMask mask Size size float threshold Returns Type Description Image<Gray, byte>"
  },
  "api/EyeAuras.OpenCVAuras.Scaffolding.YoloMaskExtensions.html": {
    "href": "api/EyeAuras.OpenCVAuras.Scaffolding.YoloMaskExtensions.html",
    "title": "Class YoloMaskExtensions | EyeAuras Docs",
    "keywords": "Class YoloMaskExtensions Inheritance object YoloMaskExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.OpenCVAuras.Scaffolding Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public static class YoloMaskExtensions Methods Name Description DrawMask(YoloMask, Image<Gray, byte>, float) ToBinaryMask(YoloMask, Size, float)"
  },
  "api/EyeAuras.OpenCVAuras.Scaffolding.html": {
    "href": "api/EyeAuras.OpenCVAuras.Scaffolding.html",
    "title": "Namespace EyeAuras.OpenCVAuras.Scaffolding | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.OpenCVAuras.Scaffolding Classes WindowCaptureTriggerExtensions YoloMaskExtensions"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorComparisonGranularity.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorComparisonGranularity.html",
    "title": "Enum ColorComparisonGranularity | EyeAuras Docs",
    "keywords": "Enum ColorComparisonGranularity Defines the granularity at which color similarity is assessed within an image. Namespace: EyeAuras.OpenCVAuras.Triggers.ColorSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public enum ColorComparisonGranularity Fields Name Description AverageBlock16By16 Compares the target color to the average color within small, localized 16x16 pixel blocks of the image. AverageBlock2By2 Compares the target color to the average color within small, localized 2x2 pixel blocks of the image. AverageBlock32By32 Compares the target color to the average color within small, localized 32x32 pixel blocks of the image. AverageBlock4By4 Compares the target color to the average color within small, localized 4x4 pixel blocks of the image. AverageBlock4By8 Compares the target color to the average color within small, localized 4x8 pixel blocks of the image. AverageBlock8By4 Compares the target color to the average color within small, localized 8x4 pixel blocks of the image. AverageBlock8By8 Compares the target color to the average color within small, localized 8x8 pixel blocks of the image. EntireArea Compares the target color to the aggregate average color of the entire image. IndividualPixel Compares the target color to the color of each individual pixel within the image. Extension Methods ObjectExtensions.AddTo<ColorComparisonGranularity, TCollection>(ColorComparisonGranularity, ISourceList<TCollection>) ObjectExtensions.AddTo<ColorComparisonGranularity, TCollection>(ColorComparisonGranularity, ICollection<TCollection>) ObjectExtensions.CloneJson<ColorComparisonGranularity>(ColorComparisonGranularity) ObjectExtensions.CopyPropertiesTo<ColorComparisonGranularity, TTarget>(ColorComparisonGranularity, TTarget) ObjectExtensions.DumpToTextRaw<ColorComparisonGranularity>(ColorComparisonGranularity) ObjectExtensions.DumpToText<ColorComparisonGranularity>(ColorComparisonGranularity) ObjectExtensions.Dump<ColorComparisonGranularity>(ColorComparisonGranularity) ObjectExtensions.GetPropertyAccessor<ColorComparisonGranularity, TValue>(ColorComparisonGranularity, Expression<Func<ColorComparisonGranularity, TValue>>) ObjectExtensions.InsertTo<ColorComparisonGranularity, TCollection>(ColorComparisonGranularity, IList<TCollection>, int) ObjectExtensions.ToJson<ColorComparisonGranularity>(ColorComparisonGranularity) ObjectExtensions.ToStringSafe<ColorComparisonGranularity>(ColorComparisonGranularity) ObjectExtensions.TransferPropertiesTo<ColorComparisonGranularity, TTarget>(ColorComparisonGranularity, TTarget, params string[]) XDocumentExtensions.AddTo<ColorComparisonGranularity>(ColorComparisonGranularity, XContainer)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override ColorSearchTriggerProperties <Clone>$() Returns Type Description ColorSearchTriggerProperties Overrides WindowCaptureTriggerProperties.<Clone>$()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.-ctor.html",
    "title": "Constructor ColorSearchTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor ColorSearchTriggerProperties ColorSearchTriggerProperties() Declaration public ColorSearchTriggerProperties()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.ColorComparisonGranularity.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.ColorComparisonGranularity.html",
    "title": "Property ColorComparisonGranularity | EyeAuras Docs",
    "keywords": "Property ColorComparisonGranularity ColorComparisonGranularity Declaration public ColorComparisonGranularity ColorComparisonGranularity { get; set; } Property Value Type Description ColorComparisonGranularity"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.ColorSimilarityThreshold.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.ColorSimilarityThreshold.html",
    "title": "Property ColorSimilarityThreshold | EyeAuras Docs",
    "keywords": "Property ColorSimilarityThreshold ColorSimilarityThreshold Declaration public double ColorSimilarityThreshold { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides WindowCaptureTriggerProperties.EqualityContract"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides WindowCaptureTriggerProperties.Equals(object?) Equals(WindowCaptureTriggerProperties?) Declaration public override sealed bool Equals(WindowCaptureTriggerProperties? other) Parameters Type Name Description WindowCaptureTriggerProperties other Returns Type Description bool Overrides WindowCaptureTriggerProperties.Equals(WindowCaptureTriggerProperties?) Equals(ColorSearchTriggerProperties?) Declaration public bool Equals(ColorSearchTriggerProperties? other) Parameters Type Name Description ColorSearchTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides WindowCaptureTriggerProperties.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides WindowCaptureTriggerProperties.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.SimilarityMethod.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.SimilarityMethod.html",
    "title": "Property SimilarityMethod | EyeAuras Docs",
    "keywords": "Property SimilarityMethod SimilarityMethod Declaration public ColorSimilarityMethod SimilarityMethod { get; set; } Property Value Type Description ColorSimilarityMethod"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.TargetColor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.TargetColor.html",
    "title": "Property TargetColor | EyeAuras Docs",
    "keywords": "Property TargetColor TargetColor Declaration public Color TargetColor { get; set; } Property Value Type Description Color"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides WindowCaptureTriggerProperties.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.Version.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.html",
    "title": "Class ColorSearchTriggerProperties | EyeAuras Docs",
    "keywords": "Class ColorSearchTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase WindowCaptureTriggerProperties ColorSearchTriggerProperties Implements IEquatable<AuraPropertiesBase> IEquatable<AuraTriggerPropertiesBase> IWindowCaptureTriggerProperties IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<WindowCaptureTriggerProperties> IEquatable<ColorSearchTriggerProperties> Inherited Members WindowCaptureTriggerProperties.Equals(AuraTriggerPropertiesBase) WindowCaptureTriggerProperties.WindowRegion WindowCaptureTriggerProperties.WindowMatchParams WindowCaptureTriggerProperties.TargetWindowRegion WindowCaptureTriggerProperties.ImageEffectsPipeline WindowCaptureTriggerProperties.EnablePreview WindowCaptureTriggerProperties.ForceRegionCapture WindowCaptureTriggerProperties.MaxFramesPerSecond WindowCaptureTriggerProperties.MinFramesPerSecond WindowCaptureTriggerProperties.CaptureSourceName WindowCaptureTriggerProperties.CaptureCursor WindowCaptureTriggerProperties.CaptureBorderless AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.Triggers.ColorSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public sealed record ColorSearchTriggerProperties : WindowCaptureTriggerProperties, IEquatable<AuraPropertiesBase>, IEquatable<AuraTriggerPropertiesBase>, IWindowCaptureTriggerProperties, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<WindowCaptureTriggerProperties>, IEquatable<ColorSearchTriggerProperties> Constructors Name Description ColorSearchTriggerProperties() Properties Name Description ColorComparisonGranularity ColorSimilarityThreshold EqualityContract SimilarityMethod TargetColor Version Methods Name Description Equals(ColorSearchTriggerProperties?) Equals(WindowCaptureTriggerProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(ColorSearchTriggerProperties?, ColorSearchTriggerProperties?) operator !=(ColorSearchTriggerProperties?, ColorSearchTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ColorSearchTriggerProperties?, ColorSearchTriggerProperties?) Declaration public static bool operator ==(ColorSearchTriggerProperties? left, ColorSearchTriggerProperties? right) Parameters Type Name Description ColorSearchTriggerProperties left ColorSearchTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSearchTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ColorSearchTriggerProperties?, ColorSearchTriggerProperties?) Declaration public static bool operator !=(ColorSearchTriggerProperties? left, ColorSearchTriggerProperties? right) Parameters Type Name Description ColorSearchTriggerProperties left ColorSearchTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSimilarityMethod.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.ColorSimilarityMethod.html",
    "title": "Enum ColorSimilarityMethod | EyeAuras Docs",
    "keywords": "Enum ColorSimilarityMethod An enumeration representing the available methods for comparing the similarity of two colors. Namespace: EyeAuras.OpenCVAuras.Triggers.ColorSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public enum ColorSimilarityMethod Remarks This enumeration is used to select a method to determine how similar two colors are. The methods provide different types of calculations and may provide different results depending on the colors being compared. Fields Name Description CIEDE2000 A method that uses the CIEDE2000 color-difference formula. This is an advanced color comparison method, which takes into account the way humans perceive color. It provides more accurate results for a wider range of colors, but it is also more computationally intensive. EuclideanDistance A method that uses a simple Euclidean distance calculation on the RGB color space. This is a mathematical comparison that calculates the difference between the numerical RGB color values. It is less accurate for human color perception, but it is faster and simpler to compute. Extension Methods ObjectExtensions.AddTo<ColorSimilarityMethod, TCollection>(ColorSimilarityMethod, ISourceList<TCollection>) ObjectExtensions.AddTo<ColorSimilarityMethod, TCollection>(ColorSimilarityMethod, ICollection<TCollection>) ObjectExtensions.CloneJson<ColorSimilarityMethod>(ColorSimilarityMethod) ObjectExtensions.CopyPropertiesTo<ColorSimilarityMethod, TTarget>(ColorSimilarityMethod, TTarget) ObjectExtensions.DumpToTextRaw<ColorSimilarityMethod>(ColorSimilarityMethod) ObjectExtensions.DumpToText<ColorSimilarityMethod>(ColorSimilarityMethod) ObjectExtensions.Dump<ColorSimilarityMethod>(ColorSimilarityMethod) ObjectExtensions.GetPropertyAccessor<ColorSimilarityMethod, TValue>(ColorSimilarityMethod, Expression<Func<ColorSimilarityMethod, TValue>>) ObjectExtensions.InsertTo<ColorSimilarityMethod, TCollection>(ColorSimilarityMethod, IList<TCollection>, int) ObjectExtensions.ToJson<ColorSimilarityMethod>(ColorSimilarityMethod) ObjectExtensions.ToStringSafe<ColorSimilarityMethod>(ColorSimilarityMethod) ObjectExtensions.TransferPropertiesTo<ColorSimilarityMethod, TTarget>(ColorSimilarityMethod, TTarget, params string[]) XDocumentExtensions.AddTo<ColorSimilarityMethod>(ColorSimilarityMethod, XContainer)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.IColorSearchTrigger.ColorSimilarity.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.IColorSearchTrigger.ColorSimilarity.html",
    "title": "Property ColorSimilarity | EyeAuras Docs",
    "keywords": "Property ColorSimilarity ColorSimilarity Declaration double ColorSimilarity { get; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.IColorSearchTrigger.ColorSimilarityThreshold.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.IColorSearchTrigger.ColorSimilarityThreshold.html",
    "title": "Property ColorSimilarityThreshold | EyeAuras Docs",
    "keywords": "Property ColorSimilarityThreshold ColorSimilarityThreshold Declaration double ColorSimilarityThreshold { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.IColorSearchTrigger.SourceColor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.IColorSearchTrigger.SourceColor.html",
    "title": "Property SourceColor | EyeAuras Docs",
    "keywords": "Property SourceColor SourceColor Declaration Color? SourceColor { get; } Property Value Type Description Color?"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.IColorSearchTrigger.TargetColor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.IColorSearchTrigger.TargetColor.html",
    "title": "Property TargetColor | EyeAuras Docs",
    "keywords": "Property TargetColor TargetColor Declaration Color TargetColor { get; set; } Property Value Type Description Color"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.IColorSearchTrigger.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.IColorSearchTrigger.html",
    "title": "Interface IColorSearchTrigger | EyeAuras Docs",
    "keywords": "Interface IColorSearchTrigger Inherited Members IWindowCaptureTrigger<IColorSearchTriggerResult>.Refresh() IWindowCaptureTrigger<IColorSearchTriggerResult>.WindowRegion IWindowCaptureTrigger<IColorSearchTriggerResult>.CaptureSourceId IWindowCaptureTrigger<IColorSearchTriggerResult>.MinFramesPerSecond IWindowCaptureTrigger<IColorSearchTriggerResult>.MaxFramesPerSecond IWindowCaptureTrigger<IColorSearchTriggerResult>.CaptureCursor IWindowCaptureTrigger<IColorSearchTriggerResult>.EnablePreview IWindowCaptureTrigger<IColorSearchTriggerResult>.FramesPerSecond IWindowCaptureTrigger<IColorSearchTriggerResult>.FrameTime IWindowCaptureTrigger<IColorSearchTriggerResult>.TargetWindow IWindowCaptureTrigger<IColorSearchTriggerResult>.ActiveWindow IWindowCaptureTrigger<IColorSearchTriggerResult>.ImageSink IWindowCaptureTrigger<IColorSearchTriggerResult>.ResultStream IWindowCaptureTrigger<IColorSearchTriggerResult>.Bounds IWindowCaptureTrigger<IColorSearchTriggerResult>.BoundsScreen IWindowCaptureTrigger<IColorSearchTriggerResult>.BoundsWindow IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.OpenCVAuras.Triggers.ColorSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface IColorSearchTrigger : IWindowCaptureTrigger<IColorSearchTriggerResult>, IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription, IHasBounds, IHasAttachedWindow, INotifyPropertyChanged Properties Name Description ColorSimilarity ColorSimilarityThreshold SourceColor TargetColor Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) WindowCaptureTriggerExtensions.FetchNextResult<TTriggerResult>(IWindowCaptureTrigger<TTriggerResult>) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.IColorSearchTriggerResult.Similarity.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.IColorSearchTriggerResult.Similarity.html",
    "title": "Property Similarity | EyeAuras Docs",
    "keywords": "Property Similarity Similarity Calculated similarity Declaration double Similarity { get; init; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.IColorSearchTriggerResult.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.IColorSearchTriggerResult.html",
    "title": "Interface IColorSearchTriggerResult | EyeAuras Docs",
    "keywords": "Interface IColorSearchTriggerResult Inherited Members ICaptureTriggerResult.InputImage ICaptureTriggerResult.OutputImage ICaptureTriggerValue.Bounds ICaptureTriggerValue.Success Namespace: EyeAuras.OpenCVAuras.Triggers.ColorSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface IColorSearchTriggerResult : ICaptureTriggerResult, ICaptureTriggerValue Properties Name Description Similarity Calculated similarity Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ColorSearch.html",
    "title": "Namespace EyeAuras.OpenCVAuras.Triggers.ColorSearch | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.OpenCVAuras.Triggers.ColorSearch Classes ColorSearchTriggerProperties Interfaces IColorSearchTrigger IColorSearchTriggerResult Enums ColorComparisonGranularity Defines the granularity at which color similarity is assessed within an image. ColorSimilarityMethod An enumeration representing the available methods for comparing the similarity of two colors."
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.IImageSearchTrigger.LastSeenImageLocation.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.IImageSearchTrigger.LastSeenImageLocation.html",
    "title": "Property LastSeenImageLocation | EyeAuras Docs",
    "keywords": "Property LastSeenImageLocation LastSeenImageLocation Bounding box relative to the top left corner of the window Declaration [Obsolete(\"Left for compatibility reasons with older binding\")] Rectangle LastSeenImageLocation { get; } Property Value Type Description Rectangle"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.IImageSearchTrigger.SimilarityThreshold.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.IImageSearchTrigger.SimilarityThreshold.html",
    "title": "Property SimilarityThreshold | EyeAuras Docs",
    "keywords": "Property SimilarityThreshold SimilarityThreshold Declaration double SimilarityThreshold { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.IImageSearchTrigger.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.IImageSearchTrigger.html",
    "title": "Interface IImageSearchTrigger | EyeAuras Docs",
    "keywords": "Interface IImageSearchTrigger Inherited Members IWindowCaptureTrigger<IImageSearchTriggerResult>.Refresh() IWindowCaptureTrigger<IImageSearchTriggerResult>.WindowRegion IWindowCaptureTrigger<IImageSearchTriggerResult>.CaptureSourceId IWindowCaptureTrigger<IImageSearchTriggerResult>.MinFramesPerSecond IWindowCaptureTrigger<IImageSearchTriggerResult>.MaxFramesPerSecond IWindowCaptureTrigger<IImageSearchTriggerResult>.CaptureCursor IWindowCaptureTrigger<IImageSearchTriggerResult>.EnablePreview IWindowCaptureTrigger<IImageSearchTriggerResult>.FramesPerSecond IWindowCaptureTrigger<IImageSearchTriggerResult>.FrameTime IWindowCaptureTrigger<IImageSearchTriggerResult>.TargetWindow IWindowCaptureTrigger<IImageSearchTriggerResult>.ActiveWindow IWindowCaptureTrigger<IImageSearchTriggerResult>.ImageSink IWindowCaptureTrigger<IImageSearchTriggerResult>.ResultStream IWindowCaptureTrigger<IImageSearchTriggerResult>.Bounds IWindowCaptureTrigger<IImageSearchTriggerResult>.BoundsScreen IWindowCaptureTrigger<IImageSearchTriggerResult>.BoundsWindow IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.OpenCVAuras.Triggers.ImageSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface IImageSearchTrigger : IWindowCaptureTrigger<IImageSearchTriggerResult>, IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription, IHasBounds, IHasAttachedWindow, INotifyPropertyChanged Properties Name Description LastSeenImageLocation Bounding box relative to the top left corner of the window SimilarityThreshold Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) WindowCaptureTriggerExtensions.FetchNextResult<TTriggerResult>(IWindowCaptureTrigger<TTriggerResult>) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.IImageSearchTriggerResult.Similarity.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.IImageSearchTriggerResult.Similarity.html",
    "title": "Property Similarity | EyeAuras Docs",
    "keywords": "Property Similarity Similarity Calculated similarity Declaration double Similarity { get; init; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.IImageSearchTriggerResult.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.IImageSearchTriggerResult.html",
    "title": "Interface IImageSearchTriggerResult | EyeAuras Docs",
    "keywords": "Interface IImageSearchTriggerResult Inherited Members ICaptureTriggerResult.InputImage ICaptureTriggerResult.OutputImage ICaptureTriggerValue.Bounds ICaptureTriggerValue.Success Namespace: EyeAuras.OpenCVAuras.Triggers.ImageSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface IImageSearchTriggerResult : ICaptureTriggerResult, ICaptureTriggerValue Properties Name Description Similarity Calculated similarity Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override ImageSearchTriggerProperties <Clone>$() Returns Type Description ImageSearchTriggerProperties Overrides WindowCaptureTriggerProperties.<Clone>$()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.-ctor.html",
    "title": "Constructor ImageSearchTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor ImageSearchTriggerProperties ImageSearchTriggerProperties(ImageSearchTriggerProperties) Declaration protected ImageSearchTriggerProperties(ImageSearchTriggerProperties original) Parameters Type Name Description ImageSearchTriggerProperties original ImageSearchTriggerProperties() Declaration public ImageSearchTriggerProperties()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides WindowCaptureTriggerProperties.EqualityContract"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides WindowCaptureTriggerProperties.Equals(object?) Equals(WindowCaptureTriggerProperties?) Declaration public override sealed bool Equals(WindowCaptureTriggerProperties? other) Parameters Type Name Description WindowCaptureTriggerProperties other Returns Type Description bool Overrides WindowCaptureTriggerProperties.Equals(WindowCaptureTriggerProperties?) Equals(ImageSearchTriggerProperties?) Declaration public virtual bool Equals(ImageSearchTriggerProperties? other) Parameters Type Name Description ImageSearchTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides WindowCaptureTriggerProperties.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.ImageData.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.ImageData.html",
    "title": "Property ImageData | EyeAuras Docs",
    "keywords": "Property ImageData ImageData Declaration public byte[] ImageData { get; set; } Property Value Type Description byte[]"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.ImageFilePath.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.ImageFilePath.html",
    "title": "Property ImageFilePath | EyeAuras Docs",
    "keywords": "Property ImageFilePath ImageFilePath Declaration public string ImageFilePath { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.ImageSize.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.ImageSize.html",
    "title": "Property ImageSize | EyeAuras Docs",
    "keywords": "Property ImageSize ImageSize Declaration public Size ImageSize { get; set; } Property Value Type Description Size"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides WindowCaptureTriggerProperties.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.SimilarityThreshold.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.SimilarityThreshold.html",
    "title": "Property SimilarityThreshold | EyeAuras Docs",
    "keywords": "Property SimilarityThreshold SimilarityThreshold Declaration public double SimilarityThreshold { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides WindowCaptureTriggerProperties.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.Version.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.html",
    "title": "Class ImageSearchTriggerProperties | EyeAuras Docs",
    "keywords": "Class ImageSearchTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase WindowCaptureTriggerProperties ImageSearchTriggerProperties Implements IEquatable<AuraPropertiesBase> IEquatable<AuraTriggerPropertiesBase> IWindowCaptureTriggerProperties IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<WindowCaptureTriggerProperties> IEquatable<ImageSearchTriggerProperties> Inherited Members WindowCaptureTriggerProperties.Equals(AuraTriggerPropertiesBase) WindowCaptureTriggerProperties.WindowRegion WindowCaptureTriggerProperties.WindowMatchParams WindowCaptureTriggerProperties.TargetWindowRegion WindowCaptureTriggerProperties.ImageEffectsPipeline WindowCaptureTriggerProperties.EnablePreview WindowCaptureTriggerProperties.ForceRegionCapture WindowCaptureTriggerProperties.MaxFramesPerSecond WindowCaptureTriggerProperties.MinFramesPerSecond WindowCaptureTriggerProperties.CaptureSourceName WindowCaptureTriggerProperties.CaptureCursor WindowCaptureTriggerProperties.CaptureBorderless AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.Triggers.ImageSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public record ImageSearchTriggerProperties : WindowCaptureTriggerProperties, IEquatable<AuraPropertiesBase>, IEquatable<AuraTriggerPropertiesBase>, IWindowCaptureTriggerProperties, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<WindowCaptureTriggerProperties>, IEquatable<ImageSearchTriggerProperties> Constructors Name Description ImageSearchTriggerProperties() ImageSearchTriggerProperties(ImageSearchTriggerProperties) Properties Name Description EqualityContract ImageData ImageFilePath ImageSize SimilarityThreshold Version Methods Name Description Equals(ImageSearchTriggerProperties?) Equals(WindowCaptureTriggerProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(ImageSearchTriggerProperties?, ImageSearchTriggerProperties?) operator !=(ImageSearchTriggerProperties?, ImageSearchTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ImageSearchTriggerProperties?, ImageSearchTriggerProperties?) Declaration public static bool operator ==(ImageSearchTriggerProperties? left, ImageSearchTriggerProperties? right) Parameters Type Name Description ImageSearchTriggerProperties left ImageSearchTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.ImageSearchTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ImageSearchTriggerProperties?, ImageSearchTriggerProperties?) Declaration public static bool operator !=(ImageSearchTriggerProperties? left, ImageSearchTriggerProperties? right) Parameters Type Name Description ImageSearchTriggerProperties left ImageSearchTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.ImageSearch.html",
    "title": "Namespace EyeAuras.OpenCVAuras.Triggers.ImageSearch | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.OpenCVAuras.Triggers.ImageSearch Classes ImageSearchTriggerProperties Interfaces IImageSearchTrigger IImageSearchTriggerResult"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.Classifications.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.Classifications.html",
    "title": "Property Classifications | EyeAuras Docs",
    "keywords": "Property Classifications Classifications Declaration ImmutableArray<YoloClassification> Classifications { get; } Property Value Type Description ImmutableArray<YoloClassification>"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.ExecutionProvider.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.ExecutionProvider.html",
    "title": "Property ExecutionProvider | EyeAuras Docs",
    "keywords": "Property ExecutionProvider ExecutionProvider Declaration MLExecutionProvider ExecutionProvider { get; set; } Property Value Type Description MLExecutionProvider"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.InterOpNumThreads.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.InterOpNumThreads.html",
    "title": "Property InterOpNumThreads | EyeAuras Docs",
    "keywords": "Property InterOpNumThreads InterOpNumThreads Declaration int InterOpNumThreads { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.IntraOpNumThreads.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.IntraOpNumThreads.html",
    "title": "Property IntraOpNumThreads | EyeAuras Docs",
    "keywords": "Property IntraOpNumThreads IntraOpNumThreads Declaration int IntraOpNumThreads { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.MLModel.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.MLModel.html",
    "title": "Property MLModel | EyeAuras Docs",
    "keywords": "Property MLModel MLModel Declaration IMLModel MLModel { get; } Property Value Type Description IMLModel"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.MLModelData.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.MLModelData.html",
    "title": "Property MLModelData | EyeAuras Docs",
    "keywords": "Property MLModelData MLModelData Declaration MLModelData MLModelData { get; set; } Property Value Type Description MLModelData"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.OverlapThreshold.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.OverlapThreshold.html",
    "title": "Property OverlapThreshold | EyeAuras Docs",
    "keywords": "Property OverlapThreshold OverlapThreshold Declaration double OverlapThreshold { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.Predictions.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.Predictions.html",
    "title": "Property Predictions | EyeAuras Docs",
    "keywords": "Property Predictions Predictions Declaration ImmutableArray<YoloPrediction> Predictions { get; } Property Value Type Description ImmutableArray<YoloPrediction>"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.SimilarityThreshold.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.SimilarityThreshold.html",
    "title": "Property SimilarityThreshold | EyeAuras Docs",
    "keywords": "Property SimilarityThreshold SimilarityThreshold Declaration double SimilarityThreshold { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTrigger.html",
    "title": "Interface IMLSearchTrigger | EyeAuras Docs",
    "keywords": "Interface IMLSearchTrigger Inherited Members IWindowCaptureTrigger<IMLSearchTriggerResult>.Refresh() IWindowCaptureTrigger<IMLSearchTriggerResult>.WindowRegion IWindowCaptureTrigger<IMLSearchTriggerResult>.CaptureSourceId IWindowCaptureTrigger<IMLSearchTriggerResult>.MinFramesPerSecond IWindowCaptureTrigger<IMLSearchTriggerResult>.MaxFramesPerSecond IWindowCaptureTrigger<IMLSearchTriggerResult>.CaptureCursor IWindowCaptureTrigger<IMLSearchTriggerResult>.EnablePreview IWindowCaptureTrigger<IMLSearchTriggerResult>.FramesPerSecond IWindowCaptureTrigger<IMLSearchTriggerResult>.FrameTime IWindowCaptureTrigger<IMLSearchTriggerResult>.TargetWindow IWindowCaptureTrigger<IMLSearchTriggerResult>.ActiveWindow IWindowCaptureTrigger<IMLSearchTriggerResult>.ImageSink IWindowCaptureTrigger<IMLSearchTriggerResult>.ResultStream IWindowCaptureTrigger<IMLSearchTriggerResult>.Bounds IWindowCaptureTrigger<IMLSearchTriggerResult>.BoundsScreen IWindowCaptureTrigger<IMLSearchTriggerResult>.BoundsWindow IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.OpenCVAuras.Triggers.MLSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface IMLSearchTrigger : IWindowCaptureTrigger<IMLSearchTriggerResult>, IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription, IHasBounds, IHasAttachedWindow, INotifyPropertyChanged Properties Name Description Classifications ExecutionProvider InterOpNumThreads IntraOpNumThreads MLModel MLModelData OverlapThreshold Predictions SimilarityThreshold Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) WindowCaptureTriggerExtensions.FetchNextResult<TTriggerResult>(IWindowCaptureTrigger<TTriggerResult>) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTriggerResult.Classifications.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTriggerResult.Classifications.html",
    "title": "Property Classifications | EyeAuras Docs",
    "keywords": "Property Classifications Classifications Contains list of classifications generated by the model Declaration ImmutableArray<YoloClassification> Classifications { get; init; } Property Value Type Description ImmutableArray<YoloClassification>"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTriggerResult.Predictions.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTriggerResult.Predictions.html",
    "title": "Property Predictions | EyeAuras Docs",
    "keywords": "Property Predictions Predictions Contains list of predictions generated by the model Declaration ImmutableArray<YoloPrediction> Predictions { get; init; } Property Value Type Description ImmutableArray<YoloPrediction>"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTriggerResult.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.IMLSearchTriggerResult.html",
    "title": "Interface IMLSearchTriggerResult | EyeAuras Docs",
    "keywords": "Interface IMLSearchTriggerResult Inherited Members ICaptureTriggerResult.InputImage ICaptureTriggerResult.OutputImage ICaptureTriggerValue.Bounds ICaptureTriggerValue.Success Namespace: EyeAuras.OpenCVAuras.Triggers.MLSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface IMLSearchTriggerResult : ICaptureTriggerResult, ICaptureTriggerValue Properties Name Description Classifications Contains list of classifications generated by the model Predictions Contains list of predictions generated by the model Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public MLCompressedModelData <Clone>$() Returns Type Description MLCompressedModelData"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.-ctor.html",
    "title": "Constructor MLCompressedModelData | EyeAuras Docs",
    "keywords": "Constructor MLCompressedModelData MLCompressedModelData() Declaration public MLCompressedModelData()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.CompressedData.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.CompressedData.html",
    "title": "Property CompressedData | EyeAuras Docs",
    "keywords": "Property CompressedData CompressedData Declaration [ComparisonIgnore] public byte[] CompressedData { get; init; } Property Value Type Description byte[]"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.CompressedDataSHA1.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.CompressedDataSHA1.html",
    "title": "Property CompressedDataSHA1 | EyeAuras Docs",
    "keywords": "Property CompressedDataSHA1 CompressedDataSHA1 Declaration public string CompressedDataSHA1 { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.ComputeHash.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.ComputeHash.html",
    "title": "Method ComputeHash | EyeAuras Docs",
    "keywords": "Method ComputeHash ComputeHash(byte[]) Declaration public static string ComputeHash(byte[] data) Parameters Type Name Description byte[] data Returns Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.DataSHA1.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.DataSHA1.html",
    "title": "Property DataSHA1 | EyeAuras Docs",
    "keywords": "Property DataSHA1 DataSHA1 Declaration public string DataSHA1 { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(MLCompressedModelData?) Declaration public bool Equals(MLCompressedModelData? other) Parameters Type Name Description MLCompressedModelData other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.FileName.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.FileName.html",
    "title": "Property FileName | EyeAuras Docs",
    "keywords": "Property FileName FileName Declaration public string FileName { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.FromModelData.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.FromModelData.html",
    "title": "Method FromModelData | EyeAuras Docs",
    "keywords": "Method FromModelData FromModelData(MLModelData) Declaration public static MLCompressedModelData FromModelData(MLModelData modelData) Parameters Type Name Description MLModelData modelData Returns Type Description MLCompressedModelData"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.ToModelData.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.ToModelData.html",
    "title": "Method ToModelData | EyeAuras Docs",
    "keywords": "Method ToModelData ToModelData() Declaration public MLModelData ToModelData() Returns Type Description MLModelData"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.Version.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public int Version { get; set; } Property Value Type Description int Implements IHasVersion.Version"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.html",
    "title": "Class MLCompressedModelData | EyeAuras Docs",
    "keywords": "Class MLCompressedModelData Inheritance object MLCompressedModelData Implements IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion IEquatable<MLCompressedModelData> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.Triggers.MLSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public sealed record MLCompressedModelData : IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, IEquatable<MLCompressedModelData> Constructors Name Description MLCompressedModelData() Properties Name Description CompressedData CompressedDataSHA1 DataSHA1 FileName Version Methods Name Description ComputeHash(byte[]) Equals(MLCompressedModelData?) Equals(object?) FromModelData(MLModelData) GetHashCode() ToModelData() ToString() <Clone>$() Operators Name Description operator ==(MLCompressedModelData?, MLCompressedModelData?) operator !=(MLCompressedModelData?, MLCompressedModelData?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(MLCompressedModelData?, MLCompressedModelData?) Declaration public static bool operator ==(MLCompressedModelData? left, MLCompressedModelData? right) Parameters Type Name Description MLCompressedModelData left MLCompressedModelData right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLCompressedModelData.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(MLCompressedModelData?, MLCompressedModelData?) Declaration public static bool operator !=(MLCompressedModelData? left, MLCompressedModelData? right) Parameters Type Name Description MLCompressedModelData left MLCompressedModelData right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public MLModelData <Clone>$() Returns Type Description MLModelData"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.-ctor.html",
    "title": "Constructor MLModelData | EyeAuras Docs",
    "keywords": "Constructor MLModelData MLModelData() Declaration public MLModelData()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.Data.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.Data.html",
    "title": "Property Data | EyeAuras Docs",
    "keywords": "Property Data Data Declaration public required byte[] Data { get; init; } Property Value Type Description byte[]"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(MLModelData?) Declaration public bool Equals(MLModelData? other) Parameters Type Name Description MLModelData other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.FileName.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.FileName.html",
    "title": "Property FileName | EyeAuras Docs",
    "keywords": "Property FileName FileName Declaration public required string FileName { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.FromFile.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.FromFile.html",
    "title": "Method FromFile | EyeAuras Docs",
    "keywords": "Method FromFile FromFile(FileInfo) Declaration public static MLModelData FromFile(FileInfo file) Parameters Type Name Description FileInfo file Returns Type Description MLModelData"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.FromFileAsync.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.FromFileAsync.html",
    "title": "Method FromFileAsync | EyeAuras Docs",
    "keywords": "Method FromFileAsync FromFileAsync(FileInfo, CancellationToken) Declaration public static Task<MLModelData> FromFileAsync(FileInfo file, CancellationToken cancellationToken = default) Parameters Type Name Description FileInfo file CancellationToken cancellationToken Returns Type Description Task<MLModelData>"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.html",
    "title": "Class MLModelData | EyeAuras Docs",
    "keywords": "Class MLModelData Inheritance object MLModelData Implements IEquatable<MLModelData> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.Triggers.MLSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public sealed record MLModelData : IEquatable<MLModelData> Constructors Name Description MLModelData() Properties Name Description Data FileName Methods Name Description Equals(MLModelData?) Equals(object?) FromFile(FileInfo) FromFileAsync(FileInfo, CancellationToken) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(MLModelData?, MLModelData?) operator !=(MLModelData?, MLModelData?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(MLModelData?, MLModelData?) Declaration public static bool operator ==(MLModelData? left, MLModelData? right) Parameters Type Name Description MLModelData left MLModelData right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLModelData.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(MLModelData?, MLModelData?) Declaration public static bool operator !=(MLModelData? left, MLModelData? right) Parameters Type Name Description MLModelData left MLModelData right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public MLPredictionItem <Clone>$() Returns Type Description MLPredictionItem"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.-ctor.html",
    "title": "Constructor MLPredictionItem | EyeAuras Docs",
    "keywords": "Constructor MLPredictionItem MLPredictionItem() Declaration public MLPredictionItem()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.Bounds.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.Bounds.html",
    "title": "Property Bounds | EyeAuras Docs",
    "keywords": "Property Bounds Bounds Declaration public Rectangle Bounds { get; init; } Property Value Type Description Rectangle"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.BoundsAsString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.BoundsAsString.html",
    "title": "Property BoundsAsString | EyeAuras Docs",
    "keywords": "Property BoundsAsString BoundsAsString Declaration public string BoundsAsString { get; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.Color.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.Color.html",
    "title": "Property Color | EyeAuras Docs",
    "keywords": "Property Color Color Declaration public Color Color { get; init; } Property Value Type Description Color"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(MLPredictionItem?) Declaration public bool Equals(MLPredictionItem? other) Parameters Type Name Description MLPredictionItem other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.LocationAsString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.LocationAsString.html",
    "title": "Property LocationAsString | EyeAuras Docs",
    "keywords": "Property LocationAsString LocationAsString Declaration public string LocationAsString { get; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.Name.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration public required string Name { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.Score.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.Score.html",
    "title": "Property Score | EyeAuras Docs",
    "keywords": "Property Score Score Declaration public float Score { get; init; } Property Value Type Description float"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.SizeAsString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.SizeAsString.html",
    "title": "Property SizeAsString | EyeAuras Docs",
    "keywords": "Property SizeAsString SizeAsString Declaration public string SizeAsString { get; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.html",
    "title": "Class MLPredictionItem | EyeAuras Docs",
    "keywords": "Class MLPredictionItem Inheritance object MLPredictionItem Implements IEquatable<MLPredictionItem> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.Triggers.MLSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public sealed record MLPredictionItem : IEquatable<MLPredictionItem> Constructors Name Description MLPredictionItem() Properties Name Description Bounds BoundsAsString Color LocationAsString Name Score SizeAsString Methods Name Description Equals(MLPredictionItem?) Equals(object?) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(MLPredictionItem?, MLPredictionItem?) operator !=(MLPredictionItem?, MLPredictionItem?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(MLPredictionItem?, MLPredictionItem?) Declaration public static bool operator ==(MLPredictionItem? left, MLPredictionItem? right) Parameters Type Name Description MLPredictionItem left MLPredictionItem right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLPredictionItem.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(MLPredictionItem?, MLPredictionItem?) Declaration public static bool operator !=(MLPredictionItem? left, MLPredictionItem? right) Parameters Type Name Description MLPredictionItem left MLPredictionItem right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override MLSearchTriggerProperties <Clone>$() Returns Type Description MLSearchTriggerProperties Overrides MLSearchTriggerPropertiesV2.<Clone>$()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.-ctor.html",
    "title": "Constructor MLSearchTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor MLSearchTriggerProperties MLSearchTriggerProperties(MLSearchTriggerProperties) Declaration protected MLSearchTriggerProperties(MLSearchTriggerProperties original) Parameters Type Name Description MLSearchTriggerProperties original MLSearchTriggerProperties() Declaration public MLSearchTriggerProperties()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides MLSearchTriggerPropertiesV2.EqualityContract"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides MLSearchTriggerPropertiesV2.Equals(object?) Equals(MLSearchTriggerPropertiesV2?) Declaration public override sealed bool Equals(MLSearchTriggerPropertiesV2? other) Parameters Type Name Description MLSearchTriggerPropertiesV2 other Returns Type Description bool Overrides MLSearchTriggerPropertiesV2.Equals(MLSearchTriggerPropertiesV2?) Equals(MLSearchTriggerProperties?) Declaration public virtual bool Equals(MLSearchTriggerProperties? other) Parameters Type Name Description MLSearchTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides MLSearchTriggerPropertiesV2.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides MLSearchTriggerPropertiesV2.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides MLSearchTriggerPropertiesV2.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.html",
    "title": "Class MLSearchTriggerProperties | EyeAuras Docs",
    "keywords": "Class MLSearchTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase WindowCaptureTriggerProperties MLSearchTriggerPropertiesV2 MLSearchTriggerProperties Implements IEquatable<AuraPropertiesBase> IEquatable<AuraTriggerPropertiesBase> IWindowCaptureTriggerProperties IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<WindowCaptureTriggerProperties> IEquatable<MLSearchTriggerPropertiesV2> IEquatable<MLSearchTriggerProperties> Inherited Members MLSearchTriggerPropertiesV2.Equals(WindowCaptureTriggerProperties) MLSearchTriggerPropertiesV2.MLClassName MLSearchTriggerPropertiesV2.SimilarityThreshold MLSearchTriggerPropertiesV2.OverlapThreshold MLSearchTriggerPropertiesV2.ExecutionProvider MLSearchTriggerPropertiesV2.MaskProcessingType MLSearchTriggerPropertiesV2.MLModelData MLSearchTriggerPropertiesV2.InterOpNumThreads MLSearchTriggerPropertiesV2.IntraOpNumThreads MLSearchTriggerPropertiesV2.Version WindowCaptureTriggerProperties.Equals(AuraTriggerPropertiesBase) WindowCaptureTriggerProperties.WindowRegion WindowCaptureTriggerProperties.WindowMatchParams WindowCaptureTriggerProperties.TargetWindowRegion WindowCaptureTriggerProperties.ImageEffectsPipeline WindowCaptureTriggerProperties.EnablePreview WindowCaptureTriggerProperties.ForceRegionCapture WindowCaptureTriggerProperties.MaxFramesPerSecond WindowCaptureTriggerProperties.MinFramesPerSecond WindowCaptureTriggerProperties.CaptureSourceName WindowCaptureTriggerProperties.CaptureCursor WindowCaptureTriggerProperties.CaptureBorderless AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.Triggers.MLSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public record MLSearchTriggerProperties : MLSearchTriggerPropertiesV2, IEquatable<AuraPropertiesBase>, IEquatable<AuraTriggerPropertiesBase>, IWindowCaptureTriggerProperties, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<WindowCaptureTriggerProperties>, IEquatable<MLSearchTriggerPropertiesV2>, IEquatable<MLSearchTriggerProperties> Constructors Name Description MLSearchTriggerProperties() MLSearchTriggerProperties(MLSearchTriggerProperties) Properties Name Description EqualityContract Methods Name Description Equals(MLSearchTriggerProperties?) Equals(MLSearchTriggerPropertiesV2?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(MLSearchTriggerProperties?, MLSearchTriggerProperties?) operator !=(MLSearchTriggerProperties?, MLSearchTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(MLSearchTriggerProperties?, MLSearchTriggerProperties?) Declaration public static bool operator ==(MLSearchTriggerProperties? left, MLSearchTriggerProperties? right) Parameters Type Name Description MLSearchTriggerProperties left MLSearchTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(MLSearchTriggerProperties?, MLSearchTriggerProperties?) Declaration public static bool operator !=(MLSearchTriggerProperties? left, MLSearchTriggerProperties? right) Parameters Type Name Description MLSearchTriggerProperties left MLSearchTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override MLSearchTriggerPropertiesV1 <Clone>$() Returns Type Description MLSearchTriggerPropertiesV1 Overrides WindowCaptureTriggerProperties.<Clone>$()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.-ctor.html",
    "title": "Constructor MLSearchTriggerPropertiesV1 | EyeAuras Docs",
    "keywords": "Constructor MLSearchTriggerPropertiesV1 MLSearchTriggerPropertiesV1(MLSearchTriggerPropertiesV1) Declaration protected MLSearchTriggerPropertiesV1(MLSearchTriggerPropertiesV1 original) Parameters Type Name Description MLSearchTriggerPropertiesV1 original MLSearchTriggerPropertiesV1() Declaration public MLSearchTriggerPropertiesV1()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.EqualityContract.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides WindowCaptureTriggerProperties.EqualityContract"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides WindowCaptureTriggerProperties.Equals(object?) Equals(WindowCaptureTriggerProperties?) Declaration public override sealed bool Equals(WindowCaptureTriggerProperties? other) Parameters Type Name Description WindowCaptureTriggerProperties other Returns Type Description bool Overrides WindowCaptureTriggerProperties.Equals(WindowCaptureTriggerProperties?) Equals(MLSearchTriggerPropertiesV1?) Declaration public virtual bool Equals(MLSearchTriggerPropertiesV1? other) Parameters Type Name Description MLSearchTriggerPropertiesV1 other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.ExecutionProvider.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.ExecutionProvider.html",
    "title": "Property ExecutionProvider | EyeAuras Docs",
    "keywords": "Property ExecutionProvider ExecutionProvider Declaration public MLExecutionProvider ExecutionProvider { get; set; } Property Value Type Description MLExecutionProvider"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides WindowCaptureTriggerProperties.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.InterOpNumThreads.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.InterOpNumThreads.html",
    "title": "Property InterOpNumThreads | EyeAuras Docs",
    "keywords": "Property InterOpNumThreads InterOpNumThreads Declaration public int InterOpNumThreads { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.IntraOpNumThreads.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.IntraOpNumThreads.html",
    "title": "Property IntraOpNumThreads | EyeAuras Docs",
    "keywords": "Property IntraOpNumThreads IntraOpNumThreads Declaration public int IntraOpNumThreads { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.MLClassName.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.MLClassName.html",
    "title": "Property MLClassName | EyeAuras Docs",
    "keywords": "Property MLClassName MLClassName Declaration public string MLClassName { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.MLModelPath.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.MLModelPath.html",
    "title": "Property MLModelPath | EyeAuras Docs",
    "keywords": "Property MLModelPath MLModelPath Declaration public string MLModelPath { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.MaskProcessingType.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.MaskProcessingType.html",
    "title": "Property MaskProcessingType | EyeAuras Docs",
    "keywords": "Property MaskProcessingType MaskProcessingType Declaration public MLMaskProcessingType MaskProcessingType { get; set; } Property Value Type Description MLMaskProcessingType"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.OverlapThreshold.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.OverlapThreshold.html",
    "title": "Property OverlapThreshold | EyeAuras Docs",
    "keywords": "Property OverlapThreshold OverlapThreshold Declaration public double OverlapThreshold { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.PrintMembers.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides WindowCaptureTriggerProperties.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.SimilarityThreshold.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.SimilarityThreshold.html",
    "title": "Property SimilarityThreshold | EyeAuras Docs",
    "keywords": "Property SimilarityThreshold SimilarityThreshold Declaration public double SimilarityThreshold { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides WindowCaptureTriggerProperties.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.Version.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.html",
    "title": "Class MLSearchTriggerPropertiesV1 | EyeAuras Docs",
    "keywords": "Class MLSearchTriggerPropertiesV1 Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase WindowCaptureTriggerProperties MLSearchTriggerPropertiesV1 Implements IEquatable<AuraPropertiesBase> IEquatable<AuraTriggerPropertiesBase> IWindowCaptureTriggerProperties IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<WindowCaptureTriggerProperties> IEquatable<MLSearchTriggerPropertiesV1> Inherited Members WindowCaptureTriggerProperties.Equals(AuraTriggerPropertiesBase) WindowCaptureTriggerProperties.WindowRegion WindowCaptureTriggerProperties.WindowMatchParams WindowCaptureTriggerProperties.TargetWindowRegion WindowCaptureTriggerProperties.ImageEffectsPipeline WindowCaptureTriggerProperties.EnablePreview WindowCaptureTriggerProperties.ForceRegionCapture WindowCaptureTriggerProperties.MaxFramesPerSecond WindowCaptureTriggerProperties.MinFramesPerSecond WindowCaptureTriggerProperties.CaptureSourceName WindowCaptureTriggerProperties.CaptureCursor WindowCaptureTriggerProperties.CaptureBorderless AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.Triggers.MLSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public record MLSearchTriggerPropertiesV1 : WindowCaptureTriggerProperties, IEquatable<AuraPropertiesBase>, IEquatable<AuraTriggerPropertiesBase>, IWindowCaptureTriggerProperties, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<WindowCaptureTriggerProperties>, IEquatable<MLSearchTriggerPropertiesV1> Constructors Name Description MLSearchTriggerPropertiesV1() MLSearchTriggerPropertiesV1(MLSearchTriggerPropertiesV1) Properties Name Description EqualityContract ExecutionProvider InterOpNumThreads IntraOpNumThreads MLClassName MLModelPath MaskProcessingType OverlapThreshold SimilarityThreshold Version Methods Name Description Equals(MLSearchTriggerPropertiesV1?) Equals(WindowCaptureTriggerProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(MLSearchTriggerPropertiesV1?, MLSearchTriggerPropertiesV1?) operator !=(MLSearchTriggerPropertiesV1?, MLSearchTriggerPropertiesV1?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(MLSearchTriggerPropertiesV1?, MLSearchTriggerPropertiesV1?) Declaration public static bool operator ==(MLSearchTriggerPropertiesV1? left, MLSearchTriggerPropertiesV1? right) Parameters Type Name Description MLSearchTriggerPropertiesV1 left MLSearchTriggerPropertiesV1 right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV1.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(MLSearchTriggerPropertiesV1?, MLSearchTriggerPropertiesV1?) Declaration public static bool operator !=(MLSearchTriggerPropertiesV1? left, MLSearchTriggerPropertiesV1? right) Parameters Type Name Description MLSearchTriggerPropertiesV1 left MLSearchTriggerPropertiesV1 right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override MLSearchTriggerPropertiesV2 <Clone>$() Returns Type Description MLSearchTriggerPropertiesV2 Overrides WindowCaptureTriggerProperties.<Clone>$()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.-ctor.html",
    "title": "Constructor MLSearchTriggerPropertiesV2 | EyeAuras Docs",
    "keywords": "Constructor MLSearchTriggerPropertiesV2 MLSearchTriggerPropertiesV2(MLSearchTriggerPropertiesV2) Declaration protected MLSearchTriggerPropertiesV2(MLSearchTriggerPropertiesV2 original) Parameters Type Name Description MLSearchTriggerPropertiesV2 original MLSearchTriggerPropertiesV2() Declaration public MLSearchTriggerPropertiesV2()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.EqualityContract.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides WindowCaptureTriggerProperties.EqualityContract"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides WindowCaptureTriggerProperties.Equals(object?) Equals(WindowCaptureTriggerProperties?) Declaration public override sealed bool Equals(WindowCaptureTriggerProperties? other) Parameters Type Name Description WindowCaptureTriggerProperties other Returns Type Description bool Overrides WindowCaptureTriggerProperties.Equals(WindowCaptureTriggerProperties?) Equals(MLSearchTriggerPropertiesV2?) Declaration public virtual bool Equals(MLSearchTriggerPropertiesV2? other) Parameters Type Name Description MLSearchTriggerPropertiesV2 other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.ExecutionProvider.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.ExecutionProvider.html",
    "title": "Property ExecutionProvider | EyeAuras Docs",
    "keywords": "Property ExecutionProvider ExecutionProvider Declaration public MLExecutionProvider ExecutionProvider { get; set; } Property Value Type Description MLExecutionProvider"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides WindowCaptureTriggerProperties.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.InterOpNumThreads.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.InterOpNumThreads.html",
    "title": "Property InterOpNumThreads | EyeAuras Docs",
    "keywords": "Property InterOpNumThreads InterOpNumThreads Declaration public int InterOpNumThreads { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.IntraOpNumThreads.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.IntraOpNumThreads.html",
    "title": "Property IntraOpNumThreads | EyeAuras Docs",
    "keywords": "Property IntraOpNumThreads IntraOpNumThreads Declaration public int IntraOpNumThreads { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.MLClassName.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.MLClassName.html",
    "title": "Property MLClassName | EyeAuras Docs",
    "keywords": "Property MLClassName MLClassName Declaration public string MLClassName { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.MLModelData.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.MLModelData.html",
    "title": "Property MLModelData | EyeAuras Docs",
    "keywords": "Property MLModelData MLModelData Declaration public MLCompressedModelData MLModelData { get; set; } Property Value Type Description MLCompressedModelData"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.MaskProcessingType.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.MaskProcessingType.html",
    "title": "Property MaskProcessingType | EyeAuras Docs",
    "keywords": "Property MaskProcessingType MaskProcessingType Declaration public MLMaskProcessingType MaskProcessingType { get; set; } Property Value Type Description MLMaskProcessingType"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.OverlapThreshold.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.OverlapThreshold.html",
    "title": "Property OverlapThreshold | EyeAuras Docs",
    "keywords": "Property OverlapThreshold OverlapThreshold Declaration public double OverlapThreshold { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.PrintMembers.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides WindowCaptureTriggerProperties.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.SimilarityThreshold.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.SimilarityThreshold.html",
    "title": "Property SimilarityThreshold | EyeAuras Docs",
    "keywords": "Property SimilarityThreshold SimilarityThreshold Declaration public double SimilarityThreshold { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides WindowCaptureTriggerProperties.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.Version.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.html",
    "title": "Class MLSearchTriggerPropertiesV2 | EyeAuras Docs",
    "keywords": "Class MLSearchTriggerPropertiesV2 Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase WindowCaptureTriggerProperties MLSearchTriggerPropertiesV2 MLSearchTriggerProperties Implements IEquatable<AuraPropertiesBase> IEquatable<AuraTriggerPropertiesBase> IWindowCaptureTriggerProperties IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<WindowCaptureTriggerProperties> IEquatable<MLSearchTriggerPropertiesV2> Inherited Members WindowCaptureTriggerProperties.Equals(AuraTriggerPropertiesBase) WindowCaptureTriggerProperties.WindowRegion WindowCaptureTriggerProperties.WindowMatchParams WindowCaptureTriggerProperties.TargetWindowRegion WindowCaptureTriggerProperties.ImageEffectsPipeline WindowCaptureTriggerProperties.EnablePreview WindowCaptureTriggerProperties.ForceRegionCapture WindowCaptureTriggerProperties.MaxFramesPerSecond WindowCaptureTriggerProperties.MinFramesPerSecond WindowCaptureTriggerProperties.CaptureSourceName WindowCaptureTriggerProperties.CaptureCursor WindowCaptureTriggerProperties.CaptureBorderless AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.Triggers.MLSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public record MLSearchTriggerPropertiesV2 : WindowCaptureTriggerProperties, IEquatable<AuraPropertiesBase>, IEquatable<AuraTriggerPropertiesBase>, IWindowCaptureTriggerProperties, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<WindowCaptureTriggerProperties>, IEquatable<MLSearchTriggerPropertiesV2> Constructors Name Description MLSearchTriggerPropertiesV2() MLSearchTriggerPropertiesV2(MLSearchTriggerPropertiesV2) Properties Name Description EqualityContract ExecutionProvider InterOpNumThreads IntraOpNumThreads MLClassName MLModelData MaskProcessingType OverlapThreshold SimilarityThreshold Version Methods Name Description Equals(MLSearchTriggerPropertiesV2?) Equals(WindowCaptureTriggerProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(MLSearchTriggerPropertiesV2?, MLSearchTriggerPropertiesV2?) operator !=(MLSearchTriggerPropertiesV2?, MLSearchTriggerPropertiesV2?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(MLSearchTriggerPropertiesV2?, MLSearchTriggerPropertiesV2?) Declaration public static bool operator ==(MLSearchTriggerPropertiesV2? left, MLSearchTriggerPropertiesV2? right) Parameters Type Name Description MLSearchTriggerPropertiesV2 left MLSearchTriggerPropertiesV2 right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.MLSearchTriggerPropertiesV2.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(MLSearchTriggerPropertiesV2?, MLSearchTriggerPropertiesV2?) Declaration public static bool operator !=(MLSearchTriggerPropertiesV2? left, MLSearchTriggerPropertiesV2? right) Parameters Type Name Description MLSearchTriggerPropertiesV2 left MLSearchTriggerPropertiesV2 right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.MLSearch.html",
    "title": "Namespace EyeAuras.OpenCVAuras.Triggers.MLSearch | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.OpenCVAuras.Triggers.MLSearch Classes MLCompressedModelData MLModelData MLPredictionItem MLSearchTriggerProperties MLSearchTriggerPropertiesV1 MLSearchTriggerPropertiesV2 Interfaces IMLSearchTrigger IMLSearchTriggerResult"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.EngineId.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.EngineId.html",
    "title": "Property EngineId | EyeAuras Docs",
    "keywords": "Property EngineId EngineId Declaration string EngineId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.EvaluatorType.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.EvaluatorType.html",
    "title": "Property EvaluatorType | EyeAuras Docs",
    "keywords": "Property EvaluatorType EvaluatorType Declaration TextEvaluatorType EvaluatorType { get; set; } Property Value Type Description TextEvaluatorType"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.IgnoreCase.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.IgnoreCase.html",
    "title": "Property IgnoreCase | EyeAuras Docs",
    "keywords": "Property IgnoreCase IgnoreCase Declaration bool IgnoreCase { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.InvertImage.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.InvertImage.html",
    "title": "Property InvertImage | EyeAuras Docs",
    "keywords": "Property InvertImage InvertImage Declaration bool InvertImage { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.ScaleFactor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.ScaleFactor.html",
    "title": "Property ScaleFactor | EyeAuras Docs",
    "keywords": "Property ScaleFactor ScaleFactor Declaration double ScaleFactor { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.SourceText.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.SourceText.html",
    "title": "Property SourceText | EyeAuras Docs",
    "keywords": "Property SourceText SourceText Declaration string SourceText { get; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.TargetText.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.TargetText.html",
    "title": "Property TargetText | EyeAuras Docs",
    "keywords": "Property TargetText TargetText Declaration string TargetText { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.TextEvaluator.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.TextEvaluator.html",
    "title": "Property TextEvaluator | EyeAuras Docs",
    "keywords": "Property TextEvaluator TextEvaluator Declaration ISwitchableTextEvaluatorViewModel TextEvaluator { get; } Property Value Type Description ISwitchableTextEvaluatorViewModel"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.ThresholdImage.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.ThresholdImage.html",
    "title": "Property ThresholdImage | EyeAuras Docs",
    "keywords": "Property ThresholdImage ThresholdImage Declaration bool ThresholdImage { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTrigger.html",
    "title": "Interface ITextSearchTrigger | EyeAuras Docs",
    "keywords": "Interface ITextSearchTrigger Inherited Members IWindowCaptureTrigger<ITextSearchTriggerResult>.Refresh() IWindowCaptureTrigger<ITextSearchTriggerResult>.WindowRegion IWindowCaptureTrigger<ITextSearchTriggerResult>.CaptureSourceId IWindowCaptureTrigger<ITextSearchTriggerResult>.MinFramesPerSecond IWindowCaptureTrigger<ITextSearchTriggerResult>.MaxFramesPerSecond IWindowCaptureTrigger<ITextSearchTriggerResult>.CaptureCursor IWindowCaptureTrigger<ITextSearchTriggerResult>.EnablePreview IWindowCaptureTrigger<ITextSearchTriggerResult>.FramesPerSecond IWindowCaptureTrigger<ITextSearchTriggerResult>.FrameTime IWindowCaptureTrigger<ITextSearchTriggerResult>.TargetWindow IWindowCaptureTrigger<ITextSearchTriggerResult>.ActiveWindow IWindowCaptureTrigger<ITextSearchTriggerResult>.ImageSink IWindowCaptureTrigger<ITextSearchTriggerResult>.ResultStream IWindowCaptureTrigger<ITextSearchTriggerResult>.Bounds IWindowCaptureTrigger<ITextSearchTriggerResult>.BoundsScreen IWindowCaptureTrigger<ITextSearchTriggerResult>.BoundsWindow IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.OpenCVAuras.Triggers.TextSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface ITextSearchTrigger : IWindowCaptureTrigger<ITextSearchTriggerResult>, IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription, IHasBounds, IHasAttachedWindow, INotifyPropertyChanged Properties Name Description EngineId EvaluatorType IgnoreCase InvertImage ScaleFactor SourceText TargetText TextEvaluator ThresholdImage Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) WindowCaptureTriggerExtensions.FetchNextResult<TTriggerResult>(IWindowCaptureTrigger<TTriggerResult>) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTriggerResult.Text.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTriggerResult.Text.html",
    "title": "Property Text | EyeAuras Docs",
    "keywords": "Property Text Text Contains recognized text Declaration string Text { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTriggerResult.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.ITextSearchTriggerResult.html",
    "title": "Interface ITextSearchTriggerResult | EyeAuras Docs",
    "keywords": "Interface ITextSearchTriggerResult Inherited Members ICaptureTriggerResult.InputImage ICaptureTriggerResult.OutputImage ICaptureTriggerValue.Bounds ICaptureTriggerValue.Success Namespace: EyeAuras.OpenCVAuras.Triggers.TextSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface ITextSearchTriggerResult : ICaptureTriggerResult, ICaptureTriggerValue Properties Name Description Text Contains recognized text Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override TextSearchTriggerProperties <Clone>$() Returns Type Description TextSearchTriggerProperties Overrides TextSearchTriggerPropertiesV2.<Clone>$()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.-ctor.html",
    "title": "Constructor TextSearchTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor TextSearchTriggerProperties TextSearchTriggerProperties() Declaration public TextSearchTriggerProperties()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides TextSearchTriggerPropertiesV2.EqualityContract"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides TextSearchTriggerPropertiesV2.Equals(object?) Equals(TextSearchTriggerPropertiesV2?) Declaration public override sealed bool Equals(TextSearchTriggerPropertiesV2? other) Parameters Type Name Description TextSearchTriggerPropertiesV2 other Returns Type Description bool Overrides TextSearchTriggerPropertiesV2.Equals(TextSearchTriggerPropertiesV2?) Equals(TextSearchTriggerProperties?) Declaration public bool Equals(TextSearchTriggerProperties? other) Parameters Type Name Description TextSearchTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides TextSearchTriggerPropertiesV2.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides TextSearchTriggerPropertiesV2.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides TextSearchTriggerPropertiesV2.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.html",
    "title": "Class TextSearchTriggerProperties | EyeAuras Docs",
    "keywords": "Class TextSearchTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase WindowCaptureTriggerProperties TextSearchTriggerPropertiesV2 TextSearchTriggerProperties Implements IEquatable<AuraPropertiesBase> IEquatable<AuraTriggerPropertiesBase> IWindowCaptureTriggerProperties IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<WindowCaptureTriggerProperties> IEquatable<TextSearchTriggerPropertiesV2> IEquatable<TextSearchTriggerProperties> Inherited Members TextSearchTriggerPropertiesV2.Equals(WindowCaptureTriggerProperties) TextSearchTriggerPropertiesV2.EngineId TextSearchTriggerPropertiesV2.TargetText TextSearchTriggerPropertiesV2.IgnoreCase TextSearchTriggerPropertiesV2.EvaluatorType TextSearchTriggerPropertiesV2.InvertImage TextSearchTriggerPropertiesV2.ThresholdImage TextSearchTriggerPropertiesV2.ScaleFactor TextSearchTriggerPropertiesV2.Version WindowCaptureTriggerProperties.Equals(AuraTriggerPropertiesBase) WindowCaptureTriggerProperties.WindowRegion WindowCaptureTriggerProperties.WindowMatchParams WindowCaptureTriggerProperties.TargetWindowRegion WindowCaptureTriggerProperties.ImageEffectsPipeline WindowCaptureTriggerProperties.EnablePreview WindowCaptureTriggerProperties.ForceRegionCapture WindowCaptureTriggerProperties.MaxFramesPerSecond WindowCaptureTriggerProperties.MinFramesPerSecond WindowCaptureTriggerProperties.CaptureSourceName WindowCaptureTriggerProperties.CaptureCursor WindowCaptureTriggerProperties.CaptureBorderless AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.Triggers.TextSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public sealed record TextSearchTriggerProperties : TextSearchTriggerPropertiesV2, IEquatable<AuraPropertiesBase>, IEquatable<AuraTriggerPropertiesBase>, IWindowCaptureTriggerProperties, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<WindowCaptureTriggerProperties>, IEquatable<TextSearchTriggerPropertiesV2>, IEquatable<TextSearchTriggerProperties> Constructors Name Description TextSearchTriggerProperties() Properties Name Description EqualityContract Methods Name Description Equals(TextSearchTriggerProperties?) Equals(TextSearchTriggerPropertiesV2?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(TextSearchTriggerProperties?, TextSearchTriggerProperties?) operator !=(TextSearchTriggerProperties?, TextSearchTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(TextSearchTriggerProperties?, TextSearchTriggerProperties?) Declaration public static bool operator ==(TextSearchTriggerProperties? left, TextSearchTriggerProperties? right) Parameters Type Name Description TextSearchTriggerProperties left TextSearchTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(TextSearchTriggerProperties?, TextSearchTriggerProperties?) Declaration public static bool operator !=(TextSearchTriggerProperties? left, TextSearchTriggerProperties? right) Parameters Type Name Description TextSearchTriggerProperties left TextSearchTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override TextSearchTriggerPropertiesV1 <Clone>$() Returns Type Description TextSearchTriggerPropertiesV1 Overrides WindowCaptureTriggerProperties.<Clone>$()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.-ctor.html",
    "title": "Constructor TextSearchTriggerPropertiesV1 | EyeAuras Docs",
    "keywords": "Constructor TextSearchTriggerPropertiesV1 TextSearchTriggerPropertiesV1() Declaration public TextSearchTriggerPropertiesV1() TextSearchTriggerPropertiesV1(TextSearchTriggerPropertiesV1) Declaration protected TextSearchTriggerPropertiesV1(TextSearchTriggerPropertiesV1 original) Parameters Type Name Description TextSearchTriggerPropertiesV1 original"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.EqualityContract.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides WindowCaptureTriggerProperties.EqualityContract"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides WindowCaptureTriggerProperties.Equals(object?) Equals(WindowCaptureTriggerProperties?) Declaration public override sealed bool Equals(WindowCaptureTriggerProperties? other) Parameters Type Name Description WindowCaptureTriggerProperties other Returns Type Description bool Overrides WindowCaptureTriggerProperties.Equals(WindowCaptureTriggerProperties?) Equals(TextSearchTriggerPropertiesV1?) Declaration public virtual bool Equals(TextSearchTriggerPropertiesV1? other) Parameters Type Name Description TextSearchTriggerPropertiesV1 other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.EvaluatorType.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.EvaluatorType.html",
    "title": "Property EvaluatorType | EyeAuras Docs",
    "keywords": "Property EvaluatorType EvaluatorType Declaration public TextEvaluatorType EvaluatorType { get; set; } Property Value Type Description TextEvaluatorType"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides WindowCaptureTriggerProperties.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.IgnoreCase.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.IgnoreCase.html",
    "title": "Property IgnoreCase | EyeAuras Docs",
    "keywords": "Property IgnoreCase IgnoreCase Declaration public bool IgnoreCase { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.InvertImage.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.InvertImage.html",
    "title": "Property InvertImage | EyeAuras Docs",
    "keywords": "Property InvertImage InvertImage Declaration public bool InvertImage { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.Language.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.Language.html",
    "title": "Property Language | EyeAuras Docs",
    "keywords": "Property Language Language Declaration public string Language { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.PrintMembers.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides WindowCaptureTriggerProperties.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.ScaleFactor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.ScaleFactor.html",
    "title": "Property ScaleFactor | EyeAuras Docs",
    "keywords": "Property ScaleFactor ScaleFactor Declaration public double ScaleFactor { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.TargetText.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.TargetText.html",
    "title": "Property TargetText | EyeAuras Docs",
    "keywords": "Property TargetText TargetText Declaration public string TargetText { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.ThresholdImage.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.ThresholdImage.html",
    "title": "Property ThresholdImage | EyeAuras Docs",
    "keywords": "Property ThresholdImage ThresholdImage Declaration public bool ThresholdImage { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides WindowCaptureTriggerProperties.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.Version.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.html",
    "title": "Class TextSearchTriggerPropertiesV1 | EyeAuras Docs",
    "keywords": "Class TextSearchTriggerPropertiesV1 Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase WindowCaptureTriggerProperties TextSearchTriggerPropertiesV1 Implements IEquatable<AuraPropertiesBase> IEquatable<AuraTriggerPropertiesBase> IWindowCaptureTriggerProperties IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<WindowCaptureTriggerProperties> IEquatable<TextSearchTriggerPropertiesV1> Inherited Members WindowCaptureTriggerProperties.Equals(AuraTriggerPropertiesBase) WindowCaptureTriggerProperties.WindowRegion WindowCaptureTriggerProperties.WindowMatchParams WindowCaptureTriggerProperties.TargetWindowRegion WindowCaptureTriggerProperties.ImageEffectsPipeline WindowCaptureTriggerProperties.EnablePreview WindowCaptureTriggerProperties.ForceRegionCapture WindowCaptureTriggerProperties.MaxFramesPerSecond WindowCaptureTriggerProperties.MinFramesPerSecond WindowCaptureTriggerProperties.CaptureSourceName WindowCaptureTriggerProperties.CaptureCursor WindowCaptureTriggerProperties.CaptureBorderless AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.Triggers.TextSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public record TextSearchTriggerPropertiesV1 : WindowCaptureTriggerProperties, IEquatable<AuraPropertiesBase>, IEquatable<AuraTriggerPropertiesBase>, IWindowCaptureTriggerProperties, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<WindowCaptureTriggerProperties>, IEquatable<TextSearchTriggerPropertiesV1> Constructors Name Description TextSearchTriggerPropertiesV1() TextSearchTriggerPropertiesV1(TextSearchTriggerPropertiesV1) Properties Name Description EqualityContract EvaluatorType IgnoreCase InvertImage Language ScaleFactor TargetText ThresholdImage Version Methods Name Description Equals(TextSearchTriggerPropertiesV1?) Equals(WindowCaptureTriggerProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(TextSearchTriggerPropertiesV1?, TextSearchTriggerPropertiesV1?) operator !=(TextSearchTriggerPropertiesV1?, TextSearchTriggerPropertiesV1?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(TextSearchTriggerPropertiesV1?, TextSearchTriggerPropertiesV1?) Declaration public static bool operator ==(TextSearchTriggerPropertiesV1? left, TextSearchTriggerPropertiesV1? right) Parameters Type Name Description TextSearchTriggerPropertiesV1 left TextSearchTriggerPropertiesV1 right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV1.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(TextSearchTriggerPropertiesV1?, TextSearchTriggerPropertiesV1?) Declaration public static bool operator !=(TextSearchTriggerPropertiesV1? left, TextSearchTriggerPropertiesV1? right) Parameters Type Name Description TextSearchTriggerPropertiesV1 left TextSearchTriggerPropertiesV1 right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override TextSearchTriggerPropertiesV2 <Clone>$() Returns Type Description TextSearchTriggerPropertiesV2 Overrides WindowCaptureTriggerProperties.<Clone>$()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.-ctor.html",
    "title": "Constructor TextSearchTriggerPropertiesV2 | EyeAuras Docs",
    "keywords": "Constructor TextSearchTriggerPropertiesV2 TextSearchTriggerPropertiesV2() Declaration public TextSearchTriggerPropertiesV2() TextSearchTriggerPropertiesV2(TextSearchTriggerPropertiesV2) Declaration protected TextSearchTriggerPropertiesV2(TextSearchTriggerPropertiesV2 original) Parameters Type Name Description TextSearchTriggerPropertiesV2 original"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.EngineId.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.EngineId.html",
    "title": "Property EngineId | EyeAuras Docs",
    "keywords": "Property EngineId EngineId Declaration public string EngineId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.EqualityContract.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides WindowCaptureTriggerProperties.EqualityContract"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides WindowCaptureTriggerProperties.Equals(object?) Equals(WindowCaptureTriggerProperties?) Declaration public override sealed bool Equals(WindowCaptureTriggerProperties? other) Parameters Type Name Description WindowCaptureTriggerProperties other Returns Type Description bool Overrides WindowCaptureTriggerProperties.Equals(WindowCaptureTriggerProperties?) Equals(TextSearchTriggerPropertiesV2?) Declaration public virtual bool Equals(TextSearchTriggerPropertiesV2? other) Parameters Type Name Description TextSearchTriggerPropertiesV2 other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.EvaluatorType.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.EvaluatorType.html",
    "title": "Property EvaluatorType | EyeAuras Docs",
    "keywords": "Property EvaluatorType EvaluatorType Declaration public TextEvaluatorType EvaluatorType { get; set; } Property Value Type Description TextEvaluatorType"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides WindowCaptureTriggerProperties.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.IgnoreCase.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.IgnoreCase.html",
    "title": "Property IgnoreCase | EyeAuras Docs",
    "keywords": "Property IgnoreCase IgnoreCase Declaration public bool IgnoreCase { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.InvertImage.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.InvertImage.html",
    "title": "Property InvertImage | EyeAuras Docs",
    "keywords": "Property InvertImage InvertImage Declaration public bool InvertImage { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.PrintMembers.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides WindowCaptureTriggerProperties.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.ScaleFactor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.ScaleFactor.html",
    "title": "Property ScaleFactor | EyeAuras Docs",
    "keywords": "Property ScaleFactor ScaleFactor Declaration public double ScaleFactor { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.TargetText.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.TargetText.html",
    "title": "Property TargetText | EyeAuras Docs",
    "keywords": "Property TargetText TargetText Declaration public string TargetText { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.ThresholdImage.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.ThresholdImage.html",
    "title": "Property ThresholdImage | EyeAuras Docs",
    "keywords": "Property ThresholdImage ThresholdImage Declaration public bool ThresholdImage { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides WindowCaptureTriggerProperties.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.Version.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.html",
    "title": "Class TextSearchTriggerPropertiesV2 | EyeAuras Docs",
    "keywords": "Class TextSearchTriggerPropertiesV2 Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase WindowCaptureTriggerProperties TextSearchTriggerPropertiesV2 TextSearchTriggerProperties Implements IEquatable<AuraPropertiesBase> IEquatable<AuraTriggerPropertiesBase> IWindowCaptureTriggerProperties IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<WindowCaptureTriggerProperties> IEquatable<TextSearchTriggerPropertiesV2> Inherited Members WindowCaptureTriggerProperties.Equals(AuraTriggerPropertiesBase) WindowCaptureTriggerProperties.WindowRegion WindowCaptureTriggerProperties.WindowMatchParams WindowCaptureTriggerProperties.TargetWindowRegion WindowCaptureTriggerProperties.ImageEffectsPipeline WindowCaptureTriggerProperties.EnablePreview WindowCaptureTriggerProperties.ForceRegionCapture WindowCaptureTriggerProperties.MaxFramesPerSecond WindowCaptureTriggerProperties.MinFramesPerSecond WindowCaptureTriggerProperties.CaptureSourceName WindowCaptureTriggerProperties.CaptureCursor WindowCaptureTriggerProperties.CaptureBorderless AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.Triggers.TextSearch Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public record TextSearchTriggerPropertiesV2 : WindowCaptureTriggerProperties, IEquatable<AuraPropertiesBase>, IEquatable<AuraTriggerPropertiesBase>, IWindowCaptureTriggerProperties, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<WindowCaptureTriggerProperties>, IEquatable<TextSearchTriggerPropertiesV2> Constructors Name Description TextSearchTriggerPropertiesV2() TextSearchTriggerPropertiesV2(TextSearchTriggerPropertiesV2) Properties Name Description EngineId EqualityContract EvaluatorType IgnoreCase InvertImage ScaleFactor TargetText ThresholdImage Version Methods Name Description Equals(TextSearchTriggerPropertiesV2?) Equals(WindowCaptureTriggerProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(TextSearchTriggerPropertiesV2?, TextSearchTriggerPropertiesV2?) operator !=(TextSearchTriggerPropertiesV2?, TextSearchTriggerPropertiesV2?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(TextSearchTriggerPropertiesV2?, TextSearchTriggerPropertiesV2?) Declaration public static bool operator ==(TextSearchTriggerPropertiesV2? left, TextSearchTriggerPropertiesV2? right) Parameters Type Name Description TextSearchTriggerPropertiesV2 left TextSearchTriggerPropertiesV2 right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.TextSearchTriggerPropertiesV2.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(TextSearchTriggerPropertiesV2?, TextSearchTriggerPropertiesV2?) Declaration public static bool operator !=(TextSearchTriggerPropertiesV2? left, TextSearchTriggerPropertiesV2? right) Parameters Type Name Description TextSearchTriggerPropertiesV2 left TextSearchTriggerPropertiesV2 right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.TextSearch.html",
    "title": "Namespace EyeAuras.OpenCVAuras.Triggers.TextSearch | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.OpenCVAuras.Triggers.TextSearch Classes TextSearchTriggerProperties TextSearchTriggerPropertiesV1 TextSearchTriggerPropertiesV2 Interfaces ITextSearchTrigger ITextSearchTriggerResult"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override DebugWindowCaptureTriggerProperties <Clone>$() Returns Type Description DebugWindowCaptureTriggerProperties Overrides WindowCaptureTriggerProperties.<Clone>$()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.-ctor.html",
    "title": "Constructor DebugWindowCaptureTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor DebugWindowCaptureTriggerProperties DebugWindowCaptureTriggerProperties() Declaration public DebugWindowCaptureTriggerProperties()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides WindowCaptureTriggerProperties.EqualityContract"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides WindowCaptureTriggerProperties.Equals(object?) Equals(WindowCaptureTriggerProperties?) Declaration public override sealed bool Equals(WindowCaptureTriggerProperties? other) Parameters Type Name Description WindowCaptureTriggerProperties other Returns Type Description bool Overrides WindowCaptureTriggerProperties.Equals(WindowCaptureTriggerProperties?) Equals(DebugWindowCaptureTriggerProperties?) Declaration public bool Equals(DebugWindowCaptureTriggerProperties? other) Parameters Type Name Description DebugWindowCaptureTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides WindowCaptureTriggerProperties.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides WindowCaptureTriggerProperties.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides WindowCaptureTriggerProperties.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.Version.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.html",
    "title": "Class DebugWindowCaptureTriggerProperties | EyeAuras Docs",
    "keywords": "Class DebugWindowCaptureTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase WindowCaptureTriggerProperties DebugWindowCaptureTriggerProperties Implements IEquatable<AuraPropertiesBase> IEquatable<AuraTriggerPropertiesBase> IWindowCaptureTriggerProperties IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<WindowCaptureTriggerProperties> IEquatable<DebugWindowCaptureTriggerProperties> Inherited Members WindowCaptureTriggerProperties.Equals(AuraTriggerPropertiesBase) WindowCaptureTriggerProperties.WindowRegion WindowCaptureTriggerProperties.WindowMatchParams WindowCaptureTriggerProperties.TargetWindowRegion WindowCaptureTriggerProperties.ImageEffectsPipeline WindowCaptureTriggerProperties.EnablePreview WindowCaptureTriggerProperties.ForceRegionCapture WindowCaptureTriggerProperties.MaxFramesPerSecond WindowCaptureTriggerProperties.MinFramesPerSecond WindowCaptureTriggerProperties.CaptureSourceName WindowCaptureTriggerProperties.CaptureCursor WindowCaptureTriggerProperties.CaptureBorderless AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.Triggers.WindowCapture Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public sealed record DebugWindowCaptureTriggerProperties : WindowCaptureTriggerProperties, IEquatable<AuraPropertiesBase>, IEquatable<AuraTriggerPropertiesBase>, IWindowCaptureTriggerProperties, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<WindowCaptureTriggerProperties>, IEquatable<DebugWindowCaptureTriggerProperties> Constructors Name Description DebugWindowCaptureTriggerProperties() Properties Name Description EqualityContract Version Methods Name Description Equals(DebugWindowCaptureTriggerProperties?) Equals(WindowCaptureTriggerProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(DebugWindowCaptureTriggerProperties?, DebugWindowCaptureTriggerProperties?) operator !=(DebugWindowCaptureTriggerProperties?, DebugWindowCaptureTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(DebugWindowCaptureTriggerProperties?, DebugWindowCaptureTriggerProperties?) Declaration public static bool operator ==(DebugWindowCaptureTriggerProperties? left, DebugWindowCaptureTriggerProperties? right) Parameters Type Name Description DebugWindowCaptureTriggerProperties left DebugWindowCaptureTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.DebugWindowCaptureTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(DebugWindowCaptureTriggerProperties?, DebugWindowCaptureTriggerProperties?) Declaration public static bool operator !=(DebugWindowCaptureTriggerProperties? left, DebugWindowCaptureTriggerProperties? right) Parameters Type Name Description DebugWindowCaptureTriggerProperties left DebugWindowCaptureTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.ICaptureTriggerResult.InputImage.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.ICaptureTriggerResult.InputImage.html",
    "title": "Property InputImage | EyeAuras Docs",
    "keywords": "Property InputImage InputImage Contains image which was processed. Declaration Image<Bgr, byte> InputImage { get; } Property Value Type Description Image<Bgr, byte>"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.ICaptureTriggerResult.OutputImage.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.ICaptureTriggerResult.OutputImage.html",
    "title": "Property OutputImage | EyeAuras Docs",
    "keywords": "Property OutputImage OutputImage Represents the image that was generated as a result of processing the source image. Typically contains debug or preview data, but only if Preview is enabled. Declaration Image<Bgr, byte> OutputImage { get; } Property Value Type Description Image<Bgr, byte>"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.ICaptureTriggerResult.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.ICaptureTriggerResult.html",
    "title": "Interface ICaptureTriggerResult | EyeAuras Docs",
    "keywords": "Interface ICaptureTriggerResult Inherited Members ICaptureTriggerValue.Bounds ICaptureTriggerValue.Success Namespace: EyeAuras.OpenCVAuras.Triggers.WindowCapture Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface ICaptureTriggerResult : ICaptureTriggerValue Properties Name Description InputImage Contains image which was processed. OutputImage Represents the image that was generated as a result of processing the source image. Typically contains debug or preview data, but only if Preview is enabled. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.ICaptureTriggerValue.Bounds.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.ICaptureTriggerValue.Bounds.html",
    "title": "Property Bounds | EyeAuras Docs",
    "keywords": "Property Bounds Bounds Bounding box relative to the top left corner of the region inside the window Declaration Rectangle? Bounds { get; } Property Value Type Description Rectangle?"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.ICaptureTriggerValue.Success.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.ICaptureTriggerValue.Success.html",
    "title": "Property Success | EyeAuras Docs",
    "keywords": "Property Success Success Indicates whether the processing result is considered a match Declaration bool? Success { get; } Property Value Type Description bool?"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.ICaptureTriggerValue.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.ICaptureTriggerValue.html",
    "title": "Interface ICaptureTriggerValue | EyeAuras Docs",
    "keywords": "Interface ICaptureTriggerValue Namespace: EyeAuras.OpenCVAuras.Triggers.WindowCapture Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface ICaptureTriggerValue Properties Name Description Bounds Bounding box relative to the top left corner of the region inside the window Success Indicates whether the processing result is considered a match Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.ActiveWindow.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.ActiveWindow.html",
    "title": "Property ActiveWindow | EyeAuras Docs",
    "keywords": "Property ActiveWindow ActiveWindow Resolved window that matches TargetWindow expression Declaration IWindowHandle ActiveWindow { get; } Property Value Type Description IWindowHandle"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.Bounds.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.Bounds.html",
    "title": "Property Bounds | EyeAuras Docs",
    "keywords": "Property Bounds Bounds Bounding box relative to the top left corner of the region inside the window Declaration Rectangle? Bounds { get; } Property Value Type Description Rectangle?"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.BoundsScreen.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.BoundsScreen.html",
    "title": "Property BoundsScreen | EyeAuras Docs",
    "keywords": "Property BoundsScreen BoundsScreen Bounding box relative to the top left corner of the screen Declaration Rectangle? BoundsScreen { get; } Property Value Type Description Rectangle?"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.BoundsWindow.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.BoundsWindow.html",
    "title": "Property BoundsWindow | EyeAuras Docs",
    "keywords": "Property BoundsWindow BoundsWindow Bounding box relative to the top left corner of the window Declaration Rectangle? BoundsWindow { get; } Property Value Type Description Rectangle?"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.CaptureCursor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.CaptureCursor.html",
    "title": "Property CaptureCursor | EyeAuras Docs",
    "keywords": "Property CaptureCursor CaptureCursor Gets or sets a value indicating whether to capture the cursor. Declaration bool CaptureCursor { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.CaptureSourceId.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.CaptureSourceId.html",
    "title": "Property CaptureSourceId | EyeAuras Docs",
    "keywords": "Property CaptureSourceId CaptureSourceId Gets or sets the ID of the capture source. Declaration string CaptureSourceId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.EnablePreview.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.EnablePreview.html",
    "title": "Property EnablePreview | EyeAuras Docs",
    "keywords": "Property EnablePreview EnablePreview Gets or sets a value indicating whether to enable preview. Declaration bool EnablePreview { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.FrameTime.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.FrameTime.html",
    "title": "Property FrameTime | EyeAuras Docs",
    "keywords": "Property FrameTime FrameTime Gets the frame time. Declaration TimeSpan FrameTime { get; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.FramesPerSecond.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.FramesPerSecond.html",
    "title": "Property FramesPerSecond | EyeAuras Docs",
    "keywords": "Property FramesPerSecond FramesPerSecond Gets the frames per second rate. Declaration double FramesPerSecond { get; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.ImageSink.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.ImageSink.html",
    "title": "Property ImageSink | EyeAuras Docs",
    "keywords": "Property ImageSink ImageSink Stream of images retrieved by this trigger Declaration [Obsolete(\"Replaced with ResultSink, use it instead, will be removed in further versions\")] IObservable<Image<Bgr, byte>> ImageSink { get; } Property Value Type Description IObservable<Image<Bgr, byte>>"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.MaxFramesPerSecond.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.MaxFramesPerSecond.html",
    "title": "Property MaxFramesPerSecond | EyeAuras Docs",
    "keywords": "Property MaxFramesPerSecond MaxFramesPerSecond Gets or sets the maximum frames per second for capture. Declaration double MaxFramesPerSecond { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.MinFramesPerSecond.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.MinFramesPerSecond.html",
    "title": "Property MinFramesPerSecond | EyeAuras Docs",
    "keywords": "Property MinFramesPerSecond MinFramesPerSecond Gets or sets the minimum frames per second for capture. Declaration double MinFramesPerSecond { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.Refresh.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.Refresh.html",
    "title": "Method Refresh | EyeAuras Docs",
    "keywords": "Method Refresh Refresh() Forces the refresh of a current image Declaration void Refresh()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.ResultStream.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.ResultStream.html",
    "title": "Property ResultStream | EyeAuras Docs",
    "keywords": "Property ResultStream ResultStream Stream of processing results retrieved by this trigger Declaration IObservable<out TTriggerResult> ResultStream { get; } Property Value Type Description IObservable<TTriggerResult>"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.TargetWindow.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.TargetWindow.html",
    "title": "Property TargetWindow | EyeAuras Docs",
    "keywords": "Property TargetWindow TargetWindow Specifies expression that will be used to find specific window Declaration WindowMatchExpression TargetWindow { get; set; } Property Value Type Description WindowMatchExpression"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.WindowRegion.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.WindowRegion.html",
    "title": "Property WindowRegion | EyeAuras Docs",
    "keywords": "Property WindowRegion WindowRegion Gets the region of the window in a complex position model format. Declaration IComplexPositionModel WindowRegion { get; } Property Value Type Description IComplexPositionModel"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTrigger-1.html",
    "title": "Interface IWindowCaptureTrigger<TTriggerResult> | EyeAuras Docs",
    "keywords": "Interface IWindowCaptureTrigger<TTriggerResult> Inherited Members IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.OpenCVAuras.Triggers.WindowCapture Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface IWindowCaptureTrigger<out TTriggerResult> : IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription, IHasBounds, IHasAttachedWindow, INotifyPropertyChanged where TTriggerResult : ICaptureTriggerResult Type Parameters Name Description TTriggerResult Properties Name Description ActiveWindow Resolved window that matches TargetWindow expression Bounds Bounding box relative to the top left corner of the region inside the window BoundsScreen Bounding box relative to the top left corner of the screen BoundsWindow Bounding box relative to the top left corner of the window CaptureCursor Gets or sets a value indicating whether to capture the cursor. CaptureSourceId Gets or sets the ID of the capture source. EnablePreview Gets or sets a value indicating whether to enable preview. FrameTime Gets the frame time. FramesPerSecond Gets the frames per second rate. ImageSink Stream of images retrieved by this trigger MaxFramesPerSecond Gets or sets the maximum frames per second for capture. MinFramesPerSecond Gets or sets the minimum frames per second for capture. ResultStream Stream of processing results retrieved by this trigger TargetWindow Specifies expression that will be used to find specific window WindowRegion Gets the region of the window in a complex position model format. Methods Name Description Refresh() Forces the refresh of a current image Extension Methods WindowCaptureTriggerExtensions.FetchNextResult<TTriggerResult>(IWindowCaptureTrigger<TTriggerResult>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.CaptureBorderless.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.CaptureBorderless.html",
    "title": "Property CaptureBorderless | EyeAuras Docs",
    "keywords": "Property CaptureBorderless CaptureBorderless Declaration bool CaptureBorderless { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.CaptureCursor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.CaptureCursor.html",
    "title": "Property CaptureCursor | EyeAuras Docs",
    "keywords": "Property CaptureCursor CaptureCursor Declaration bool CaptureCursor { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.CaptureSourceName.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.CaptureSourceName.html",
    "title": "Property CaptureSourceName | EyeAuras Docs",
    "keywords": "Property CaptureSourceName CaptureSourceName Declaration string CaptureSourceName { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.EnablePreview.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.EnablePreview.html",
    "title": "Property EnablePreview | EyeAuras Docs",
    "keywords": "Property EnablePreview EnablePreview Declaration bool EnablePreview { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.ForceRegionCapture.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.ForceRegionCapture.html",
    "title": "Property ForceRegionCapture | EyeAuras Docs",
    "keywords": "Property ForceRegionCapture ForceRegionCapture Declaration bool ForceRegionCapture { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.ImageEffectsPipeline.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.ImageEffectsPipeline.html",
    "title": "Property ImageEffectsPipeline | EyeAuras Docs",
    "keywords": "Property ImageEffectsPipeline ImageEffectsPipeline Declaration ImageEffectsPipelineProperties ImageEffectsPipeline { get; set; } Property Value Type Description ImageEffectsPipelineProperties"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.MaxFramesPerSecond.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.MaxFramesPerSecond.html",
    "title": "Property MaxFramesPerSecond | EyeAuras Docs",
    "keywords": "Property MaxFramesPerSecond MaxFramesPerSecond Declaration double MaxFramesPerSecond { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.MinFramesPerSecond.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.MinFramesPerSecond.html",
    "title": "Property MinFramesPerSecond | EyeAuras Docs",
    "keywords": "Property MinFramesPerSecond MinFramesPerSecond Declaration double MinFramesPerSecond { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.TargetWindowRegion.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.TargetWindowRegion.html",
    "title": "Property TargetWindowRegion | EyeAuras Docs",
    "keywords": "Property TargetWindowRegion TargetWindowRegion Declaration ComplexPositionProperties TargetWindowRegion { get; set; } Property Value Type Description ComplexPositionProperties"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.WindowMatchParams.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.WindowMatchParams.html",
    "title": "Property WindowMatchParams | EyeAuras Docs",
    "keywords": "Property WindowMatchParams WindowMatchParams Declaration WindowMatchExpression WindowMatchParams { get; set; } Property Value Type Description WindowMatchExpression"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.IWindowCaptureTriggerProperties.html",
    "title": "Interface IWindowCaptureTriggerProperties | EyeAuras Docs",
    "keywords": "Interface IWindowCaptureTriggerProperties Inherited Members IAuraTriggerProperties.IsIgnored IAuraTriggerProperties.IsInverted IAuraTriggerProperties.ActivationTimeout IAuraTriggerProperties.DeactivationTimeout IAuraProperties.Bindings IHasVersion.Version ICanSetId.Id Namespace: EyeAuras.OpenCVAuras.Triggers.WindowCapture Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public interface IWindowCaptureTriggerProperties : IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId Properties Name Description CaptureBorderless CaptureCursor CaptureSourceName EnablePreview ForceRegionCapture ImageEffectsPipeline MaxFramesPerSecond MinFramesPerSecond TargetWindowRegion WindowMatchParams Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCapturePreviewMode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCapturePreviewMode.html",
    "title": "Enum WindowCapturePreviewMode | EyeAuras Docs",
    "keywords": "Enum WindowCapturePreviewMode Namespace: EyeAuras.OpenCVAuras.Triggers.WindowCapture Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public enum WindowCapturePreviewMode Fields Name Description Default WithoutDebugData WithoutEffects Extension Methods ObjectExtensions.AddTo<WindowCapturePreviewMode, TCollection>(WindowCapturePreviewMode, ISourceList<TCollection>) ObjectExtensions.AddTo<WindowCapturePreviewMode, TCollection>(WindowCapturePreviewMode, ICollection<TCollection>) ObjectExtensions.CloneJson<WindowCapturePreviewMode>(WindowCapturePreviewMode) ObjectExtensions.CopyPropertiesTo<WindowCapturePreviewMode, TTarget>(WindowCapturePreviewMode, TTarget) ObjectExtensions.DumpToTextRaw<WindowCapturePreviewMode>(WindowCapturePreviewMode) ObjectExtensions.DumpToText<WindowCapturePreviewMode>(WindowCapturePreviewMode) ObjectExtensions.Dump<WindowCapturePreviewMode>(WindowCapturePreviewMode) ObjectExtensions.GetPropertyAccessor<WindowCapturePreviewMode, TValue>(WindowCapturePreviewMode, Expression<Func<WindowCapturePreviewMode, TValue>>) ObjectExtensions.InsertTo<WindowCapturePreviewMode, TCollection>(WindowCapturePreviewMode, IList<TCollection>, int) ObjectExtensions.ToJson<WindowCapturePreviewMode>(WindowCapturePreviewMode) ObjectExtensions.ToStringSafe<WindowCapturePreviewMode>(WindowCapturePreviewMode) ObjectExtensions.TransferPropertiesTo<WindowCapturePreviewMode, TTarget>(WindowCapturePreviewMode, TTarget, params string[]) XDocumentExtensions.AddTo<WindowCapturePreviewMode>(WindowCapturePreviewMode, XContainer)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override abstract WindowCaptureTriggerProperties <Clone>$() Returns Type Description WindowCaptureTriggerProperties Overrides AuraTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.-ctor.html",
    "title": "Constructor WindowCaptureTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor WindowCaptureTriggerProperties WindowCaptureTriggerProperties(WindowCaptureTriggerProperties) Declaration protected WindowCaptureTriggerProperties(WindowCaptureTriggerProperties original) Parameters Type Name Description WindowCaptureTriggerProperties original WindowCaptureTriggerProperties() Declaration protected WindowCaptureTriggerProperties()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.CaptureBorderless.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.CaptureBorderless.html",
    "title": "Property CaptureBorderless | EyeAuras Docs",
    "keywords": "Property CaptureBorderless CaptureBorderless Declaration public bool CaptureBorderless { get; set; } Property Value Type Description bool Implements IWindowCaptureTriggerProperties.CaptureBorderless"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.CaptureCursor.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.CaptureCursor.html",
    "title": "Property CaptureCursor | EyeAuras Docs",
    "keywords": "Property CaptureCursor CaptureCursor Declaration public bool CaptureCursor { get; set; } Property Value Type Description bool Implements IWindowCaptureTriggerProperties.CaptureCursor"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.CaptureSourceName.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.CaptureSourceName.html",
    "title": "Property CaptureSourceName | EyeAuras Docs",
    "keywords": "Property CaptureSourceName CaptureSourceName Declaration public string CaptureSourceName { get; set; } Property Value Type Description string Implements IWindowCaptureTriggerProperties.CaptureSourceName"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.EnablePreview.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.EnablePreview.html",
    "title": "Property EnablePreview | EyeAuras Docs",
    "keywords": "Property EnablePreview EnablePreview Declaration public bool EnablePreview { get; set; } Property Value Type Description bool Implements IWindowCaptureTriggerProperties.EnablePreview"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(object?) Equals(AuraTriggerPropertiesBase?) Declaration public override sealed bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase?) Equals(WindowCaptureTriggerProperties?) Declaration public virtual bool Equals(WindowCaptureTriggerProperties? other) Parameters Type Name Description WindowCaptureTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.ForceRegionCapture.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.ForceRegionCapture.html",
    "title": "Property ForceRegionCapture | EyeAuras Docs",
    "keywords": "Property ForceRegionCapture ForceRegionCapture Declaration public bool ForceRegionCapture { get; set; } Property Value Type Description bool Implements IWindowCaptureTriggerProperties.ForceRegionCapture"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.ImageEffectsPipeline.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.ImageEffectsPipeline.html",
    "title": "Property ImageEffectsPipeline | EyeAuras Docs",
    "keywords": "Property ImageEffectsPipeline ImageEffectsPipeline Declaration public ImageEffectsPipelineProperties ImageEffectsPipeline { get; set; } Property Value Type Description ImageEffectsPipelineProperties Implements IWindowCaptureTriggerProperties.ImageEffectsPipeline"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.MaxFramesPerSecond.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.MaxFramesPerSecond.html",
    "title": "Property MaxFramesPerSecond | EyeAuras Docs",
    "keywords": "Property MaxFramesPerSecond MaxFramesPerSecond Declaration public double MaxFramesPerSecond { get; set; } Property Value Type Description double Implements IWindowCaptureTriggerProperties.MaxFramesPerSecond"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.MinFramesPerSecond.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.MinFramesPerSecond.html",
    "title": "Property MinFramesPerSecond | EyeAuras Docs",
    "keywords": "Property MinFramesPerSecond MinFramesPerSecond Declaration public double MinFramesPerSecond { get; set; } Property Value Type Description double Implements IWindowCaptureTriggerProperties.MinFramesPerSecond"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.TargetWindowRegion.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.TargetWindowRegion.html",
    "title": "Property TargetWindowRegion | EyeAuras Docs",
    "keywords": "Property TargetWindowRegion TargetWindowRegion Declaration public ComplexPositionProperties TargetWindowRegion { get; set; } Property Value Type Description ComplexPositionProperties Implements IWindowCaptureTriggerProperties.TargetWindowRegion"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.WindowMatchParams.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.WindowMatchParams.html",
    "title": "Property WindowMatchParams | EyeAuras Docs",
    "keywords": "Property WindowMatchParams WindowMatchParams Declaration public WindowMatchExpression WindowMatchParams { get; set; } Property Value Type Description WindowMatchExpression Implements IWindowCaptureTriggerProperties.WindowMatchParams"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.WindowRegion.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.WindowRegion.html",
    "title": "Property WindowRegion | EyeAuras Docs",
    "keywords": "Property WindowRegion WindowRegion Declaration [Obsolete] public Rectangle WindowRegion { get; set; } Property Value Type Description Rectangle"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.html",
    "title": "Class WindowCaptureTriggerProperties | EyeAuras Docs",
    "keywords": "Class WindowCaptureTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase WindowCaptureTriggerProperties ColorSearchTriggerProperties ImageSearchTriggerProperties MLSearchTriggerPropertiesV1 MLSearchTriggerPropertiesV2 TextSearchTriggerPropertiesV1 TextSearchTriggerPropertiesV2 DebugWindowCaptureTriggerProperties Implements IEquatable<AuraPropertiesBase> IEquatable<AuraTriggerPropertiesBase> IWindowCaptureTriggerProperties IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<WindowCaptureTriggerProperties> Inherited Members AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings AuraPropertiesBase.Version object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.OpenCVAuras.Triggers.WindowCapture Assembly: EyeAuras.OpenCVAuras.Metadata.dll Syntax public abstract record WindowCaptureTriggerProperties : AuraTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IEquatable<AuraTriggerPropertiesBase>, IWindowCaptureTriggerProperties, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<WindowCaptureTriggerProperties> Constructors Name Description WindowCaptureTriggerProperties() WindowCaptureTriggerProperties(WindowCaptureTriggerProperties) Properties Name Description CaptureBorderless CaptureCursor CaptureSourceName EnablePreview EqualityContract ForceRegionCapture ImageEffectsPipeline MaxFramesPerSecond MinFramesPerSecond TargetWindowRegion WindowMatchParams WindowRegion Methods Name Description Equals(WindowCaptureTriggerProperties?) Equals(AuraTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(WindowCaptureTriggerProperties?, WindowCaptureTriggerProperties?) operator !=(WindowCaptureTriggerProperties?, WindowCaptureTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(WindowCaptureTriggerProperties?, WindowCaptureTriggerProperties?) Declaration public static bool operator ==(WindowCaptureTriggerProperties? left, WindowCaptureTriggerProperties? right) Parameters Type Name Description WindowCaptureTriggerProperties left WindowCaptureTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.WindowCaptureTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(WindowCaptureTriggerProperties?, WindowCaptureTriggerProperties?) Declaration public static bool operator !=(WindowCaptureTriggerProperties? left, WindowCaptureTriggerProperties? right) Parameters Type Name Description WindowCaptureTriggerProperties left WindowCaptureTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.WindowCapture.html",
    "title": "Namespace EyeAuras.OpenCVAuras.Triggers.WindowCapture | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.OpenCVAuras.Triggers.WindowCapture Classes DebugWindowCaptureTriggerProperties WindowCaptureTriggerProperties Interfaces ICaptureTriggerResult ICaptureTriggerValue IWindowCaptureTriggerProperties IWindowCaptureTrigger<TTriggerResult> Enums WindowCapturePreviewMode"
  },
  "api/EyeAuras.OpenCVAuras.Triggers.html": {
    "href": "api/EyeAuras.OpenCVAuras.Triggers.html",
    "title": "Namespace EyeAuras.OpenCVAuras.Triggers | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.OpenCVAuras.Triggers Namespaces EyeAuras.OpenCVAuras.Triggers.ColorSearch EyeAuras.OpenCVAuras.Triggers.ImageSearch EyeAuras.OpenCVAuras.Triggers.MLSearch EyeAuras.OpenCVAuras.Triggers.TextSearch EyeAuras.OpenCVAuras.Triggers.WindowCapture"
  },
  "api/EyeAuras.OpenCVAuras.html": {
    "href": "api/EyeAuras.OpenCVAuras.html",
    "title": "Namespace EyeAuras.OpenCVAuras | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.OpenCVAuras Namespaces EyeAuras.OpenCVAuras.ImageEffects EyeAuras.OpenCVAuras.ML EyeAuras.OpenCVAuras.Pipeline EyeAuras.OpenCVAuras.Scaffolding EyeAuras.OpenCVAuras.Triggers"
  },
  "api/EyeAuras.Scripting.Api.IAuraAccessor.EnablingConditions.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraAccessor.EnablingConditions.html",
    "title": "Property EnablingConditions | EyeAuras Docs",
    "keywords": "Property EnablingConditions EnablingConditions Contains a list of conditions which are required for this item to start \"ticking\" Declaration IObservableList<IAuraTrigger> EnablingConditions { get; } Property Value Type Description IObservableList<IAuraTrigger>"
  },
  "api/EyeAuras.Scripting.Api.IAuraAccessor.IsActive.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraAccessor.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Declaration bool? IsActive { get; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Scripting.Api.IAuraAccessor.IsEnabled.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraAccessor.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Indicates whether this item is disabled (available for selection/edit) or not Declaration bool IsEnabled { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Scripting.Api.IAuraAccessor.OnEnterActions.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraAccessor.OnEnterActions.html",
    "title": "Property OnEnterActions | EyeAuras Docs",
    "keywords": "Property OnEnterActions OnEnterActions Declaration IObservableList<IAuraAction> OnEnterActions { get; } Property Value Type Description IObservableList<IAuraAction>"
  },
  "api/EyeAuras.Scripting.Api.IAuraAccessor.OnExitActions.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraAccessor.OnExitActions.html",
    "title": "Property OnExitActions | EyeAuras Docs",
    "keywords": "Property OnExitActions OnExitActions Declaration IObservableList<IAuraAction> OnExitActions { get; } Property Value Type Description IObservableList<IAuraAction>"
  },
  "api/EyeAuras.Scripting.Api.IAuraAccessor.Overlays.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraAccessor.Overlays.html",
    "title": "Property Overlays | EyeAuras Docs",
    "keywords": "Property Overlays Overlays Declaration IObservableList<IAuraOverlay> Overlays { get; } Property Value Type Description IObservableList<IAuraOverlay>"
  },
  "api/EyeAuras.Scripting.Api.IAuraAccessor.Triggers.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraAccessor.Triggers.html",
    "title": "Property Triggers | EyeAuras Docs",
    "keywords": "Property Triggers Triggers Declaration IObservableList<IAuraTrigger> Triggers { get; } Property Value Type Description IObservableList<IAuraTrigger>"
  },
  "api/EyeAuras.Scripting.Api.IAuraAccessor.WhileActiveActions.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraAccessor.WhileActiveActions.html",
    "title": "Property WhileActiveActions | EyeAuras Docs",
    "keywords": "Property WhileActiveActions WhileActiveActions Declaration IObservableList<IAuraAction> WhileActiveActions { get; } Property Value Type Description IObservableList<IAuraAction>"
  },
  "api/EyeAuras.Scripting.Api.IAuraAccessor.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraAccessor.html",
    "title": "Interface IAuraAccessor | EyeAuras Docs",
    "keywords": "Interface IAuraAccessor Inherited Members IHasId.Id ICanBeLoaded.IsLoaded ICanBeArchived.IsArchived IHasTimestamp.CreatedAt IHasVariables.Variables IHasVariables.this[string] IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasPath.FullPath IHasPath.Path IHasName.Name Namespace: EyeAuras.Scripting.Api Assembly: EyeAuras.Scripting.dll Syntax public interface IAuraAccessor : IHasId, ICanBeLoaded, ICanBeArchived, IHasTimestamp, IHasVariables, IDisposable, INotifyPropertyChanged, IHasPath, IHasName Properties Name Description EnablingConditions Contains a list of conditions which are required for this item to start \"ticking\" IsActive IsEnabled Indicates whether this item is disabled (available for selection/edit) or not OnEnterActions OnExitActions Overlays Triggers WhileActiveActions Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.Aura.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.Aura.html",
    "title": "Property Aura | EyeAuras Docs",
    "keywords": "Property Aura Aura Contains reference to Aura (or null) which holds current script Declaration IAuraAccessor Aura { get; } Property Value Type Description IAuraAccessor"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.Auras.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.Auras.html",
    "title": "Property Auras | EyeAuras Docs",
    "keywords": "Property Auras Auras All auras in Aura Tree Declaration IObservableList<IAuraAccessor> Auras { get; } Property Value Type Description IObservableList<IAuraAccessor>"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.FindAuraByPath.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.FindAuraByPath.html",
    "title": "Method FindAuraByPath | EyeAuras Docs",
    "keywords": "Method FindAuraByPath FindAuraByPath(string) Declaration IAuraAccessor FindAuraByPath(string path) Parameters Type Name Description string path Returns Type Description IAuraAccessor"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.FindFolderByPath.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.FindFolderByPath.html",
    "title": "Method FindFolderByPath | EyeAuras Docs",
    "keywords": "Method FindFolderByPath FindFolderByPath(string) Declaration IFolderAccessor FindFolderByPath(string path) Parameters Type Name Description string path Returns Type Description IFolderAccessor"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.Folder.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.Folder.html",
    "title": "Property Folder | EyeAuras Docs",
    "keywords": "Property Folder Folder Contains reference to a Folder which holds current script Declaration IFolderAccessor Folder { get; } Property Value Type Description IFolderAccessor"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.Folders.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.Folders.html",
    "title": "Property Folders | EyeAuras Docs",
    "keywords": "Property Folders Folders All folders in Aura Tree Declaration IObservableList<IFolderAccessor> Folders { get; } Property Value Type Description IObservableList<IFolderAccessor>"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.GetAuraByPath.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.GetAuraByPath.html",
    "title": "Method GetAuraByPath | EyeAuras Docs",
    "keywords": "Method GetAuraByPath GetAuraByPath(string) Declaration IAuraAccessor GetAuraByPath(string path) Parameters Type Name Description string path Returns Type Description IAuraAccessor"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeScriptingApi.html",
    "title": "Interface IAuraTreeScriptingApi | EyeAuras Docs",
    "keywords": "Interface IAuraTreeScriptingApi Inherited Members IScriptingApi.Name Namespace: EyeAuras.Scripting.Api Assembly: EyeAuras.Scripting.dll Syntax public interface IAuraTreeScriptingApi : IScriptingApi Properties Name Description Aura Contains reference to Aura (or null) which holds current script Auras All auras in Aura Tree Folder Contains reference to a Folder which holds current script Folders All folders in Aura Tree Methods Name Description FindAuraByPath(string) FindFolderByPath(string) GetAuraByPath(string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.Aura.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.Aura.html",
    "title": "Property Aura | EyeAuras Docs",
    "keywords": "Property Aura Aura Declaration IAura Aura { get; } Property Value Type Description IAura"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.Auras.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.Auras.html",
    "title": "Property Auras | EyeAuras Docs",
    "keywords": "Property Auras Auras Declaration IObservableList<IAura> Auras { get; } Property Value Type Description IObservableList<IAura>"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.FindActionById.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.FindActionById.html",
    "title": "Method FindActionById | EyeAuras Docs",
    "keywords": "Method FindActionById FindActionById(string) Declaration IAuraAction FindActionById(string modelId) Parameters Type Name Description string modelId Returns Type Description IAuraAction"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.FindAuraById.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.FindAuraById.html",
    "title": "Method FindAuraById | EyeAuras Docs",
    "keywords": "Method FindAuraById FindAuraById(string) Declaration IAura FindAuraById(string auraId) Parameters Type Name Description string auraId Returns Type Description IAura"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.FindAuraByPath.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.FindAuraByPath.html",
    "title": "Method FindAuraByPath | EyeAuras Docs",
    "keywords": "Method FindAuraByPath FindAuraByPath(string) Declaration IAura FindAuraByPath(string path) Parameters Type Name Description string path Returns Type Description IAura"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.FindFolderByPath.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.FindFolderByPath.html",
    "title": "Method FindFolderByPath | EyeAuras Docs",
    "keywords": "Method FindFolderByPath FindFolderByPath(string) Declaration IFolder FindFolderByPath(string path) Parameters Type Name Description string path Returns Type Description IFolder"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.FindModelById.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.FindModelById.html",
    "title": "Method FindModelById | EyeAuras Docs",
    "keywords": "Method FindModelById FindModelById<TAuraModel>(string) Declaration TAuraModel FindModelById<TAuraModel>(string modelId) where TAuraModel : class, IAuraObject Parameters Type Name Description string modelId Returns Type Description TAuraModel Type Parameters Name Description TAuraModel"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.FindOverlayById.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.FindOverlayById.html",
    "title": "Method FindOverlayById | EyeAuras Docs",
    "keywords": "Method FindOverlayById FindOverlayById(string) Declaration IAuraOverlay FindOverlayById(string modelId) Parameters Type Name Description string modelId Returns Type Description IAuraOverlay"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.FindTriggerById.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.FindTriggerById.html",
    "title": "Method FindTriggerById | EyeAuras Docs",
    "keywords": "Method FindTriggerById FindTriggerById(string) Declaration IAuraTrigger FindTriggerById(string modelId) Parameters Type Name Description string modelId Returns Type Description IAuraTrigger"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.Folder.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.Folder.html",
    "title": "Property Folder | EyeAuras Docs",
    "keywords": "Property Folder Folder Declaration IFolder Folder { get; } Property Value Type Description IFolder"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.Folders.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.Folders.html",
    "title": "Property Folders | EyeAuras Docs",
    "keywords": "Property Folders Folders Declaration IObservableList<IFolder> Folders { get; } Property Value Type Description IObservableList<IFolder>"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.GetActionById.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.GetActionById.html",
    "title": "Method GetActionById | EyeAuras Docs",
    "keywords": "Method GetActionById GetActionById(string) Declaration IAuraAction GetActionById(string modelId) Parameters Type Name Description string modelId Returns Type Description IAuraAction"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.GetAuraById.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.GetAuraById.html",
    "title": "Method GetAuraById | EyeAuras Docs",
    "keywords": "Method GetAuraById GetAuraById(string) Declaration IAura GetAuraById(string auraId) Parameters Type Name Description string auraId Returns Type Description IAura"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.GetAuraByPath.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.GetAuraByPath.html",
    "title": "Method GetAuraByPath | EyeAuras Docs",
    "keywords": "Method GetAuraByPath GetAuraByPath(string) Declaration IAura GetAuraByPath(string path) Parameters Type Name Description string path Returns Type Description IAura"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.GetModelById.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.GetModelById.html",
    "title": "Method GetModelById | EyeAuras Docs",
    "keywords": "Method GetModelById GetModelById<TAuraModel>(string) Declaration TAuraModel GetModelById<TAuraModel>(string modelId) where TAuraModel : class, IAuraObject Parameters Type Name Description string modelId Returns Type Description TAuraModel Type Parameters Name Description TAuraModel"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.GetOverlayById.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.GetOverlayById.html",
    "title": "Method GetOverlayById | EyeAuras Docs",
    "keywords": "Method GetOverlayById GetOverlayById(string) Declaration IAuraOverlay GetOverlayById(string modelId) Parameters Type Name Description string modelId Returns Type Description IAuraOverlay"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.GetTriggerById.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.GetTriggerById.html",
    "title": "Method GetTriggerById | EyeAuras Docs",
    "keywords": "Method GetTriggerById GetTriggerById(string) Declaration IAuraTrigger GetTriggerById(string modelId) Parameters Type Name Description string modelId Returns Type Description IAuraTrigger"
  },
  "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.html": {
    "href": "api/EyeAuras.Scripting.Api.IAuraTreeUnstableScriptingApi.html",
    "title": "Interface IAuraTreeUnstableScriptingApi | EyeAuras Docs",
    "keywords": "Interface IAuraTreeUnstableScriptingApi Inherited Members IScriptingApi.Name Namespace: EyeAuras.Scripting.Api Assembly: EyeAuras.Scripting.dll Syntax public interface IAuraTreeUnstableScriptingApi : IScriptingApi Properties Name Description Aura Auras Folder Folders Methods Name Description FindActionById(string) FindAuraById(string) FindAuraByPath(string) FindFolderByPath(string) FindModelById<TAuraModel>(string) FindOverlayById(string) FindTriggerById(string) GetActionById(string) GetAuraById(string) GetAuraByPath(string) GetModelById<TAuraModel>(string) GetOverlayById(string) GetTriggerById(string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Api.IFolderAccessor.Depth.html": {
    "href": "api/EyeAuras.Scripting.Api.IFolderAccessor.Depth.html",
    "title": "Property Depth | EyeAuras Docs",
    "keywords": "Property Depth Depth Declaration int Depth { get; } Property Value Type Description int"
  },
  "api/EyeAuras.Scripting.Api.IFolderAccessor.EnablingConditions.html": {
    "href": "api/EyeAuras.Scripting.Api.IFolderAccessor.EnablingConditions.html",
    "title": "Property EnablingConditions | EyeAuras Docs",
    "keywords": "Property EnablingConditions EnablingConditions Contains a list of conditions which are required for this item to start \"ticking\" Declaration IComplexAuraTrigger EnablingConditions { get; } Property Value Type Description IComplexAuraTrigger"
  },
  "api/EyeAuras.Scripting.Api.IFolderAccessor.IsExpanded.html": {
    "href": "api/EyeAuras.Scripting.Api.IFolderAccessor.IsExpanded.html",
    "title": "Property IsExpanded | EyeAuras Docs",
    "keywords": "Property IsExpanded IsExpanded Declaration bool IsExpanded { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Scripting.Api.IFolderAccessor.html": {
    "href": "api/EyeAuras.Scripting.Api.IFolderAccessor.html",
    "title": "Interface IFolderAccessor | EyeAuras Docs",
    "keywords": "Interface IFolderAccessor Inherited Members IHasId.Id IHasTimestamp.CreatedAt IHasVariables.Variables IHasVariables.this[string] IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasPath.FullPath IHasPath.Path IHasName.Name Namespace: EyeAuras.Scripting.Api Assembly: EyeAuras.Scripting.dll Syntax public interface IFolderAccessor : IHasId, IHasTimestamp, IHasVariables, IDisposable, INotifyPropertyChanged, IHasPath, IHasName Properties Name Description Depth EnablingConditions Contains a list of conditions which are required for this item to start \"ticking\" IsExpanded Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Api.IScriptingApi.Name.html": {
    "href": "api/EyeAuras.Scripting.Api.IScriptingApi.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration string Name { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Scripting.Api.IScriptingApi.html": {
    "href": "api/EyeAuras.Scripting.Api.IScriptingApi.html",
    "title": "Interface IScriptingApi | EyeAuras Docs",
    "keywords": "Interface IScriptingApi Namespace: EyeAuras.Scripting.Api Assembly: EyeAuras.Scripting.dll Syntax public interface IScriptingApi Properties Name Description Name Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Api.IVariablesScriptingApi.GetOrDefault.html": {
    "href": "api/EyeAuras.Scripting.Api.IVariablesScriptingApi.GetOrDefault.html",
    "title": "Method GetOrDefault | EyeAuras Docs",
    "keywords": "Method GetOrDefault GetOrDefault<T>(string, out T, T) Declaration void GetOrDefault<T>(string key, out T result, T defaultValue) Parameters Type Name Description string key T result T defaultValue Type Parameters Name Description T GetOrDefault<T>(string, out T) Declaration void GetOrDefault<T>(string key, out T result) Parameters Type Name Description string key T result Type Parameters Name Description T GetOrDefault<T>(string, T) Declaration T GetOrDefault<T>(string key, T defaultValue) Parameters Type Name Description string key T defaultValue Returns Type Description T Type Parameters Name Description T"
  },
  "api/EyeAuras.Scripting.Api.IVariablesScriptingApi.GetVariable.html": {
    "href": "api/EyeAuras.Scripting.Api.IVariablesScriptingApi.GetVariable.html",
    "title": "Method GetVariable | EyeAuras Docs",
    "keywords": "Method GetVariable GetVariable<T>(string) Declaration ScriptVariable<T> GetVariable<T>(string key) Parameters Type Name Description string key Returns Type Description ScriptVariable<T> Type Parameters Name Description T GetVariable<T>(string, string) Declaration ScriptVariable<T> GetVariable<T>(string path, string key) Parameters Type Name Description string path string key Returns Type Description ScriptVariable<T> Type Parameters Name Description T GetVariable<T>(IHasVariables, string) Declaration ScriptVariable<T> GetVariable<T>(IHasVariables source, string key) Parameters Type Name Description IHasVariables source string key Returns Type Description ScriptVariable<T> Type Parameters Name Description T"
  },
  "api/EyeAuras.Scripting.Api.IVariablesScriptingApi.html": {
    "href": "api/EyeAuras.Scripting.Api.IVariablesScriptingApi.html",
    "title": "Interface IVariablesScriptingApi | EyeAuras Docs",
    "keywords": "Interface IVariablesScriptingApi Inherited Members IDictionary<string, object>.ContainsKey(string) IDictionary<string, object>.Add(string, object) IDictionary<string, object>.Remove(string) IDictionary<string, object>.TryGetValue(string, out object) IDictionary<string, object>.this[string] IDictionary<string, object>.Keys IDictionary<string, object>.Values ICollection<KeyValuePair<string, object>>.Add(KeyValuePair<string, object>) ICollection<KeyValuePair<string, object>>.Clear() ICollection<KeyValuePair<string, object>>.Contains(KeyValuePair<string, object>) ICollection<KeyValuePair<string, object>>.CopyTo(KeyValuePair<string, object>[], int) ICollection<KeyValuePair<string, object>>.Remove(KeyValuePair<string, object>) ICollection<KeyValuePair<string, object>>.Count ICollection<KeyValuePair<string, object>>.IsReadOnly IEnumerable<KeyValuePair<string, object>>.GetEnumerator() IEnumerable.GetEnumerator() IScriptingApi.Name Namespace: EyeAuras.Scripting.Api Assembly: EyeAuras.Scripting.dll Syntax public interface IVariablesScriptingApi : IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable, IScriptingApi Methods Name Description GetOrDefault<T>(string, T) GetOrDefault<T>(string, out T) GetOrDefault<T>(string, out T, T) GetVariable<T>(IHasVariables, string) GetVariable<T>(string) GetVariable<T>(string, string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Api.ScriptingApiBase.-ctor.html": {
    "href": "api/EyeAuras.Scripting.Api.ScriptingApiBase.-ctor.html",
    "title": "Constructor ScriptingApiBase | EyeAuras Docs",
    "keywords": "Constructor ScriptingApiBase ScriptingApiBase() Declaration protected ScriptingApiBase()"
  },
  "api/EyeAuras.Scripting.Api.ScriptingApiBase.AuraContext.html": {
    "href": "api/EyeAuras.Scripting.Api.ScriptingApiBase.AuraContext.html",
    "title": "Property AuraContext | EyeAuras Docs",
    "keywords": "Property AuraContext AuraContext Declaration protected IAuraContext AuraContext { get; } Property Value Type Description IAuraContext"
  },
  "api/EyeAuras.Scripting.Api.ScriptingApiBase.Context.html": {
    "href": "api/EyeAuras.Scripting.Api.ScriptingApiBase.Context.html",
    "title": "Property Context | EyeAuras Docs",
    "keywords": "Property Context Context Declaration [Bindable(false)] public IEyeContext Context { get; init; } Property Value Type Description IEyeContext Implements IHasContext.Context"
  },
  "api/EyeAuras.Scripting.Api.ScriptingApiBase.FolderContext.html": {
    "href": "api/EyeAuras.Scripting.Api.ScriptingApiBase.FolderContext.html",
    "title": "Property FolderContext | EyeAuras Docs",
    "keywords": "Property FolderContext FolderContext Declaration protected IFolderContext FolderContext { get; } Property Value Type Description IFolderContext"
  },
  "api/EyeAuras.Scripting.Api.ScriptingApiBase.Name.html": {
    "href": "api/EyeAuras.Scripting.Api.ScriptingApiBase.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration public virtual string Name { get; } Property Value Type Description string Implements IScriptingApi.Name"
  },
  "api/EyeAuras.Scripting.Api.ScriptingApiBase.Services.html": {
    "href": "api/EyeAuras.Scripting.Api.ScriptingApiBase.Services.html",
    "title": "Property Services | EyeAuras Docs",
    "keywords": "Property Services Services Declaration protected IEyeSharedServices Services { get; } Property Value Type Description IEyeSharedServices"
  },
  "api/EyeAuras.Scripting.Api.ScriptingApiBase.html": {
    "href": "api/EyeAuras.Scripting.Api.ScriptingApiBase.html",
    "title": "Class ScriptingApiBase | EyeAuras Docs",
    "keywords": "Class ScriptingApiBase Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger ScriptingApiBase Implements IDisposable INotifyPropertyChanged IScriptingApi IHasContext Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Scripting.Api Assembly: EyeAuras.Scripting.dll Syntax public abstract class ScriptingApiBase : DisposableReactiveObjectWithLogger, IDisposable, INotifyPropertyChanged, IScriptingApi, IHasContext Constructors Name Description ScriptingApiBase() Properties Name Description AuraContext Context FolderContext Name Services Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Api.html": {
    "href": "api/EyeAuras.Scripting.Api.html",
    "title": "Namespace EyeAuras.Scripting.Api | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Scripting.Api Classes ScriptingApiBase Interfaces IAuraAccessor IAuraTreeScriptingApi IAuraTreeUnstableScriptingApi IFolderAccessor IScriptingApi IVariablesScriptingApi"
  },
  "api/EyeAuras.Scripting.Projects.CsharpPackageReference.Equals.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpPackageReference.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) Equals(CsharpPackageReference) Declaration public bool Equals(CsharpPackageReference other) Parameters Type Name Description CsharpPackageReference other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Scripting.Projects.CsharpPackageReference.GetHashCode.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpPackageReference.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode()"
  },
  "api/EyeAuras.Scripting.Projects.CsharpPackageReference.Id.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpPackageReference.Id.html",
    "title": "Property Id | EyeAuras Docs",
    "keywords": "Property Id Id Declaration public string Id { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Scripting.Projects.CsharpPackageReference.ToString.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpPackageReference.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.Scripting.Projects.CsharpPackageReference.Version.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpPackageReference.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public string Version { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Scripting.Projects.CsharpPackageReference.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpPackageReference.html",
    "title": "Struct CsharpPackageReference | EyeAuras Docs",
    "keywords": "Struct CsharpPackageReference Implements IEquatable<CsharpPackageReference> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Scripting.Projects Assembly: EyeAuras.Scripting.dll Syntax public readonly struct CsharpPackageReference : IEquatable<CsharpPackageReference> Properties Name Description Id Version Methods Name Description Equals(CsharpPackageReference) Equals(object) GetHashCode() ToString() Operators Name Description operator ==(CsharpPackageReference, CsharpPackageReference) operator !=(CsharpPackageReference, CsharpPackageReference) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.Scripting.Projects.CsharpPackageReference.op_Equality.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpPackageReference.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(CsharpPackageReference, CsharpPackageReference) Declaration public static bool operator ==(CsharpPackageReference left, CsharpPackageReference right) Parameters Type Name Description CsharpPackageReference left CsharpPackageReference right Returns Type Description bool"
  },
  "api/EyeAuras.Scripting.Projects.CsharpPackageReference.op_Inequality.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpPackageReference.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(CsharpPackageReference, CsharpPackageReference) Declaration public static bool operator !=(CsharpPackageReference left, CsharpPackageReference right) Parameters Type Name Description CsharpPackageReference left CsharpPackageReference right Returns Type Description bool"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectFile.-ctor.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectFile.-ctor.html",
    "title": "Constructor CsharpProjectFile | EyeAuras Docs",
    "keywords": "Constructor CsharpProjectFile CsharpProjectFile(FileInfo) Declaration public CsharpProjectFile(FileInfo projectFile) Parameters Type Name Description FileInfo projectFile"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectFile.Clear.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectFile.Clear.html",
    "title": "Method Clear | EyeAuras Docs",
    "keywords": "Method Clear Clear() Declaration public void Clear()"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectFile.Files.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectFile.Files.html",
    "title": "Property Files | EyeAuras Docs",
    "keywords": "Property Files Files Declaration public IReadOnlyList<FileInfo> Files { get; } Property Value Type Description IReadOnlyList<FileInfo>"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectFile.IgnorePatterns.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectFile.IgnorePatterns.html",
    "title": "Property IgnorePatterns | EyeAuras Docs",
    "keywords": "Property IgnorePatterns IgnorePatterns Declaration public IReadOnlyList<string> IgnorePatterns { get; } Property Value Type Description IReadOnlyList<string>"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectFile.IsIgnored.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectFile.IsIgnored.html",
    "title": "Method IsIgnored | EyeAuras Docs",
    "keywords": "Method IsIgnored IsIgnored(string) Declaration public bool IsIgnored(string filePath) Parameters Type Name Description string filePath Returns Type Description bool IsIgnored(FileInfo) Declaration public bool IsIgnored(FileInfo file) Parameters Type Name Description FileInfo file Returns Type Description bool"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectFile.PackageReferences.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectFile.PackageReferences.html",
    "title": "Property PackageReferences | EyeAuras Docs",
    "keywords": "Property PackageReferences PackageReferences Declaration public IReadOnlyList<CsharpPackageReference> PackageReferences { get; } Property Value Type Description IReadOnlyList<CsharpPackageReference>"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectFile.ProjectFile.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectFile.ProjectFile.html",
    "title": "Property ProjectFile | EyeAuras Docs",
    "keywords": "Property ProjectFile ProjectFile Declaration public FileInfo ProjectFile { get; } Property Value Type Description FileInfo"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectFile.ProjectReferences.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectFile.ProjectReferences.html",
    "title": "Property ProjectReferences | EyeAuras Docs",
    "keywords": "Property ProjectReferences ProjectReferences Declaration public IReadOnlyList<CsharpProjectReference> ProjectReferences { get; } Property Value Type Description IReadOnlyList<CsharpProjectReference>"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectFile.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectFile.html",
    "title": "Class CsharpProjectFile | EyeAuras Docs",
    "keywords": "Class CsharpProjectFile Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger CsharpProjectFile Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Scripting.Projects Assembly: EyeAuras.Scripting.dll Syntax public sealed class CsharpProjectFile : DisposableReactiveObjectWithLogger, IDisposable, INotifyPropertyChanged Constructors Name Description CsharpProjectFile(FileInfo) Properties Name Description Files IgnorePatterns PackageReferences ProjectFile ProjectReferences Methods Name Description Clear() IsIgnored(FileInfo) IsIgnored(string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectReference.Equals.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectReference.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) Equals(CsharpProjectReference) Declaration public bool Equals(CsharpProjectReference other) Parameters Type Name Description CsharpProjectReference other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectReference.GetHashCode.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectReference.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode()"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectReference.Path.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectReference.Path.html",
    "title": "Property Path | EyeAuras Docs",
    "keywords": "Property Path Path Declaration public string Path { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectReference.ToString.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectReference.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectReference.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectReference.html",
    "title": "Struct CsharpProjectReference | EyeAuras Docs",
    "keywords": "Struct CsharpProjectReference Implements IEquatable<CsharpProjectReference> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Scripting.Projects Assembly: EyeAuras.Scripting.dll Syntax public readonly struct CsharpProjectReference : IEquatable<CsharpProjectReference> Properties Name Description Path Methods Name Description Equals(CsharpProjectReference) Equals(object) GetHashCode() ToString() Operators Name Description operator ==(CsharpProjectReference, CsharpProjectReference) operator !=(CsharpProjectReference, CsharpProjectReference) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectReference.op_Equality.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectReference.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(CsharpProjectReference, CsharpProjectReference) Declaration public static bool operator ==(CsharpProjectReference left, CsharpProjectReference right) Parameters Type Name Description CsharpProjectReference left CsharpProjectReference right Returns Type Description bool"
  },
  "api/EyeAuras.Scripting.Projects.CsharpProjectReference.op_Inequality.html": {
    "href": "api/EyeAuras.Scripting.Projects.CsharpProjectReference.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(CsharpProjectReference, CsharpProjectReference) Declaration public static bool operator !=(CsharpProjectReference left, CsharpProjectReference right) Parameters Type Name Description CsharpProjectReference left CsharpProjectReference right Returns Type Description bool"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectFile.-Clone--.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectFile.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public EyeProjectFile <Clone>$() Returns Type Description EyeProjectFile"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectFile.-ctor.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectFile.-ctor.html",
    "title": "Constructor EyeProjectFile | EyeAuras Docs",
    "keywords": "Constructor EyeProjectFile EyeProjectFile() Declaration public EyeProjectFile()"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectFile.Content.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectFile.Content.html",
    "title": "Property Content | EyeAuras Docs",
    "keywords": "Property Content Content Declaration public string Content { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectFile.Equals.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectFile.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(EyeProjectFile?) Declaration public bool Equals(EyeProjectFile? other) Parameters Type Name Description EyeProjectFile other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectFile.FullPath.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectFile.FullPath.html",
    "title": "Property FullPath | EyeAuras Docs",
    "keywords": "Property FullPath FullPath Full path to an item which includes both folder and file/item name Declaration public string FullPath { get; set; } Property Value Type Description string Implements ICanSetPath.FullPath IHasPath.FullPath"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectFile.GetHashCode.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectFile.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectFile.Name.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectFile.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Name of an item(could be filename), usually un-localized and could be used in lookups Declaration public string Name { get; set; } Property Value Type Description string Implements IHasName.Name"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectFile.Path.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectFile.Path.html",
    "title": "Property Path | EyeAuras Docs",
    "keywords": "Property Path Path Windows-specific directory path Declaration public string Path { get; set; } Property Value Type Description string Implements IHasPath.Path"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectFile.Revision.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectFile.Revision.html",
    "title": "Property Revision | EyeAuras Docs",
    "keywords": "Property Revision Revision Declaration public long Revision { get; set; } Property Value Type Description long"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectFile.ToString.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectFile.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectFile.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectFile.html",
    "title": "Class EyeProjectFile | EyeAuras Docs",
    "keywords": "Class EyeProjectFile Inheritance object EyeProjectFile Implements ICanSetPath IHasPath IHasName IEquatable<EyeProjectFile> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Scripting.Projects Assembly: EyeAuras.Scripting.Metadata.dll Syntax public sealed record EyeProjectFile : ICanSetPath, IHasPath, IHasName, IEquatable<EyeProjectFile> Constructors Name Description EyeProjectFile() Properties Name Description Content FullPath Full path to an item which includes both folder and file/item name Name Name of an item(could be filename), usually un-localized and could be used in lookups Path Windows-specific directory path Revision Methods Name Description Equals(EyeProjectFile?) Equals(object?) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(EyeProjectFile?, EyeProjectFile?) operator !=(EyeProjectFile?, EyeProjectFile?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectFile.op_Equality.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectFile.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(EyeProjectFile?, EyeProjectFile?) Declaration public static bool operator ==(EyeProjectFile? left, EyeProjectFile? right) Parameters Type Name Description EyeProjectFile left EyeProjectFile right Returns Type Description bool"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectFile.op_Inequality.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectFile.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(EyeProjectFile?, EyeProjectFile?) Declaration public static bool operator !=(EyeProjectFile? left, EyeProjectFile? right) Parameters Type Name Description EyeProjectFile left EyeProjectFile right Returns Type Description bool"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectProperties.-Clone--.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public EyeProjectProperties <Clone>$() Returns Type Description EyeProjectProperties"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectProperties.-ctor.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectProperties.-ctor.html",
    "title": "Constructor EyeProjectProperties | EyeAuras Docs",
    "keywords": "Constructor EyeProjectProperties EyeProjectProperties() Declaration public EyeProjectProperties()"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectProperties.Equals.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(EyeProjectProperties?) Declaration public bool Equals(EyeProjectProperties? other) Parameters Type Name Description EyeProjectProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectProperties.Files.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectProperties.Files.html",
    "title": "Property Files | EyeAuras Docs",
    "keywords": "Property Files Files Declaration public EyeProjectFile[] Files { get; set; } Property Value Type Description EyeProjectFile[]"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectProperties.GetHashCode.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectProperties.ProjectName.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectProperties.ProjectName.html",
    "title": "Property ProjectName | EyeAuras Docs",
    "keywords": "Property ProjectName ProjectName Declaration public string ProjectName { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectProperties.ToString.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectProperties.Version.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public int Version { get; set; } Property Value Type Description int Implements IHasVersion.Version"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectProperties.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectProperties.html",
    "title": "Class EyeProjectProperties | EyeAuras Docs",
    "keywords": "Class EyeProjectProperties Inheritance object EyeProjectProperties Implements IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion IEquatable<EyeProjectProperties> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Scripting.Projects Assembly: EyeAuras.Scripting.Metadata.dll Syntax public sealed record EyeProjectProperties : IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, IEquatable<EyeProjectProperties> Constructors Name Description EyeProjectProperties() Properties Name Description Files ProjectName Version Methods Name Description Equals(EyeProjectProperties?) Equals(object?) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(EyeProjectProperties?, EyeProjectProperties?) operator !=(EyeProjectProperties?, EyeProjectProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectProperties.op_Equality.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(EyeProjectProperties?, EyeProjectProperties?) Declaration public static bool operator ==(EyeProjectProperties? left, EyeProjectProperties? right) Parameters Type Name Description EyeProjectProperties left EyeProjectProperties right Returns Type Description bool"
  },
  "api/EyeAuras.Scripting.Projects.EyeProjectProperties.op_Inequality.html": {
    "href": "api/EyeAuras.Scripting.Projects.EyeProjectProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(EyeProjectProperties?, EyeProjectProperties?) Declaration public static bool operator !=(EyeProjectProperties? left, EyeProjectProperties? right) Parameters Type Name Description EyeProjectProperties left EyeProjectProperties right Returns Type Description bool"
  },
  "api/EyeAuras.Scripting.Projects.IHasReplProject.Compiler.html": {
    "href": "api/EyeAuras.Scripting.Projects.IHasReplProject.Compiler.html",
    "title": "Property Compiler | EyeAuras Docs",
    "keywords": "Property Compiler Compiler Declaration IContinuousCompiler Compiler { get; } Property Value Type Description IContinuousCompiler"
  },
  "api/EyeAuras.Scripting.Projects.IHasReplProject.Project.html": {
    "href": "api/EyeAuras.Scripting.Projects.IHasReplProject.Project.html",
    "title": "Property Project | EyeAuras Docs",
    "keywords": "Property Project Project Declaration IReplProject Project { get; } Property Value Type Description IReplProject"
  },
  "api/EyeAuras.Scripting.Projects.IHasReplProject.html": {
    "href": "api/EyeAuras.Scripting.Projects.IHasReplProject.html",
    "title": "Interface IHasReplProject | EyeAuras Docs",
    "keywords": "Interface IHasReplProject Inherited Members IHasLinkedAuras.LinkedAuras IHasContext.Context Namespace: EyeAuras.Scripting.Projects Assembly: EyeAuras.Scripting.dll Syntax public interface IHasReplProject : IHasLinkedAuras, IHasContext Properties Name Description Compiler Project Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Projects.html": {
    "href": "api/EyeAuras.Scripting.Projects.html",
    "title": "Namespace EyeAuras.Scripting.Projects | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Scripting.Projects Classes CsharpProjectFile EyeProjectFile EyeProjectProperties Structs CsharpPackageReference CsharpProjectReference Interfaces IHasReplProject"
  },
  "api/EyeAuras.Scripting.Scaffolding.CsharpScriptingUtils.LoadAssemblyOrDefault.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.CsharpScriptingUtils.LoadAssemblyOrDefault.html",
    "title": "Method LoadAssemblyOrDefault | EyeAuras Docs",
    "keywords": "Method LoadAssemblyOrDefault LoadAssemblyOrDefault(CompileToAssemblyResult, AssemblyLoadContext, IFluentLog) Declaration public static Assembly LoadAssemblyOrDefault(CompileToAssemblyResult compilationResult, AssemblyLoadContext context, IFluentLog log) Parameters Type Name Description CompileToAssemblyResult compilationResult AssemblyLoadContext context IFluentLog log Returns Type Description Assembly"
  },
  "api/EyeAuras.Scripting.Scaffolding.CsharpScriptingUtils.PrepareAssembly.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.CsharpScriptingUtils.PrepareAssembly.html",
    "title": "Method PrepareAssembly | EyeAuras Docs",
    "keywords": "Method PrepareAssembly PrepareAssembly(CompileToAssemblyResult, IFluentLog) Declaration public static IObservable<Assembly> PrepareAssembly(CompileToAssemblyResult compilationResult, IFluentLog log) Parameters Type Name Description CompileToAssemblyResult compilationResult IFluentLog log Returns Type Description IObservable<Assembly>"
  },
  "api/EyeAuras.Scripting.Scaffolding.CsharpScriptingUtils.ResolveAssemblyType.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.CsharpScriptingUtils.ResolveAssemblyType.html",
    "title": "Method ResolveAssemblyType | EyeAuras Docs",
    "keywords": "Method ResolveAssemblyType ResolveAssemblyType(Assembly, Type, Type, IFluentLog) Declaration public static Type ResolveAssemblyType(Assembly assembly, Type baseType, Type defaultValue, IFluentLog log) Parameters Type Name Description Assembly assembly Type baseType Type defaultValue IFluentLog log Returns Type Description Type"
  },
  "api/EyeAuras.Scripting.Scaffolding.CsharpScriptingUtils.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.CsharpScriptingUtils.html",
    "title": "Class CsharpScriptingUtils | EyeAuras Docs",
    "keywords": "Class CsharpScriptingUtils Inheritance object CsharpScriptingUtils Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Scripting.Scaffolding Assembly: EyeAuras.Scripting.dll Syntax public static class CsharpScriptingUtils Methods Name Description LoadAssemblyOrDefault(CompileToAssemblyResult, AssemblyLoadContext, IFluentLog) PrepareAssembly(CompileToAssemblyResult, IFluentLog) ResolveAssemblyType(Assembly, Type, Type, IFluentLog)"
  },
  "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.CompilationLog.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.CompilationLog.html",
    "title": "Property CompilationLog | EyeAuras Docs",
    "keywords": "Property CompilationLog CompilationLog Declaration ReadOnlyObservableCollection<string> CompilationLog { get; } Property Value Type Description ReadOnlyObservableCollection<string>"
  },
  "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.FullScriptCode.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.FullScriptCode.html",
    "title": "Property FullScriptCode | EyeAuras Docs",
    "keywords": "Property FullScriptCode FullScriptCode Declaration string FullScriptCode { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.ScriptContext.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.ScriptContext.html",
    "title": "Property ScriptContext | EyeAuras Docs",
    "keywords": "Property ScriptContext ScriptContext Declaration IScriptContext ScriptContext { get; } Property Value Type Description IScriptContext"
  },
  "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.ScriptName.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.ScriptName.html",
    "title": "Property ScriptName | EyeAuras Docs",
    "keywords": "Property ScriptName ScriptName Declaration string ScriptName { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.ScriptReferences.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.ScriptReferences.html",
    "title": "Property ScriptReferences | EyeAuras Docs",
    "keywords": "Property ScriptReferences ScriptReferences Declaration ReadOnlyObservableCollection<ICsharpScript> ScriptReferences { get; } Property Value Type Description ReadOnlyObservableCollection<ICsharpScript>"
  },
  "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.SourceCode.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.SourceCode.html",
    "title": "Property SourceCode | EyeAuras Docs",
    "keywords": "Property SourceCode SourceCode Declaration string SourceCode { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.State.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.State.html",
    "title": "Property State | EyeAuras Docs",
    "keywords": "Property State State Declaration ScriptState State { get; } Property Value Type Description ScriptState"
  },
  "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ICsharpScript.html",
    "title": "Interface ICsharpScript | EyeAuras Docs",
    "keywords": "Interface ICsharpScript Inherited Members INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Scripting.Scaffolding Assembly: EyeAuras.Scripting.dll Syntax public interface ICsharpScript : INotifyPropertyChanged Properties Name Description CompilationLog FullScriptCode ScriptContext ScriptName ScriptReferences SourceCode State Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptAction.Execute.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptAction.Execute.html",
    "title": "Method Execute | EyeAuras Docs",
    "keywords": "Method Execute Execute() Declaration Task Execute() Returns Type Description Task"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptAction.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptAction.html",
    "title": "Interface IScriptAction | EyeAuras Docs",
    "keywords": "Interface IScriptAction Inherited Members IScriptExecutor.SetArgs(ScriptExecutorArgs) IScriptExecutor.Output IScriptExecutor.IsRunning IScriptExecutor.CancellationToken IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Scripting.Scaffolding Assembly: EyeAuras.Scripting.dll Syntax public interface IScriptAction : IScriptExecutor, IDisposable, INotifyPropertyChanged Methods Name Description Execute() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptContext.Container.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptContext.Container.html",
    "title": "Property Container | EyeAuras Docs",
    "keywords": "Property Container Container Declaration IUnityContainer Container { get; init; } Property Value Type Description IUnityContainer"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptContext.Context.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptContext.Context.html",
    "title": "Property Context | EyeAuras Docs",
    "keywords": "Property Context Context Declaration IEyeContext Context { get; init; } Property Value Type Description IEyeContext"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptContext.EyeSharedServices.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptContext.EyeSharedServices.html",
    "title": "Property EyeSharedServices | EyeAuras Docs",
    "keywords": "Property EyeSharedServices EyeSharedServices Declaration IEyeSharedServices EyeSharedServices { get; init; } Property Value Type Description IEyeSharedServices"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptContext.ScriptCode.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptContext.ScriptCode.html",
    "title": "Property ScriptCode | EyeAuras Docs",
    "keywords": "Property ScriptCode ScriptCode Declaration string ScriptCode { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptContext.UserCode.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptContext.UserCode.html",
    "title": "Property UserCode | EyeAuras Docs",
    "keywords": "Property UserCode UserCode Declaration string UserCode { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptContext.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptContext.html",
    "title": "Interface IScriptContext | EyeAuras Docs",
    "keywords": "Interface IScriptContext Namespace: EyeAuras.Scripting.Scaffolding Assembly: EyeAuras.Scripting.dll Syntax public interface IScriptContext Properties Name Description Container Context EyeSharedServices ScriptCode UserCode Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptExecutor.CancellationToken.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptExecutor.CancellationToken.html",
    "title": "Property CancellationToken | EyeAuras Docs",
    "keywords": "Property CancellationToken CancellationToken Declaration CancellationToken CancellationToken { get; } Property Value Type Description CancellationToken"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptExecutor.IsRunning.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptExecutor.IsRunning.html",
    "title": "Property IsRunning | EyeAuras Docs",
    "keywords": "Property IsRunning IsRunning Declaration bool IsRunning { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptExecutor.Output.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptExecutor.Output.html",
    "title": "Property Output | EyeAuras Docs",
    "keywords": "Property Output Output Declaration CircularSourceList<string> Output { get; } Property Value Type Description CircularSourceList<string>"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptExecutor.SetArgs.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptExecutor.SetArgs.html",
    "title": "Method SetArgs | EyeAuras Docs",
    "keywords": "Method SetArgs SetArgs(ScriptExecutorArgs) Declaration void SetArgs(ScriptExecutorArgs args) Parameters Type Name Description ScriptExecutorArgs args"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptExecutor.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptExecutor.html",
    "title": "Interface IScriptExecutor | EyeAuras Docs",
    "keywords": "Interface IScriptExecutor Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Scripting.Scaffolding Assembly: EyeAuras.Scripting.dll Syntax public interface IScriptExecutor : IDisposable, INotifyPropertyChanged Properties Name Description CancellationToken IsRunning Output Methods Name Description SetArgs(ScriptExecutorArgs) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptFunction-1.Execute.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptFunction-1.Execute.html",
    "title": "Method Execute | EyeAuras Docs",
    "keywords": "Method Execute Execute() Declaration Task<T> Execute() Returns Type Description Task<T>"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptFunction-1.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptFunction-1.html",
    "title": "Interface IScriptFunction<T> | EyeAuras Docs",
    "keywords": "Interface IScriptFunction<T> Inherited Members IScriptExecutor.SetArgs(ScriptExecutorArgs) IScriptExecutor.Output IScriptExecutor.IsRunning IScriptExecutor.CancellationToken IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Scripting.Scaffolding Assembly: EyeAuras.Scripting.dll Syntax public interface IScriptFunction<T> : IScriptExecutor, IDisposable, INotifyPropertyChanged Type Parameters Name Description T Methods Name Description Execute() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptFunction-2.Execute.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptFunction-2.Execute.html",
    "title": "Method Execute | EyeAuras Docs",
    "keywords": "Method Execute Execute(T) Declaration Task<TResult> Execute(T input) Parameters Type Name Description T input Returns Type Description Task<TResult>"
  },
  "api/EyeAuras.Scripting.Scaffolding.IScriptFunction-2.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.IScriptFunction-2.html",
    "title": "Interface IScriptFunction<T, TResult> | EyeAuras Docs",
    "keywords": "Interface IScriptFunction<T, TResult> Inherited Members IScriptExecutor.SetArgs(ScriptExecutorArgs) IScriptExecutor.Output IScriptExecutor.IsRunning IScriptExecutor.CancellationToken IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Scripting.Scaffolding Assembly: EyeAuras.Scripting.dll Syntax public interface IScriptFunction<in T, TResult> : IScriptExecutor, IDisposable, INotifyPropertyChanged Type Parameters Name Description T TResult Methods Name Description Execute(T) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Scaffolding.ReplProjectExtensions.InitializeReferences.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ReplProjectExtensions.InitializeReferences.html",
    "title": "Method InitializeReferences | EyeAuras Docs",
    "keywords": "Method InitializeReferences InitializeReferences(IReplProject, string[], IDefaultReferencesProvider, IFluentLog) Declaration public static IDisposable InitializeReferences(this IReplProject project, string[] basicImports, IDefaultReferencesProvider defaultReferencesProvider, IFluentLog log) Parameters Type Name Description IReplProject project string[] basicImports IDefaultReferencesProvider defaultReferencesProvider IFluentLog log Returns Type Description IDisposable"
  },
  "api/EyeAuras.Scripting.Scaffolding.ReplProjectExtensions.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ReplProjectExtensions.html",
    "title": "Class ReplProjectExtensions | EyeAuras Docs",
    "keywords": "Class ReplProjectExtensions Inheritance object ReplProjectExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Scripting.Scaffolding Assembly: EyeAuras.Scripting.dll Syntax public static class ReplProjectExtensions Methods Name Description InitializeReferences(IReplProject, string[], IDefaultReferencesProvider, IFluentLog)"
  },
  "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.-Clone--.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public ScriptExecutorArgs <Clone>$() Returns Type Description ScriptExecutorArgs"
  },
  "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.-ctor.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.-ctor.html",
    "title": "Constructor ScriptExecutorArgs | EyeAuras Docs",
    "keywords": "Constructor ScriptExecutorArgs ScriptExecutorArgs(IUnityContainer, IEyeSharedServices, IEyeContext) Declaration public ScriptExecutorArgs(IUnityContainer Container, IEyeSharedServices Services, IEyeContext Context) Parameters Type Name Description IUnityContainer Container IEyeSharedServices Services IEyeContext Context"
  },
  "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.Container.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.Container.html",
    "title": "Property Container | EyeAuras Docs",
    "keywords": "Property Container Container Declaration public IUnityContainer Container { get; init; } Property Value Type Description IUnityContainer"
  },
  "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.Context.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.Context.html",
    "title": "Property Context | EyeAuras Docs",
    "keywords": "Property Context Context Declaration public IEyeContext Context { get; init; } Property Value Type Description IEyeContext"
  },
  "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.Deconstruct.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.Deconstruct.html",
    "title": "Method Deconstruct | EyeAuras Docs",
    "keywords": "Method Deconstruct Deconstruct(out IUnityContainer, out IEyeSharedServices, out IEyeContext) Declaration public void Deconstruct(out IUnityContainer Container, out IEyeSharedServices Services, out IEyeContext Context) Parameters Type Name Description IUnityContainer Container IEyeSharedServices Services IEyeContext Context"
  },
  "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.Equals.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(ScriptExecutorArgs?) Declaration public bool Equals(ScriptExecutorArgs? other) Parameters Type Name Description ScriptExecutorArgs other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.GetHashCode.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.Services.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.Services.html",
    "title": "Property Services | EyeAuras Docs",
    "keywords": "Property Services Services Declaration public IEyeSharedServices Services { get; init; } Property Value Type Description IEyeSharedServices"
  },
  "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.ToString.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.html",
    "title": "Class ScriptExecutorArgs | EyeAuras Docs",
    "keywords": "Class ScriptExecutorArgs Inheritance object ScriptExecutorArgs Implements IEquatable<ScriptExecutorArgs> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Scripting.Scaffolding Assembly: EyeAuras.Scripting.dll Syntax public sealed record ScriptExecutorArgs : IEquatable<ScriptExecutorArgs> Constructors Name Description ScriptExecutorArgs(IUnityContainer, IEyeSharedServices, IEyeContext) Properties Name Description Container Context Services Methods Name Description Deconstruct(out IUnityContainer, out IEyeSharedServices, out IEyeContext) Equals(ScriptExecutorArgs?) Equals(object?) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(ScriptExecutorArgs?, ScriptExecutorArgs?) operator !=(ScriptExecutorArgs?, ScriptExecutorArgs?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.op_Equality.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ScriptExecutorArgs?, ScriptExecutorArgs?) Declaration public static bool operator ==(ScriptExecutorArgs? left, ScriptExecutorArgs? right) Parameters Type Name Description ScriptExecutorArgs left ScriptExecutorArgs right Returns Type Description bool"
  },
  "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.op_Inequality.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ScriptExecutorArgs.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ScriptExecutorArgs?, ScriptExecutorArgs?) Declaration public static bool operator !=(ScriptExecutorArgs? left, ScriptExecutorArgs? right) Parameters Type Name Description ScriptExecutorArgs left ScriptExecutorArgs right Returns Type Description bool"
  },
  "api/EyeAuras.Scripting.Scaffolding.ScriptState.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.ScriptState.html",
    "title": "Enum ScriptState | EyeAuras Docs",
    "keywords": "Enum ScriptState Namespace: EyeAuras.Scripting.Scaffolding Assembly: EyeAuras.Scripting.dll Syntax public enum ScriptState Fields Name Description Compiling NotReady ReadyToRun Running Extension Methods ObjectExtensions.AddTo<ScriptState, TCollection>(ScriptState, ISourceList<TCollection>) ObjectExtensions.AddTo<ScriptState, TCollection>(ScriptState, ICollection<TCollection>) ObjectExtensions.CloneJson<ScriptState>(ScriptState) ObjectExtensions.CopyPropertiesTo<ScriptState, TTarget>(ScriptState, TTarget) ObjectExtensions.DumpToTextRaw<ScriptState>(ScriptState) ObjectExtensions.DumpToText<ScriptState>(ScriptState) ObjectExtensions.Dump<ScriptState>(ScriptState) ObjectExtensions.GetPropertyAccessor<ScriptState, TValue>(ScriptState, Expression<Func<ScriptState, TValue>>) ObjectExtensions.InsertTo<ScriptState, TCollection>(ScriptState, IList<TCollection>, int) ObjectExtensions.ToJson<ScriptState>(ScriptState) ObjectExtensions.ToStringSafe<ScriptState>(ScriptState) ObjectExtensions.TransferPropertiesTo<ScriptState, TTarget>(ScriptState, TTarget, params string[]) XDocumentExtensions.AddTo<ScriptState>(ScriptState, XContainer)"
  },
  "api/EyeAuras.Scripting.Scaffolding.html": {
    "href": "api/EyeAuras.Scripting.Scaffolding.html",
    "title": "Namespace EyeAuras.Scripting.Scaffolding | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Scripting.Scaffolding Classes CsharpScriptingUtils ReplProjectExtensions ScriptExecutorArgs Interfaces ICsharpScript IScriptAction IScriptContext IScriptExecutor IScriptFunction<T> IScriptFunction<T, TResult> Enums ScriptState"
  },
  "api/EyeAuras.Scripting.Services.ClassNameRewriter.-ctor.html": {
    "href": "api/EyeAuras.Scripting.Services.ClassNameRewriter.-ctor.html",
    "title": "Constructor ClassNameRewriter | EyeAuras Docs",
    "keywords": "Constructor ClassNameRewriter ClassNameRewriter(IDictionary<string, string>) Declaration public ClassNameRewriter(IDictionary<string, string> renameMap) Parameters Type Name Description IDictionary<string, string> renameMap ClassNameRewriter(SyntaxNode, string) Declaration public ClassNameRewriter(SyntaxNode root, string newClassName) Parameters Type Name Description SyntaxNode root string newClassName"
  },
  "api/EyeAuras.Scripting.Services.ClassNameRewriter.VisitClassDeclaration.html": {
    "href": "api/EyeAuras.Scripting.Services.ClassNameRewriter.VisitClassDeclaration.html",
    "title": "Method VisitClassDeclaration | EyeAuras Docs",
    "keywords": "Method VisitClassDeclaration VisitClassDeclaration(ClassDeclarationSyntax) Declaration public override SyntaxNode VisitClassDeclaration(ClassDeclarationSyntax node) Parameters Type Name Description ClassDeclarationSyntax node Returns Type Description SyntaxNode"
  },
  "api/EyeAuras.Scripting.Services.ClassNameRewriter.VisitConstructorDeclaration.html": {
    "href": "api/EyeAuras.Scripting.Services.ClassNameRewriter.VisitConstructorDeclaration.html",
    "title": "Method VisitConstructorDeclaration | EyeAuras Docs",
    "keywords": "Method VisitConstructorDeclaration VisitConstructorDeclaration(ConstructorDeclarationSyntax) Declaration public override SyntaxNode VisitConstructorDeclaration(ConstructorDeclarationSyntax node) Parameters Type Name Description ConstructorDeclarationSyntax node Returns Type Description SyntaxNode"
  },
  "api/EyeAuras.Scripting.Services.ClassNameRewriter.VisitGenericName.html": {
    "href": "api/EyeAuras.Scripting.Services.ClassNameRewriter.VisitGenericName.html",
    "title": "Method VisitGenericName | EyeAuras Docs",
    "keywords": "Method VisitGenericName VisitGenericName(GenericNameSyntax) Declaration public override SyntaxNode VisitGenericName(GenericNameSyntax node) Parameters Type Name Description GenericNameSyntax node Returns Type Description SyntaxNode"
  },
  "api/EyeAuras.Scripting.Services.ClassNameRewriter.VisitIdentifierName.html": {
    "href": "api/EyeAuras.Scripting.Services.ClassNameRewriter.VisitIdentifierName.html",
    "title": "Method VisitIdentifierName | EyeAuras Docs",
    "keywords": "Method VisitIdentifierName VisitIdentifierName(IdentifierNameSyntax) Declaration public override SyntaxNode VisitIdentifierName(IdentifierNameSyntax node) Parameters Type Name Description IdentifierNameSyntax node Returns Type Description SyntaxNode"
  },
  "api/EyeAuras.Scripting.Services.ClassNameRewriter.html": {
    "href": "api/EyeAuras.Scripting.Services.ClassNameRewriter.html",
    "title": "Class ClassNameRewriter | EyeAuras Docs",
    "keywords": "Class ClassNameRewriter Inheritance object ClassNameRewriter Namespace: EyeAuras.Scripting.Services Assembly: EyeAuras.Scripting.dll Syntax public sealed class ClassNameRewriter : CSharpSyntaxRewriter Constructors Name Description ClassNameRewriter(SyntaxNode, string) ClassNameRewriter(IDictionary<string, string>) Methods Name Description VisitClassDeclaration(ClassDeclarationSyntax) VisitConstructorDeclaration(ConstructorDeclarationSyntax) VisitGenericName(GenericNameSyntax) VisitIdentifierName(IdentifierNameSyntax) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Services.ContinuousCompilerExtensions.Listen.html": {
    "href": "api/EyeAuras.Scripting.Services.ContinuousCompilerExtensions.Listen.html",
    "title": "Method Listen | EyeAuras Docs",
    "keywords": "Method Listen Listen(IContinuousCompiler) Declaration public static IObservable<(CompileToAssemblyResult compileToAssemblyResult, Assembly assembly)> Listen(this IContinuousCompiler compiler) Parameters Type Name Description IContinuousCompiler compiler Returns Type Description IObservable<(CompileToAssemblyResult compileToAssemblyResult, Assembly assembly)>"
  },
  "api/EyeAuras.Scripting.Services.ContinuousCompilerExtensions.html": {
    "href": "api/EyeAuras.Scripting.Services.ContinuousCompilerExtensions.html",
    "title": "Class ContinuousCompilerExtensions | EyeAuras Docs",
    "keywords": "Class ContinuousCompilerExtensions Inheritance object ContinuousCompilerExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Scripting.Services Assembly: EyeAuras.Scripting.dll Syntax public static class ContinuousCompilerExtensions Methods Name Description Listen(IContinuousCompiler)"
  },
  "api/EyeAuras.Scripting.Services.IContinuousCompiler.CompilationResult.html": {
    "href": "api/EyeAuras.Scripting.Services.IContinuousCompiler.CompilationResult.html",
    "title": "Property CompilationResult | EyeAuras Docs",
    "keywords": "Property CompilationResult CompilationResult Declaration CompileToAssemblyResult CompilationResult { get; } Property Value Type Description CompileToAssemblyResult"
  },
  "api/EyeAuras.Scripting.Services.IContinuousCompiler.Diagnostics.html": {
    "href": "api/EyeAuras.Scripting.Services.IContinuousCompiler.Diagnostics.html",
    "title": "Property Diagnostics | EyeAuras Docs",
    "keywords": "Property Diagnostics Diagnostics Declaration IObservableList<CompilationDiagnostic> Diagnostics { get; } Property Value Type Description IObservableList<CompilationDiagnostic>"
  },
  "api/EyeAuras.Scripting.Services.IContinuousCompiler.IsBusy.html": {
    "href": "api/EyeAuras.Scripting.Services.IContinuousCompiler.IsBusy.html",
    "title": "Property IsBusy | EyeAuras Docs",
    "keywords": "Property IsBusy IsBusy Declaration bool IsBusy { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Scripting.Services.IContinuousCompiler.LiveCompilationIsEnabled.html": {
    "href": "api/EyeAuras.Scripting.Services.IContinuousCompiler.LiveCompilationIsEnabled.html",
    "title": "Property LiveCompilationIsEnabled | EyeAuras Docs",
    "keywords": "Property LiveCompilationIsEnabled LiveCompilationIsEnabled Declaration bool LiveCompilationIsEnabled { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Scripting.Services.IContinuousCompiler.Project.html": {
    "href": "api/EyeAuras.Scripting.Services.IContinuousCompiler.Project.html",
    "title": "Property Project | EyeAuras Docs",
    "keywords": "Property Project Project Declaration IReplProject Project { get; } Property Value Type Description IReplProject"
  },
  "api/EyeAuras.Scripting.Services.IContinuousCompiler.Recompile.html": {
    "href": "api/EyeAuras.Scripting.Services.IContinuousCompiler.Recompile.html",
    "title": "Method Recompile | EyeAuras Docs",
    "keywords": "Method Recompile Recompile() Declaration Task Recompile() Returns Type Description Task"
  },
  "api/EyeAuras.Scripting.Services.IContinuousCompiler.State.html": {
    "href": "api/EyeAuras.Scripting.Services.IContinuousCompiler.State.html",
    "title": "Property State | EyeAuras Docs",
    "keywords": "Property State State Declaration ScriptState State { get; } Property Value Type Description ScriptState"
  },
  "api/EyeAuras.Scripting.Services.IContinuousCompiler.html": {
    "href": "api/EyeAuras.Scripting.Services.IContinuousCompiler.html",
    "title": "Interface IContinuousCompiler | EyeAuras Docs",
    "keywords": "Interface IContinuousCompiler Inherited Members IPauseController.Pause() IPauseController.IsPaused INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Scripting.Services Assembly: EyeAuras.Scripting.dll Syntax public interface IContinuousCompiler : IPauseController, INotifyPropertyChanged Properties Name Description CompilationResult Diagnostics IsBusy LiveCompilationIsEnabled Project State Methods Name Description Recompile() Extension Methods ContinuousCompilerExtensions.Listen(IContinuousCompiler) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Services.IDefaultReferencesProvider.AddReference.html": {
    "href": "api/EyeAuras.Scripting.Services.IDefaultReferencesProvider.AddReference.html",
    "title": "Method AddReference | EyeAuras Docs",
    "keywords": "Method AddReference AddReference(params Type[]) Declaration void AddReference(params Type[] types) Parameters Type Name Description Type[] types"
  },
  "api/EyeAuras.Scripting.Services.IDefaultReferencesProvider.References.html": {
    "href": "api/EyeAuras.Scripting.Services.IDefaultReferencesProvider.References.html",
    "title": "Property References | EyeAuras Docs",
    "keywords": "Property References References Declaration IObservableList<ReferenceDescriptor> References { get; } Property Value Type Description IObservableList<ReferenceDescriptor>"
  },
  "api/EyeAuras.Scripting.Services.IDefaultReferencesProvider.ScriptingApiTypes.html": {
    "href": "api/EyeAuras.Scripting.Services.IDefaultReferencesProvider.ScriptingApiTypes.html",
    "title": "Property ScriptingApiTypes | EyeAuras Docs",
    "keywords": "Property ScriptingApiTypes ScriptingApiTypes Declaration IObservableList<Type> ScriptingApiTypes { get; } Property Value Type Description IObservableList<Type>"
  },
  "api/EyeAuras.Scripting.Services.IDefaultReferencesProvider.html": {
    "href": "api/EyeAuras.Scripting.Services.IDefaultReferencesProvider.html",
    "title": "Interface IDefaultReferencesProvider | EyeAuras Docs",
    "keywords": "Interface IDefaultReferencesProvider Namespace: EyeAuras.Scripting.Services Assembly: EyeAuras.Scripting.dll Syntax public interface IDefaultReferencesProvider Properties Name Description References ScriptingApiTypes Methods Name Description AddReference(params Type[]) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Services.IEditorCompositionContext.GetExport.html": {
    "href": "api/EyeAuras.Scripting.Services.IEditorCompositionContext.GetExport.html",
    "title": "Method GetExport | EyeAuras Docs",
    "keywords": "Method GetExport GetExport<TExport>() Retrieve the single TExport instance from the Declaration TExport GetExport<TExport>() Returns Type Description TExport An instance of the export. Type Parameters Name Description TExport The type of the export to retrieve."
  },
  "api/EyeAuras.Scripting.Services.IEditorCompositionContext.html": {
    "href": "api/EyeAuras.Scripting.Services.IEditorCompositionContext.html",
    "title": "Interface IEditorCompositionContext | EyeAuras Docs",
    "keywords": "Interface IEditorCompositionContext Namespace: EyeAuras.Scripting.Services Assembly: EyeAuras.Scripting.dll Syntax public interface IEditorCompositionContext Methods Name Description GetExport<TExport>() Retrieve the single TExport instance from the Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Services.ILegacyScriptReferencesResolver.WellKnownNamespaces.html": {
    "href": "api/EyeAuras.Scripting.Services.ILegacyScriptReferencesResolver.WellKnownNamespaces.html",
    "title": "Property WellKnownNamespaces | EyeAuras Docs",
    "keywords": "Property WellKnownNamespaces WellKnownNamespaces Declaration IReadOnlyObservableCollection<string> WellKnownNamespaces { get; } Property Value Type Description IReadOnlyObservableCollection<string>"
  },
  "api/EyeAuras.Scripting.Services.ILegacyScriptReferencesResolver.WellKnownTypes.html": {
    "href": "api/EyeAuras.Scripting.Services.ILegacyScriptReferencesResolver.WellKnownTypes.html",
    "title": "Property WellKnownTypes | EyeAuras Docs",
    "keywords": "Property WellKnownTypes WellKnownTypes Declaration IReadOnlyObservableCollection<Type> WellKnownTypes { get; } Property Value Type Description IReadOnlyObservableCollection<Type>"
  },
  "api/EyeAuras.Scripting.Services.ILegacyScriptReferencesResolver.html": {
    "href": "api/EyeAuras.Scripting.Services.ILegacyScriptReferencesResolver.html",
    "title": "Interface ILegacyScriptReferencesResolver | EyeAuras Docs",
    "keywords": "Interface ILegacyScriptReferencesResolver Inherited Members ICsharpReferencesResolver.GetNamespaces(Assembly) ICsharpReferencesResolver.ResolveNamespacesFromCode(string) ICsharpReferencesResolver.ResolveMetadataByNamespace(IEnumerable<string>) ICsharpReferencesResolver.ResolveAssembliesByNamespace(string) ICsharpReferencesResolver.ResolveAssembliesFromCode(string) ICsharpReferencesResolver.FindLoadedAssemblyByNamespace(string) ICsharpReferencesResolver.Instance Namespace: EyeAuras.Scripting.Services Assembly: EyeAuras.Scripting.dll Syntax public interface ILegacyScriptReferencesResolver : ICsharpReferencesResolver Properties Name Description WellKnownNamespaces WellKnownTypes Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Services.IScriptCompilationService.CreateAction.html": {
    "href": "api/EyeAuras.Scripting.Services.IScriptCompilationService.CreateAction.html",
    "title": "Method CreateAction | EyeAuras Docs",
    "keywords": "Method CreateAction CreateAction(IScriptContext, IFluentLog) Declaration Task<IScriptAction> CreateAction(IScriptContext scriptCode, IFluentLog log) Parameters Type Name Description IScriptContext scriptCode IFluentLog log Returns Type Description Task<IScriptAction>"
  },
  "api/EyeAuras.Scripting.Services.IScriptCompilationService.CreateFunction.html": {
    "href": "api/EyeAuras.Scripting.Services.IScriptCompilationService.CreateFunction.html",
    "title": "Method CreateFunction | EyeAuras Docs",
    "keywords": "Method CreateFunction CreateFunction<T>(IScriptContext, IFluentLog) Declaration Task<IScriptFunction<T>> CreateFunction<T>(IScriptContext scriptCode, IFluentLog log) Parameters Type Name Description IScriptContext scriptCode IFluentLog log Returns Type Description Task<IScriptFunction<T>> Type Parameters Name Description T CreateFunction<T, TResult>(IScriptContext, IFluentLog) Declaration Task<IScriptFunction<T, TResult>> CreateFunction<T, TResult>(IScriptContext scriptCode, IFluentLog log) Parameters Type Name Description IScriptContext scriptCode IFluentLog log Returns Type Description Task<IScriptFunction<T, TResult>> Type Parameters Name Description T TResult"
  },
  "api/EyeAuras.Scripting.Services.IScriptCompilationService.PrepareActionScript.html": {
    "href": "api/EyeAuras.Scripting.Services.IScriptCompilationService.PrepareActionScript.html",
    "title": "Method PrepareActionScript | EyeAuras Docs",
    "keywords": "Method PrepareActionScript PrepareActionScript(string, IEyeContext, IFluentLog) Declaration Task<IScriptContext> PrepareActionScript(string userCode, IEyeContext context, IFluentLog log) Parameters Type Name Description string userCode IEyeContext context IFluentLog log Returns Type Description Task<IScriptContext>"
  },
  "api/EyeAuras.Scripting.Services.IScriptCompilationService.PrepareFunctionScript.html": {
    "href": "api/EyeAuras.Scripting.Services.IScriptCompilationService.PrepareFunctionScript.html",
    "title": "Method PrepareFunctionScript | EyeAuras Docs",
    "keywords": "Method PrepareFunctionScript PrepareFunctionScript<TResult>(string, IEyeContext, IFluentLog) Declaration Task<IScriptContext> PrepareFunctionScript<TResult>(string userCode, IEyeContext context, IFluentLog log) Parameters Type Name Description string userCode IEyeContext context IFluentLog log Returns Type Description Task<IScriptContext> Type Parameters Name Description TResult PrepareFunctionScript<T, TResult>(string, IEyeContext, IFluentLog) Declaration Task<IScriptContext> PrepareFunctionScript<T, TResult>(string userCode, IEyeContext context, IFluentLog log) Parameters Type Name Description string userCode IEyeContext context IFluentLog log Returns Type Description Task<IScriptContext> Type Parameters Name Description T TResult"
  },
  "api/EyeAuras.Scripting.Services.IScriptCompilationService.html": {
    "href": "api/EyeAuras.Scripting.Services.IScriptCompilationService.html",
    "title": "Interface IScriptCompilationService | EyeAuras Docs",
    "keywords": "Interface IScriptCompilationService Namespace: EyeAuras.Scripting.Services Assembly: EyeAuras.Scripting.dll Syntax public interface IScriptCompilationService Methods Name Description CreateAction(IScriptContext, IFluentLog) CreateFunction<T>(IScriptContext, IFluentLog) CreateFunction<T, TResult>(IScriptContext, IFluentLog) PrepareActionScript(string, IEyeContext, IFluentLog) PrepareFunctionScript<TResult>(string, IEyeContext, IFluentLog) PrepareFunctionScript<T, TResult>(string, IEyeContext, IFluentLog) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Services.IScriptGenerationService.GenerateSourceCode.html": {
    "href": "api/EyeAuras.Scripting.Services.IScriptGenerationService.GenerateSourceCode.html",
    "title": "Method GenerateSourceCode | EyeAuras Docs",
    "keywords": "Method GenerateSourceCode GenerateSourceCode(ICsharpScript) Declaration string GenerateSourceCode(ICsharpScript script) Parameters Type Name Description ICsharpScript script Returns Type Description string"
  },
  "api/EyeAuras.Scripting.Services.IScriptGenerationService.html": {
    "href": "api/EyeAuras.Scripting.Services.IScriptGenerationService.html",
    "title": "Interface IScriptGenerationService | EyeAuras Docs",
    "keywords": "Interface IScriptGenerationService Namespace: EyeAuras.Scripting.Services Assembly: EyeAuras.Scripting.dll Syntax public interface IScriptGenerationService Methods Name Description GenerateSourceCode(ICsharpScript) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Services.MemoryAssemblyLoadContext.-ctor.html": {
    "href": "api/EyeAuras.Scripting.Services.MemoryAssemblyLoadContext.-ctor.html",
    "title": "Constructor MemoryAssemblyLoadContext | EyeAuras Docs",
    "keywords": "Constructor MemoryAssemblyLoadContext MemoryAssemblyLoadContext(string) Declaration public MemoryAssemblyLoadContext(string contextName) Parameters Type Name Description string contextName"
  },
  "api/EyeAuras.Scripting.Services.MemoryAssemblyLoadContext.Anchors.html": {
    "href": "api/EyeAuras.Scripting.Services.MemoryAssemblyLoadContext.Anchors.html",
    "title": "Property Anchors | EyeAuras Docs",
    "keywords": "Property Anchors Anchors Declaration public CompositeDisposable Anchors { get; } Property Value Type Description CompositeDisposable"
  },
  "api/EyeAuras.Scripting.Services.MemoryAssemblyLoadContext.Dispose.html": {
    "href": "api/EyeAuras.Scripting.Services.MemoryAssemblyLoadContext.Dispose.html",
    "title": "Method Dispose | EyeAuras Docs",
    "keywords": "Method Dispose Dispose() Declaration public void Dispose() Implements IDisposable.Dispose()"
  },
  "api/EyeAuras.Scripting.Services.MemoryAssemblyLoadContext.ToString.html": {
    "href": "api/EyeAuras.Scripting.Services.MemoryAssemblyLoadContext.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AssemblyLoadContext.ToString()"
  },
  "api/EyeAuras.Scripting.Services.MemoryAssemblyLoadContext.html": {
    "href": "api/EyeAuras.Scripting.Services.MemoryAssemblyLoadContext.html",
    "title": "Class MemoryAssemblyLoadContext | EyeAuras Docs",
    "keywords": "Class MemoryAssemblyLoadContext Inheritance object AssemblyLoadContext MemoryAssemblyLoadContext Implements IDisposable Inherited Members AssemblyLoadContext.GetLoadContext(Assembly) AssemblyLoadContext.SetProfileOptimizationRoot(string) AssemblyLoadContext.StartProfileOptimization(string) AssemblyLoadContext.GetAssemblyName(string) AssemblyLoadContext.LoadFromAssemblyName(AssemblyName) AssemblyLoadContext.LoadFromAssemblyPath(string) AssemblyLoadContext.LoadFromNativeImagePath(string, string) AssemblyLoadContext.LoadFromStream(Stream) AssemblyLoadContext.LoadFromStream(Stream, Stream) AssemblyLoadContext.Unload() AssemblyLoadContext.EnterContextualReflection() AssemblyLoadContext.EnterContextualReflection(Assembly) AssemblyLoadContext.Assemblies AssemblyLoadContext.Default AssemblyLoadContext.IsCollectible AssemblyLoadContext.Name AssemblyLoadContext.All AssemblyLoadContext.CurrentContextualReflectionContext AssemblyLoadContext.ResolvingUnmanagedDll AssemblyLoadContext.Resolving AssemblyLoadContext.Unloading object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Scripting.Services Assembly: EyeAuras.Scripting.dll Syntax public sealed class MemoryAssemblyLoadContext : AssemblyLoadContext, IDisposable Constructors Name Description MemoryAssemblyLoadContext(string) Properties Name Description Anchors Methods Name Description Dispose() ToString() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.Services.html": {
    "href": "api/EyeAuras.Scripting.Services.html",
    "title": "Namespace EyeAuras.Scripting.Services | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Scripting.Services Classes ClassNameRewriter ContinuousCompilerExtensions MemoryAssemblyLoadContext Interfaces IContinuousCompiler IDefaultReferencesProvider IEditorCompositionContext ILegacyScriptReferencesResolver IScriptCompilationService IScriptGenerationService"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptActionBase.-ctor.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptActionBase.-ctor.html",
    "title": "Constructor ScriptActionBase | EyeAuras Docs",
    "keywords": "Constructor ScriptActionBase ScriptActionBase() Declaration public ScriptActionBase()"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptActionBase.Execute.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptActionBase.Execute.html",
    "title": "Method Execute | EyeAuras Docs",
    "keywords": "Method Execute Execute() Declaration public Task Execute() Returns Type Description Task Implements IScriptAction.Execute()"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptActionBase.ExecuteInternal.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptActionBase.ExecuteInternal.html",
    "title": "Method ExecuteInternal | EyeAuras Docs",
    "keywords": "Method ExecuteInternal ExecuteInternal(CancellationToken) Declaration protected virtual Task ExecuteInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptActionBase.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptActionBase.html",
    "title": "Class ScriptActionBase | EyeAuras Docs",
    "keywords": "Class ScriptActionBase Inheritance object DisposableReactiveObject ScriptExecutorBase ScriptActionBase Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IEnumerable IScriptAction IScriptExecutor IDisposable INotifyPropertyChanged Inherited Members ScriptExecutorBase.SetArgs(ScriptExecutorArgs) ScriptExecutorBase.GetEnumerator() ScriptExecutorBase.Add(KeyValuePair<string, object>) ScriptExecutorBase.Clear() ScriptExecutorBase.Contains(KeyValuePair<string, object>) ScriptExecutorBase.CopyTo(KeyValuePair<string, object>[], int) ScriptExecutorBase.Remove(KeyValuePair<string, object>) ScriptExecutorBase.Add(string, object) ScriptExecutorBase.ContainsKey(string) ScriptExecutorBase.Remove(string) ScriptExecutorBase.TryGetValue(string, out object) ScriptExecutorBase.TryGetValue<T>(string, out T) ScriptExecutorBase.AddOrUpdate<T>(string, T) ScriptExecutorBase.FindAuraById(string) ScriptExecutorBase.FindAuraByPath(string) ScriptExecutorBase.FindFolderByPath(string) ScriptExecutorBase.FindTriggerById(string) ScriptExecutorBase.FindActionById(string) ScriptExecutorBase.FindOverlayById(string) ScriptExecutorBase.GetTriggerById(string) ScriptExecutorBase.GetActionById(string) ScriptExecutorBase.GetOverlayById(string) ScriptExecutorBase.FindModelById<TAuraModel>(string) ScriptExecutorBase.GetModelById<TAuraModel>(string) ScriptExecutorBase.GetAuraById(string) ScriptExecutorBase.GetAuraByPath(string) ScriptExecutorBase.CreateAction(IAuraProperties) ScriptExecutorBase.CreateTrigger(IAuraProperties) ScriptExecutorBase.CreateAction(string) ScriptExecutorBase.CreateTrigger(string) ScriptExecutorBase.ClearLog() ScriptExecutorBase.Sleep(TimeSpan) ScriptExecutorBase.Sleep(int) ScriptExecutorBase.WriteToLog(object) ScriptExecutorBase.WriteToLog(string) ScriptExecutorBase.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) ScriptExecutorBase.GetTriggersByType(IAuraContext, string) ScriptExecutorBase.GetTriggersByType(string) ScriptExecutorBase.GetTriggersByName(IAuraContext, string) ScriptExecutorBase.GetOverlayByName(IAuraContext, string) ScriptExecutorBase.GetOnEnterActionsByName(IAuraContext, string) ScriptExecutorBase.GetOnExitActionsByName(IAuraContext, string) ScriptExecutorBase.GetWhileActiveActionsByName(IAuraContext, string) ScriptExecutorBase.GetTriggersByName(string) ScriptExecutorBase.GetTriggerByType(string) ScriptExecutorBase.GetPropertyValue<T>(object, string) ScriptExecutorBase.SetPropertyValue<T>(object, string, T) ScriptExecutorBase.GetOrDefault<T>(string, out T, T) ScriptExecutorBase.GetOrDefault<T>(string, out T) ScriptExecutorBase.GetOrDefault<T>(string, T) ScriptExecutorBase.GetVariable<T>(string) ScriptExecutorBase.GetVariable<T>(string, string) ScriptExecutorBase.GetVariable<T>(IAura, string) ScriptExecutorBase.EyeSharedServices ScriptExecutorBase.Services ScriptExecutorBase.AuraContext ScriptExecutorBase.Aura ScriptExecutorBase.Context ScriptExecutorBase.FolderContext ScriptExecutorBase.Container ScriptExecutorBase.Output ScriptExecutorBase.IsRunning ScriptExecutorBase.CancellationToken ScriptExecutorBase.Log ScriptExecutorBase.Count ScriptExecutorBase.IsReadOnly ScriptExecutorBase.this[string] ScriptExecutorBase.Keys ScriptExecutorBase.Values object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Scripting.UserSpace Assembly: EyeAuras.Scripting.dll Syntax public class ScriptActionBase : ScriptExecutorBase, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable, IScriptAction, IScriptExecutor, IDisposable, INotifyPropertyChanged Constructors Name Description ScriptActionBase() Methods Name Description Execute() ExecuteInternal(CancellationToken) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.-ctor.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.-ctor.html",
    "title": "Constructor ScriptExecutorBase | EyeAuras Docs",
    "keywords": "Constructor ScriptExecutorBase ScriptExecutorBase() Declaration protected ScriptExecutorBase()"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Add.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Add.html",
    "title": "Method Add | EyeAuras Docs",
    "keywords": "Method Add Add(KeyValuePair<string, object>) Declaration public void Add(KeyValuePair<string, object> item) Parameters Type Name Description KeyValuePair<string, object> item Implements ICollection<T>.Add(T) Add(string, object) Declaration public void Add(string key, object value) Parameters Type Name Description string key object value Implements IDictionary<TKey, TValue>.Add(TKey, TValue)"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.AddOrUpdate.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.AddOrUpdate.html",
    "title": "Method AddOrUpdate | EyeAuras Docs",
    "keywords": "Method AddOrUpdate AddOrUpdate<T>(string, T) Declaration public void AddOrUpdate<T>(string key, T value) Parameters Type Name Description string key T value Type Parameters Name Description T"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Aura.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Aura.html",
    "title": "Property Aura | EyeAuras Docs",
    "keywords": "Property Aura Aura Declaration public IEyeAuraModel Aura { get; } Property Value Type Description IEyeAuraModel"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.AuraContext.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.AuraContext.html",
    "title": "Property AuraContext | EyeAuras Docs",
    "keywords": "Property AuraContext AuraContext Declaration public IAuraContext AuraContext { get; } Property Value Type Description IAuraContext"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.CancellationToken.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.CancellationToken.html",
    "title": "Property CancellationToken | EyeAuras Docs",
    "keywords": "Property CancellationToken CancellationToken Declaration public CancellationToken CancellationToken { get; } Property Value Type Description CancellationToken Implements IScriptExecutor.CancellationToken"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Clear.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Clear.html",
    "title": "Method Clear | EyeAuras Docs",
    "keywords": "Method Clear Clear() Declaration public void Clear() Implements ICollection<T>.Clear()"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.ClearLog.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.ClearLog.html",
    "title": "Method ClearLog | EyeAuras Docs",
    "keywords": "Method ClearLog ClearLog() Declaration public void ClearLog()"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Container.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Container.html",
    "title": "Property Container | EyeAuras Docs",
    "keywords": "Property Container Container Declaration public IUnityContainer Container { get; } Property Value Type Description IUnityContainer"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Contains.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Contains.html",
    "title": "Method Contains | EyeAuras Docs",
    "keywords": "Method Contains Contains(KeyValuePair<string, object>) Declaration public bool Contains(KeyValuePair<string, object> item) Parameters Type Name Description KeyValuePair<string, object> item Returns Type Description bool Implements ICollection<T>.Contains(T)"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.ContainsKey.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.ContainsKey.html",
    "title": "Method ContainsKey | EyeAuras Docs",
    "keywords": "Method ContainsKey ContainsKey(string) Declaration public bool ContainsKey(string key) Parameters Type Name Description string key Returns Type Description bool Implements IDictionary<TKey, TValue>.ContainsKey(TKey)"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Context.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Context.html",
    "title": "Property Context | EyeAuras Docs",
    "keywords": "Property Context Context Declaration public IEyeContext Context { get; set; } Property Value Type Description IEyeContext"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.CopyTo.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.CopyTo.html",
    "title": "Method CopyTo | EyeAuras Docs",
    "keywords": "Method CopyTo CopyTo(KeyValuePair<string, object>[], int) Declaration public void CopyTo(KeyValuePair<string, object>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair<string, object>[] array int arrayIndex Implements ICollection<T>.CopyTo(T[], int)"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Count.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public int Count { get; } Property Value Type Description int Implements ICollection<T>.Count"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.CreateAction.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.CreateAction.html",
    "title": "Method CreateAction | EyeAuras Docs",
    "keywords": "Method CreateAction CreateAction(IAuraProperties) Declaration public IAuraAction CreateAction(IAuraProperties auraProperties) Parameters Type Name Description IAuraProperties auraProperties Returns Type Description IAuraAction CreateAction(string) Declaration public IAuraAction CreateAction(string auraPropertiesSerialized) Parameters Type Name Description string auraPropertiesSerialized Returns Type Description IAuraAction"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.CreateTrigger.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.CreateTrigger.html",
    "title": "Method CreateTrigger | EyeAuras Docs",
    "keywords": "Method CreateTrigger CreateTrigger(IAuraProperties) Declaration public IAuraTrigger CreateTrigger(IAuraProperties auraProperties) Parameters Type Name Description IAuraProperties auraProperties Returns Type Description IAuraTrigger CreateTrigger(string) Declaration public IAuraTrigger CreateTrigger(string auraPropertiesSerialized) Parameters Type Name Description string auraPropertiesSerialized Returns Type Description IAuraTrigger"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.EyeSharedServices.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.EyeSharedServices.html",
    "title": "Property EyeSharedServices | EyeAuras Docs",
    "keywords": "Property EyeSharedServices EyeSharedServices Declaration [Obsolete(\"Use Services instead\")] public IEyeSharedServices EyeSharedServices { get; } Property Value Type Description IEyeSharedServices"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FindActionById.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FindActionById.html",
    "title": "Method FindActionById | EyeAuras Docs",
    "keywords": "Method FindActionById FindActionById(string) Declaration public IAuraAction FindActionById(string modelId) Parameters Type Name Description string modelId Returns Type Description IAuraAction"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FindAuraById.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FindAuraById.html",
    "title": "Method FindAuraById | EyeAuras Docs",
    "keywords": "Method FindAuraById FindAuraById(string) Declaration public IAura FindAuraById(string auraId) Parameters Type Name Description string auraId Returns Type Description IAura"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FindAuraByPath.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FindAuraByPath.html",
    "title": "Method FindAuraByPath | EyeAuras Docs",
    "keywords": "Method FindAuraByPath FindAuraByPath(string) Declaration public IAura FindAuraByPath(string auraPath) Parameters Type Name Description string auraPath Returns Type Description IAura"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FindFolderByPath.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FindFolderByPath.html",
    "title": "Method FindFolderByPath | EyeAuras Docs",
    "keywords": "Method FindFolderByPath FindFolderByPath(string) Declaration public IFolder FindFolderByPath(string folderPath) Parameters Type Name Description string folderPath Returns Type Description IFolder"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FindModelById.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FindModelById.html",
    "title": "Method FindModelById | EyeAuras Docs",
    "keywords": "Method FindModelById FindModelById<TAuraModel>(string) Declaration public TAuraModel FindModelById<TAuraModel>(string modelId) where TAuraModel : class, IAuraObject Parameters Type Name Description string modelId Returns Type Description TAuraModel Type Parameters Name Description TAuraModel"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FindOverlayById.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FindOverlayById.html",
    "title": "Method FindOverlayById | EyeAuras Docs",
    "keywords": "Method FindOverlayById FindOverlayById(string) Declaration public IAuraOverlay FindOverlayById(string modelId) Parameters Type Name Description string modelId Returns Type Description IAuraOverlay"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FindTriggerById.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FindTriggerById.html",
    "title": "Method FindTriggerById | EyeAuras Docs",
    "keywords": "Method FindTriggerById FindTriggerById(string) Declaration public IAuraTrigger FindTriggerById(string modelId) Parameters Type Name Description string modelId Returns Type Description IAuraTrigger"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FolderContext.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.FolderContext.html",
    "title": "Property FolderContext | EyeAuras Docs",
    "keywords": "Property FolderContext FolderContext Declaration public IFolderContext FolderContext { get; } Property Value Type Description IFolderContext"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetActionById.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetActionById.html",
    "title": "Method GetActionById | EyeAuras Docs",
    "keywords": "Method GetActionById GetActionById(string) Declaration public IAuraAction GetActionById(string modelId) Parameters Type Name Description string modelId Returns Type Description IAuraAction"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetAuraById.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetAuraById.html",
    "title": "Method GetAuraById | EyeAuras Docs",
    "keywords": "Method GetAuraById GetAuraById(string) Declaration public IAura GetAuraById(string auraId) Parameters Type Name Description string auraId Returns Type Description IAura"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetAuraByPath.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetAuraByPath.html",
    "title": "Method GetAuraByPath | EyeAuras Docs",
    "keywords": "Method GetAuraByPath GetAuraByPath(string) Declaration public IAura GetAuraByPath(string auraPath) Parameters Type Name Description string auraPath Returns Type Description IAura"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetEnumerator.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetEnumerator.html",
    "title": "Method GetEnumerator | EyeAuras Docs",
    "keywords": "Method GetEnumerator GetEnumerator() Declaration public IEnumerator<KeyValuePair<string, object>> GetEnumerator() Returns Type Description IEnumerator<KeyValuePair<string, object>> Implements IEnumerable<T>.GetEnumerator()"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetModelById.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetModelById.html",
    "title": "Method GetModelById | EyeAuras Docs",
    "keywords": "Method GetModelById GetModelById<TAuraModel>(string) Declaration public TAuraModel GetModelById<TAuraModel>(string modelId) where TAuraModel : class, IAuraObject Parameters Type Name Description string modelId Returns Type Description TAuraModel Type Parameters Name Description TAuraModel"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetOnEnterActionsByName.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetOnEnterActionsByName.html",
    "title": "Method GetOnEnterActionsByName | EyeAuras Docs",
    "keywords": "Method GetOnEnterActionsByName GetOnEnterActionsByName(IAuraContext, string) Declaration public IEnumerable<IAuraAction> GetOnEnterActionsByName(IAuraContext aura, string actionName) Parameters Type Name Description IAuraContext aura string actionName Returns Type Description IEnumerable<IAuraAction>"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetOnExitActionsByName.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetOnExitActionsByName.html",
    "title": "Method GetOnExitActionsByName | EyeAuras Docs",
    "keywords": "Method GetOnExitActionsByName GetOnExitActionsByName(IAuraContext, string) Declaration public IEnumerable<IAuraAction> GetOnExitActionsByName(IAuraContext aura, string actionName) Parameters Type Name Description IAuraContext aura string actionName Returns Type Description IEnumerable<IAuraAction>"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetOrDefault.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetOrDefault.html",
    "title": "Method GetOrDefault | EyeAuras Docs",
    "keywords": "Method GetOrDefault GetOrDefault<T>(string, out T, T) Declaration public void GetOrDefault<T>(string key, out T result, T defaultValue) Parameters Type Name Description string key T result T defaultValue Type Parameters Name Description T GetOrDefault<T>(string, out T) Declaration public void GetOrDefault<T>(string key, out T result) Parameters Type Name Description string key T result Type Parameters Name Description T GetOrDefault<T>(string, T) Declaration public T GetOrDefault<T>(string key, T defaultValue) Parameters Type Name Description string key T defaultValue Returns Type Description T Type Parameters Name Description T"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetOverlayById.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetOverlayById.html",
    "title": "Method GetOverlayById | EyeAuras Docs",
    "keywords": "Method GetOverlayById GetOverlayById(string) Declaration public IAuraOverlay GetOverlayById(string modelId) Parameters Type Name Description string modelId Returns Type Description IAuraOverlay"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetOverlayByName.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetOverlayByName.html",
    "title": "Method GetOverlayByName | EyeAuras Docs",
    "keywords": "Method GetOverlayByName GetOverlayByName(IAuraContext, string) Declaration public IEnumerable<IAuraOverlay> GetOverlayByName(IAuraContext aura, string overlayName) Parameters Type Name Description IAuraContext aura string overlayName Returns Type Description IEnumerable<IAuraOverlay>"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetPropertyValue.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetPropertyValue.html",
    "title": "Method GetPropertyValue | EyeAuras Docs",
    "keywords": "Method GetPropertyValue GetPropertyValue<T>(object, string) Declaration [Obsolete] public static T GetPropertyValue<T>(object model, string propertyName) Parameters Type Name Description object model string propertyName Returns Type Description T Type Parameters Name Description T"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetTriggerById.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetTriggerById.html",
    "title": "Method GetTriggerById | EyeAuras Docs",
    "keywords": "Method GetTriggerById GetTriggerById(string) Declaration public IAuraTrigger GetTriggerById(string modelId) Parameters Type Name Description string modelId Returns Type Description IAuraTrigger"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetTriggerByType.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetTriggerByType.html",
    "title": "Method GetTriggerByType | EyeAuras Docs",
    "keywords": "Method GetTriggerByType GetTriggerByType(string) Declaration public IAuraTrigger GetTriggerByType(string triggerTypeName) Parameters Type Name Description string triggerTypeName Returns Type Description IAuraTrigger"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetTriggersByName.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetTriggersByName.html",
    "title": "Method GetTriggersByName | EyeAuras Docs",
    "keywords": "Method GetTriggersByName GetTriggersByName(IAuraContext, string) Declaration public IEnumerable<IAuraTrigger> GetTriggersByName(IAuraContext aura, string triggerName) Parameters Type Name Description IAuraContext aura string triggerName Returns Type Description IEnumerable<IAuraTrigger> GetTriggersByName(string) Declaration public IEnumerable<IAuraTrigger> GetTriggersByName(string triggerName) Parameters Type Name Description string triggerName Returns Type Description IEnumerable<IAuraTrigger>"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetTriggersByType.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetTriggersByType.html",
    "title": "Method GetTriggersByType | EyeAuras Docs",
    "keywords": "Method GetTriggersByType GetTriggersByType(IAuraContext, string) Declaration public IEnumerable<IAuraTrigger> GetTriggersByType(IAuraContext aura, string triggerTypeName) Parameters Type Name Description IAuraContext aura string triggerTypeName Returns Type Description IEnumerable<IAuraTrigger> GetTriggersByType(string) Declaration public IEnumerable<IAuraTrigger> GetTriggersByType(string triggerTypeName) Parameters Type Name Description string triggerTypeName Returns Type Description IEnumerable<IAuraTrigger>"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetVariable.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetVariable.html",
    "title": "Method GetVariable | EyeAuras Docs",
    "keywords": "Method GetVariable GetVariable<T>(string) Declaration public ScriptVariable<T> GetVariable<T>(string key) Parameters Type Name Description string key Returns Type Description ScriptVariable<T> Type Parameters Name Description T GetVariable<T>(string, string) Declaration public ScriptVariable<T> GetVariable<T>(string path, string key) Parameters Type Name Description string path string key Returns Type Description ScriptVariable<T> Type Parameters Name Description T GetVariable<T>(IAura, string) Declaration public ScriptVariable<T> GetVariable<T>(IAura aura, string key) Parameters Type Name Description IAura aura string key Returns Type Description ScriptVariable<T> Type Parameters Name Description T"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetWhileActiveActionsByName.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.GetWhileActiveActionsByName.html",
    "title": "Method GetWhileActiveActionsByName | EyeAuras Docs",
    "keywords": "Method GetWhileActiveActionsByName GetWhileActiveActionsByName(IAuraContext, string) Declaration public IEnumerable<IAuraAction> GetWhileActiveActionsByName(IAuraContext aura, string actionName) Parameters Type Name Description IAuraContext aura string actionName Returns Type Description IEnumerable<IAuraAction>"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.IsReadOnly.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.IsReadOnly.html",
    "title": "Property IsReadOnly | EyeAuras Docs",
    "keywords": "Property IsReadOnly IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool Implements ICollection<T>.IsReadOnly"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.IsRunning.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.IsRunning.html",
    "title": "Property IsRunning | EyeAuras Docs",
    "keywords": "Property IsRunning IsRunning Declaration public bool IsRunning { get; set; } Property Value Type Description bool Implements IScriptExecutor.IsRunning"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Item.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Item.html",
    "title": "Property this | EyeAuras Docs",
    "keywords": "Property this this[string] Declaration public object this[string key] { get; set; } Parameters Type Name Description string key Property Value Type Description object Implements IDictionary<TKey, TValue>.this[TKey]"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Keys.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Keys.html",
    "title": "Property Keys | EyeAuras Docs",
    "keywords": "Property Keys Keys Declaration public ICollection<string> Keys { get; } Property Value Type Description ICollection<string> Implements IDictionary<TKey, TValue>.Keys"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Log.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Log.html",
    "title": "Property Log | EyeAuras Docs",
    "keywords": "Property Log Log Declaration public IFluentLog Log { get; } Property Value Type Description IFluentLog"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Output.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Output.html",
    "title": "Property Output | EyeAuras Docs",
    "keywords": "Property Output Output Declaration public CircularSourceList<string> Output { get; } Property Value Type Description CircularSourceList<string> Implements IScriptExecutor.Output"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Remove.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Remove.html",
    "title": "Method Remove | EyeAuras Docs",
    "keywords": "Method Remove Remove(KeyValuePair<string, object>) Declaration public bool Remove(KeyValuePair<string, object> item) Parameters Type Name Description KeyValuePair<string, object> item Returns Type Description bool Implements ICollection<T>.Remove(T) Remove(string) Declaration public bool Remove(string key) Parameters Type Name Description string key Returns Type Description bool Implements IDictionary<TKey, TValue>.Remove(TKey)"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Services.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Services.html",
    "title": "Property Services | EyeAuras Docs",
    "keywords": "Property Services Services Declaration public IEyeSharedServices Services { get; } Property Value Type Description IEyeSharedServices"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.SetArgs.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.SetArgs.html",
    "title": "Method SetArgs | EyeAuras Docs",
    "keywords": "Method SetArgs SetArgs(ScriptExecutorArgs) Declaration public void SetArgs(ScriptExecutorArgs args) Parameters Type Name Description ScriptExecutorArgs args Implements IScriptExecutor.SetArgs(ScriptExecutorArgs)"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.SetPropertyValue.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.SetPropertyValue.html",
    "title": "Method SetPropertyValue | EyeAuras Docs",
    "keywords": "Method SetPropertyValue SetPropertyValue<T>(object, string, T) Declaration [Obsolete] public static void SetPropertyValue<T>(object model, string propertyName, T value) Parameters Type Name Description object model string propertyName T value Type Parameters Name Description T"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Sleep.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Sleep.html",
    "title": "Method Sleep | EyeAuras Docs",
    "keywords": "Method Sleep Sleep(TimeSpan) Declaration public void Sleep(TimeSpan timeout) Parameters Type Name Description TimeSpan timeout Sleep(int) Declaration public void Sleep(int timeoutInMs) Parameters Type Name Description int timeoutInMs"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.TryGetValue.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.TryGetValue.html",
    "title": "Method TryGetValue | EyeAuras Docs",
    "keywords": "Method TryGetValue TryGetValue(string, out object) Declaration public bool TryGetValue(string key, out object value) Parameters Type Name Description string key object value Returns Type Description bool Implements IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue) TryGetValue<T>(string, out T) Declaration public bool TryGetValue<T>(string key, out T value) Parameters Type Name Description string key T value Returns Type Description bool Type Parameters Name Description T"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Values.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.Values.html",
    "title": "Property Values | EyeAuras Docs",
    "keywords": "Property Values Values Declaration public ICollection<object> Values { get; } Property Value Type Description ICollection<object> Implements IDictionary<TKey, TValue>.Values"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.WaitForValue.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.WaitForValue.html",
    "title": "Method WaitForValue | EyeAuras Docs",
    "keywords": "Method WaitForValue WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) Declaration public static void WaitForValue<TObject, T1>(TObject instance, Expression<Func<TObject, T1>> ex1, Predicate<T1> condition, TimeSpan timeout) where TObject : INotifyPropertyChanged Parameters Type Name Description TObject instance Expression<Func<TObject, T1>> ex1 Predicate<T1> condition TimeSpan timeout Type Parameters Name Description TObject T1"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.WriteToLog.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.WriteToLog.html",
    "title": "Method WriteToLog | EyeAuras Docs",
    "keywords": "Method WriteToLog WriteToLog(object) Declaration public void WriteToLog(object objectToDump) Parameters Type Name Description object objectToDump WriteToLog(string) Declaration public void WriteToLog(string message) Parameters Type Name Description string message"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptExecutorBase.html",
    "title": "Class ScriptExecutorBase | EyeAuras Docs",
    "keywords": "Class ScriptExecutorBase Inheritance object DisposableReactiveObject ScriptExecutorBase ScriptActionBase ScriptFunctionBase<T> ScriptFunctionBase<T, TResult> Implements IScriptExecutor IDisposable INotifyPropertyChanged IDictionary<string, object> ICollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IEnumerable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Scripting.UserSpace Assembly: EyeAuras.Scripting.dll Syntax public abstract class ScriptExecutorBase : DisposableReactiveObject, IScriptExecutor, IDisposable, INotifyPropertyChanged, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable Constructors Name Description ScriptExecutorBase() Properties Name Description Aura AuraContext CancellationToken Container Context Count EyeSharedServices FolderContext IsReadOnly IsRunning this[string] Keys Log Output Services Values Methods Name Description Add(KeyValuePair<string, object>) Add(string, object) AddOrUpdate<T>(string, T) Clear() ClearLog() Contains(KeyValuePair<string, object>) ContainsKey(string) CopyTo(KeyValuePair<string, object>[], int) CreateAction(IAuraProperties) CreateAction(string) CreateTrigger(IAuraProperties) CreateTrigger(string) FindActionById(string) FindAuraById(string) FindAuraByPath(string) FindFolderByPath(string) FindModelById<TAuraModel>(string) FindOverlayById(string) FindTriggerById(string) GetActionById(string) GetAuraById(string) GetAuraByPath(string) GetEnumerator() GetModelById<TAuraModel>(string) GetOnEnterActionsByName(IAuraContext, string) GetOnExitActionsByName(IAuraContext, string) GetOrDefault<T>(string, T) GetOrDefault<T>(string, out T) GetOrDefault<T>(string, out T, T) GetOverlayById(string) GetOverlayByName(IAuraContext, string) GetPropertyValue<T>(object, string) GetTriggerById(string) GetTriggerByType(string) GetTriggersByName(IAuraContext, string) GetTriggersByName(string) GetTriggersByType(IAuraContext, string) GetTriggersByType(string) GetVariable<T>(IAura, string) GetVariable<T>(string) GetVariable<T>(string, string) GetWhileActiveActionsByName(IAuraContext, string) Remove(KeyValuePair<string, object>) Remove(string) SetArgs(ScriptExecutorArgs) SetPropertyValue<T>(object, string, T) Sleep(int) Sleep(TimeSpan) TryGetValue(string, out object) TryGetValue<T>(string, out T) WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) WriteToLog(object) WriteToLog(string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-1.-ctor.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-1.-ctor.html",
    "title": "Constructor ScriptFunctionBase | EyeAuras Docs",
    "keywords": "Constructor ScriptFunctionBase ScriptFunctionBase() Declaration protected ScriptFunctionBase()"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-1.Execute.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-1.Execute.html",
    "title": "Method Execute | EyeAuras Docs",
    "keywords": "Method Execute Execute() Declaration public Task<T> Execute() Returns Type Description Task<T> Implements IScriptFunction<T>.Execute()"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-1.ExecuteInternal.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-1.ExecuteInternal.html",
    "title": "Method ExecuteInternal | EyeAuras Docs",
    "keywords": "Method ExecuteInternal ExecuteInternal(CancellationToken) Declaration protected abstract Task<T> ExecuteInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task<T>"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-1.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-1.html",
    "title": "Class ScriptFunctionBase<T> | EyeAuras Docs",
    "keywords": "Class ScriptFunctionBase<T> Inheritance object DisposableReactiveObject ScriptExecutorBase ScriptFunctionBase<T> Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IEnumerable IScriptFunction<T> IScriptExecutor IDisposable INotifyPropertyChanged Inherited Members ScriptExecutorBase.SetArgs(ScriptExecutorArgs) ScriptExecutorBase.GetEnumerator() ScriptExecutorBase.Add(KeyValuePair<string, object>) ScriptExecutorBase.Clear() ScriptExecutorBase.Contains(KeyValuePair<string, object>) ScriptExecutorBase.CopyTo(KeyValuePair<string, object>[], int) ScriptExecutorBase.Remove(KeyValuePair<string, object>) ScriptExecutorBase.Add(string, object) ScriptExecutorBase.ContainsKey(string) ScriptExecutorBase.Remove(string) ScriptExecutorBase.TryGetValue(string, out object) ScriptExecutorBase.TryGetValue<T>(string, out T) ScriptExecutorBase.AddOrUpdate<T>(string, T) ScriptExecutorBase.FindAuraById(string) ScriptExecutorBase.FindAuraByPath(string) ScriptExecutorBase.FindFolderByPath(string) ScriptExecutorBase.FindTriggerById(string) ScriptExecutorBase.FindActionById(string) ScriptExecutorBase.FindOverlayById(string) ScriptExecutorBase.GetTriggerById(string) ScriptExecutorBase.GetActionById(string) ScriptExecutorBase.GetOverlayById(string) ScriptExecutorBase.FindModelById<TAuraModel>(string) ScriptExecutorBase.GetModelById<TAuraModel>(string) ScriptExecutorBase.GetAuraById(string) ScriptExecutorBase.GetAuraByPath(string) ScriptExecutorBase.CreateAction(IAuraProperties) ScriptExecutorBase.CreateTrigger(IAuraProperties) ScriptExecutorBase.CreateAction(string) ScriptExecutorBase.CreateTrigger(string) ScriptExecutorBase.ClearLog() ScriptExecutorBase.Sleep(TimeSpan) ScriptExecutorBase.Sleep(int) ScriptExecutorBase.WriteToLog(object) ScriptExecutorBase.WriteToLog(string) ScriptExecutorBase.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) ScriptExecutorBase.GetTriggersByType(IAuraContext, string) ScriptExecutorBase.GetTriggersByType(string) ScriptExecutorBase.GetTriggersByName(IAuraContext, string) ScriptExecutorBase.GetOverlayByName(IAuraContext, string) ScriptExecutorBase.GetOnEnterActionsByName(IAuraContext, string) ScriptExecutorBase.GetOnExitActionsByName(IAuraContext, string) ScriptExecutorBase.GetWhileActiveActionsByName(IAuraContext, string) ScriptExecutorBase.GetTriggersByName(string) ScriptExecutorBase.GetTriggerByType(string) ScriptExecutorBase.GetPropertyValue<T>(object, string) ScriptExecutorBase.SetPropertyValue<T>(object, string, T) ScriptExecutorBase.GetOrDefault<T>(string, out T, T) ScriptExecutorBase.GetOrDefault<T>(string, out T) ScriptExecutorBase.GetOrDefault<T>(string, T) ScriptExecutorBase.GetVariable<T>(string) ScriptExecutorBase.GetVariable<T>(string, string) ScriptExecutorBase.GetVariable<T>(IAura, string) ScriptExecutorBase.EyeSharedServices ScriptExecutorBase.Services ScriptExecutorBase.AuraContext ScriptExecutorBase.Aura ScriptExecutorBase.Context ScriptExecutorBase.FolderContext ScriptExecutorBase.Container ScriptExecutorBase.Output ScriptExecutorBase.IsRunning ScriptExecutorBase.CancellationToken ScriptExecutorBase.Log ScriptExecutorBase.Count ScriptExecutorBase.IsReadOnly ScriptExecutorBase.this[string] ScriptExecutorBase.Keys ScriptExecutorBase.Values object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Scripting.UserSpace Assembly: EyeAuras.Scripting.dll Syntax public abstract class ScriptFunctionBase<T> : ScriptExecutorBase, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable, IScriptFunction<T>, IScriptExecutor, IDisposable, INotifyPropertyChanged Type Parameters Name Description T Constructors Name Description ScriptFunctionBase() Methods Name Description Execute() ExecuteInternal(CancellationToken) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-2.-ctor.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-2.-ctor.html",
    "title": "Constructor ScriptFunctionBase | EyeAuras Docs",
    "keywords": "Constructor ScriptFunctionBase ScriptFunctionBase() Declaration protected ScriptFunctionBase()"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-2.Execute.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-2.Execute.html",
    "title": "Method Execute | EyeAuras Docs",
    "keywords": "Method Execute Execute(T) Declaration public Task<TResult> Execute(T input) Parameters Type Name Description T input Returns Type Description Task<TResult> Implements IScriptFunction<T, TResult>.Execute(T)"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-2.ExecuteInternal.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-2.ExecuteInternal.html",
    "title": "Method ExecuteInternal | EyeAuras Docs",
    "keywords": "Method ExecuteInternal ExecuteInternal(T, CancellationToken) Declaration protected abstract Task<TResult> ExecuteInternal(T input, CancellationToken cancellationToken) Parameters Type Name Description T input CancellationToken cancellationToken Returns Type Description Task<TResult>"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-2.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptFunctionBase-2.html",
    "title": "Class ScriptFunctionBase<T, TResult> | EyeAuras Docs",
    "keywords": "Class ScriptFunctionBase<T, TResult> Inheritance object DisposableReactiveObject ScriptExecutorBase ScriptFunctionBase<T, TResult> Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IEnumerable IScriptFunction<T, TResult> IScriptExecutor IDisposable INotifyPropertyChanged Inherited Members ScriptExecutorBase.SetArgs(ScriptExecutorArgs) ScriptExecutorBase.GetEnumerator() ScriptExecutorBase.Add(KeyValuePair<string, object>) ScriptExecutorBase.Clear() ScriptExecutorBase.Contains(KeyValuePair<string, object>) ScriptExecutorBase.CopyTo(KeyValuePair<string, object>[], int) ScriptExecutorBase.Remove(KeyValuePair<string, object>) ScriptExecutorBase.Add(string, object) ScriptExecutorBase.ContainsKey(string) ScriptExecutorBase.Remove(string) ScriptExecutorBase.TryGetValue(string, out object) ScriptExecutorBase.TryGetValue<T>(string, out T) ScriptExecutorBase.AddOrUpdate<T>(string, T) ScriptExecutorBase.FindAuraById(string) ScriptExecutorBase.FindAuraByPath(string) ScriptExecutorBase.FindFolderByPath(string) ScriptExecutorBase.FindTriggerById(string) ScriptExecutorBase.FindActionById(string) ScriptExecutorBase.FindOverlayById(string) ScriptExecutorBase.GetTriggerById(string) ScriptExecutorBase.GetActionById(string) ScriptExecutorBase.GetOverlayById(string) ScriptExecutorBase.FindModelById<TAuraModel>(string) ScriptExecutorBase.GetModelById<TAuraModel>(string) ScriptExecutorBase.GetAuraById(string) ScriptExecutorBase.GetAuraByPath(string) ScriptExecutorBase.CreateAction(IAuraProperties) ScriptExecutorBase.CreateTrigger(IAuraProperties) ScriptExecutorBase.CreateAction(string) ScriptExecutorBase.CreateTrigger(string) ScriptExecutorBase.ClearLog() ScriptExecutorBase.Sleep(TimeSpan) ScriptExecutorBase.Sleep(int) ScriptExecutorBase.WriteToLog(object) ScriptExecutorBase.WriteToLog(string) ScriptExecutorBase.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) ScriptExecutorBase.GetTriggersByType(IAuraContext, string) ScriptExecutorBase.GetTriggersByType(string) ScriptExecutorBase.GetTriggersByName(IAuraContext, string) ScriptExecutorBase.GetOverlayByName(IAuraContext, string) ScriptExecutorBase.GetOnEnterActionsByName(IAuraContext, string) ScriptExecutorBase.GetOnExitActionsByName(IAuraContext, string) ScriptExecutorBase.GetWhileActiveActionsByName(IAuraContext, string) ScriptExecutorBase.GetTriggersByName(string) ScriptExecutorBase.GetTriggerByType(string) ScriptExecutorBase.GetPropertyValue<T>(object, string) ScriptExecutorBase.SetPropertyValue<T>(object, string, T) ScriptExecutorBase.GetOrDefault<T>(string, out T, T) ScriptExecutorBase.GetOrDefault<T>(string, out T) ScriptExecutorBase.GetOrDefault<T>(string, T) ScriptExecutorBase.GetVariable<T>(string) ScriptExecutorBase.GetVariable<T>(string, string) ScriptExecutorBase.GetVariable<T>(IAura, string) ScriptExecutorBase.EyeSharedServices ScriptExecutorBase.Services ScriptExecutorBase.AuraContext ScriptExecutorBase.Aura ScriptExecutorBase.Context ScriptExecutorBase.FolderContext ScriptExecutorBase.Container ScriptExecutorBase.Output ScriptExecutorBase.IsRunning ScriptExecutorBase.CancellationToken ScriptExecutorBase.Log ScriptExecutorBase.Count ScriptExecutorBase.IsReadOnly ScriptExecutorBase.this[string] ScriptExecutorBase.Keys ScriptExecutorBase.Values object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Scripting.UserSpace Assembly: EyeAuras.Scripting.dll Syntax public abstract class ScriptFunctionBase<T, TResult> : ScriptExecutorBase, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable, IScriptFunction<T, TResult>, IScriptExecutor, IDisposable, INotifyPropertyChanged Type Parameters Name Description T TResult Constructors Name Description ScriptFunctionBase() Methods Name Description Execute(T) ExecuteInternal(T, CancellationToken) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.-ctor.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.-ctor.html",
    "title": "Constructor ScriptVariable | EyeAuras Docs",
    "keywords": "Constructor ScriptVariable ScriptVariable(IHasVariables, string) Declaration public ScriptVariable(IHasVariables source, string variableName) Parameters Type Name Description IHasVariables source string variableName"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.Equals.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(T) Declaration public bool Equals(T other) Parameters Type Name Description T other Returns Type Description bool Implements IEquatable<T>.Equals(T) Equals(ScriptVariable<T>) Declaration public bool Equals(ScriptVariable<T> other) Parameters Type Name Description ScriptVariable<T> other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.HasValue.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.HasValue.html",
    "title": "Property HasValue | EyeAuras Docs",
    "keywords": "Property HasValue HasValue Declaration public bool HasValue { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.Remove.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.Remove.html",
    "title": "Method Remove | EyeAuras Docs",
    "keywords": "Method Remove Remove() Declaration public bool Remove() Returns Type Description bool"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.Set.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.Set.html",
    "title": "Method Set | EyeAuras Docs",
    "keywords": "Method Set Set(T) Declaration public ScriptVariable<T> Set(T value) Parameters Type Name Description T value Returns Type Description ScriptVariable<T>"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.Source.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.Source.html",
    "title": "Property Source | EyeAuras Docs",
    "keywords": "Property Source Source Declaration public readonly IHasVariables Source { get; } Property Value Type Description IHasVariables"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.ToString.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.Value.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration public T Value { get; set; } Property Value Type Description T"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.html",
    "title": "Struct ScriptVariable<T> | EyeAuras Docs",
    "keywords": "Struct ScriptVariable<T> Implements IEquatable<T> IEquatable<ScriptVariable<T>> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Scripting.UserSpace Assembly: EyeAuras.Scripting.dll Syntax public struct ScriptVariable<T> : IEquatable<T>, IEquatable<ScriptVariable<T>> Type Parameters Name Description T Constructors Name Description ScriptVariable(IHasVariables, string) Properties Name Description HasValue Source Value Methods Name Description Equals(ScriptVariable<T>) Equals(T) Remove() Set(T) ToString() Operators Name Description implicit operator T(ScriptVariable<T>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.op_Implicit.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.ScriptVariable-1.op_Implicit.html",
    "title": "Operator implicit operator | EyeAuras Docs",
    "keywords": "Operator implicit operator implicit operator T(ScriptVariable<T>) Declaration public static implicit operator T(ScriptVariable<T> source) Parameters Type Name Description ScriptVariable<T> source Returns Type Description T"
  },
  "api/EyeAuras.Scripting.UserSpace.html": {
    "href": "api/EyeAuras.Scripting.UserSpace.html",
    "title": "Namespace EyeAuras.Scripting.UserSpace | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Scripting.UserSpace Classes ScriptActionBase ScriptExecutorBase ScriptFunctionBase<T> ScriptFunctionBase<T, TResult> Structs ScriptVariable<T>"
  },
  "api/EyeAuras.Scripting.html": {
    "href": "api/EyeAuras.Scripting.html",
    "title": "Namespace EyeAuras.Scripting | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Scripting Namespaces EyeAuras.Scripting.Api EyeAuras.Scripting.Projects EyeAuras.Scripting.Scaffolding EyeAuras.Scripting.Services EyeAuras.Scripting.UserSpace"
  },
  "api/EyeAuras.Shared.Actions.AuraActionBase-1.-ctor.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionBase-1.-ctor.html",
    "title": "Constructor AuraActionBase | EyeAuras Docs",
    "keywords": "Constructor AuraActionBase AuraActionBase() Declaration protected AuraActionBase()"
  },
  "api/EyeAuras.Shared.Actions.AuraActionBase-1.Cancel.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionBase-1.Cancel.html",
    "title": "Method Cancel | EyeAuras Docs",
    "keywords": "Method Cancel Cancel() Cancels the execution of the action, if it is currently running. Declaration public void Cancel() Implements IAuraAction.Cancel()"
  },
  "api/EyeAuras.Shared.Actions.AuraActionBase-1.Description.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionBase-1.Description.html",
    "title": "Property Description | EyeAuras Docs",
    "keywords": "Property Description Description Description of an item, could be localized Declaration public abstract string Description { get; } Property Value Type Description string Implements IHasDescription.Description"
  },
  "api/EyeAuras.Shared.Actions.AuraActionBase-1.Error.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionBase-1.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Gets the error message if an error occurs while performing the action. Declaration public string Error { get; } Property Value Type Description string Implements IAuraAction.Error"
  },
  "api/EyeAuras.Shared.Actions.AuraActionBase-1.Execute.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionBase-1.Execute.html",
    "title": "Method Execute | EyeAuras Docs",
    "keywords": "Method Execute Execute() Executes the action. The action can be cancelled (if supported) by calling the Cancel method. Declaration public void Execute() Implements IAuraAction.Execute() Execute(CancellationToken) Executes the action with support for parent cancellation. The action can be cancelled (if supported) by calling the Cancel method either on the action itself or on the parent. Declaration public void Execute(CancellationToken parentToken) Parameters Type Name Description CancellationToken parentToken The cancellation token of the parent. Implements IAuraAction.Execute(CancellationToken)"
  },
  "api/EyeAuras.Shared.Actions.AuraActionBase-1.ExecuteInternal.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionBase-1.ExecuteInternal.html",
    "title": "Method ExecuteInternal | EyeAuras Docs",
    "keywords": "Method ExecuteInternal ExecuteInternal(CancellationToken) Declaration protected abstract void ExecuteInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken"
  },
  "api/EyeAuras.Shared.Actions.AuraActionBase-1.FormatToString.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionBase-1.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides AuraObjectBase.FormatToString(ToStringBuilder)"
  },
  "api/EyeAuras.Shared.Actions.AuraActionBase-1.IsBusy.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionBase-1.IsBusy.html",
    "title": "Property IsBusy | EyeAuras Docs",
    "keywords": "Property IsBusy IsBusy Gets a value indicating whether the action is currently busy. Declaration public bool IsBusy { get; } Property Value Type Description bool Implements IAuraAction.IsBusy"
  },
  "api/EyeAuras.Shared.Actions.AuraActionBase-1.IsIgnored.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionBase-1.IsIgnored.html",
    "title": "Property IsIgnored | EyeAuras Docs",
    "keywords": "Property IsIgnored IsIgnored Indicates whether this Action is ignored (available for execution) or not Declaration [AuraProperty] public bool IsIgnored { get; set; } Property Value Type Description bool Implements IAuraAction.IsIgnored"
  },
  "api/EyeAuras.Shared.Actions.AuraActionBase-1.Name.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionBase-1.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Name of an item(could be filename), usually un-localized and could be used in lookups Declaration public abstract string Name { get; } Property Value Type Description string Implements IHasName.Name"
  },
  "api/EyeAuras.Shared.Actions.AuraActionBase-1.NameSuffix.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionBase-1.NameSuffix.html",
    "title": "Property NameSuffix | EyeAuras Docs",
    "keywords": "Property NameSuffix NameSuffix Suffix which will be appended to Name Declaration public string NameSuffix { get; init; } Property Value Type Description string Implements IAuraEntity.NameSuffix"
  },
  "api/EyeAuras.Shared.Actions.AuraActionBase-1.VisitLoad.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionBase-1.VisitLoad.html",
    "title": "Method VisitLoad | EyeAuras Docs",
    "keywords": "Method VisitLoad VisitLoad(TAuraProperties) Declaration protected override void VisitLoad(TAuraProperties source) Parameters Type Name Description TAuraProperties source Overrides AuraObjectBase<TAuraProperties>.VisitLoad(TAuraProperties)"
  },
  "api/EyeAuras.Shared.Actions.AuraActionBase-1.VisitSave.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionBase-1.VisitSave.html",
    "title": "Method VisitSave | EyeAuras Docs",
    "keywords": "Method VisitSave VisitSave(TAuraProperties) Declaration protected override void VisitSave(TAuraProperties target) Parameters Type Name Description TAuraProperties target Overrides AuraObjectBase<TAuraProperties>.VisitSave(TAuraProperties)"
  },
  "api/EyeAuras.Shared.Actions.AuraActionBase-1.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionBase-1.html",
    "title": "Class AuraActionBase<TAuraProperties> | EyeAuras Docs",
    "keywords": "Class AuraActionBase<TAuraProperties> Inheritance object DisposableReactiveObject BindableReactiveObject AuraObjectBase AuraObjectBase<TAuraProperties> AuraActionBase<TAuraProperties> ComplexAuraAction<TAuraProperties> Implements IAuraObject<TAuraProperties> IAuraAction IAuraEntity IAuraObject IBindableReactiveObject IDisposable INotifyPropertyChanged IHasId ICanSetContext IHasContext IHasName IHasDescription Inherited Members AuraObjectBase<TAuraProperties>.SaveProperties() AuraObjectBase<TAuraProperties>.LoadProperties(IAuraProperties) AuraObjectBase<TAuraProperties>.Properties AuraObjectBase.RaisePropertiesWhen<T>(IObservableList<T>) AuraObjectBase.RaisePropertiesWhen<T, TKey>(ISourceCache<T, TKey>) AuraObjectBase.RaisePropertiesWhen<TCollection, T>(TCollection) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollectionEx<T>) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollection<T>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>, CompositeDisposable) AuraObjectBase.RaisePropertiesWhen<T>(IObservable<T>) AuraObjectBase.RaisePropertiesWhen<T>(params IObservable<T>[]) AuraObjectBase.RaisePropertiesWhenAny<T>(T, params Expression<Func<T, object>>[]) AuraObjectBase.RaisePropertiesWhen<T>(params IAuraObject<T>[]) AuraObjectBase.ResolveBinding(string) AuraObjectBase.AddOrUpdateBinding(AuraBindingProperties) AuraObjectBase.IsLoadingProperties AuraObjectBase.IsSavingProperties AuraObjectBase.Context AuraObjectBase.Id BindableReactiveObject.RemoveBinding(string) BindableReactiveObject.ClearBindings() BindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) BindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) BindableReactiveObject.RemoveBinding(IReactiveBinding) BindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) BindableReactiveObject.Log BindableReactiveObject.ObjectId BindableReactiveObject.HasBindings BindableReactiveObject.Bindings BindableReactiveObject.BindingsList object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Actions Assembly: EyeAuras.Shared.dll Syntax public abstract class AuraActionBase<TAuraProperties> : AuraObjectBase<TAuraProperties>, IAuraObject<TAuraProperties>, IAuraAction, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription where TAuraProperties : class, IAuraActionProperties, new() Type Parameters Name Description TAuraProperties Constructors Name Description AuraActionBase() Properties Name Description Description Description of an item, could be localized Error Gets the error message if an error occurs while performing the action. IsBusy Gets a value indicating whether the action is currently busy. IsIgnored Indicates whether this Action is ignored (available for execution) or not Name Name of an item(could be filename), usually un-localized and could be used in lookups NameSuffix Suffix which will be appended to Name Methods Name Description Cancel() Cancels the execution of the action, if it is currently running. Execute() Executes the action. The action can be cancelled (if supported) by calling the Cancel method. Execute(CancellationToken) Executes the action with support for parent cancellation. The action can be cancelled (if supported) by calling the Cancel method either on the action itself or on the parent. ExecuteInternal(CancellationToken) FormatToString(ToStringBuilder) VisitLoad(TAuraProperties) VisitSave(TAuraProperties) Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override abstract AuraActionPropertiesBase <Clone>$() Returns Type Description AuraActionPropertiesBase Overrides AuraPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.-ctor.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.-ctor.html",
    "title": "Constructor AuraActionPropertiesBase | EyeAuras Docs",
    "keywords": "Constructor AuraActionPropertiesBase AuraActionPropertiesBase(AuraActionPropertiesBase) Declaration protected AuraActionPropertiesBase(AuraActionPropertiesBase original) Parameters Type Name Description AuraActionPropertiesBase original AuraActionPropertiesBase() Declaration protected AuraActionPropertiesBase()"
  },
  "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.Equals.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraPropertiesBase.Equals(object?) Equals(AuraPropertiesBase?) Declaration public override sealed bool Equals(AuraPropertiesBase? other) Parameters Type Name Description AuraPropertiesBase other Returns Type Description bool Overrides AuraPropertiesBase.Equals(AuraPropertiesBase?) Equals(AuraActionPropertiesBase?) Declaration public virtual bool Equals(AuraActionPropertiesBase? other) Parameters Type Name Description AuraActionPropertiesBase other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.IsIgnored.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.IsIgnored.html",
    "title": "Property IsIgnored | EyeAuras Docs",
    "keywords": "Property IsIgnored IsIgnored Indicates whether this Action is disabled (available for execution) or not Declaration public bool IsIgnored { get; set; } Property Value Type Description bool Implements IAuraActionProperties.IsIgnored"
  },
  "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.ToString.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraPropertiesBase.ToString()"
  },
  "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.html",
    "title": "Class AuraActionPropertiesBase | EyeAuras Docs",
    "keywords": "Class AuraActionPropertiesBase Inheritance object AuraPropertiesBase AuraActionPropertiesBase SendToTelegramActionProperties TextToSpeechActionProperties CsharpScriptActionProperties ExecuteScriptActionProperties DelayActionProperties ExecuteAuraActionProperties LoadAuraActionProperties PlaySoundActionProperties WaitForAuraActionProperties WinActivateActionProperties SendMessageActionProperties EmptyAuraProperties Implements IEquatable<AuraPropertiesBase> IAuraActionProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraActionPropertiesBase> Inherited Members AuraPropertiesBase.Id AuraPropertiesBase.Bindings AuraPropertiesBase.Version object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Actions Assembly: EyeAuras.Shared.Metadata.dll Syntax public abstract record AuraActionPropertiesBase : AuraPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraActionProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraActionPropertiesBase> Constructors Name Description AuraActionPropertiesBase() AuraActionPropertiesBase(AuraActionPropertiesBase) Properties Name Description EqualityContract IsIgnored Indicates whether this Action is disabled (available for execution) or not Methods Name Description Equals(AuraActionPropertiesBase?) Equals(AuraPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(AuraActionPropertiesBase?, AuraActionPropertiesBase?) operator !=(AuraActionPropertiesBase?, AuraActionPropertiesBase?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(AuraActionPropertiesBase?, AuraActionPropertiesBase?) Declaration public static bool operator ==(AuraActionPropertiesBase? left, AuraActionPropertiesBase? right) Parameters Type Name Description AuraActionPropertiesBase left AuraActionPropertiesBase right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Actions.AuraActionPropertiesBase.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(AuraActionPropertiesBase?, AuraActionPropertiesBase?) Declaration public static bool operator !=(AuraActionPropertiesBase? left, AuraActionPropertiesBase? right) Parameters Type Name Description AuraActionPropertiesBase left AuraActionPropertiesBase right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.-ctor.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.-ctor.html",
    "title": "Constructor ComplexAuraAction | EyeAuras Docs",
    "keywords": "Constructor ComplexAuraAction ComplexAuraAction() Declaration protected ComplexAuraAction()"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Add.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Add.html",
    "title": "Method Add | EyeAuras Docs",
    "keywords": "Method Add Add(IAuraAction) Declaration public void Add(IAuraAction item) Parameters Type Name Description IAuraAction item Implements IComplexAuraAction.Add(IAuraAction)"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Collection.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Collection.html",
    "title": "Property Collection | EyeAuras Docs",
    "keywords": "Property Collection Collection Declaration public IReadOnlyObservableCollection<IAuraAction> Collection { get; } Property Value Type Description IReadOnlyObservableCollection<IAuraAction> Implements IObservableListEx<T>.Collection"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.CollectionChanged.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.CollectionChanged.html",
    "title": "Event CollectionChanged | EyeAuras Docs",
    "keywords": "Event CollectionChanged Implements CollectionChanged Namespace: EyeAuras.Shared.Actions Assembly: EyeAuras.Shared.dll Syntax public event NotifyCollectionChangedEventHandler CollectionChanged Returns Type Description NotifyCollectionChangedEventHandler"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Connect.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Connect.html",
    "title": "Method Connect | EyeAuras Docs",
    "keywords": "Method Connect Connect(Func<IAuraAction, bool>) Declaration public IObservable<IChangeSet<IAuraAction>> Connect(Func<IAuraAction, bool> predicate = null) Parameters Type Name Description Func<IAuraAction, bool> predicate Returns Type Description IObservable<IChangeSet<IAuraAction>>"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Count.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public int Count { get; } Property Value Type Description int"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.CountChanged.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.CountChanged.html",
    "title": "Property CountChanged | EyeAuras Docs",
    "keywords": "Property CountChanged CountChanged Declaration public IObservable<int> CountChanged { get; } Property Value Type Description IObservable<int>"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Description.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Description.html",
    "title": "Property Description | EyeAuras Docs",
    "keywords": "Property Description Description Description of an item, could be localized Declaration public override string Description { get; } Property Value Type Description string Overrides AuraActionBase<TAuraProperties>.Description Implements IHasDescription.Description"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Edit.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Edit.html",
    "title": "Method Edit | EyeAuras Docs",
    "keywords": "Method Edit Edit(Action<IExtendedList<IAuraAction>>) Declaration public void Edit(Action<IExtendedList<IAuraAction>> updateAction) Parameters Type Name Description Action<IExtendedList<IAuraAction>> updateAction"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.ExecuteInternal.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.ExecuteInternal.html",
    "title": "Method ExecuteInternal | EyeAuras Docs",
    "keywords": "Method ExecuteInternal ExecuteInternal(CancellationToken) Declaration protected override void ExecuteInternal(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Overrides AuraActionBase<TAuraProperties>.ExecuteInternal(CancellationToken)"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.GetEnumerator.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.GetEnumerator.html",
    "title": "Method GetEnumerator | EyeAuras Docs",
    "keywords": "Method GetEnumerator GetEnumerator() Declaration public IEnumerator<IAuraAction> GetEnumerator() Returns Type Description IEnumerator<IAuraAction> Implements IEnumerable<T>.GetEnumerator()"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Items.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Items.html",
    "title": "Property Items | EyeAuras Docs",
    "keywords": "Property Items Items Declaration public IEnumerable<IAuraAction> Items { get; } Property Value Type Description IEnumerable<IAuraAction>"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Name.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Name of an item(could be filename), usually un-localized and could be used in lookups Declaration public override string Name { get; } Property Value Type Description string Overrides AuraActionBase<TAuraProperties>.Name Implements IHasName.Name"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Preview.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Preview.html",
    "title": "Method Preview | EyeAuras Docs",
    "keywords": "Method Preview Preview(Func<IAuraAction, bool>) Declaration public IObservable<IChangeSet<IAuraAction>> Preview(Func<IAuraAction, bool> predicate = null) Parameters Type Name Description Func<IAuraAction, bool> predicate Returns Type Description IObservable<IChangeSet<IAuraAction>>"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Remove.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.Remove.html",
    "title": "Method Remove | EyeAuras Docs",
    "keywords": "Method Remove Remove(IAuraAction) Declaration public bool Remove(IAuraAction item) Parameters Type Name Description IAuraAction item Returns Type Description bool Implements IComplexAuraAction.Remove(IAuraAction)"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction-1.html",
    "title": "Class ComplexAuraAction<TAuraProperties> | EyeAuras Docs",
    "keywords": "Class ComplexAuraAction<TAuraProperties> Inheritance object DisposableReactiveObject BindableReactiveObject AuraObjectBase AuraObjectBase<TAuraProperties> AuraActionBase<TAuraProperties> ComplexAuraAction<TAuraProperties> ComplexAuraAction Implements IAuraObject<TAuraProperties> IComplexAuraAction IComplexAuraList<IAuraAction> ISourceListEx<IAuraAction> ISourceList<IAuraAction> IObservableListEx<IAuraAction> IObservableList<IAuraAction> IEnumerable<IAuraAction> IEnumerable INotifyCollectionChanged IAuraAction IAuraEntity IAuraObject IBindableReactiveObject IDisposable INotifyPropertyChanged IHasId ICanSetContext IHasContext IHasName IHasDescription Inherited Members AuraActionBase<TAuraProperties>.Cancel() AuraActionBase<TAuraProperties>.Execute() AuraActionBase<TAuraProperties>.Execute(CancellationToken) AuraActionBase<TAuraProperties>.VisitLoad(TAuraProperties) AuraActionBase<TAuraProperties>.VisitSave(TAuraProperties) AuraActionBase<TAuraProperties>.FormatToString(ToStringBuilder) AuraActionBase<TAuraProperties>.NameSuffix AuraActionBase<TAuraProperties>.Error AuraActionBase<TAuraProperties>.IsIgnored AuraActionBase<TAuraProperties>.IsBusy AuraObjectBase<TAuraProperties>.SaveProperties() AuraObjectBase<TAuraProperties>.LoadProperties(IAuraProperties) AuraObjectBase<TAuraProperties>.Properties AuraObjectBase.RaisePropertiesWhen<T>(IObservableList<T>) AuraObjectBase.RaisePropertiesWhen<T, TKey>(ISourceCache<T, TKey>) AuraObjectBase.RaisePropertiesWhen<TCollection, T>(TCollection) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollectionEx<T>) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollection<T>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>, CompositeDisposable) AuraObjectBase.RaisePropertiesWhen<T>(IObservable<T>) AuraObjectBase.RaisePropertiesWhen<T>(params IObservable<T>[]) AuraObjectBase.RaisePropertiesWhenAny<T>(T, params Expression<Func<T, object>>[]) AuraObjectBase.RaisePropertiesWhen<T>(params IAuraObject<T>[]) AuraObjectBase.ResolveBinding(string) AuraObjectBase.AddOrUpdateBinding(AuraBindingProperties) AuraObjectBase.IsLoadingProperties AuraObjectBase.IsSavingProperties AuraObjectBase.Context AuraObjectBase.Id BindableReactiveObject.RemoveBinding(string) BindableReactiveObject.ClearBindings() BindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) BindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) BindableReactiveObject.RemoveBinding(IReactiveBinding) BindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) BindableReactiveObject.Log BindableReactiveObject.ObjectId BindableReactiveObject.HasBindings BindableReactiveObject.Bindings BindableReactiveObject.BindingsList object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Actions Assembly: EyeAuras.Shared.dll Syntax public abstract class ComplexAuraAction<TAuraProperties> : AuraActionBase<TAuraProperties>, IAuraObject<TAuraProperties>, IComplexAuraAction, IComplexAuraList<IAuraAction>, ISourceListEx<IAuraAction>, ISourceList<IAuraAction>, IObservableListEx<IAuraAction>, IObservableList<IAuraAction>, IEnumerable<IAuraAction>, IEnumerable, INotifyCollectionChanged, IAuraAction, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription where TAuraProperties : class, IAuraActionProperties, new() Type Parameters Name Description TAuraProperties Constructors Name Description ComplexAuraAction() Properties Name Description Collection Count CountChanged Description Description of an item, could be localized Items Name Name of an item(could be filename), usually un-localized and could be used in lookups Methods Name Description Add(IAuraAction) Connect(Func<IAuraAction, bool>) Edit(Action<IExtendedList<IAuraAction>>) ExecuteInternal(CancellationToken) GetEnumerator() Preview(Func<IAuraAction, bool>) Remove(IAuraAction) Events Name Description CollectionChanged Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction.-ctor.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction.-ctor.html",
    "title": "Constructor ComplexAuraAction | EyeAuras Docs",
    "keywords": "Constructor ComplexAuraAction ComplexAuraAction() Declaration public ComplexAuraAction()"
  },
  "api/EyeAuras.Shared.Actions.ComplexAuraAction.html": {
    "href": "api/EyeAuras.Shared.Actions.ComplexAuraAction.html",
    "title": "Class ComplexAuraAction | EyeAuras Docs",
    "keywords": "Class ComplexAuraAction Inheritance object DisposableReactiveObject BindableReactiveObject AuraObjectBase AuraObjectBase<EmptyAuraProperties> AuraActionBase<EmptyAuraProperties> ComplexAuraAction<EmptyAuraProperties> ComplexAuraAction Implements IAuraObject<EmptyAuraProperties> IComplexAuraAction IComplexAuraList<IAuraAction> ISourceListEx<IAuraAction> ISourceList<IAuraAction> IObservableListEx<IAuraAction> IObservableList<IAuraAction> IEnumerable<IAuraAction> IEnumerable INotifyCollectionChanged IAuraAction IAuraEntity IAuraObject IBindableReactiveObject IDisposable INotifyPropertyChanged IHasId ICanSetContext IHasContext IHasName IHasDescription Inherited Members ComplexAuraAction<EmptyAuraProperties>.Connect(Func<IAuraAction, bool>) ComplexAuraAction<EmptyAuraProperties>.Preview(Func<IAuraAction, bool>) ComplexAuraAction<EmptyAuraProperties>.Add(IAuraAction) ComplexAuraAction<EmptyAuraProperties>.Remove(IAuraAction) ComplexAuraAction<EmptyAuraProperties>.Edit(Action<IExtendedList<IAuraAction>>) ComplexAuraAction<EmptyAuraProperties>.GetEnumerator() ComplexAuraAction<EmptyAuraProperties>.Name ComplexAuraAction<EmptyAuraProperties>.Description ComplexAuraAction<EmptyAuraProperties>.CountChanged ComplexAuraAction<EmptyAuraProperties>.Items ComplexAuraAction<EmptyAuraProperties>.Count ComplexAuraAction<EmptyAuraProperties>.Collection ComplexAuraAction<EmptyAuraProperties>.CollectionChanged AuraActionBase<EmptyAuraProperties>.Cancel() AuraActionBase<EmptyAuraProperties>.Execute() AuraActionBase<EmptyAuraProperties>.Execute(CancellationToken) AuraActionBase<EmptyAuraProperties>.NameSuffix AuraActionBase<EmptyAuraProperties>.Error AuraActionBase<EmptyAuraProperties>.IsIgnored AuraActionBase<EmptyAuraProperties>.IsBusy AuraObjectBase<EmptyAuraProperties>.Properties AuraObjectBase.ResolveBinding(string) AuraObjectBase.AddOrUpdateBinding(AuraBindingProperties) AuraObjectBase.IsLoadingProperties AuraObjectBase.IsSavingProperties AuraObjectBase.Context AuraObjectBase.Id BindableReactiveObject.RemoveBinding(string) BindableReactiveObject.ClearBindings() BindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) BindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) BindableReactiveObject.RemoveBinding(IReactiveBinding) BindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) BindableReactiveObject.ObjectId BindableReactiveObject.HasBindings BindableReactiveObject.Bindings BindableReactiveObject.BindingsList object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Actions Assembly: EyeAuras.Shared.dll Syntax public sealed class ComplexAuraAction : ComplexAuraAction<EmptyAuraProperties>, IAuraObject<EmptyAuraProperties>, IComplexAuraAction, IComplexAuraList<IAuraAction>, ISourceListEx<IAuraAction>, ISourceList<IAuraAction>, IObservableListEx<IAuraAction>, IObservableList<IAuraAction>, IEnumerable<IAuraAction>, IEnumerable, INotifyCollectionChanged, IAuraAction, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Constructors Name Description ComplexAuraAction() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Actions.IAuraAction.Cancel.html": {
    "href": "api/EyeAuras.Shared.Actions.IAuraAction.Cancel.html",
    "title": "Method Cancel | EyeAuras Docs",
    "keywords": "Method Cancel Cancel() Cancels the execution of the action, if it is currently running. Declaration void Cancel()"
  },
  "api/EyeAuras.Shared.Actions.IAuraAction.Error.html": {
    "href": "api/EyeAuras.Shared.Actions.IAuraAction.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Gets the error message if an error occurs while performing the action. Declaration string Error { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Actions.IAuraAction.Execute.html": {
    "href": "api/EyeAuras.Shared.Actions.IAuraAction.Execute.html",
    "title": "Method Execute | EyeAuras Docs",
    "keywords": "Method Execute Execute() Executes the action. The action can be cancelled (if supported) by calling the Cancel method. Declaration void Execute() Execute(CancellationToken) Executes the action with support for parent cancellation. The action can be cancelled (if supported) by calling the Cancel method either on the action itself or on the parent. Declaration void Execute(CancellationToken parentToken) Parameters Type Name Description CancellationToken parentToken The cancellation token of the parent."
  },
  "api/EyeAuras.Shared.Actions.IAuraAction.IsBusy.html": {
    "href": "api/EyeAuras.Shared.Actions.IAuraAction.IsBusy.html",
    "title": "Property IsBusy | EyeAuras Docs",
    "keywords": "Property IsBusy IsBusy Gets a value indicating whether the action is currently busy. Declaration bool IsBusy { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Actions.IAuraAction.IsIgnored.html": {
    "href": "api/EyeAuras.Shared.Actions.IAuraAction.IsIgnored.html",
    "title": "Property IsIgnored | EyeAuras Docs",
    "keywords": "Property IsIgnored IsIgnored Indicates whether this Action is ignored (available for execution) or not Declaration bool IsIgnored { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Actions.IAuraAction.html": {
    "href": "api/EyeAuras.Shared.Actions.IAuraAction.html",
    "title": "Interface IAuraAction | EyeAuras Docs",
    "keywords": "Interface IAuraAction Defines the properties and methods for an Aura action. This interface inherits from the IAuraEntity interface. Inherited Members IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.Shared.Actions Assembly: EyeAuras.Shared.dll Syntax public interface IAuraAction : IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description Error Gets the error message if an error occurs while performing the action. IsBusy Gets a value indicating whether the action is currently busy. IsIgnored Indicates whether this Action is ignored (available for execution) or not Methods Name Description Cancel() Cancels the execution of the action, if it is currently running. Execute() Executes the action. The action can be cancelled (if supported) by calling the Cancel method. Execute(CancellationToken) Executes the action with support for parent cancellation. The action can be cancelled (if supported) by calling the Cancel method either on the action itself or on the parent. Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Actions.IAuraActionProperties.IsIgnored.html": {
    "href": "api/EyeAuras.Shared.Actions.IAuraActionProperties.IsIgnored.html",
    "title": "Property IsIgnored | EyeAuras Docs",
    "keywords": "Property IsIgnored IsIgnored Indicates whether this Action is ignored/disabled (i.e. NOT available for execution) Declaration bool IsIgnored { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Actions.IAuraActionProperties.html": {
    "href": "api/EyeAuras.Shared.Actions.IAuraActionProperties.html",
    "title": "Interface IAuraActionProperties | EyeAuras Docs",
    "keywords": "Interface IAuraActionProperties Inherited Members IAuraProperties.Bindings IHasVersion.Version ICanSetId.Id Namespace: EyeAuras.Shared.Actions Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface IAuraActionProperties : IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId Properties Name Description IsIgnored Indicates whether this Action is ignored/disabled (i.e. NOT available for execution) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Actions.IComplexAuraAction.Add.html": {
    "href": "api/EyeAuras.Shared.Actions.IComplexAuraAction.Add.html",
    "title": "Method Add | EyeAuras Docs",
    "keywords": "Method Add Add(IAuraAction) Declaration void Add(IAuraAction action) Parameters Type Name Description IAuraAction action"
  },
  "api/EyeAuras.Shared.Actions.IComplexAuraAction.Remove.html": {
    "href": "api/EyeAuras.Shared.Actions.IComplexAuraAction.Remove.html",
    "title": "Method Remove | EyeAuras Docs",
    "keywords": "Method Remove Remove(IAuraAction) Declaration bool Remove(IAuraAction action) Parameters Type Name Description IAuraAction action Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Actions.IComplexAuraAction.html": {
    "href": "api/EyeAuras.Shared.Actions.IComplexAuraAction.html",
    "title": "Interface IComplexAuraAction | EyeAuras Docs",
    "keywords": "Interface IComplexAuraAction Inherited Members IObservableListEx<IAuraAction>.Collection IEnumerable<IAuraAction>.GetEnumerator() INotifyCollectionChanged.CollectionChanged IAuraAction.Cancel() IAuraAction.Execute() IAuraAction.Execute(CancellationToken) IAuraAction.IsIgnored IAuraAction.IsBusy IAuraAction.Error IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.Shared.Actions Assembly: EyeAuras.Shared.dll Syntax public interface IComplexAuraAction : IComplexAuraList<IAuraAction>, ISourceListEx<IAuraAction>, ISourceList<IAuraAction>, IObservableListEx<IAuraAction>, IObservableList<IAuraAction>, IEnumerable<IAuraAction>, IEnumerable, INotifyCollectionChanged, IAuraAction, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Methods Name Description Add(IAuraAction) Remove(IAuraAction) Extension Methods ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Actions.html": {
    "href": "api/EyeAuras.Shared.Actions.html",
    "title": "Namespace EyeAuras.Shared.Actions | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Shared.Actions Classes AuraActionBase<TAuraProperties> AuraActionPropertiesBase ComplexAuraAction ComplexAuraAction<TAuraProperties> Interfaces IAuraAction Defines the properties and methods for an Aura action. This interface inherits from the IAuraEntity interface. IAuraActionProperties IComplexAuraAction"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingProperties.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override AuraBindingProperties <Clone>$() Returns Type Description AuraBindingProperties Overrides AuraBindingPropertiesV2.<Clone>$()"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingProperties.-ctor.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingProperties.-ctor.html",
    "title": "Constructor AuraBindingProperties | EyeAuras Docs",
    "keywords": "Constructor AuraBindingProperties AuraBindingProperties(AuraBindingProperties) Declaration protected AuraBindingProperties(AuraBindingProperties original) Parameters Type Name Description AuraBindingProperties original AuraBindingProperties() Declaration public AuraBindingProperties()"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingProperties.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraBindingPropertiesV2.EqualityContract"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingProperties.Equals.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraBindingPropertiesV2.Equals(object?) Equals(AuraBindingPropertiesV2?) Declaration public override sealed bool Equals(AuraBindingPropertiesV2? other) Parameters Type Name Description AuraBindingPropertiesV2 other Returns Type Description bool Overrides AuraBindingPropertiesV2.Equals(AuraBindingPropertiesV2?) Equals(AuraBindingProperties?) Declaration public virtual bool Equals(AuraBindingProperties? other) Parameters Type Name Description AuraBindingProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingProperties.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraBindingPropertiesV2.GetHashCode()"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingProperties.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraBindingPropertiesV2.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingProperties.ToString.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraBindingPropertiesV2.ToString()"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingProperties.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingProperties.html",
    "title": "Class AuraBindingProperties | EyeAuras Docs",
    "keywords": "Class AuraBindingProperties Inheritance object AuraBindingPropertiesV2 AuraBindingProperties Implements IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion IEquatable<AuraBindingPropertiesV2> IEquatable<AuraBindingProperties> Inherited Members AuraBindingPropertiesV2.SourceId AuraBindingPropertiesV2.SourcePropertyPath AuraBindingPropertiesV2.TargetPropertyPath AuraBindingPropertiesV2.BindingType AuraBindingPropertiesV2.RuntimeOnly AuraBindingPropertiesV2.Version AuraBindingPropertiesV2.IsValid object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Bindings Assembly: EyeAuras.Shared.Metadata.dll Syntax public record AuraBindingProperties : AuraBindingPropertiesV2, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, IEquatable<AuraBindingPropertiesV2>, IEquatable<AuraBindingProperties> Constructors Name Description AuraBindingProperties() AuraBindingProperties(AuraBindingProperties) Properties Name Description EqualityContract Methods Name Description Equals(AuraBindingProperties?) Equals(AuraBindingPropertiesV2?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(AuraBindingProperties?, AuraBindingProperties?) operator !=(AuraBindingProperties?, AuraBindingProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingProperties.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(AuraBindingProperties?, AuraBindingProperties?) Declaration public static bool operator ==(AuraBindingProperties? left, AuraBindingProperties? right) Parameters Type Name Description AuraBindingProperties left AuraBindingProperties right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingProperties.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(AuraBindingProperties?, AuraBindingProperties?) Declaration public static bool operator !=(AuraBindingProperties? left, AuraBindingProperties? right) Parameters Type Name Description AuraBindingProperties left AuraBindingProperties right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public virtual AuraBindingPropertiesV1 <Clone>$() Returns Type Description AuraBindingPropertiesV1"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.-ctor.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.-ctor.html",
    "title": "Constructor AuraBindingPropertiesV1 | EyeAuras Docs",
    "keywords": "Constructor AuraBindingPropertiesV1 AuraBindingPropertiesV1(AuraBindingPropertiesV1) Declaration protected AuraBindingPropertiesV1(AuraBindingPropertiesV1 original) Parameters Type Name Description AuraBindingPropertiesV1 original AuraBindingPropertiesV1() Declaration public AuraBindingPropertiesV1()"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected virtual Type EqualityContract { get; } Property Value Type Description Type"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.Equals.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(AuraBindingPropertiesV1?) Declaration public virtual bool Equals(AuraBindingPropertiesV1? other) Parameters Type Name Description AuraBindingPropertiesV1 other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.IsValid.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.IsValid.html",
    "title": "Property IsValid | EyeAuras Docs",
    "keywords": "Property IsValid IsValid Declaration public bool IsValid { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.IsVariable.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.IsVariable.html",
    "title": "Property IsVariable | EyeAuras Docs",
    "keywords": "Property IsVariable IsVariable Declaration public bool IsVariable { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected virtual bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.SourceId.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.SourceId.html",
    "title": "Property SourceId | EyeAuras Docs",
    "keywords": "Property SourceId SourceId Declaration public string SourceId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.SourcePropertyPath.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.SourcePropertyPath.html",
    "title": "Property SourcePropertyPath | EyeAuras Docs",
    "keywords": "Property SourcePropertyPath SourcePropertyPath Declaration public string SourcePropertyPath { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.TargetPropertyPath.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.TargetPropertyPath.html",
    "title": "Property TargetPropertyPath | EyeAuras Docs",
    "keywords": "Property TargetPropertyPath TargetPropertyPath Declaration public string TargetPropertyPath { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.ToString.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.Version.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public int Version { get; set; } Property Value Type Description int Implements IHasVersion.Version"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.html",
    "title": "Class AuraBindingPropertiesV1 | EyeAuras Docs",
    "keywords": "Class AuraBindingPropertiesV1 Inheritance object AuraBindingPropertiesV1 Implements IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion IEquatable<AuraBindingPropertiesV1> Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Bindings Assembly: EyeAuras.Shared.Metadata.dll Syntax public record AuraBindingPropertiesV1 : IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, IEquatable<AuraBindingPropertiesV1> Constructors Name Description AuraBindingPropertiesV1() AuraBindingPropertiesV1(AuraBindingPropertiesV1) Properties Name Description EqualityContract IsValid IsVariable SourceId SourcePropertyPath TargetPropertyPath Version Methods Name Description Equals(AuraBindingPropertiesV1?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(AuraBindingPropertiesV1?, AuraBindingPropertiesV1?) operator !=(AuraBindingPropertiesV1?, AuraBindingPropertiesV1?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(AuraBindingPropertiesV1?, AuraBindingPropertiesV1?) Declaration public static bool operator ==(AuraBindingPropertiesV1? left, AuraBindingPropertiesV1? right) Parameters Type Name Description AuraBindingPropertiesV1 left AuraBindingPropertiesV1 right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV1.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(AuraBindingPropertiesV1?, AuraBindingPropertiesV1?) Declaration public static bool operator !=(AuraBindingPropertiesV1? left, AuraBindingPropertiesV1? right) Parameters Type Name Description AuraBindingPropertiesV1 left AuraBindingPropertiesV1 right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public virtual AuraBindingPropertiesV2 <Clone>$() Returns Type Description AuraBindingPropertiesV2"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.-ctor.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.-ctor.html",
    "title": "Constructor AuraBindingPropertiesV2 | EyeAuras Docs",
    "keywords": "Constructor AuraBindingPropertiesV2 AuraBindingPropertiesV2(AuraBindingPropertiesV2) Declaration protected AuraBindingPropertiesV2(AuraBindingPropertiesV2 original) Parameters Type Name Description AuraBindingPropertiesV2 original AuraBindingPropertiesV2() Declaration public AuraBindingPropertiesV2()"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.BindingType.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.BindingType.html",
    "title": "Property BindingType | EyeAuras Docs",
    "keywords": "Property BindingType BindingType Declaration public AuraBindingType BindingType { get; set; } Property Value Type Description AuraBindingType"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected virtual Type EqualityContract { get; } Property Value Type Description Type"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.Equals.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(AuraBindingPropertiesV2?) Declaration public virtual bool Equals(AuraBindingPropertiesV2? other) Parameters Type Name Description AuraBindingPropertiesV2 other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.IsValid.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.IsValid.html",
    "title": "Property IsValid | EyeAuras Docs",
    "keywords": "Property IsValid IsValid Declaration public bool IsValid { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected virtual bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.RuntimeOnly.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.RuntimeOnly.html",
    "title": "Property RuntimeOnly | EyeAuras Docs",
    "keywords": "Property RuntimeOnly RuntimeOnly Declaration public bool? RuntimeOnly { get; set; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.SourceId.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.SourceId.html",
    "title": "Property SourceId | EyeAuras Docs",
    "keywords": "Property SourceId SourceId Declaration public string SourceId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.SourcePropertyPath.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.SourcePropertyPath.html",
    "title": "Property SourcePropertyPath | EyeAuras Docs",
    "keywords": "Property SourcePropertyPath SourcePropertyPath Declaration public string SourcePropertyPath { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.TargetPropertyPath.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.TargetPropertyPath.html",
    "title": "Property TargetPropertyPath | EyeAuras Docs",
    "keywords": "Property TargetPropertyPath TargetPropertyPath Declaration public string TargetPropertyPath { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.ToString.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.Version.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public int Version { get; set; } Property Value Type Description int Implements IHasVersion.Version"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.html",
    "title": "Class AuraBindingPropertiesV2 | EyeAuras Docs",
    "keywords": "Class AuraBindingPropertiesV2 Inheritance object AuraBindingPropertiesV2 AuraBindingProperties Implements IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion IEquatable<AuraBindingPropertiesV2> Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Bindings Assembly: EyeAuras.Shared.Metadata.dll Syntax public record AuraBindingPropertiesV2 : IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, IEquatable<AuraBindingPropertiesV2> Constructors Name Description AuraBindingPropertiesV2() AuraBindingPropertiesV2(AuraBindingPropertiesV2) Properties Name Description BindingType EqualityContract IsValid RuntimeOnly SourceId SourcePropertyPath TargetPropertyPath Version Methods Name Description Equals(AuraBindingPropertiesV2?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(AuraBindingPropertiesV2?, AuraBindingPropertiesV2?) operator !=(AuraBindingPropertiesV2?, AuraBindingPropertiesV2?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(AuraBindingPropertiesV2?, AuraBindingPropertiesV2?) Declaration public static bool operator ==(AuraBindingPropertiesV2? left, AuraBindingPropertiesV2? right) Parameters Type Name Description AuraBindingPropertiesV2 left AuraBindingPropertiesV2 right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingPropertiesV2.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(AuraBindingPropertiesV2?, AuraBindingPropertiesV2?) Declaration public static bool operator !=(AuraBindingPropertiesV2? left, AuraBindingPropertiesV2? right) Parameters Type Name Description AuraBindingPropertiesV2 left AuraBindingPropertiesV2 right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.AuraBindingType.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraBindingType.html",
    "title": "Enum AuraBindingType | EyeAuras Docs",
    "keywords": "Enum AuraBindingType Namespace: EyeAuras.Shared.Bindings Assembly: EyeAuras.Shared.Metadata.dll Syntax public enum AuraBindingType Fields Name Description DefaultVariableToProperty PropertyToProperty VariableToProperty Extension Methods ObjectExtensions.AddTo<AuraBindingType, TCollection>(AuraBindingType, ISourceList<TCollection>) ObjectExtensions.AddTo<AuraBindingType, TCollection>(AuraBindingType, ICollection<TCollection>) ObjectExtensions.CloneJson<AuraBindingType>(AuraBindingType) ObjectExtensions.CopyPropertiesTo<AuraBindingType, TTarget>(AuraBindingType, TTarget) ObjectExtensions.DumpToTextRaw<AuraBindingType>(AuraBindingType) ObjectExtensions.DumpToText<AuraBindingType>(AuraBindingType) ObjectExtensions.Dump<AuraBindingType>(AuraBindingType) ObjectExtensions.GetPropertyAccessor<AuraBindingType, TValue>(AuraBindingType, Expression<Func<AuraBindingType, TValue>>) ObjectExtensions.InsertTo<AuraBindingType, TCollection>(AuraBindingType, IList<TCollection>, int) ObjectExtensions.ToJson<AuraBindingType>(AuraBindingType) ObjectExtensions.ToStringSafe<AuraBindingType>(AuraBindingType) ObjectExtensions.TransferPropertiesTo<AuraBindingType, TTarget>(AuraBindingType, TTarget, params string[]) XDocumentExtensions.AddTo<AuraBindingType>(AuraBindingType, XContainer)"
  },
  "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.-ctor.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.-ctor.html",
    "title": "Constructor AuraObjectValueProvider | EyeAuras Docs",
    "keywords": "Constructor AuraObjectValueProvider AuraObjectValueProvider(IAuraObject, AuraBindingProperties) Declaration public AuraObjectValueProvider(IAuraObject owner, AuraBindingProperties properties) Parameters Type Name Description IAuraObject owner AuraBindingProperties properties"
  },
  "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.Error.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Declaration public Exception Error { get; } Property Value Type Description Exception Implements IValueProvider.Error"
  },
  "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.FormatToString.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides DisposableReactiveObject.FormatToString(ToStringBuilder)"
  },
  "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.HasValue.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.HasValue.html",
    "title": "Property HasValue | EyeAuras Docs",
    "keywords": "Property HasValue HasValue Declaration public bool HasValue { get; } Property Value Type Description bool Implements IValueProvider.HasValue"
  },
  "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.Owner.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.Owner.html",
    "title": "Property Owner | EyeAuras Docs",
    "keywords": "Property Owner Owner Declaration public IAuraObject Owner { get; } Property Value Type Description IAuraObject"
  },
  "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.Properties.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.Properties.html",
    "title": "Property Properties | EyeAuras Docs",
    "keywords": "Property Properties Properties Declaration public AuraBindingProperties Properties { get; } Property Value Type Description AuraBindingProperties Implements IAuraValueProvider.Properties"
  },
  "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.ResolvedSource.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.ResolvedSource.html",
    "title": "Property ResolvedSource | EyeAuras Docs",
    "keywords": "Property ResolvedSource ResolvedSource Declaration public IAuraObject ResolvedSource { get; } Property Value Type Description IAuraObject Implements IAuraModelValueProvider.ResolvedSource"
  },
  "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.ResolvedSourceContextPath.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.ResolvedSourceContextPath.html",
    "title": "Property ResolvedSourceContextPath | EyeAuras Docs",
    "keywords": "Property ResolvedSourceContextPath ResolvedSourceContextPath Declaration public string ResolvedSourceContextPath { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.ResolvedSourceName.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.ResolvedSourceName.html",
    "title": "Property ResolvedSourceName | EyeAuras Docs",
    "keywords": "Property ResolvedSourceName ResolvedSourceName Declaration public string ResolvedSourceName { get; } Property Value Type Description string Implements IAuraModelValueProvider.ResolvedSourceName"
  },
  "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.ResolvedSourcePath.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.ResolvedSourcePath.html",
    "title": "Property ResolvedSourcePath | EyeAuras Docs",
    "keywords": "Property ResolvedSourcePath ResolvedSourcePath Declaration public string ResolvedSourcePath { get; } Property Value Type Description string Implements IAuraModelValueProvider.ResolvedSourcePath"
  },
  "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.Value.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration public object Value { get; } Property Value Type Description object Implements IValueProvider.Value"
  },
  "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.ValueWatcher.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.ValueWatcher.html",
    "title": "Property ValueWatcher | EyeAuras Docs",
    "keywords": "Property ValueWatcher ValueWatcher Declaration public IValueWatcher ValueWatcher { get; } Property Value Type Description IValueWatcher"
  },
  "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraObjectValueProvider.html",
    "title": "Class AuraObjectValueProvider | EyeAuras Docs",
    "keywords": "Class AuraObjectValueProvider Inheritance object DisposableReactiveObject AuraObjectValueProvider Implements IAuraModelValueProvider IAuraValueProvider IValueProvider IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Bindings Assembly: EyeAuras.Shared.dll Syntax public sealed class AuraObjectValueProvider : DisposableReactiveObject, IAuraModelValueProvider, IAuraValueProvider, IValueProvider, IDisposable, INotifyPropertyChanged Constructors Name Description AuraObjectValueProvider(IAuraObject, AuraBindingProperties) Properties Name Description Error HasValue Owner Properties ResolvedSource ResolvedSourceContextPath ResolvedSourceName ResolvedSourcePath Value ValueWatcher Methods Name Description FormatToString(ToStringBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Bindings.AuraReactiveBinding.-ctor.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraReactiveBinding.-ctor.html",
    "title": "Constructor AuraReactiveBinding | EyeAuras Docs",
    "keywords": "Constructor AuraReactiveBinding AuraReactiveBinding(AuraBindingType, string, IValueProvider, IValueWatcher) Declaration public AuraReactiveBinding(AuraBindingType bindingType, string targetPropertyPath, IValueProvider sourceValueProvider, IValueWatcher targetWatcher) Parameters Type Name Description AuraBindingType bindingType string targetPropertyPath IValueProvider sourceValueProvider IValueWatcher targetWatcher"
  },
  "api/EyeAuras.Shared.Bindings.AuraReactiveBinding.BindingType.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraReactiveBinding.BindingType.html",
    "title": "Property BindingType | EyeAuras Docs",
    "keywords": "Property BindingType BindingType Declaration public AuraBindingType BindingType { get; } Property Value Type Description AuraBindingType Implements IAuraReactiveBinding.BindingType"
  },
  "api/EyeAuras.Shared.Bindings.AuraReactiveBinding.SourceValueProvider.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraReactiveBinding.SourceValueProvider.html",
    "title": "Property SourceValueProvider | EyeAuras Docs",
    "keywords": "Property SourceValueProvider SourceValueProvider Declaration public IAuraModelValueProvider SourceValueProvider { get; } Property Value Type Description IAuraModelValueProvider Implements IAuraReactiveBinding.SourceValueProvider"
  },
  "api/EyeAuras.Shared.Bindings.AuraReactiveBinding.html": {
    "href": "api/EyeAuras.Shared.Bindings.AuraReactiveBinding.html",
    "title": "Class AuraReactiveBinding | EyeAuras Docs",
    "keywords": "Class AuraReactiveBinding Inheritance object DisposableReactiveObject ReactiveBinding AuraReactiveBinding Implements IAuraReactiveBinding IReactiveBinding IDisposable INotifyPropertyChanged Inherited Members ReactiveBinding.TargetPropertyPath ReactiveBinding.Error ReactiveBinding.SourceWatcher ReactiveBinding.TargetWatcher ReactiveBinding.IsActive object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Bindings Assembly: EyeAuras.Shared.dll Syntax public sealed class AuraReactiveBinding : ReactiveBinding, IAuraReactiveBinding, IReactiveBinding, IDisposable, INotifyPropertyChanged Constructors Name Description AuraReactiveBinding(AuraBindingType, string, IValueProvider, IValueWatcher) Properties Name Description BindingType SourceValueProvider Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public BindablePropertyInfo <Clone>$() Returns Type Description BindablePropertyInfo"
  },
  "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.-ctor.html": {
    "href": "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.-ctor.html",
    "title": "Constructor BindablePropertyInfo | EyeAuras Docs",
    "keywords": "Constructor BindablePropertyInfo BindablePropertyInfo(BindablePropertyInfo) Declaration public BindablePropertyInfo(BindablePropertyInfo parent) Parameters Type Name Description BindablePropertyInfo parent BindablePropertyInfo() Declaration public BindablePropertyInfo()"
  },
  "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.Depth.html": {
    "href": "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.Depth.html",
    "title": "Property Depth | EyeAuras Docs",
    "keywords": "Property Depth Depth Declaration public int Depth { get; init; } Property Value Type Description int"
  },
  "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.Description.html": {
    "href": "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.Description.html",
    "title": "Property Description | EyeAuras Docs",
    "keywords": "Property Description Description Declaration public string Description { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.Equals.html": {
    "href": "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(BindablePropertyInfo) Declaration public bool Equals(BindablePropertyInfo other) Parameters Type Name Description BindablePropertyInfo other Returns Type Description bool Implements IEquatable<T>.Equals(T) Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object)"
  },
  "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.Name.html": {
    "href": "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration public string Name { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.PropertyInfo.html": {
    "href": "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.PropertyInfo.html",
    "title": "Property PropertyInfo | EyeAuras Docs",
    "keywords": "Property PropertyInfo PropertyInfo Declaration public PropertyInfo PropertyInfo { get; init; } Property Value Type Description PropertyInfo"
  },
  "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.PropertyPath.html": {
    "href": "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.PropertyPath.html",
    "title": "Property PropertyPath | EyeAuras Docs",
    "keywords": "Property PropertyPath PropertyPath Declaration public string PropertyPath { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.RootType.html": {
    "href": "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.RootType.html",
    "title": "Property RootType | EyeAuras Docs",
    "keywords": "Property RootType RootType Declaration public Type RootType { get; init; } Property Value Type Description Type"
  },
  "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.ToString.html": {
    "href": "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.html": {
    "href": "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.html",
    "title": "Class BindablePropertyInfo | EyeAuras Docs",
    "keywords": "Class BindablePropertyInfo Inheritance object BindablePropertyInfo Implements IEquatable<BindablePropertyInfo> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Bindings Assembly: EyeAuras.Shared.dll Syntax public sealed record BindablePropertyInfo : IEquatable<BindablePropertyInfo> Constructors Name Description BindablePropertyInfo() BindablePropertyInfo(BindablePropertyInfo) Properties Name Description Depth Description Name PropertyInfo PropertyPath RootType Methods Name Description Equals(BindablePropertyInfo) Equals(object?) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(BindablePropertyInfo?, BindablePropertyInfo?) operator !=(BindablePropertyInfo?, BindablePropertyInfo?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(BindablePropertyInfo?, BindablePropertyInfo?) Declaration public static bool operator ==(BindablePropertyInfo? left, BindablePropertyInfo? right) Parameters Type Name Description BindablePropertyInfo left BindablePropertyInfo right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Bindings.BindablePropertyInfo.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(BindablePropertyInfo?, BindablePropertyInfo?) Declaration public static bool operator !=(BindablePropertyInfo? left, BindablePropertyInfo? right) Parameters Type Name Description BindablePropertyInfo left BindablePropertyInfo right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.AddBindingCommand.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.AddBindingCommand.html",
    "title": "Property AddBindingCommand | EyeAuras Docs",
    "keywords": "Property AddBindingCommand AddBindingCommand Declaration ICommand AddBindingCommand { get; } Property Value Type Description ICommand"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.AuraTree.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.AuraTree.html",
    "title": "Property AuraTree | EyeAuras Docs",
    "keywords": "Property AuraTree AuraTree Declaration IWebAuraTreeAdapter AuraTree { get; } Property Value Type Description IWebAuraTreeAdapter"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.BindablePropertiesTree.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.BindablePropertiesTree.html",
    "title": "Property BindablePropertiesTree | EyeAuras Docs",
    "keywords": "Property BindablePropertiesTree BindablePropertiesTree Declaration IReadOnlyObservableCollection<ITreeViewItemViewModel> BindablePropertiesTree { get; } Property Value Type Description IReadOnlyObservableCollection<ITreeViewItemViewModel>"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.Height.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.Height.html",
    "title": "Property Height | EyeAuras Docs",
    "keywords": "Property Height Height Declaration double Height { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.HorizontalOffset.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.HorizontalOffset.html",
    "title": "Property HorizontalOffset | EyeAuras Docs",
    "keywords": "Property HorizontalOffset HorizontalOffset Declaration double HorizontalOffset { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.IsOpen.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.IsOpen.html",
    "title": "Property IsOpen | EyeAuras Docs",
    "keywords": "Property IsOpen IsOpen Declaration bool IsOpen { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.MaxHeight.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.MaxHeight.html",
    "title": "Property MaxHeight | EyeAuras Docs",
    "keywords": "Property MaxHeight MaxHeight Declaration double MaxHeight { get; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.MaxWidth.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.MaxWidth.html",
    "title": "Property MaxWidth | EyeAuras Docs",
    "keywords": "Property MaxWidth MaxWidth Declaration double MaxWidth { get; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.MinHeight.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.MinHeight.html",
    "title": "Property MinHeight | EyeAuras Docs",
    "keywords": "Property MinHeight MinHeight Declaration double MinHeight { get; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.MinWidth.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.MinWidth.html",
    "title": "Property MinWidth | EyeAuras Docs",
    "keywords": "Property MinWidth MinWidth Declaration double MinWidth { get; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.PropertyPath.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.PropertyPath.html",
    "title": "Property PropertyPath | EyeAuras Docs",
    "keywords": "Property PropertyPath PropertyPath Declaration string PropertyPath { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.RemoveBindingCommand.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.RemoveBindingCommand.html",
    "title": "Property RemoveBindingCommand | EyeAuras Docs",
    "keywords": "Property RemoveBindingCommand RemoveBindingCommand Declaration ICommand RemoveBindingCommand { get; } Property Value Type Description ICommand"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.ResolveByPath.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.ResolveByPath.html",
    "title": "Method ResolveByPath | EyeAuras Docs",
    "keywords": "Method ResolveByPath ResolveByPath(Type, string) Declaration BindablePropertyInfo ResolveByPath(Type type, string propertyPath) Parameters Type Name Description Type type string propertyPath Returns Type Description BindablePropertyInfo"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.ShowBindings.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.ShowBindings.html",
    "title": "Property ShowBindings | EyeAuras Docs",
    "keywords": "Property ShowBindings ShowBindings Declaration bool ShowBindings { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.Value.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration IAuraObject Value { get; set; } Property Value Type Description IAuraObject"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.VerticalOffset.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.VerticalOffset.html",
    "title": "Property VerticalOffset | EyeAuras Docs",
    "keywords": "Property VerticalOffset VerticalOffset Declaration double VerticalOffset { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.Width.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.Width.html",
    "title": "Property Width | EyeAuras Docs",
    "keywords": "Property Width Width Declaration double Width { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraBindingsEditor.html",
    "title": "Interface IAuraBindingsEditor | EyeAuras Docs",
    "keywords": "Interface IAuraBindingsEditor Inherited Members IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context Namespace: EyeAuras.Shared.Bindings Assembly: EyeAuras.Shared.dll Syntax public interface IAuraBindingsEditor : IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext Properties Name Description AddBindingCommand AuraTree BindablePropertiesTree Height HorizontalOffset IsOpen MaxHeight MaxWidth MinHeight MinWidth PropertyPath RemoveBindingCommand ShowBindings Value VerticalOffset Width Methods Name Description ResolveByPath(Type, string) Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Bindings.IAuraModelValueProvider.ResolvedSource.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraModelValueProvider.ResolvedSource.html",
    "title": "Property ResolvedSource | EyeAuras Docs",
    "keywords": "Property ResolvedSource ResolvedSource Declaration IAuraObject ResolvedSource { get; } Property Value Type Description IAuraObject"
  },
  "api/EyeAuras.Shared.Bindings.IAuraModelValueProvider.ResolvedSourceName.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraModelValueProvider.ResolvedSourceName.html",
    "title": "Property ResolvedSourceName | EyeAuras Docs",
    "keywords": "Property ResolvedSourceName ResolvedSourceName Declaration string ResolvedSourceName { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Bindings.IAuraModelValueProvider.ResolvedSourcePath.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraModelValueProvider.ResolvedSourcePath.html",
    "title": "Property ResolvedSourcePath | EyeAuras Docs",
    "keywords": "Property ResolvedSourcePath ResolvedSourcePath Declaration string ResolvedSourcePath { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Bindings.IAuraModelValueProvider.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraModelValueProvider.html",
    "title": "Interface IAuraModelValueProvider | EyeAuras Docs",
    "keywords": "Interface IAuraModelValueProvider Inherited Members IAuraValueProvider.Properties IValueProvider.HasValue IValueProvider.Value IValueProvider.Error IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Bindings Assembly: EyeAuras.Shared.dll Syntax public interface IAuraModelValueProvider : IAuraValueProvider, IValueProvider, IDisposable, INotifyPropertyChanged Properties Name Description ResolvedSource ResolvedSourceName ResolvedSourcePath Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Bindings.IAuraReactiveBinding.BindingType.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraReactiveBinding.BindingType.html",
    "title": "Property BindingType | EyeAuras Docs",
    "keywords": "Property BindingType BindingType Declaration AuraBindingType BindingType { get; } Property Value Type Description AuraBindingType"
  },
  "api/EyeAuras.Shared.Bindings.IAuraReactiveBinding.SourceValueProvider.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraReactiveBinding.SourceValueProvider.html",
    "title": "Property SourceValueProvider | EyeAuras Docs",
    "keywords": "Property SourceValueProvider SourceValueProvider Declaration IAuraModelValueProvider SourceValueProvider { get; } Property Value Type Description IAuraModelValueProvider"
  },
  "api/EyeAuras.Shared.Bindings.IAuraReactiveBinding.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraReactiveBinding.html",
    "title": "Interface IAuraReactiveBinding | EyeAuras Docs",
    "keywords": "Interface IAuraReactiveBinding Inherited Members IReactiveBinding.TargetPropertyPath IReactiveBinding.Error IReactiveBinding.SourceWatcher IReactiveBinding.TargetWatcher IReactiveBinding.IsActive IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Bindings Assembly: EyeAuras.Shared.dll Syntax public interface IAuraReactiveBinding : IReactiveBinding, IDisposable, INotifyPropertyChanged Properties Name Description BindingType SourceValueProvider Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Bindings.IAuraValueProvider.Properties.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraValueProvider.Properties.html",
    "title": "Property Properties | EyeAuras Docs",
    "keywords": "Property Properties Properties Declaration AuraBindingProperties Properties { get; } Property Value Type Description AuraBindingProperties"
  },
  "api/EyeAuras.Shared.Bindings.IAuraValueProvider.html": {
    "href": "api/EyeAuras.Shared.Bindings.IAuraValueProvider.html",
    "title": "Interface IAuraValueProvider | EyeAuras Docs",
    "keywords": "Interface IAuraValueProvider Inherited Members IValueProvider.HasValue IValueProvider.Value IValueProvider.Error IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Bindings Assembly: EyeAuras.Shared.dll Syntax public interface IAuraValueProvider : IValueProvider, IDisposable, INotifyPropertyChanged Properties Name Description Properties Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Bindings.IBindablePropertyRepository.GetProperties.html": {
    "href": "api/EyeAuras.Shared.Bindings.IBindablePropertyRepository.GetProperties.html",
    "title": "Method GetProperties | EyeAuras Docs",
    "keywords": "Method GetProperties GetProperties(Type) Declaration IReadOnlyList<BindablePropertyInfo> GetProperties(Type parentType) Parameters Type Name Description Type parentType Returns Type Description IReadOnlyList<BindablePropertyInfo>"
  },
  "api/EyeAuras.Shared.Bindings.IBindablePropertyRepository.GetPropertyOrDefault.html": {
    "href": "api/EyeAuras.Shared.Bindings.IBindablePropertyRepository.GetPropertyOrDefault.html",
    "title": "Method GetPropertyOrDefault | EyeAuras Docs",
    "keywords": "Method GetPropertyOrDefault GetPropertyOrDefault(Type, string) Declaration BindablePropertyInfo GetPropertyOrDefault(Type parentType, string propertyPath) Parameters Type Name Description Type parentType string propertyPath Returns Type Description BindablePropertyInfo"
  },
  "api/EyeAuras.Shared.Bindings.IBindablePropertyRepository.html": {
    "href": "api/EyeAuras.Shared.Bindings.IBindablePropertyRepository.html",
    "title": "Interface IBindablePropertyRepository | EyeAuras Docs",
    "keywords": "Interface IBindablePropertyRepository Namespace: EyeAuras.Shared.Bindings Assembly: EyeAuras.Shared.dll Syntax public interface IBindablePropertyRepository Methods Name Description GetProperties(Type) GetPropertyOrDefault(Type, string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Bindings.IWebAuraTreeAdapter.SelectedItem.html": {
    "href": "api/EyeAuras.Shared.Bindings.IWebAuraTreeAdapter.SelectedItem.html",
    "title": "Property SelectedItem | EyeAuras Docs",
    "keywords": "Property SelectedItem SelectedItem Declaration ITreeViewItemViewModel SelectedItem { get; set; } Property Value Type Description ITreeViewItemViewModel"
  },
  "api/EyeAuras.Shared.Bindings.IWebAuraTreeAdapter.html": {
    "href": "api/EyeAuras.Shared.Bindings.IWebAuraTreeAdapter.html",
    "title": "Interface IWebAuraTreeAdapter | EyeAuras Docs",
    "keywords": "Interface IWebAuraTreeAdapter Namespace: EyeAuras.Shared.Bindings Assembly: EyeAuras.Shared.dll Syntax public interface IWebAuraTreeAdapter Properties Name Description SelectedItem Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Bindings.html": {
    "href": "api/EyeAuras.Shared.Bindings.html",
    "title": "Namespace EyeAuras.Shared.Bindings | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Shared.Bindings Classes AuraBindingProperties AuraBindingPropertiesV1 AuraBindingPropertiesV2 AuraObjectValueProvider AuraReactiveBinding BindablePropertyInfo Interfaces IAuraBindingsEditor IAuraModelValueProvider IAuraReactiveBinding IAuraValueProvider IBindablePropertyRepository IWebAuraTreeAdapter Enums AuraBindingType"
  },
  "api/EyeAuras.Shared.ContextInheritor-3.-ctor.html": {
    "href": "api/EyeAuras.Shared.ContextInheritor-3.-ctor.html",
    "title": "Constructor ContextInheritor | EyeAuras Docs",
    "keywords": "Constructor ContextInheritor ContextInheritor(TTarget, TSrc, Expression<Func<TSrc, TContext>>) Declaration public ContextInheritor(TTarget target, TSrc source, Expression<Func<TSrc, TContext>> sourceExpr) Parameters Type Name Description TTarget target TSrc source Expression<Func<TSrc, TContext>> sourceExpr"
  },
  "api/EyeAuras.Shared.ContextInheritor-3.html": {
    "href": "api/EyeAuras.Shared.ContextInheritor-3.html",
    "title": "Class ContextInheritor<TTarget, TSrc, TContext> | EyeAuras Docs",
    "keywords": "Class ContextInheritor<TTarget, TSrc, TContext> Inheritance object DisposableReactiveObject ContextInheritor<TTarget, TSrc, TContext> Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public sealed class ContextInheritor<TTarget, TSrc, TContext> : DisposableReactiveObject, IDisposable, INotifyPropertyChanged where TTarget : ICanSetContext where TSrc : IDisposableReactiveObject where TContext : IEyeContext Type Parameters Name Description TTarget TSrc TContext Constructors Name Description ContextInheritor(TTarget, TSrc, Expression<Func<TSrc, TContext>>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.-ctor.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.-ctor.html",
    "title": "Constructor AuraEntityEditorViewModel | EyeAuras Docs",
    "keywords": "Constructor AuraEntityEditorViewModel AuraEntityEditorViewModel(TListEditor, IEntityContainer, ISourceList<T>, IPropertyEditorViewModel) Declaration public AuraEntityEditorViewModel(TListEditor owner, IEntityContainer container, ISourceList<T> itemList, IPropertyEditorViewModel propertyEditor) Parameters Type Name Description TListEditor owner IEntityContainer container ISourceList<T> itemList IPropertyEditorViewModel propertyEditor"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.CanClose.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.CanClose.html",
    "title": "Property CanClose | EyeAuras Docs",
    "keywords": "Property CanClose CanClose Declaration public bool CanClose { get; } Property Value Type Description bool Implements IPropertyEditorViewModel.CanClose"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.CloseCommand.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.CloseCommand.html",
    "title": "Property CloseCommand | EyeAuras Docs",
    "keywords": "Property CloseCommand CloseCommand Declaration public ICommand CloseCommand { get; } Property Value Type Description ICommand Implements IPropertyEditorViewModel.CloseCommand"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.CloseController.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.CloseController.html",
    "title": "Property CloseController | EyeAuras Docs",
    "keywords": "Property CloseController CloseController Declaration public ICloseController CloseController { get; set; } Property Value Type Description ICloseController Implements ICloseable.CloseController"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.FormatToString.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides DisposableReactiveObject.FormatToString(ToStringBuilder)"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.Index.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.Index.html",
    "title": "Property Index | EyeAuras Docs",
    "keywords": "Property Index Index Declaration public int Index { get; set; } Property Value Type Description int Implements ICanSetIndex.Index IHasIndex.Index"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.IsEnabled.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description bool Implements IPropertyEditorViewModel.IsEnabled"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.IsLoaded.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.IsLoaded.html",
    "title": "Property IsLoaded | EyeAuras Docs",
    "keywords": "Property IsLoaded IsLoaded Declaration public bool IsLoaded { get; set; } Property Value Type Description bool Implements IPropertyEditorViewModel.IsLoaded"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.IsMouseOver.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.IsMouseOver.html",
    "title": "Property IsMouseOver | EyeAuras Docs",
    "keywords": "Property IsMouseOver IsMouseOver Declaration public bool IsMouseOver { get; set; } Property Value Type Description bool Implements IAuraEntityEditorViewModel.IsMouseOver"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.IsReadOnly.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.IsReadOnly.html",
    "title": "Property IsReadOnly | EyeAuras Docs",
    "keywords": "Property IsReadOnly IsReadOnly Declaration public bool IsReadOnly { get; set; } Property Value Type Description bool Implements IPropertyEditorViewModel.IsReadOnly"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.IsVisible.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.IsVisible.html",
    "title": "Property IsVisible | EyeAuras Docs",
    "keywords": "Property IsVisible IsVisible Declaration public bool IsVisible { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.ItemContainer.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.ItemContainer.html",
    "title": "Property ItemContainer | EyeAuras Docs",
    "keywords": "Property ItemContainer ItemContainer Declaration public IEntityContainer ItemContainer { get; } Property Value Type Description IEntityContainer Implements IAuraEntityEditorViewModel.ItemContainer"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.ItemList.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.ItemList.html",
    "title": "Property ItemList | EyeAuras Docs",
    "keywords": "Property ItemList ItemList Declaration public ISourceList<T> ItemList { get; } Property Value Type Description ISourceList<T> Implements IAuraEntityEditorViewModel<T>.ItemList"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.Owner.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.Owner.html",
    "title": "Property Owner | EyeAuras Docs",
    "keywords": "Property Owner Owner Declaration public TListEditor Owner { get; } Property Value Type Description TListEditor Implements IAuraEntityEditorViewModel<T, TListEditor>.Owner"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.PropertyEditor.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.PropertyEditor.html",
    "title": "Property PropertyEditor | EyeAuras Docs",
    "keywords": "Property PropertyEditor PropertyEditor Declaration public IPropertyEditorViewModel PropertyEditor { get; } Property Value Type Description IPropertyEditorViewModel Implements IAuraEntityEditorViewModel.PropertyEditor"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.Value.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration public T Value { get; set; } Property Value Type Description T Implements IAuraEntityEditorViewModel<T>.Value"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.ValueEditor.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.ValueEditor.html",
    "title": "Property ValueEditor | EyeAuras Docs",
    "keywords": "Property ValueEditor ValueEditor Declaration public IAuraPropertiesEditor ValueEditor { get; } Property Value Type Description IAuraPropertiesEditor Implements IPropertyEditorViewModel.ValueEditor"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.ValueType.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.ValueType.html",
    "title": "Property ValueType | EyeAuras Docs",
    "keywords": "Property ValueType ValueType Declaration public Type ValueType { get; set; } Property Value Type Description Type Implements IPropertyEditorViewModel.ValueType"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityEditorViewModel-2.html",
    "title": "Class AuraEntityEditorViewModel<T, TListEditor> | EyeAuras Docs",
    "keywords": "Class AuraEntityEditorViewModel<T, TListEditor> Inheritance object DisposableReactiveObject AuraEntityEditorViewModel<T, TListEditor> Implements IAuraEntityEditorViewModel<T, TListEditor> IAuraEntityEditorViewModel<T> IAuraEntityEditorViewModel IDisposable IPropertyEditorViewModel ICloseable ICanSetIndex IHasIndex INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.EntityListEditor Assembly: EyeAuras.Shared.dll Syntax public class AuraEntityEditorViewModel<T, TListEditor> : DisposableReactiveObject, IAuraEntityEditorViewModel<T, TListEditor>, IAuraEntityEditorViewModel<T>, IAuraEntityEditorViewModel, IDisposable, IPropertyEditorViewModel, ICloseable, ICanSetIndex, IHasIndex, INotifyPropertyChanged where T : IAuraObject where TListEditor : class, IAuraEntityListEditorViewModel<T>, IGenericAuraEntityListEditorViewModel Type Parameters Name Description T TListEditor Constructors Name Description AuraEntityEditorViewModel(TListEditor, IEntityContainer, ISourceList<T>, IPropertyEditorViewModel) Properties Name Description CanClose CloseCommand CloseController Index IsEnabled IsLoaded IsMouseOver IsReadOnly IsVisible ItemContainer ItemList Owner PropertyEditor Value ValueEditor ValueType Methods Name Description FormatToString(ToStringBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.-ctor.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.-ctor.html",
    "title": "Constructor AuraEntityListEditorViewModelBase | EyeAuras Docs",
    "keywords": "Constructor AuraEntityListEditorViewModelBase AuraEntityListEditorViewModelBase(Expression<Func<TContainer, TList>>, IAuraRepository, IEyeEntityFactory, IFactory<IPropertyEditorViewModel>, IClipboardManager, IConfigSerializer, IFactory<IAuraEntityListDropHandler<T>, IAuraEntityListEditorViewModel>) Declaration public AuraEntityListEditorViewModelBase(Expression<Func<TContainer, TList>> listSelector, IAuraRepository repository, IEyeEntityFactory entityFactory, IFactory<IPropertyEditorViewModel> propertiesEditorFactory, IClipboardManager clipboardManager, IConfigSerializer configSerializer, IFactory<IAuraEntityListDropHandler<T>, IAuraEntityListEditorViewModel> dragDropHandlerFactory) Parameters Type Name Description Expression<Func<TContainer, TList>> listSelector IAuraRepository repository IEyeEntityFactory entityFactory IFactory<IPropertyEditorViewModel> propertiesEditorFactory IClipboardManager clipboardManager IConfigSerializer configSerializer IFactory<IAuraEntityListDropHandler<T>, IAuraEntityListEditorViewModel> dragDropHandlerFactory"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.Add.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.Add.html",
    "title": "Property Add | EyeAuras Docs",
    "keywords": "Property Add Add Declaration public CommandWrapper Add { get; } Property Value Type Description CommandWrapper Implements IAuraEntityListEditorViewModel.Add"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.AddNewEntity.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.AddNewEntity.html",
    "title": "Method AddNewEntity | EyeAuras Docs",
    "keywords": "Method AddNewEntity AddNewEntity(T) Declaration protected virtual Task<T> AddNewEntity(T sample) Parameters Type Name Description T sample Returns Type Description Task<T>"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.CanModifyItemProperties.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.CanModifyItemProperties.html",
    "title": "Property CanModifyItemProperties | EyeAuras Docs",
    "keywords": "Property CanModifyItemProperties CanModifyItemProperties Declaration public bool CanModifyItemProperties { get; set; } Property Value Type Description bool Implements IAuraEntityListEditorViewModel.CanModifyItemProperties"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.CanModifyItems.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.CanModifyItems.html",
    "title": "Property CanModifyItems | EyeAuras Docs",
    "keywords": "Property CanModifyItems CanModifyItems Declaration public bool CanModifyItems { get; set; } Property Value Type Description bool Implements IAuraEntityListEditorViewModel.CanModifyItems"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.Clear.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.Clear.html",
    "title": "Property Clear | EyeAuras Docs",
    "keywords": "Property Clear Clear Declaration public CommandWrapper Clear { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.CloneActionCommand.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.CloneActionCommand.html",
    "title": "Property CloneActionCommand | EyeAuras Docs",
    "keywords": "Property CloneActionCommand CloneActionCommand Declaration public CommandWrapper CloneActionCommand { get; } Property Value Type Description CommandWrapper Implements IAuraEntityListEditorViewModel.CloneActionCommand"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.CopyIdToClipboard.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.CopyIdToClipboard.html",
    "title": "Property CopyIdToClipboard | EyeAuras Docs",
    "keywords": "Property CopyIdToClipboard CopyIdToClipboard Declaration public CommandWrapper CopyIdToClipboard { get; } Property Value Type Description CommandWrapper Implements IAuraEntityListEditorViewModel.CopyIdToClipboard"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.CopyPropertiesToClipboard.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.CopyPropertiesToClipboard.html",
    "title": "Property CopyPropertiesToClipboard | EyeAuras Docs",
    "keywords": "Property CopyPropertiesToClipboard CopyPropertiesToClipboard Declaration public CommandWrapper CopyPropertiesToClipboard { get; } Property Value Type Description CommandWrapper Implements IAuraEntityListEditorViewModel.CopyPropertiesToClipboard"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.Count.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public int Count { get; } Property Value Type Description int Implements IAuraEntityListEditorViewModel.Count"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.CreateEntityEditor.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.CreateEntityEditor.html",
    "title": "Method CreateEntityEditor | EyeAuras Docs",
    "keywords": "Method CreateEntityEditor CreateEntityEditor(IPropertyEditorViewModel) Declaration protected abstract IAuraEntityEditorViewModel CreateEntityEditor(IPropertyEditorViewModel propertyEditor) Parameters Type Name Description IPropertyEditorViewModel propertyEditor Returns Type Description IAuraEntityEditorViewModel"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.DropTarget.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.DropTarget.html",
    "title": "Property DropTarget | EyeAuras Docs",
    "keywords": "Property DropTarget DropTarget Declaration public IDropTarget DropTarget { get; } Property Value Type Description IDropTarget Implements IAuraEntityListEditorViewModel.DropTarget"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.Editors.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.Editors.html",
    "title": "Property Editors | EyeAuras Docs",
    "keywords": "Property Editors Editors Declaration public IObservableList<IAuraEntityEditorViewModel> Editors { get; } Property Value Type Description IObservableList<IAuraEntityEditorViewModel>"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.EditorsCollectionView.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.EditorsCollectionView.html",
    "title": "Property EditorsCollectionView | EyeAuras Docs",
    "keywords": "Property EditorsCollectionView EditorsCollectionView Declaration public ICollectionView EditorsCollectionView { get; } Property Value Type Description ICollectionView Implements IAuraEntityListEditorViewModel.EditorsCollectionView"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.EntityList.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.EntityList.html",
    "title": "Property EntityList | EyeAuras Docs",
    "keywords": "Property EntityList EntityList Declaration public TList EntityList { get; } Property Value Type Description TList Implements IAuraEntityListEditorViewModel<TList, T>.EntityList"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.ExecuteCommand.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.ExecuteCommand.html",
    "title": "Property ExecuteCommand | EyeAuras Docs",
    "keywords": "Property ExecuteCommand ExecuteCommand Declaration public CommandWrapper ExecuteCommand { get; } Property Value Type Description CommandWrapper Implements IAuraEntityListEditorViewModel.ExecuteCommand"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.HideAll.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.HideAll.html",
    "title": "Property HideAll | EyeAuras Docs",
    "keywords": "Property HideAll HideAll Declaration public CommandWrapper HideAll { get; } Property Value Type Description CommandWrapper Implements IAuraEntityListEditorViewModel.HideAll"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.IsEmpty.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.IsEmpty.html",
    "title": "Property IsEmpty | EyeAuras Docs",
    "keywords": "Property IsEmpty IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description bool Implements IAuraEntityListEditorViewModel.IsEmpty"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.IsPrivate.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.IsPrivate.html",
    "title": "Property IsPrivate | EyeAuras Docs",
    "keywords": "Property IsPrivate IsPrivate Declaration protected bool IsPrivate { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.KnownEntities.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.KnownEntities.html",
    "title": "Property KnownEntities | EyeAuras Docs",
    "keywords": "Property KnownEntities KnownEntities Declaration public IReadOnlyObservableCollection<T> KnownEntities { get; } Property Value Type Description IReadOnlyObservableCollection<T> Implements IAuraEntityListEditorViewModel<TContainer, TList, T>.KnownEntities"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.LoadAll.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.LoadAll.html",
    "title": "Property LoadAll | EyeAuras Docs",
    "keywords": "Property LoadAll LoadAll Declaration public CommandWrapper LoadAll { get; } Property Value Type Description CommandWrapper Implements IAuraEntityListEditorViewModel.LoadAll"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.MouseOverValue.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.MouseOverValue.html",
    "title": "Property MouseOverValue | EyeAuras Docs",
    "keywords": "Property MouseOverValue MouseOverValue Declaration public T MouseOverValue { get; } Property Value Type Description T Implements IAuraEntityListEditorViewModel<T>.MouseOverValue"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.MoveItemDown.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.MoveItemDown.html",
    "title": "Property MoveItemDown | EyeAuras Docs",
    "keywords": "Property MoveItemDown MoveItemDown Declaration public CommandWrapper MoveItemDown { get; } Property Value Type Description CommandWrapper Implements IAuraEntityListEditorViewModel.MoveItemDown"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.MoveItemToBottom.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.MoveItemToBottom.html",
    "title": "Property MoveItemToBottom | EyeAuras Docs",
    "keywords": "Property MoveItemToBottom MoveItemToBottom Declaration public CommandWrapper MoveItemToBottom { get; } Property Value Type Description CommandWrapper Implements IAuraEntityListEditorViewModel.MoveItemToBottom"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.MoveItemToTop.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.MoveItemToTop.html",
    "title": "Property MoveItemToTop | EyeAuras Docs",
    "keywords": "Property MoveItemToTop MoveItemToTop Declaration public CommandWrapper MoveItemToTop { get; } Property Value Type Description CommandWrapper Implements IAuraEntityListEditorViewModel.MoveItemToTop"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.MoveItemUp.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.MoveItemUp.html",
    "title": "Property MoveItemUp | EyeAuras Docs",
    "keywords": "Property MoveItemUp MoveItemUp Declaration public CommandWrapper MoveItemUp { get; } Property Value Type Description CommandWrapper Implements IAuraEntityListEditorViewModel.MoveItemUp"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.PastePropertiesFromClipboard.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.PastePropertiesFromClipboard.html",
    "title": "Property PastePropertiesFromClipboard | EyeAuras Docs",
    "keywords": "Property PastePropertiesFromClipboard PastePropertiesFromClipboard Declaration public CommandWrapper PastePropertiesFromClipboard { get; } Property Value Type Description CommandWrapper Implements IAuraEntityListEditorViewModel.PastePropertiesFromClipboard"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.ResolveProperties.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.ResolveProperties.html",
    "title": "Method ResolveProperties | EyeAuras Docs",
    "keywords": "Method ResolveProperties ResolveProperties(IAuraProperties) Declaration protected virtual IAuraProperties ResolveProperties(IAuraProperties entityProperties) Parameters Type Name Description IAuraProperties entityProperties Returns Type Description IAuraProperties"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.SelectedItem.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.SelectedItem.html",
    "title": "Property SelectedItem | EyeAuras Docs",
    "keywords": "Property SelectedItem SelectedItem Declaration public IAuraEntityEditorViewModel SelectedItem { get; set; } Property Value Type Description IAuraEntityEditorViewModel Implements IAuraEntityListEditorViewModel.SelectedItem"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.ShowAddNewItem.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.ShowAddNewItem.html",
    "title": "Property ShowAddNewItem | EyeAuras Docs",
    "keywords": "Property ShowAddNewItem ShowAddNewItem Declaration public bool ShowAddNewItem { get; set; } Property Value Type Description bool Implements IAuraEntityListEditorViewModel.ShowAddNewItem"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.ShowAll.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.ShowAll.html",
    "title": "Property ShowAll | EyeAuras Docs",
    "keywords": "Property ShowAll ShowAll Declaration public CommandWrapper ShowAll { get; } Property Value Type Description CommandWrapper Implements IAuraEntityListEditorViewModel.ShowAll"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.Source.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.Source.html",
    "title": "Property Source | EyeAuras Docs",
    "keywords": "Property Source Source Declaration public TContainer Source { get; set; } Property Value Type Description TContainer Implements IAuraEntityListEditorViewModel<TContainer, TList, T>.Source"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.UnloadAll.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.UnloadAll.html",
    "title": "Property UnloadAll | EyeAuras Docs",
    "keywords": "Property UnloadAll UnloadAll Declaration public CommandWrapper UnloadAll { get; } Property Value Type Description CommandWrapper Implements IAuraEntityListEditorViewModel.UnloadAll"
  },
  "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.AuraEntityListEditorViewModelBase-3.html",
    "title": "Class AuraEntityListEditorViewModelBase<TContainer, TList, T> | EyeAuras Docs",
    "keywords": "Class AuraEntityListEditorViewModelBase<TContainer, TList, T> Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger AuraEntityListEditorViewModelBase<TContainer, TList, T> Implements IAuraEntityListEditorViewModel<TContainer, TList, T> IAuraEntityListEditorViewModel<TList, T> IAuraEntityListEditorViewModel<T> IAuraEntityListEditorViewModel IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.EntityListEditor Assembly: EyeAuras.Shared.dll Syntax public abstract class AuraEntityListEditorViewModelBase<TContainer, TList, T> : DisposableReactiveObjectWithLogger, IAuraEntityListEditorViewModel<TContainer, TList, T>, IAuraEntityListEditorViewModel<TList, T>, IAuraEntityListEditorViewModel<T>, IAuraEntityListEditorViewModel, IDisposable, INotifyPropertyChanged where TContainer : IEntityContainer where TList : class, ISourceList<T> where T : class, IAuraEntity Type Parameters Name Description TContainer TList T Constructors Name Description AuraEntityListEditorViewModelBase(Expression<Func<TContainer, TList>>, IAuraRepository, IEyeEntityFactory, IFactory<IPropertyEditorViewModel>, IClipboardManager, IConfigSerializer, IFactory<IAuraEntityListDropHandler<T>, IAuraEntityListEditorViewModel>) Properties Name Description Add CanModifyItemProperties CanModifyItems Clear CloneActionCommand CopyIdToClipboard CopyPropertiesToClipboard Count DropTarget Editors EditorsCollectionView EntityList ExecuteCommand HideAll IsEmpty IsPrivate KnownEntities LoadAll MouseOverValue MoveItemDown MoveItemToBottom MoveItemToTop MoveItemUp PastePropertiesFromClipboard SelectedItem ShowAddNewItem ShowAll Source UnloadAll Methods Name Description AddNewEntity(T) CreateEntityEditor(IPropertyEditorViewModel) ResolveProperties(IAuraProperties) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel-1.ItemList.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel-1.ItemList.html",
    "title": "Property ItemList | EyeAuras Docs",
    "keywords": "Property ItemList ItemList Declaration ISourceList<T> ItemList { get; } Property Value Type Description ISourceList<T>"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel-1.Owner.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel-1.Owner.html",
    "title": "Property Owner | EyeAuras Docs",
    "keywords": "Property Owner Owner Declaration IAuraEntityListEditorViewModel<T> Owner { get; } Property Value Type Description IAuraEntityListEditorViewModel<T>"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel-1.Value.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel-1.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration T Value { get; set; } Property Value Type Description T"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel-1.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel-1.html",
    "title": "Interface IAuraEntityEditorViewModel<T> | EyeAuras Docs",
    "keywords": "Interface IAuraEntityEditorViewModel<T> Inherited Members IAuraEntityEditorViewModel.ItemContainer IAuraEntityEditorViewModel.PropertyEditor IAuraEntityEditorViewModel.IsMouseOver IDisposable.Dispose() IPropertyEditorViewModel.CloseCommand IPropertyEditorViewModel.ValueEditor IPropertyEditorViewModel.ValueType IPropertyEditorViewModel.IsLoaded IPropertyEditorViewModel.IsEnabled IPropertyEditorViewModel.IsReadOnly IPropertyEditorViewModel.CanClose ICloseable.CloseController ICanSetIndex.Index INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.EntityListEditor Assembly: EyeAuras.Shared.dll Syntax public interface IAuraEntityEditorViewModel<T> : IAuraEntityEditorViewModel, IDisposable, IPropertyEditorViewModel, ICloseable, ICanSetIndex, IHasIndex, INotifyPropertyChanged where T : IAuraObject Type Parameters Name Description T Properties Name Description ItemList Owner Value Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel-2.Owner.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel-2.Owner.html",
    "title": "Property Owner | EyeAuras Docs",
    "keywords": "Property Owner Owner Declaration TListEditor Owner { get; } Property Value Type Description TListEditor"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel-2.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel-2.html",
    "title": "Interface IAuraEntityEditorViewModel<T, TListEditor> | EyeAuras Docs",
    "keywords": "Interface IAuraEntityEditorViewModel<T, TListEditor> Inherited Members IAuraEntityEditorViewModel<T>.Value IAuraEntityEditorViewModel<T>.ItemList IAuraEntityEditorViewModel.ItemContainer IAuraEntityEditorViewModel.PropertyEditor IAuraEntityEditorViewModel.IsMouseOver IDisposable.Dispose() IPropertyEditorViewModel.CloseCommand IPropertyEditorViewModel.ValueEditor IPropertyEditorViewModel.ValueType IPropertyEditorViewModel.IsLoaded IPropertyEditorViewModel.IsEnabled IPropertyEditorViewModel.IsReadOnly IPropertyEditorViewModel.CanClose ICloseable.CloseController ICanSetIndex.Index INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.EntityListEditor Assembly: EyeAuras.Shared.dll Syntax public interface IAuraEntityEditorViewModel<T, out TListEditor> : IAuraEntityEditorViewModel<T>, IAuraEntityEditorViewModel, IDisposable, IPropertyEditorViewModel, ICloseable, ICanSetIndex, IHasIndex, INotifyPropertyChanged where T : IAuraObject where TListEditor : class, IAuraEntityListEditorViewModel<T> Type Parameters Name Description T TListEditor Properties Name Description Owner Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel.IsMouseOver.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel.IsMouseOver.html",
    "title": "Property IsMouseOver | EyeAuras Docs",
    "keywords": "Property IsMouseOver IsMouseOver Declaration bool IsMouseOver { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel.ItemContainer.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel.ItemContainer.html",
    "title": "Property ItemContainer | EyeAuras Docs",
    "keywords": "Property ItemContainer ItemContainer Declaration IEntityContainer ItemContainer { get; } Property Value Type Description IEntityContainer"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel.Owner.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel.Owner.html",
    "title": "Property Owner | EyeAuras Docs",
    "keywords": "Property Owner Owner Declaration IGenericAuraEntityListEditorViewModel Owner { get; } Property Value Type Description IGenericAuraEntityListEditorViewModel"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel.PropertyEditor.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel.PropertyEditor.html",
    "title": "Property PropertyEditor | EyeAuras Docs",
    "keywords": "Property PropertyEditor PropertyEditor Declaration IPropertyEditorViewModel PropertyEditor { get; } Property Value Type Description IPropertyEditorViewModel"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityEditorViewModel.html",
    "title": "Interface IAuraEntityEditorViewModel | EyeAuras Docs",
    "keywords": "Interface IAuraEntityEditorViewModel Inherited Members IDisposable.Dispose() IPropertyEditorViewModel.CloseCommand IPropertyEditorViewModel.Value IPropertyEditorViewModel.ValueEditor IPropertyEditorViewModel.ValueType IPropertyEditorViewModel.IsLoaded IPropertyEditorViewModel.IsEnabled IPropertyEditorViewModel.IsReadOnly IPropertyEditorViewModel.CanClose ICloseable.CloseController ICanSetIndex.Index INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.EntityListEditor Assembly: EyeAuras.Shared.dll Syntax public interface IAuraEntityEditorViewModel : IDisposable, IPropertyEditorViewModel, ICloseable, ICanSetIndex, IHasIndex, INotifyPropertyChanged Properties Name Description IsMouseOver ItemContainer Owner PropertyEditor Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListDropHandler-1.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListDropHandler-1.html",
    "title": "Interface IAuraEntityListDropHandler<T> | EyeAuras Docs",
    "keywords": "Interface IAuraEntityListDropHandler<T> Inherited Members IDropTarget.DragEnter(IDropInfo) IDropTarget.DragOver(IDropInfo) IDropTarget.DragLeave(IDropInfo) IDropTarget.Drop(IDropInfo) Namespace: EyeAuras.Shared.EntityListEditor Assembly: EyeAuras.Shared.dll Syntax public interface IAuraEntityListDropHandler<T> : IDropTarget where T : class, IAuraObject Type Parameters Name Description T Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-1.EntityList.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-1.EntityList.html",
    "title": "Property EntityList | EyeAuras Docs",
    "keywords": "Property EntityList EntityList Declaration ISourceList<T> EntityList { get; } Property Value Type Description ISourceList<T>"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-1.MouseOverValue.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-1.MouseOverValue.html",
    "title": "Property MouseOverValue | EyeAuras Docs",
    "keywords": "Property MouseOverValue MouseOverValue Declaration T MouseOverValue { get; } Property Value Type Description T"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-1.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-1.html",
    "title": "Interface IAuraEntityListEditorViewModel<T> | EyeAuras Docs",
    "keywords": "Interface IAuraEntityListEditorViewModel<T> Inherited Members IAuraEntityListEditorViewModel.EditorsCollectionView IAuraEntityListEditorViewModel.Add IAuraEntityListEditorViewModel.ExecuteCommand IAuraEntityListEditorViewModel.CopyPropertiesToClipboard IAuraEntityListEditorViewModel.PastePropertiesFromClipboard IAuraEntityListEditorViewModel.CloneActionCommand IAuraEntityListEditorViewModel.CopyIdToClipboard IAuraEntityListEditorViewModel.UnloadAll IAuraEntityListEditorViewModel.LoadAll IAuraEntityListEditorViewModel.ShowAll IAuraEntityListEditorViewModel.HideAll IAuraEntityListEditorViewModel.MoveItemUp IAuraEntityListEditorViewModel.MoveItemDown IAuraEntityListEditorViewModel.MoveItemToTop IAuraEntityListEditorViewModel.MoveItemToBottom IAuraEntityListEditorViewModel.CanModifyItems IAuraEntityListEditorViewModel.CanModifyItemProperties IAuraEntityListEditorViewModel.IsEmpty IAuraEntityListEditorViewModel.Count IAuraEntityListEditorViewModel.DropTarget IAuraEntityListEditorViewModel.Source IAuraEntityListEditorViewModel.ShowAddNewItem IAuraEntityListEditorViewModel.SelectedItem IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.EntityListEditor Assembly: EyeAuras.Shared.dll Syntax public interface IAuraEntityListEditorViewModel<T> : IAuraEntityListEditorViewModel, IDisposable, INotifyPropertyChanged Type Parameters Name Description T Properties Name Description EntityList MouseOverValue Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-2.EntityList.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-2.EntityList.html",
    "title": "Property EntityList | EyeAuras Docs",
    "keywords": "Property EntityList EntityList Declaration TList EntityList { get; } Property Value Type Description TList"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-2.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-2.html",
    "title": "Interface IAuraEntityListEditorViewModel<TList, T> | EyeAuras Docs",
    "keywords": "Interface IAuraEntityListEditorViewModel<TList, T> Inherited Members IAuraEntityListEditorViewModel<T>.MouseOverValue IAuraEntityListEditorViewModel.EditorsCollectionView IAuraEntityListEditorViewModel.Add IAuraEntityListEditorViewModel.ExecuteCommand IAuraEntityListEditorViewModel.CopyPropertiesToClipboard IAuraEntityListEditorViewModel.PastePropertiesFromClipboard IAuraEntityListEditorViewModel.CloneActionCommand IAuraEntityListEditorViewModel.CopyIdToClipboard IAuraEntityListEditorViewModel.UnloadAll IAuraEntityListEditorViewModel.LoadAll IAuraEntityListEditorViewModel.ShowAll IAuraEntityListEditorViewModel.HideAll IAuraEntityListEditorViewModel.MoveItemUp IAuraEntityListEditorViewModel.MoveItemDown IAuraEntityListEditorViewModel.MoveItemToTop IAuraEntityListEditorViewModel.MoveItemToBottom IAuraEntityListEditorViewModel.CanModifyItems IAuraEntityListEditorViewModel.CanModifyItemProperties IAuraEntityListEditorViewModel.IsEmpty IAuraEntityListEditorViewModel.Count IAuraEntityListEditorViewModel.DropTarget IAuraEntityListEditorViewModel.Source IAuraEntityListEditorViewModel.ShowAddNewItem IAuraEntityListEditorViewModel.SelectedItem IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.EntityListEditor Assembly: EyeAuras.Shared.dll Syntax public interface IAuraEntityListEditorViewModel<out TList, T> : IAuraEntityListEditorViewModel<T>, IAuraEntityListEditorViewModel, IDisposable, INotifyPropertyChanged where TList : ISourceList<T> Type Parameters Name Description TList T Properties Name Description EntityList Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-3.KnownEntities.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-3.KnownEntities.html",
    "title": "Property KnownEntities | EyeAuras Docs",
    "keywords": "Property KnownEntities KnownEntities Declaration IReadOnlyObservableCollection<T> KnownEntities { get; } Property Value Type Description IReadOnlyObservableCollection<T>"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-3.Source.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-3.Source.html",
    "title": "Property Source | EyeAuras Docs",
    "keywords": "Property Source Source Declaration TContainer Source { get; set; } Property Value Type Description TContainer"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-3.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel-3.html",
    "title": "Interface IAuraEntityListEditorViewModel<TContainer, TList, T> | EyeAuras Docs",
    "keywords": "Interface IAuraEntityListEditorViewModel<TContainer, TList, T> Inherited Members IAuraEntityListEditorViewModel<TList, T>.EntityList IAuraEntityListEditorViewModel<T>.MouseOverValue IAuraEntityListEditorViewModel<T>.EntityList IAuraEntityListEditorViewModel.EditorsCollectionView IAuraEntityListEditorViewModel.Add IAuraEntityListEditorViewModel.ExecuteCommand IAuraEntityListEditorViewModel.CopyPropertiesToClipboard IAuraEntityListEditorViewModel.PastePropertiesFromClipboard IAuraEntityListEditorViewModel.CloneActionCommand IAuraEntityListEditorViewModel.CopyIdToClipboard IAuraEntityListEditorViewModel.UnloadAll IAuraEntityListEditorViewModel.LoadAll IAuraEntityListEditorViewModel.ShowAll IAuraEntityListEditorViewModel.HideAll IAuraEntityListEditorViewModel.MoveItemUp IAuraEntityListEditorViewModel.MoveItemDown IAuraEntityListEditorViewModel.MoveItemToTop IAuraEntityListEditorViewModel.MoveItemToBottom IAuraEntityListEditorViewModel.CanModifyItems IAuraEntityListEditorViewModel.CanModifyItemProperties IAuraEntityListEditorViewModel.IsEmpty IAuraEntityListEditorViewModel.Count IAuraEntityListEditorViewModel.DropTarget IAuraEntityListEditorViewModel.ShowAddNewItem IAuraEntityListEditorViewModel.SelectedItem IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.EntityListEditor Assembly: EyeAuras.Shared.dll Syntax public interface IAuraEntityListEditorViewModel<TContainer, out TList, T> : IAuraEntityListEditorViewModel<TList, T>, IAuraEntityListEditorViewModel<T>, IAuraEntityListEditorViewModel, IDisposable, INotifyPropertyChanged where TContainer : IEntityContainer where TList : ISourceList<T> where T : class, IAuraEntity Type Parameters Name Description TContainer TList T Properties Name Description KnownEntities Source Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.Add.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.Add.html",
    "title": "Property Add | EyeAuras Docs",
    "keywords": "Property Add Add Declaration CommandWrapper Add { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.CanModifyItemProperties.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.CanModifyItemProperties.html",
    "title": "Property CanModifyItemProperties | EyeAuras Docs",
    "keywords": "Property CanModifyItemProperties CanModifyItemProperties Declaration bool CanModifyItemProperties { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.CanModifyItems.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.CanModifyItems.html",
    "title": "Property CanModifyItems | EyeAuras Docs",
    "keywords": "Property CanModifyItems CanModifyItems Declaration bool CanModifyItems { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.CloneActionCommand.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.CloneActionCommand.html",
    "title": "Property CloneActionCommand | EyeAuras Docs",
    "keywords": "Property CloneActionCommand CloneActionCommand Declaration CommandWrapper CloneActionCommand { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.CopyIdToClipboard.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.CopyIdToClipboard.html",
    "title": "Property CopyIdToClipboard | EyeAuras Docs",
    "keywords": "Property CopyIdToClipboard CopyIdToClipboard Declaration CommandWrapper CopyIdToClipboard { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.CopyPropertiesToClipboard.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.CopyPropertiesToClipboard.html",
    "title": "Property CopyPropertiesToClipboard | EyeAuras Docs",
    "keywords": "Property CopyPropertiesToClipboard CopyPropertiesToClipboard Declaration CommandWrapper CopyPropertiesToClipboard { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.Count.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration int Count { get; } Property Value Type Description int"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.DropTarget.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.DropTarget.html",
    "title": "Property DropTarget | EyeAuras Docs",
    "keywords": "Property DropTarget DropTarget Declaration IDropTarget DropTarget { get; } Property Value Type Description IDropTarget"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.EditorsCollectionView.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.EditorsCollectionView.html",
    "title": "Property EditorsCollectionView | EyeAuras Docs",
    "keywords": "Property EditorsCollectionView EditorsCollectionView Declaration ICollectionView EditorsCollectionView { get; } Property Value Type Description ICollectionView"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.ExecuteCommand.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.ExecuteCommand.html",
    "title": "Property ExecuteCommand | EyeAuras Docs",
    "keywords": "Property ExecuteCommand ExecuteCommand Declaration CommandWrapper ExecuteCommand { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.HideAll.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.HideAll.html",
    "title": "Property HideAll | EyeAuras Docs",
    "keywords": "Property HideAll HideAll Declaration CommandWrapper HideAll { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.IsEmpty.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.IsEmpty.html",
    "title": "Property IsEmpty | EyeAuras Docs",
    "keywords": "Property IsEmpty IsEmpty Declaration bool IsEmpty { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.LoadAll.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.LoadAll.html",
    "title": "Property LoadAll | EyeAuras Docs",
    "keywords": "Property LoadAll LoadAll Declaration CommandWrapper LoadAll { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.MoveItemDown.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.MoveItemDown.html",
    "title": "Property MoveItemDown | EyeAuras Docs",
    "keywords": "Property MoveItemDown MoveItemDown Declaration CommandWrapper MoveItemDown { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.MoveItemToBottom.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.MoveItemToBottom.html",
    "title": "Property MoveItemToBottom | EyeAuras Docs",
    "keywords": "Property MoveItemToBottom MoveItemToBottom Declaration CommandWrapper MoveItemToBottom { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.MoveItemToTop.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.MoveItemToTop.html",
    "title": "Property MoveItemToTop | EyeAuras Docs",
    "keywords": "Property MoveItemToTop MoveItemToTop Declaration CommandWrapper MoveItemToTop { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.MoveItemUp.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.MoveItemUp.html",
    "title": "Property MoveItemUp | EyeAuras Docs",
    "keywords": "Property MoveItemUp MoveItemUp Declaration CommandWrapper MoveItemUp { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.PastePropertiesFromClipboard.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.PastePropertiesFromClipboard.html",
    "title": "Property PastePropertiesFromClipboard | EyeAuras Docs",
    "keywords": "Property PastePropertiesFromClipboard PastePropertiesFromClipboard Declaration CommandWrapper PastePropertiesFromClipboard { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.SelectedItem.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.SelectedItem.html",
    "title": "Property SelectedItem | EyeAuras Docs",
    "keywords": "Property SelectedItem SelectedItem Declaration IAuraEntityEditorViewModel SelectedItem { get; set; } Property Value Type Description IAuraEntityEditorViewModel"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.ShowAddNewItem.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.ShowAddNewItem.html",
    "title": "Property ShowAddNewItem | EyeAuras Docs",
    "keywords": "Property ShowAddNewItem ShowAddNewItem Declaration bool ShowAddNewItem { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.ShowAll.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.ShowAll.html",
    "title": "Property ShowAll | EyeAuras Docs",
    "keywords": "Property ShowAll ShowAll Declaration CommandWrapper ShowAll { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.Source.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.Source.html",
    "title": "Property Source | EyeAuras Docs",
    "keywords": "Property Source Source Declaration IEntityContainer Source { get; } Property Value Type Description IEntityContainer"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.UnloadAll.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.UnloadAll.html",
    "title": "Property UnloadAll | EyeAuras Docs",
    "keywords": "Property UnloadAll UnloadAll Declaration CommandWrapper UnloadAll { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IAuraEntityListEditorViewModel.html",
    "title": "Interface IAuraEntityListEditorViewModel | EyeAuras Docs",
    "keywords": "Interface IAuraEntityListEditorViewModel Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.EntityListEditor Assembly: EyeAuras.Shared.dll Syntax public interface IAuraEntityListEditorViewModel : IDisposable, INotifyPropertyChanged Properties Name Description Add CanModifyItemProperties CanModifyItems CloneActionCommand CopyIdToClipboard CopyPropertiesToClipboard Count DropTarget EditorsCollectionView ExecuteCommand HideAll IsEmpty LoadAll MoveItemDown MoveItemToBottom MoveItemToTop MoveItemUp PastePropertiesFromClipboard SelectedItem ShowAddNewItem ShowAll Source UnloadAll Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.EntityListEditor.IGenericAuraEntityListEditorViewModel.ClearDefaultPropertiesCommand.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IGenericAuraEntityListEditorViewModel.ClearDefaultPropertiesCommand.html",
    "title": "Property ClearDefaultPropertiesCommand | EyeAuras Docs",
    "keywords": "Property ClearDefaultPropertiesCommand ClearDefaultPropertiesCommand Declaration CommandWrapper ClearDefaultPropertiesCommand { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IGenericAuraEntityListEditorViewModel.SaveAsDefaultPropertiesCommand.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IGenericAuraEntityListEditorViewModel.SaveAsDefaultPropertiesCommand.html",
    "title": "Property SaveAsDefaultPropertiesCommand | EyeAuras Docs",
    "keywords": "Property SaveAsDefaultPropertiesCommand SaveAsDefaultPropertiesCommand Declaration CommandWrapper SaveAsDefaultPropertiesCommand { get; } Property Value Type Description CommandWrapper"
  },
  "api/EyeAuras.Shared.EntityListEditor.IGenericAuraEntityListEditorViewModel.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IGenericAuraEntityListEditorViewModel.html",
    "title": "Interface IGenericAuraEntityListEditorViewModel | EyeAuras Docs",
    "keywords": "Interface IGenericAuraEntityListEditorViewModel Inherited Members IAuraEntityListEditorViewModel.EditorsCollectionView IAuraEntityListEditorViewModel.Add IAuraEntityListEditorViewModel.ExecuteCommand IAuraEntityListEditorViewModel.CopyPropertiesToClipboard IAuraEntityListEditorViewModel.PastePropertiesFromClipboard IAuraEntityListEditorViewModel.CloneActionCommand IAuraEntityListEditorViewModel.CopyIdToClipboard IAuraEntityListEditorViewModel.UnloadAll IAuraEntityListEditorViewModel.LoadAll IAuraEntityListEditorViewModel.ShowAll IAuraEntityListEditorViewModel.HideAll IAuraEntityListEditorViewModel.MoveItemUp IAuraEntityListEditorViewModel.MoveItemDown IAuraEntityListEditorViewModel.MoveItemToTop IAuraEntityListEditorViewModel.MoveItemToBottom IAuraEntityListEditorViewModel.CanModifyItems IAuraEntityListEditorViewModel.CanModifyItemProperties IAuraEntityListEditorViewModel.IsEmpty IAuraEntityListEditorViewModel.Count IAuraEntityListEditorViewModel.DropTarget IAuraEntityListEditorViewModel.Source IAuraEntityListEditorViewModel.ShowAddNewItem IAuraEntityListEditorViewModel.SelectedItem IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.EntityListEditor Assembly: EyeAuras.Shared.dll Syntax public interface IGenericAuraEntityListEditorViewModel : IAuraEntityListEditorViewModel, IDisposable, INotifyPropertyChanged Properties Name Description ClearDefaultPropertiesCommand SaveAsDefaultPropertiesCommand Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.CanClose.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.CanClose.html",
    "title": "Property CanClose | EyeAuras Docs",
    "keywords": "Property CanClose CanClose Declaration bool CanClose { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.CloseCommand.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.CloseCommand.html",
    "title": "Property CloseCommand | EyeAuras Docs",
    "keywords": "Property CloseCommand CloseCommand Declaration ICommand CloseCommand { get; } Property Value Type Description ICommand"
  },
  "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.IsEnabled.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Declaration bool IsEnabled { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.IsLoaded.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.IsLoaded.html",
    "title": "Property IsLoaded | EyeAuras Docs",
    "keywords": "Property IsLoaded IsLoaded Declaration bool IsLoaded { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.IsReadOnly.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.IsReadOnly.html",
    "title": "Property IsReadOnly | EyeAuras Docs",
    "keywords": "Property IsReadOnly IsReadOnly Declaration bool IsReadOnly { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.Value.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration IAuraObject Value { get; set; } Property Value Type Description IAuraObject"
  },
  "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.ValueEditor.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.ValueEditor.html",
    "title": "Property ValueEditor | EyeAuras Docs",
    "keywords": "Property ValueEditor ValueEditor Declaration IAuraPropertiesEditor ValueEditor { get; } Property Value Type Description IAuraPropertiesEditor"
  },
  "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.ValueType.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.ValueType.html",
    "title": "Property ValueType | EyeAuras Docs",
    "keywords": "Property ValueType ValueType Declaration Type ValueType { get; set; } Property Value Type Description Type"
  },
  "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.IPropertyEditorViewModel.html",
    "title": "Interface IPropertyEditorViewModel | EyeAuras Docs",
    "keywords": "Interface IPropertyEditorViewModel Inherited Members ICloseable.CloseController ICanSetIndex.Index INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.EntityListEditor Assembly: EyeAuras.Shared.dll Syntax public interface IPropertyEditorViewModel : ICloseable, ICanSetIndex, IHasIndex, INotifyPropertyChanged Properties Name Description CanClose CloseCommand IsEnabled IsLoaded IsReadOnly Value ValueEditor ValueType Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.EntityListEditor.html": {
    "href": "api/EyeAuras.Shared.EntityListEditor.html",
    "title": "Namespace EyeAuras.Shared.EntityListEditor | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Shared.EntityListEditor Classes AuraEntityEditorViewModel<T, TListEditor> AuraEntityListEditorViewModelBase<TContainer, TList, T> Interfaces IAuraEntityEditorViewModel IAuraEntityEditorViewModel<T> IAuraEntityEditorViewModel<T, TListEditor> IAuraEntityListDropHandler<T> IAuraEntityListEditorViewModel IAuraEntityListEditorViewModel<T> IAuraEntityListEditorViewModel<TList, T> IAuraEntityListEditorViewModel<TContainer, TList, T> IGenericAuraEntityListEditorViewModel IPropertyEditorViewModel"
  },
  "api/EyeAuras.Shared.IAura.IsActive.html": {
    "href": "api/EyeAuras.Shared.IAura.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Declaration bool? IsActive { get; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.IAura.Model.html": {
    "href": "api/EyeAuras.Shared.IAura.Model.html",
    "title": "Property Model | EyeAuras Docs",
    "keywords": "Property Model Model Declaration IEyeAuraModel Model { get; } Property Value Type Description IEyeAuraModel"
  },
  "api/EyeAuras.Shared.IAura.html": {
    "href": "api/EyeAuras.Shared.IAura.html",
    "title": "Interface IAura | EyeAuras Docs",
    "keywords": "Interface IAura Inherited Members IEyeItem.ParentFolder IEyeItem.PrefixIcon IEyeItem.SuffixIcon IEyeItem.IsEnabled IEyeItem.EnablingConditions IEyeContext.EyeSharedServices IEntityContainer.IsGlobalId IEntityContainer.ChildrenById ICanSetPath.FullPath IHasPath.Path ICanBeSelected.IsSelected IHasTimestamp.CreatedAt IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IHasId.Id IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList ICanSetContext.Context IHasVariables.Variables IHasVariables.this[string] IDisposable.Dispose() IHasBounds.BoundsWindow IHasAttachedWindow.ActiveWindow IHasName.Name ICanBeLoaded.IsLoaded ICanBeArchived.IsArchived ICloseable.CloseController INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IAura : IEyeItem, IEyeContext, IAuraContainer, IEntityContainer, ICanSetPath, IHasPath, ICanBeSelected, IHasSelected, IHasTimestamp, IAuraObject, IHasId, IBindableReactiveObject, ICanSetContext, IHasContext, IHasVariables, IDisposable, IHasBounds, IHasAttachedWindow, IAuraModelController, IHasName, ICanBeLoaded, ICanBeArchived, ICloseable, INotifyPropertyChanged Properties Name Description IsActive Model Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.TryWaitForActivation(IAura, TimeSpan) AuraModelExtensions.TryWaitForDeactivation(IAura, TimeSpan) AuraModelExtensions.TryWaitForIsActive(IAura, bool, TimeSpan) AuraModelExtensions.WaitForActivation(IAura, TimeSpan) AuraModelExtensions.WaitForDeactivation(IAura, TimeSpan) AuraModelExtensions.WaitForIsActive(IAura, bool, TimeSpan) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) AuraViewModelExtensions.ExtractChildrenOfType<T>(IAura, out ReadOnlyObservableCollection<T>) AuraViewModelExtensions.GetEnablingConditions(IAura) AuraViewModelExtensions.GetModelSafe(IAura) AuraViewModelExtensions.GetOnEnterActions(IAura) AuraViewModelExtensions.GetOnExitActions(IAura) AuraViewModelExtensions.GetOverlays(IAura) AuraViewModelExtensions.GetTriggers(IAura) AuraViewModelExtensions.GetWhileActiveActions(IAura) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IAuraEntity.NameSuffix.html": {
    "href": "api/EyeAuras.Shared.IAuraEntity.NameSuffix.html",
    "title": "Property NameSuffix | EyeAuras Docs",
    "keywords": "Property NameSuffix NameSuffix Suffix which will be appended to Name Declaration string NameSuffix { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.IAuraEntity.html": {
    "href": "api/EyeAuras.Shared.IAuraEntity.html",
    "title": "Interface IAuraEntity | EyeAuras Docs",
    "keywords": "Interface IAuraEntity Represents aura object which has name and description Inherited Members IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IAuraEntity : IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description NameSuffix Suffix which will be appended to Name Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IAuraObject-1.Properties.html": {
    "href": "api/EyeAuras.Shared.IAuraObject-1.Properties.html",
    "title": "Property Properties | EyeAuras Docs",
    "keywords": "Property Properties Properties Declaration T Properties { get; set; } Property Value Type Description T"
  },
  "api/EyeAuras.Shared.IAuraObject-1.html": {
    "href": "api/EyeAuras.Shared.IAuraObject-1.html",
    "title": "Interface IAuraObject<T> | EyeAuras Docs",
    "keywords": "Interface IAuraObject<T> Inherited Members IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IAuraObject<T> : IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext where T : class Type Parameters Name Description T Properties Name Description Properties Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IAuraObject.AddOrUpdateBinding.html": {
    "href": "api/EyeAuras.Shared.IAuraObject.AddOrUpdateBinding.html",
    "title": "Method AddOrUpdateBinding | EyeAuras Docs",
    "keywords": "Method AddOrUpdateBinding AddOrUpdateBinding(AuraBindingProperties) Declaration IAuraReactiveBinding AddOrUpdateBinding(AuraBindingProperties bindingProperties) Parameters Type Name Description AuraBindingProperties bindingProperties Returns Type Description IAuraReactiveBinding"
  },
  "api/EyeAuras.Shared.IAuraObject.Properties.html": {
    "href": "api/EyeAuras.Shared.IAuraObject.Properties.html",
    "title": "Property Properties | EyeAuras Docs",
    "keywords": "Property Properties Properties Declaration IAuraProperties Properties { get; set; } Property Value Type Description IAuraProperties"
  },
  "api/EyeAuras.Shared.IAuraObject.ResolveBinding.html": {
    "href": "api/EyeAuras.Shared.IAuraObject.ResolveBinding.html",
    "title": "Method ResolveBinding | EyeAuras Docs",
    "keywords": "Method ResolveBinding ResolveBinding(string) Declaration IAuraReactiveBinding ResolveBinding(string propertyPath) Parameters Type Name Description string propertyPath Returns Type Description IAuraReactiveBinding"
  },
  "api/EyeAuras.Shared.IAuraObject.html": {
    "href": "api/EyeAuras.Shared.IAuraObject.html",
    "title": "Interface IAuraObject | EyeAuras Docs",
    "keywords": "Interface IAuraObject Inherited Members IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IAuraObject : IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext Properties Name Description Properties Methods Name Description AddOrUpdateBinding(AuraBindingProperties) ResolveBinding(string) Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IAuraProperties.Bindings.html": {
    "href": "api/EyeAuras.Shared.IAuraProperties.Bindings.html",
    "title": "Property Bindings | EyeAuras Docs",
    "keywords": "Property Bindings Bindings Collection of bindings(property2property, property2variable, etc) which are assigned to this object Declaration AuraBindingProperties[] Bindings { get; set; } Property Value Type Description AuraBindingProperties[]"
  },
  "api/EyeAuras.Shared.IAuraProperties.html": {
    "href": "api/EyeAuras.Shared.IAuraProperties.html",
    "title": "Interface IAuraProperties | EyeAuras Docs",
    "keywords": "Interface IAuraProperties Inherited Members IHasVersion.Version ICanSetId.Id Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface IAuraProperties : IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId Properties Name Description Bindings Collection of bindings(property2property, property2variable, etc) which are assigned to this object Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IAuraPropertiesEditor-1.Source.html": {
    "href": "api/EyeAuras.Shared.IAuraPropertiesEditor-1.Source.html",
    "title": "Property Source | EyeAuras Docs",
    "keywords": "Property Source Source Declaration T Source { get; set; } Property Value Type Description T"
  },
  "api/EyeAuras.Shared.IAuraPropertiesEditor-1.html": {
    "href": "api/EyeAuras.Shared.IAuraPropertiesEditor-1.html",
    "title": "Interface IAuraPropertiesEditor<T> | EyeAuras Docs",
    "keywords": "Interface IAuraPropertiesEditor<T> Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IAuraPropertiesEditor<T> : IAuraPropertiesEditor, IDisposable, INotifyPropertyChanged where T : IDisposableReactiveObject Type Parameters Name Description T Properties Name Description Source Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IAuraPropertiesEditor.Source.html": {
    "href": "api/EyeAuras.Shared.IAuraPropertiesEditor.Source.html",
    "title": "Property Source | EyeAuras Docs",
    "keywords": "Property Source Source Declaration IDisposableReactiveObject Source { get; set; } Property Value Type Description IDisposableReactiveObject"
  },
  "api/EyeAuras.Shared.IAuraPropertiesEditor.html": {
    "href": "api/EyeAuras.Shared.IAuraPropertiesEditor.html",
    "title": "Interface IAuraPropertiesEditor | EyeAuras Docs",
    "keywords": "Interface IAuraPropertiesEditor Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IAuraPropertiesEditor : IDisposable, INotifyPropertyChanged Properties Name Description Source Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IBehaviorTree.html": {
    "href": "api/EyeAuras.Shared.IBehaviorTree.html",
    "title": "Interface IBehaviorTree | EyeAuras Docs",
    "keywords": "Interface IBehaviorTree Inherited Members IEyeItem.ParentFolder IEyeItem.PrefixIcon IEyeItem.SuffixIcon IEyeItem.IsEnabled IEyeItem.EnablingConditions IEyeContext.EyeSharedServices IEntityContainer.IsGlobalId IEntityContainer.ChildrenById ICanSetPath.FullPath IHasPath.Path IHasName.Name ICanBeSelected.IsSelected IHasTimestamp.CreatedAt IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IHasId.Id IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList ICanSetContext.Context IHasVariables.Variables IHasVariables.this[string] IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IBehaviorTree : IEyeItem, IEyeContext, IAuraContainer, IEntityContainer, ICanSetPath, IHasPath, IHasName, ICanBeSelected, IHasSelected, IHasTimestamp, IAuraObject, IHasId, IBindableReactiveObject, ICanSetContext, IHasContext, IHasVariables, IDisposable, INotifyPropertyChanged Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.ICanBeArchived.IsArchived.html": {
    "href": "api/EyeAuras.Shared.ICanBeArchived.IsArchived.html",
    "title": "Property IsArchived | EyeAuras Docs",
    "keywords": "Property IsArchived IsArchived Indicates whether this object is archived or not For auras/folders this means that they are not loaded into memory thus preserving resources Declaration bool IsArchived { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.ICanBeArchived.html": {
    "href": "api/EyeAuras.Shared.ICanBeArchived.html",
    "title": "Interface ICanBeArchived | EyeAuras Docs",
    "keywords": "Interface ICanBeArchived Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface ICanBeArchived Properties Name Description IsArchived Indicates whether this object is archived or not For auras/folders this means that they are not loaded into memory thus preserving resources Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.ICanSetContext.Context.html": {
    "href": "api/EyeAuras.Shared.ICanSetContext.Context.html",
    "title": "Property Context | EyeAuras Docs",
    "keywords": "Property Context Context Declaration [Bindable(false)] IEyeContext Context { get; set; } Property Value Type Description IEyeContext"
  },
  "api/EyeAuras.Shared.ICanSetContext.html": {
    "href": "api/EyeAuras.Shared.ICanSetContext.html",
    "title": "Interface ICanSetContext | EyeAuras Docs",
    "keywords": "Interface ICanSetContext Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface ICanSetContext : IHasContext Properties Name Description Context Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.ICanSetId.Id.html": {
    "href": "api/EyeAuras.Shared.ICanSetId.Id.html",
    "title": "Property Id | EyeAuras Docs",
    "keywords": "Property Id Id Globally unique Id of an item, usually Guid-based Declaration string Id { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.ICanSetId.html": {
    "href": "api/EyeAuras.Shared.ICanSetId.html",
    "title": "Interface ICanSetId | EyeAuras Docs",
    "keywords": "Interface ICanSetId Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface ICanSetId : IHasId Properties Name Description Id Globally unique Id of an item, usually Guid-based Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.ICanSetIndex.Index.html": {
    "href": "api/EyeAuras.Shared.ICanSetIndex.Index.html",
    "title": "Property Index | EyeAuras Docs",
    "keywords": "Property Index Index Declaration int Index { get; set; } Property Value Type Description int"
  },
  "api/EyeAuras.Shared.ICanSetIndex.html": {
    "href": "api/EyeAuras.Shared.ICanSetIndex.html",
    "title": "Interface ICanSetIndex | EyeAuras Docs",
    "keywords": "Interface ICanSetIndex Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface ICanSetIndex : IHasIndex Properties Name Description Index Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.ICanSetName.Name.html": {
    "href": "api/EyeAuras.Shared.ICanSetName.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Name of an item(could be filename), usually un-localized and could be used in lookups Declaration string Name { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.ICanSetName.html": {
    "href": "api/EyeAuras.Shared.ICanSetName.html",
    "title": "Interface ICanSetName | EyeAuras Docs",
    "keywords": "Interface ICanSetName Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface ICanSetName : IHasName Properties Name Description Name Name of an item(could be filename), usually un-localized and could be used in lookups Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.ICanSetPath.FullPath.html": {
    "href": "api/EyeAuras.Shared.ICanSetPath.FullPath.html",
    "title": "Property FullPath | EyeAuras Docs",
    "keywords": "Property FullPath FullPath Full path to an item which includes both folder and file/item name Declaration string FullPath { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.ICanSetPath.html": {
    "href": "api/EyeAuras.Shared.ICanSetPath.html",
    "title": "Interface ICanSetPath | EyeAuras Docs",
    "keywords": "Interface ICanSetPath Inherited Members IHasPath.Path IHasName.Name Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface ICanSetPath : IHasPath, IHasName Properties Name Description FullPath Full path to an item which includes both folder and file/item name Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.ICanSetTimestamp.CreatedAt.html": {
    "href": "api/EyeAuras.Shared.ICanSetTimestamp.CreatedAt.html",
    "title": "Property CreatedAt | EyeAuras Docs",
    "keywords": "Property CreatedAt CreatedAt Date when this item was created Declaration DateTime CreatedAt { get; set; } Property Value Type Description DateTime"
  },
  "api/EyeAuras.Shared.ICanSetTimestamp.html": {
    "href": "api/EyeAuras.Shared.ICanSetTimestamp.html",
    "title": "Interface ICanSetTimestamp | EyeAuras Docs",
    "keywords": "Interface ICanSetTimestamp Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface ICanSetTimestamp : IHasTimestamp Properties Name Description CreatedAt Date when this item was created Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IComplexAuraList-1.html": {
    "href": "api/EyeAuras.Shared.IComplexAuraList-1.html",
    "title": "Interface IComplexAuraList<T> | EyeAuras Docs",
    "keywords": "Interface IComplexAuraList<T> Inherited Members IObservableListEx<T>.Collection IEnumerable<T>.GetEnumerator() IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged INotifyCollectionChanged.CollectionChanged Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IComplexAuraList<T> : ISourceListEx<T>, ISourceList<T>, IObservableListEx<T>, IObservableList<T>, IEnumerable<T>, IEnumerable, IDisposable, INotifyPropertyChanged, INotifyCollectionChanged Type Parameters Name Description T Extension Methods ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IEyeItem.EnablingConditions.html": {
    "href": "api/EyeAuras.Shared.IEyeItem.EnablingConditions.html",
    "title": "Property EnablingConditions | EyeAuras Docs",
    "keywords": "Property EnablingConditions EnablingConditions Contains a list of conditions which are required for this item to start \"ticking\" Declaration IComplexAuraTrigger EnablingConditions { get; } Property Value Type Description IComplexAuraTrigger"
  },
  "api/EyeAuras.Shared.IEyeItem.IsEnabled.html": {
    "href": "api/EyeAuras.Shared.IEyeItem.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Indicates whether this item is disabled (available for selection/edit) or not Declaration bool IsEnabled { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.IEyeItem.ParentFolder.html": {
    "href": "api/EyeAuras.Shared.IEyeItem.ParentFolder.html",
    "title": "Property ParentFolder | EyeAuras Docs",
    "keywords": "Property ParentFolder ParentFolder Points to folder which this item resides in Declaration IFolder ParentFolder { get; } Property Value Type Description IFolder"
  },
  "api/EyeAuras.Shared.IEyeItem.PrefixIcon.html": {
    "href": "api/EyeAuras.Shared.IEyeItem.PrefixIcon.html",
    "title": "Property PrefixIcon | EyeAuras Docs",
    "keywords": "Property PrefixIcon PrefixIcon Declaration string PrefixIcon { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.IEyeItem.SuffixIcon.html": {
    "href": "api/EyeAuras.Shared.IEyeItem.SuffixIcon.html",
    "title": "Property SuffixIcon | EyeAuras Docs",
    "keywords": "Property SuffixIcon SuffixIcon Declaration string SuffixIcon { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.IEyeItem.html": {
    "href": "api/EyeAuras.Shared.IEyeItem.html",
    "title": "Interface IEyeItem | EyeAuras Docs",
    "keywords": "Interface IEyeItem Item in a program tree (folders, auras, etc) Inherited Members IEyeContext.EyeSharedServices IEntityContainer.IsGlobalId IEntityContainer.ChildrenById ICanSetPath.FullPath IHasPath.Path IHasName.Name ICanBeSelected.IsSelected IHasTimestamp.CreatedAt IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IHasId.Id IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList ICanSetContext.Context IHasVariables.Variables IHasVariables.this[string] IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IEyeItem : IEyeContext, IAuraContainer, IEntityContainer, ICanSetPath, IHasPath, IHasName, ICanBeSelected, IHasSelected, IHasTimestamp, IAuraObject, IHasId, IBindableReactiveObject, ICanSetContext, IHasContext, IHasVariables, IDisposable, INotifyPropertyChanged Properties Name Description EnablingConditions Contains a list of conditions which are required for this item to start \"ticking\" IsEnabled Indicates whether this item is disabled (available for selection/edit) or not ParentFolder Points to folder which this item resides in PrefixIcon SuffixIcon Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IEyeSharedServices.AppIsActive.html": {
    "href": "api/EyeAuras.Shared.IEyeSharedServices.AppIsActive.html",
    "title": "Property AppIsActive | EyeAuras Docs",
    "keywords": "Property AppIsActive AppIsActive Declaration bool AppIsActive { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.IEyeSharedServices.AuraRepository.html": {
    "href": "api/EyeAuras.Shared.IEyeSharedServices.AuraRepository.html",
    "title": "Property AuraRepository | EyeAuras Docs",
    "keywords": "Property AuraRepository AuraRepository Declaration IAuraRepository AuraRepository { get; } Property Value Type Description IAuraRepository"
  },
  "api/EyeAuras.Shared.IEyeSharedServices.Auras.html": {
    "href": "api/EyeAuras.Shared.IEyeSharedServices.Auras.html",
    "title": "Property Auras | EyeAuras Docs",
    "keywords": "Property Auras Auras Declaration IObservableList<IAura> Auras { get; } Property Value Type Description IObservableList<IAura>"
  },
  "api/EyeAuras.Shared.IEyeSharedServices.AurasById.html": {
    "href": "api/EyeAuras.Shared.IEyeSharedServices.AurasById.html",
    "title": "Property AurasById | EyeAuras Docs",
    "keywords": "Property AurasById AurasById Declaration IObservableCache<IAura, string> AurasById { get; } Property Value Type Description IObservableCache<IAura, string>"
  },
  "api/EyeAuras.Shared.IEyeSharedServices.CreateAura.html": {
    "href": "api/EyeAuras.Shared.IEyeSharedServices.CreateAura.html",
    "title": "Method CreateAura | EyeAuras Docs",
    "keywords": "Method CreateAura CreateAura() Declaration Task<IAura> CreateAura() Returns Type Description Task<IAura>"
  },
  "api/EyeAuras.Shared.IEyeSharedServices.EventLoggingService.html": {
    "href": "api/EyeAuras.Shared.IEyeSharedServices.EventLoggingService.html",
    "title": "Property EventLoggingService | EyeAuras Docs",
    "keywords": "Property EventLoggingService EventLoggingService Declaration IAuraEventLoggingService EventLoggingService { get; } Property Value Type Description IAuraEventLoggingService"
  },
  "api/EyeAuras.Shared.IEyeSharedServices.FindAuraByPath.html": {
    "href": "api/EyeAuras.Shared.IEyeSharedServices.FindAuraByPath.html",
    "title": "Method FindAuraByPath | EyeAuras Docs",
    "keywords": "Method FindAuraByPath FindAuraByPath(string, string) Declaration IAura FindAuraByPath(string rootPath, string path) Parameters Type Name Description string rootPath string path Returns Type Description IAura"
  },
  "api/EyeAuras.Shared.IEyeSharedServices.FindFolderByPath.html": {
    "href": "api/EyeAuras.Shared.IEyeSharedServices.FindFolderByPath.html",
    "title": "Method FindFolderByPath | EyeAuras Docs",
    "keywords": "Method FindFolderByPath FindFolderByPath(string, string) Declaration IFolder FindFolderByPath(string rootPath, string path) Parameters Type Name Description string rootPath string path Returns Type Description IFolder"
  },
  "api/EyeAuras.Shared.IEyeSharedServices.Folders.html": {
    "href": "api/EyeAuras.Shared.IEyeSharedServices.Folders.html",
    "title": "Property Folders | EyeAuras Docs",
    "keywords": "Property Folders Folders Declaration IObservableList<IFolder> Folders { get; } Property Value Type Description IObservableList<IFolder>"
  },
  "api/EyeAuras.Shared.IEyeSharedServices.HasAlphaAccess.html": {
    "href": "api/EyeAuras.Shared.IEyeSharedServices.HasAlphaAccess.html",
    "title": "Property HasAlphaAccess | EyeAuras Docs",
    "keywords": "Property HasAlphaAccess HasAlphaAccess Declaration bool HasAlphaAccess { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.IEyeSharedServices.ModelsById.html": {
    "href": "api/EyeAuras.Shared.IEyeSharedServices.ModelsById.html",
    "title": "Property ModelsById | EyeAuras Docs",
    "keywords": "Property ModelsById ModelsById Declaration IObservableCache<IAuraObject, string> ModelsById { get; } Property Value Type Description IObservableCache<IAuraObject, string>"
  },
  "api/EyeAuras.Shared.IEyeSharedServices.html": {
    "href": "api/EyeAuras.Shared.IEyeSharedServices.html",
    "title": "Interface IEyeSharedServices | EyeAuras Docs",
    "keywords": "Interface IEyeSharedServices Contains utility services which could be used to access program internals Inherited Members IPauseController.Pause() IPauseController.IsPaused IBusyController.Busy() IBusyController.IsBusy INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IEyeSharedServices : IPauseController, IBusyController, INotifyPropertyChanged Properties Name Description AppIsActive AuraRepository Auras AurasById EventLoggingService Folders HasAlphaAccess ModelsById Methods Name Description CreateAura() FindAuraByPath(string, string) FindFolderByPath(string, string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IFolder.Depth.html": {
    "href": "api/EyeAuras.Shared.IFolder.Depth.html",
    "title": "Property Depth | EyeAuras Docs",
    "keywords": "Property Depth Depth Declaration int Depth { get; } Property Value Type Description int"
  },
  "api/EyeAuras.Shared.IFolder.IsExpanded.html": {
    "href": "api/EyeAuras.Shared.IFolder.IsExpanded.html",
    "title": "Property IsExpanded | EyeAuras Docs",
    "keywords": "Property IsExpanded IsExpanded Declaration bool IsExpanded { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.IFolder.html": {
    "href": "api/EyeAuras.Shared.IFolder.html",
    "title": "Interface IFolder | EyeAuras Docs",
    "keywords": "Interface IFolder Inherited Members ICanSetTimestamp.CreatedAt IEyeItem.ParentFolder IEyeItem.PrefixIcon IEyeItem.SuffixIcon IEyeItem.IsEnabled IEyeItem.EnablingConditions IEyeContext.EyeSharedServices IEntityContainer.IsGlobalId IEntityContainer.ChildrenById ICanSetPath.FullPath IHasPath.Path IHasName.Name ICanBeSelected.IsSelected IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IHasId.Id IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList ICanSetContext.Context IHasVariables.Variables IHasVariables.this[string] IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IFolder : ICanSetTimestamp, IEyeItem, IEyeContext, IHasTimestamp, IAuraContainer, IEntityContainer, ICanSetPath, IHasPath, IHasName, ICanBeSelected, IHasSelected, IAuraObject, IHasId, IBindableReactiveObject, ICanSetContext, IHasContext, IHasVariables, IDisposable, INotifyPropertyChanged Properties Name Description Depth IsExpanded Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IHasAttachedWindow.ActiveWindow.html": {
    "href": "api/EyeAuras.Shared.IHasAttachedWindow.ActiveWindow.html",
    "title": "Property ActiveWindow | EyeAuras Docs",
    "keywords": "Property ActiveWindow ActiveWindow Declaration IWindowHandle ActiveWindow { get; } Property Value Type Description IWindowHandle"
  },
  "api/EyeAuras.Shared.IHasAttachedWindow.html": {
    "href": "api/EyeAuras.Shared.IHasAttachedWindow.html",
    "title": "Interface IHasAttachedWindow | EyeAuras Docs",
    "keywords": "Interface IHasAttachedWindow Inherited Members INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IHasAttachedWindow : INotifyPropertyChanged Properties Name Description ActiveWindow Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IHasAuraProperties-1.Properties.html": {
    "href": "api/EyeAuras.Shared.IHasAuraProperties-1.Properties.html",
    "title": "Property Properties | EyeAuras Docs",
    "keywords": "Property Properties Properties Declaration T Properties { get; set; } Property Value Type Description T"
  },
  "api/EyeAuras.Shared.IHasAuraProperties-1.VisitLoad.html": {
    "href": "api/EyeAuras.Shared.IHasAuraProperties-1.VisitLoad.html",
    "title": "Method VisitLoad | EyeAuras Docs",
    "keywords": "Method VisitLoad VisitLoad(T) Declaration void VisitLoad(T source) Parameters Type Name Description T source"
  },
  "api/EyeAuras.Shared.IHasAuraProperties-1.VisitSave.html": {
    "href": "api/EyeAuras.Shared.IHasAuraProperties-1.VisitSave.html",
    "title": "Method VisitSave | EyeAuras Docs",
    "keywords": "Method VisitSave VisitSave(T) Declaration void VisitSave(T target) Parameters Type Name Description T target"
  },
  "api/EyeAuras.Shared.IHasAuraProperties-1.html": {
    "href": "api/EyeAuras.Shared.IHasAuraProperties-1.html",
    "title": "Interface IHasAuraProperties<T> | EyeAuras Docs",
    "keywords": "Interface IHasAuraProperties<T> Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IHasAuraProperties<T> where T : class, IAuraProperties, new() Type Parameters Name Description T Properties Name Description Properties Methods Name Description VisitLoad(T) VisitSave(T) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IHasBounds.BoundsWindow.html": {
    "href": "api/EyeAuras.Shared.IHasBounds.BoundsWindow.html",
    "title": "Property BoundsWindow | EyeAuras Docs",
    "keywords": "Property BoundsWindow BoundsWindow Declaration Rectangle? BoundsWindow { get; } Property Value Type Description Rectangle?"
  },
  "api/EyeAuras.Shared.IHasBounds.html": {
    "href": "api/EyeAuras.Shared.IHasBounds.html",
    "title": "Interface IHasBounds | EyeAuras Docs",
    "keywords": "Interface IHasBounds Inherited Members IHasAttachedWindow.ActiveWindow INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IHasBounds : IHasAttachedWindow, INotifyPropertyChanged Properties Name Description BoundsWindow Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IHasContext.Context.html": {
    "href": "api/EyeAuras.Shared.IHasContext.Context.html",
    "title": "Property Context | EyeAuras Docs",
    "keywords": "Property Context Context Declaration [Bindable(false)] IEyeContext Context { get; } Property Value Type Description IEyeContext"
  },
  "api/EyeAuras.Shared.IHasContext.html": {
    "href": "api/EyeAuras.Shared.IHasContext.html",
    "title": "Interface IHasContext | EyeAuras Docs",
    "keywords": "Interface IHasContext Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IHasContext Properties Name Description Context Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IHasDescription.Description.html": {
    "href": "api/EyeAuras.Shared.IHasDescription.Description.html",
    "title": "Property Description | EyeAuras Docs",
    "keywords": "Property Description Description Description of an item, could be localized Declaration string Description { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.IHasDescription.html": {
    "href": "api/EyeAuras.Shared.IHasDescription.html",
    "title": "Interface IHasDescription | EyeAuras Docs",
    "keywords": "Interface IHasDescription Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface IHasDescription Properties Name Description Description Description of an item, could be localized Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IHasId.Id.html": {
    "href": "api/EyeAuras.Shared.IHasId.Id.html",
    "title": "Property Id | EyeAuras Docs",
    "keywords": "Property Id Id Globally unique Id of an item, usually Guid-based Declaration string Id { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.IHasId.html": {
    "href": "api/EyeAuras.Shared.IHasId.html",
    "title": "Interface IHasId | EyeAuras Docs",
    "keywords": "Interface IHasId Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface IHasId Properties Name Description Id Globally unique Id of an item, usually Guid-based Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IHasIndex.Index.html": {
    "href": "api/EyeAuras.Shared.IHasIndex.Index.html",
    "title": "Property Index | EyeAuras Docs",
    "keywords": "Property Index Index Declaration int Index { get; } Property Value Type Description int"
  },
  "api/EyeAuras.Shared.IHasIndex.html": {
    "href": "api/EyeAuras.Shared.IHasIndex.html",
    "title": "Interface IHasIndex | EyeAuras Docs",
    "keywords": "Interface IHasIndex Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IHasIndex Properties Name Description Index Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IHasLinkedAuraIds.LinkedAuraIds.html": {
    "href": "api/EyeAuras.Shared.IHasLinkedAuraIds.LinkedAuraIds.html",
    "title": "Property LinkedAuraIds | EyeAuras Docs",
    "keywords": "Property LinkedAuraIds LinkedAuraIds Declaration IReadOnlyList<string> LinkedAuraIds { get; } Property Value Type Description IReadOnlyList<string>"
  },
  "api/EyeAuras.Shared.IHasLinkedAuraIds.LinkedFolderIds.html": {
    "href": "api/EyeAuras.Shared.IHasLinkedAuraIds.LinkedFolderIds.html",
    "title": "Property LinkedFolderIds | EyeAuras Docs",
    "keywords": "Property LinkedFolderIds LinkedFolderIds Declaration IReadOnlyList<string> LinkedFolderIds { get; } Property Value Type Description IReadOnlyList<string>"
  },
  "api/EyeAuras.Shared.IHasLinkedAuraIds.ReplaceId.html": {
    "href": "api/EyeAuras.Shared.IHasLinkedAuraIds.ReplaceId.html",
    "title": "Method ReplaceId | EyeAuras Docs",
    "keywords": "Method ReplaceId ReplaceId(string, string) Declaration void ReplaceId(string previousId, string newId) Parameters Type Name Description string previousId string newId"
  },
  "api/EyeAuras.Shared.IHasLinkedAuraIds.html": {
    "href": "api/EyeAuras.Shared.IHasLinkedAuraIds.html",
    "title": "Interface IHasLinkedAuraIds | EyeAuras Docs",
    "keywords": "Interface IHasLinkedAuraIds Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface IHasLinkedAuraIds Properties Name Description LinkedAuraIds LinkedFolderIds Methods Name Description ReplaceId(string, string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IHasLinkedAuras.LinkedAuras.html": {
    "href": "api/EyeAuras.Shared.IHasLinkedAuras.LinkedAuras.html",
    "title": "Property LinkedAuras | EyeAuras Docs",
    "keywords": "Property LinkedAuras LinkedAuras Declaration IAuraListStateEvaluator LinkedAuras { get; } Property Value Type Description IAuraListStateEvaluator"
  },
  "api/EyeAuras.Shared.IHasLinkedAuras.html": {
    "href": "api/EyeAuras.Shared.IHasLinkedAuras.html",
    "title": "Interface IHasLinkedAuras | EyeAuras Docs",
    "keywords": "Interface IHasLinkedAuras Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public interface IHasLinkedAuras Properties Name Description LinkedAuras Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IHasName.Name.html": {
    "href": "api/EyeAuras.Shared.IHasName.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Name of an item(could be filename), usually un-localized and could be used in lookups Declaration string Name { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.IHasName.html": {
    "href": "api/EyeAuras.Shared.IHasName.html",
    "title": "Interface IHasName | EyeAuras Docs",
    "keywords": "Interface IHasName Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface IHasName Properties Name Description Name Name of an item(could be filename), usually un-localized and could be used in lookups Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IHasPath.FullPath.html": {
    "href": "api/EyeAuras.Shared.IHasPath.FullPath.html",
    "title": "Property FullPath | EyeAuras Docs",
    "keywords": "Property FullPath FullPath Full path to an item which includes both folder and file/item name Declaration string FullPath { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.IHasPath.Path.html": {
    "href": "api/EyeAuras.Shared.IHasPath.Path.html",
    "title": "Property Path | EyeAuras Docs",
    "keywords": "Property Path Path Path to a folder which this item resides in Declaration string Path { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.IHasPath.html": {
    "href": "api/EyeAuras.Shared.IHasPath.html",
    "title": "Interface IHasPath | EyeAuras Docs",
    "keywords": "Interface IHasPath Inherited Members IHasName.Name Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface IHasPath : IHasName Properties Name Description FullPath Full path to an item which includes both folder and file/item name Path Path to a folder which this item resides in Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.IHasTimestamp.CreatedAt.html": {
    "href": "api/EyeAuras.Shared.IHasTimestamp.CreatedAt.html",
    "title": "Property CreatedAt | EyeAuras Docs",
    "keywords": "Property CreatedAt CreatedAt Date when this item was created Declaration DateTime CreatedAt { get; } Property Value Type Description DateTime"
  },
  "api/EyeAuras.Shared.IHasTimestamp.html": {
    "href": "api/EyeAuras.Shared.IHasTimestamp.html",
    "title": "Interface IHasTimestamp | EyeAuras Docs",
    "keywords": "Interface IHasTimestamp Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface IHasTimestamp Properties Name Description CreatedAt Date when this item was created Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase-1.-ctor.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase-1.-ctor.html",
    "title": "Constructor AuraObjectBase | EyeAuras Docs",
    "keywords": "Constructor AuraObjectBase AuraObjectBase() Declaration protected AuraObjectBase()"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase-1.LoadProperties.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase-1.LoadProperties.html",
    "title": "Method LoadProperties | EyeAuras Docs",
    "keywords": "Method LoadProperties LoadProperties(IAuraProperties) Declaration protected override void LoadProperties(IAuraProperties source) Parameters Type Name Description IAuraProperties source Overrides AuraObjectBase.LoadProperties(IAuraProperties)"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase-1.Properties.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase-1.Properties.html",
    "title": "Property Properties | EyeAuras Docs",
    "keywords": "Property Properties Properties Declaration public T Properties { get; set; } Property Value Type Description T Implements IAuraObject<T>.Properties"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase-1.SaveProperties.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase-1.SaveProperties.html",
    "title": "Method SaveProperties | EyeAuras Docs",
    "keywords": "Method SaveProperties SaveProperties() Declaration protected override IAuraProperties SaveProperties() Returns Type Description IAuraProperties Overrides AuraObjectBase.SaveProperties()"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase-1.VisitLoad.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase-1.VisitLoad.html",
    "title": "Method VisitLoad | EyeAuras Docs",
    "keywords": "Method VisitLoad VisitLoad(T) Declaration protected abstract void VisitLoad(T source) Parameters Type Name Description T source"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase-1.VisitSave.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase-1.VisitSave.html",
    "title": "Method VisitSave | EyeAuras Docs",
    "keywords": "Method VisitSave VisitSave(T) Declaration protected abstract void VisitSave(T target) Parameters Type Name Description T target"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase-1.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase-1.html",
    "title": "Class AuraObjectBase<T> | EyeAuras Docs",
    "keywords": "Class AuraObjectBase<T> Inheritance object DisposableReactiveObject BindableReactiveObject AuraObjectBase AuraObjectBase<T> AuraActionBase<TAuraProperties> ComplexAuraOverlay AuraTriggerBase<TAuraProperties> Implements IAuraObject<T> IAuraObject IBindableReactiveObject IDisposable INotifyPropertyChanged IHasId ICanSetContext IHasContext Inherited Members AuraObjectBase.RaisePropertiesWhen<T>(IObservableList<T>) AuraObjectBase.RaisePropertiesWhen<T, TKey>(ISourceCache<T, TKey>) AuraObjectBase.RaisePropertiesWhen<TCollection, T>(TCollection) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollectionEx<T>) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollection<T>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>, CompositeDisposable) AuraObjectBase.RaisePropertiesWhen<T>(IObservable<T>) AuraObjectBase.RaisePropertiesWhen<T>(params IObservable<T>[]) AuraObjectBase.RaisePropertiesWhenAny<T>(T, params Expression<Func<T, object>>[]) AuraObjectBase.RaisePropertiesWhen<T>(params IAuraObject<T>[]) AuraObjectBase.ResolveBinding(string) AuraObjectBase.AddOrUpdateBinding(AuraBindingProperties) AuraObjectBase.FormatToString(ToStringBuilder) AuraObjectBase.IsLoadingProperties AuraObjectBase.IsSavingProperties AuraObjectBase.Context AuraObjectBase.Id BindableReactiveObject.RemoveBinding(string) BindableReactiveObject.ClearBindings() BindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) BindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) BindableReactiveObject.RemoveBinding(IReactiveBinding) BindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) BindableReactiveObject.Log BindableReactiveObject.ObjectId BindableReactiveObject.HasBindings BindableReactiveObject.Bindings BindableReactiveObject.BindingsList object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public abstract class AuraObjectBase<T> : AuraObjectBase, IAuraObject<T>, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext where T : class, IAuraProperties, new() Type Parameters Name Description T Constructors Name Description AuraObjectBase() Properties Name Description Properties Methods Name Description LoadProperties(IAuraProperties) SaveProperties() VisitLoad(T) VisitSave(T) Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase.-ctor.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase.-ctor.html",
    "title": "Constructor AuraObjectBase | EyeAuras Docs",
    "keywords": "Constructor AuraObjectBase AuraObjectBase() Declaration protected AuraObjectBase()"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase.AddOrUpdateBinding.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase.AddOrUpdateBinding.html",
    "title": "Method AddOrUpdateBinding | EyeAuras Docs",
    "keywords": "Method AddOrUpdateBinding AddOrUpdateBinding(AuraBindingProperties) Declaration public IAuraReactiveBinding AddOrUpdateBinding(AuraBindingProperties bindingProperties) Parameters Type Name Description AuraBindingProperties bindingProperties Returns Type Description IAuraReactiveBinding Implements IAuraObject.AddOrUpdateBinding(AuraBindingProperties)"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase.Context.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase.Context.html",
    "title": "Property Context | EyeAuras Docs",
    "keywords": "Property Context Context Declaration [Bindable(false)] public IEyeContext Context { get; set; } Property Value Type Description IEyeContext Implements ICanSetContext.Context IHasContext.Context"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase.FormatToString.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides DisposableReactiveObject.FormatToString(ToStringBuilder)"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase.Id.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase.Id.html",
    "title": "Property Id | EyeAuras Docs",
    "keywords": "Property Id Id Globally unique Id of an item, usually Guid-based Declaration public string Id { get; } Property Value Type Description string Implements IHasId.Id"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase.IsLoadingProperties.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase.IsLoadingProperties.html",
    "title": "Property IsLoadingProperties | EyeAuras Docs",
    "keywords": "Property IsLoadingProperties IsLoadingProperties Declaration public bool IsLoadingProperties { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase.IsSavingProperties.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase.IsSavingProperties.html",
    "title": "Property IsSavingProperties | EyeAuras Docs",
    "keywords": "Property IsSavingProperties IsSavingProperties Declaration public bool IsSavingProperties { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase.LoadProperties.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase.LoadProperties.html",
    "title": "Method LoadProperties | EyeAuras Docs",
    "keywords": "Method LoadProperties LoadProperties(IAuraProperties) Declaration protected abstract void LoadProperties(IAuraProperties source) Parameters Type Name Description IAuraProperties source"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase.Properties.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase.Properties.html",
    "title": "Property Properties | EyeAuras Docs",
    "keywords": "Property Properties Properties Declaration public IAuraProperties Properties { get; set; } Property Value Type Description IAuraProperties Implements IAuraObject.Properties"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase.RaisePropertiesWhen.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase.RaisePropertiesWhen.html",
    "title": "Method RaisePropertiesWhen | EyeAuras Docs",
    "keywords": "Method RaisePropertiesWhen RaisePropertiesWhen<T>(IObservableList<T>) Declaration protected void RaisePropertiesWhen<T>(IObservableList<T> collection) Parameters Type Name Description IObservableList<T> collection Type Parameters Name Description T RaisePropertiesWhen<T, TKey>(ISourceCache<T, TKey>) Declaration protected void RaisePropertiesWhen<T, TKey>(ISourceCache<T, TKey> collection) Parameters Type Name Description ISourceCache<T, TKey> collection Type Parameters Name Description T TKey RaisePropertiesWhen<TCollection, T>(TCollection) Declaration protected void RaisePropertiesWhen<TCollection, T>(TCollection collection) where TCollection : IObservableCollection<T> where T : INotifyPropertyChanged Parameters Type Name Description TCollection collection Type Parameters Name Description TCollection T RaisePropertiesWhen<T>(ObservableCollectionEx<T>) Declaration protected void RaisePropertiesWhen<T>(ObservableCollectionEx<T> collection) where T : INotifyPropertyChanged Parameters Type Name Description ObservableCollectionEx<T> collection Type Parameters Name Description T RaisePropertiesWhen<T>(ObservableCollection<T>) Declaration protected void RaisePropertiesWhen<T>(ObservableCollection<T> collection) where T : INotifyPropertyChanged Parameters Type Name Description ObservableCollection<T> collection Type Parameters Name Description T RaisePropertiesWhen(IObservable<string>) Declaration protected void RaisePropertiesWhen(IObservable<string> source) Parameters Type Name Description IObservable<string> source RaisePropertiesWhen(IObservable<string>, CompositeDisposable) Declaration protected void RaisePropertiesWhen(IObservable<string> source, CompositeDisposable anchors) Parameters Type Name Description IObservable<string> source CompositeDisposable anchors RaisePropertiesWhen<T>(IObservable<T>) Declaration protected void RaisePropertiesWhen<T>(IObservable<T> source) Parameters Type Name Description IObservable<T> source Type Parameters Name Description T RaisePropertiesWhen<T>(params IObservable<T>[]) Declaration protected void RaisePropertiesWhen<T>(params IObservable<T>[] sources) Parameters Type Name Description IObservable<T>[] sources Type Parameters Name Description T RaisePropertiesWhen<T>(params IAuraObject<T>[]) Declaration protected void RaisePropertiesWhen<T>(params IAuraObject<T>[] sources) where T : class, IAuraProperties Parameters Type Name Description IAuraObject<T>[] sources Type Parameters Name Description T"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase.RaisePropertiesWhenAny.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase.RaisePropertiesWhenAny.html",
    "title": "Method RaisePropertiesWhenAny | EyeAuras Docs",
    "keywords": "Method RaisePropertiesWhenAny RaisePropertiesWhenAny<T>(T, params Expression<Func<T, object>>[]) Declaration protected void RaisePropertiesWhenAny<T>(T source, params Expression<Func<T, object>>[] sources) where T : INotifyPropertyChanged Parameters Type Name Description T source Expression<Func<T, object>>[] sources Type Parameters Name Description T"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase.ResolveBinding.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase.ResolveBinding.html",
    "title": "Method ResolveBinding | EyeAuras Docs",
    "keywords": "Method ResolveBinding ResolveBinding(string) Declaration public IAuraReactiveBinding ResolveBinding(string propertyPath) Parameters Type Name Description string propertyPath Returns Type Description IAuraReactiveBinding Implements IAuraObject.ResolveBinding(string)"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase.SaveProperties.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase.SaveProperties.html",
    "title": "Method SaveProperties | EyeAuras Docs",
    "keywords": "Method SaveProperties SaveProperties() Declaration protected abstract IAuraProperties SaveProperties() Returns Type Description IAuraProperties"
  },
  "api/EyeAuras.Shared.Model.AuraObjectBase.html": {
    "href": "api/EyeAuras.Shared.Model.AuraObjectBase.html",
    "title": "Class AuraObjectBase | EyeAuras Docs",
    "keywords": "Class AuraObjectBase Inheritance object DisposableReactiveObject BindableReactiveObject AuraObjectBase AuraObjectBase<T> ProxyAuraModel Implements IAuraObject IBindableReactiveObject IDisposable INotifyPropertyChanged IHasId ICanSetContext IHasContext Inherited Members BindableReactiveObject.RemoveBinding(string) BindableReactiveObject.ClearBindings() BindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) BindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) BindableReactiveObject.RemoveBinding(IReactiveBinding) BindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) BindableReactiveObject.Log BindableReactiveObject.ObjectId BindableReactiveObject.HasBindings BindableReactiveObject.Bindings BindableReactiveObject.BindingsList object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public abstract class AuraObjectBase : BindableReactiveObject, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext Constructors Name Description AuraObjectBase() Properties Name Description Context Id Globally unique Id of an item, usually Guid-based IsLoadingProperties IsSavingProperties Properties Methods Name Description AddOrUpdateBinding(AuraBindingProperties) FormatToString(ToStringBuilder) LoadProperties(IAuraProperties) RaisePropertiesWhen(IObservable<string>) RaisePropertiesWhen(IObservable<string>, CompositeDisposable) RaisePropertiesWhenAny<T>(T, params Expression<Func<T, object>>[]) RaisePropertiesWhen<T>(IObservableList<T>) RaisePropertiesWhen<T>(params IAuraObject<T>[]) RaisePropertiesWhen<T>(ObservableCollectionEx<T>) RaisePropertiesWhen<T>(ObservableCollection<T>) RaisePropertiesWhen<T>(IObservable<T>) RaisePropertiesWhen<T>(params IObservable<T>[]) RaisePropertiesWhen<T, TKey>(ISourceCache<T, TKey>) RaisePropertiesWhen<TCollection, T>(TCollection) ResolveBinding(string) SaveProperties() Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesBase.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesBase.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public abstract AuraPropertiesBase <Clone>$() Returns Type Description AuraPropertiesBase"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesBase.-ctor.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesBase.-ctor.html",
    "title": "Constructor AuraPropertiesBase | EyeAuras Docs",
    "keywords": "Constructor AuraPropertiesBase AuraPropertiesBase(AuraPropertiesBase) Declaration protected AuraPropertiesBase(AuraPropertiesBase original) Parameters Type Name Description AuraPropertiesBase original AuraPropertiesBase() Declaration protected AuraPropertiesBase()"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesBase.Bindings.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesBase.Bindings.html",
    "title": "Property Bindings | EyeAuras Docs",
    "keywords": "Property Bindings Bindings Collection of bindings(property2property, property2variable, etc) which are assigned to this object Declaration public AuraBindingProperties[] Bindings { get; set; } Property Value Type Description AuraBindingProperties[] Implements IAuraProperties.Bindings"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesBase.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesBase.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected virtual Type EqualityContract { get; } Property Value Type Description Type"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesBase.Equals.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesBase.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(AuraPropertiesBase?) Declaration public virtual bool Equals(AuraPropertiesBase? other) Parameters Type Name Description AuraPropertiesBase other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesBase.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesBase.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesBase.Id.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesBase.Id.html",
    "title": "Property Id | EyeAuras Docs",
    "keywords": "Property Id Id Globally unique Id of an item, usually Guid-based Declaration public string Id { get; set; } Property Value Type Description string Implements ICanSetId.Id IHasId.Id"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesBase.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesBase.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected virtual bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesBase.ToString.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesBase.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesBase.Version.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesBase.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public abstract int Version { get; set; } Property Value Type Description int Implements IHasVersion.Version"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesBase.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesBase.html",
    "title": "Class AuraPropertiesBase | EyeAuras Docs",
    "keywords": "Class AuraPropertiesBase Inheritance object AuraPropertiesBase ImageEffectProperties ImageEffectsPipelineProperties AuraActionPropertiesBase ComplexPositionProperties AuraEvaluatorProperties ProxyAuraProperties AuraTriggerPropertiesBase Implements IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraPropertiesBase> Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.Metadata.dll Syntax public abstract record AuraPropertiesBase : IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraPropertiesBase> Constructors Name Description AuraPropertiesBase() AuraPropertiesBase(AuraPropertiesBase) Properties Name Description Bindings Collection of bindings(property2property, property2variable, etc) which are assigned to this object EqualityContract Id Globally unique Id of an item, usually Guid-based Version Methods Name Description Equals(AuraPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(AuraPropertiesBase?, AuraPropertiesBase?) operator !=(AuraPropertiesBase?, AuraPropertiesBase?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesBase.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesBase.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(AuraPropertiesBase?, AuraPropertiesBase?) Declaration public static bool operator ==(AuraPropertiesBase? left, AuraPropertiesBase? right) Parameters Type Name Description AuraPropertiesBase left AuraPropertiesBase right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesBase.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesBase.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(AuraPropertiesBase?, AuraPropertiesBase?) Declaration public static bool operator !=(AuraPropertiesBase? left, AuraPropertiesBase? right) Parameters Type Name Description AuraPropertiesBase left AuraPropertiesBase right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesEditorBase-1.-ctor.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesEditorBase-1.-ctor.html",
    "title": "Constructor AuraPropertiesEditorBase | EyeAuras Docs",
    "keywords": "Constructor AuraPropertiesEditorBase AuraPropertiesEditorBase() Declaration protected AuraPropertiesEditorBase()"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesEditorBase-1.Log.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesEditorBase-1.Log.html",
    "title": "Property Log | EyeAuras Docs",
    "keywords": "Property Log Log Declaration protected IFluentLog Log { get; } Property Value Type Description IFluentLog"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesEditorBase-1.Scheduler.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesEditorBase-1.Scheduler.html",
    "title": "Property Scheduler | EyeAuras Docs",
    "keywords": "Property Scheduler Scheduler Declaration protected IScheduler Scheduler { get; } Property Value Type Description IScheduler"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesEditorBase-1.Source.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesEditorBase-1.Source.html",
    "title": "Property Source | EyeAuras Docs",
    "keywords": "Property Source Source Declaration public TSource Source { get; set; } Property Value Type Description TSource"
  },
  "api/EyeAuras.Shared.Model.AuraPropertiesEditorBase-1.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertiesEditorBase-1.html",
    "title": "Class AuraPropertiesEditorBase<TSource> | EyeAuras Docs",
    "keywords": "Class AuraPropertiesEditorBase<TSource> Inheritance object DisposableReactiveObject AuraPropertiesEditorBase<TSource> Implements IAuraPropertiesEditor<TSource> IAuraPropertiesEditor IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public abstract class AuraPropertiesEditorBase<TSource> : DisposableReactiveObject, IAuraPropertiesEditor<TSource>, IAuraPropertiesEditor, IDisposable, INotifyPropertyChanged where TSource : IDisposableReactiveObject Type Parameters Name Description TSource Constructors Name Description AuraPropertiesEditorBase() Properties Name Description Log Scheduler Source Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.AuraPropertyAttribute.-ctor.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertyAttribute.-ctor.html",
    "title": "Constructor AuraPropertyAttribute | EyeAuras Docs",
    "keywords": "Constructor AuraPropertyAttribute AuraPropertyAttribute() Declaration public AuraPropertyAttribute()"
  },
  "api/EyeAuras.Shared.Model.AuraPropertyAttribute.html": {
    "href": "api/EyeAuras.Shared.Model.AuraPropertyAttribute.html",
    "title": "Class AuraPropertyAttribute | EyeAuras Docs",
    "keywords": "Class AuraPropertyAttribute Marks Properties that will be tracked via INotifyChanged When property changes that means that .Properties if this model must be invalidated Inheritance object Attribute AuraPropertyAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax [AttributeUsage(AttributeTargets.Property)] public sealed class AuraPropertyAttribute : Attribute Constructors Name Description AuraPropertyAttribute() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.AuraVariable.-ctor.html": {
    "href": "api/EyeAuras.Shared.Model.AuraVariable.-ctor.html",
    "title": "Constructor AuraVariable | EyeAuras Docs",
    "keywords": "Constructor AuraVariable AuraVariable(string, object, DateTimeOffset?) Declaration public AuraVariable(string name, object value, DateTimeOffset? lastUpdateTimestamp = null) Parameters Type Name Description string name object value DateTimeOffset? lastUpdateTimestamp"
  },
  "api/EyeAuras.Shared.Model.AuraVariable.Empty.html": {
    "href": "api/EyeAuras.Shared.Model.AuraVariable.Empty.html",
    "title": "Field Empty | EyeAuras Docs",
    "keywords": "Field Empty Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.Metadata.dll Syntax public static readonly AuraVariable Empty Returns Type Description AuraVariable"
  },
  "api/EyeAuras.Shared.Model.AuraVariable.Equals.html": {
    "href": "api/EyeAuras.Shared.Model.AuraVariable.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(AuraVariable) Declaration public bool Equals(AuraVariable other) Parameters Type Name Description AuraVariable other Returns Type Description bool Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object)"
  },
  "api/EyeAuras.Shared.Model.AuraVariable.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Model.AuraVariable.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode()"
  },
  "api/EyeAuras.Shared.Model.AuraVariable.IsEmpty.html": {
    "href": "api/EyeAuras.Shared.Model.AuraVariable.IsEmpty.html",
    "title": "Property IsEmpty | EyeAuras Docs",
    "keywords": "Property IsEmpty IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Model.AuraVariable.LastUpdateTimestamp.html": {
    "href": "api/EyeAuras.Shared.Model.AuraVariable.LastUpdateTimestamp.html",
    "title": "Property LastUpdateTimestamp | EyeAuras Docs",
    "keywords": "Property LastUpdateTimestamp LastUpdateTimestamp Timestamp, shows when the value of this variable was updated the last time Declaration public DateTimeOffset? LastUpdateTimestamp { get; } Property Value Type Description DateTimeOffset?"
  },
  "api/EyeAuras.Shared.Model.AuraVariable.Name.html": {
    "href": "api/EyeAuras.Shared.Model.AuraVariable.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Name of a variable Declaration public string Name { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Model.AuraVariable.ToString.html": {
    "href": "api/EyeAuras.Shared.Model.AuraVariable.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.Shared.Model.AuraVariable.Value.html": {
    "href": "api/EyeAuras.Shared.Model.AuraVariable.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Value of a variable Declaration public object Value { get; } Property Value Type Description object"
  },
  "api/EyeAuras.Shared.Model.AuraVariable.html": {
    "href": "api/EyeAuras.Shared.Model.AuraVariable.html",
    "title": "Struct AuraVariable | EyeAuras Docs",
    "keywords": "Struct AuraVariable Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.Metadata.dll Syntax public readonly struct AuraVariable Constructors Name Description AuraVariable(string, object, DateTimeOffset?) Fields Name Description Empty Properties Name Description IsEmpty LastUpdateTimestamp Timestamp, shows when the value of this variable was updated the last time Name Name of a variable Value Value of a variable Methods Name Description Equals(AuraVariable) Equals(object) GetHashCode() ToString() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override ComplexPositionProperties <Clone>$() Returns Type Description ComplexPositionProperties Overrides AuraPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.-ctor.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.-ctor.html",
    "title": "Constructor ComplexPositionProperties | EyeAuras Docs",
    "keywords": "Constructor ComplexPositionProperties ComplexPositionProperties() Declaration public ComplexPositionProperties()"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.AnchorAuraIds.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.AnchorAuraIds.html",
    "title": "Property AnchorAuraIds | EyeAuras Docs",
    "keywords": "Property AnchorAuraIds AnchorAuraIds Declaration public string[] AnchorAuraIds { get; set; } Property Value Type Description string[]"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.Bounds.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.Bounds.html",
    "title": "Property Bounds | EyeAuras Docs",
    "keywords": "Property Bounds Bounds Declaration public Rectangle Bounds { get; set; } Property Value Type Description Rectangle"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.ContentAnchorType.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.ContentAnchorType.html",
    "title": "Property ContentAnchorType | EyeAuras Docs",
    "keywords": "Property ContentAnchorType ContentAnchorType Declaration public RegionAnchorType ContentAnchorType { get; set; } Property Value Type Description RegionAnchorType"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.Equals.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraPropertiesBase.Equals(object?) Equals(AuraPropertiesBase?) Declaration public override sealed bool Equals(AuraPropertiesBase? other) Parameters Type Name Description AuraPropertiesBase other Returns Type Description bool Overrides AuraPropertiesBase.Equals(AuraPropertiesBase?) Equals(ComplexPositionProperties?) Declaration public bool Equals(ComplexPositionProperties? other) Parameters Type Name Description ComplexPositionProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.IsEmpty.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.IsEmpty.html",
    "title": "Property IsEmpty | EyeAuras Docs",
    "keywords": "Property IsEmpty IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.LinkedAuraIds.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.LinkedAuraIds.html",
    "title": "Property LinkedAuraIds | EyeAuras Docs",
    "keywords": "Property LinkedAuraIds LinkedAuraIds Declaration public IReadOnlyList<string> LinkedAuraIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedAuraIds"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.LinkedFolderIds.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.LinkedFolderIds.html",
    "title": "Property LinkedFolderIds | EyeAuras Docs",
    "keywords": "Property LinkedFolderIds LinkedFolderIds Declaration public IReadOnlyList<string> LinkedFolderIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedFolderIds"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.Offset.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.Offset.html",
    "title": "Property Offset | EyeAuras Docs",
    "keywords": "Property Offset Offset Declaration public Rectangle Offset { get; set; } Property Value Type Description Rectangle"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.PositionAnchorType.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.PositionAnchorType.html",
    "title": "Property PositionAnchorType | EyeAuras Docs",
    "keywords": "Property PositionAnchorType PositionAnchorType Declaration public RegionAnchorType PositionAnchorType { get; set; } Property Value Type Description RegionAnchorType"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.ReplaceId.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.ReplaceId.html",
    "title": "Method ReplaceId | EyeAuras Docs",
    "keywords": "Method ReplaceId ReplaceId(string, string) Declaration public void ReplaceId(string previousId, string newId) Parameters Type Name Description string previousId string newId Implements IHasLinkedAuraIds.ReplaceId(string, string)"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.ToString.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraPropertiesBase.ToString()"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.Version.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.html",
    "title": "Class ComplexPositionProperties | EyeAuras Docs",
    "keywords": "Class ComplexPositionProperties Inheritance object AuraPropertiesBase ComplexPositionProperties Implements IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraPropertiesBase> IHasLinkedAuraIds IEquatable<ComplexPositionProperties> Inherited Members AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public sealed record ComplexPositionProperties : AuraPropertiesBase, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraPropertiesBase>, IHasLinkedAuraIds, IEquatable<ComplexPositionProperties> Constructors Name Description ComplexPositionProperties() Properties Name Description AnchorAuraIds Bounds ContentAnchorType EqualityContract IsEmpty LinkedAuraIds LinkedFolderIds Offset PositionAnchorType Version Methods Name Description Equals(AuraPropertiesBase?) Equals(ComplexPositionProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ReplaceId(string, string) ToString() <Clone>$() Operators Name Description operator ==(ComplexPositionProperties?, ComplexPositionProperties?) operator !=(ComplexPositionProperties?, ComplexPositionProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ComplexPositionProperties?, ComplexPositionProperties?) Declaration public static bool operator ==(ComplexPositionProperties? left, ComplexPositionProperties? right) Parameters Type Name Description ComplexPositionProperties left ComplexPositionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Model.ComplexPositionProperties.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Model.ComplexPositionProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ComplexPositionProperties?, ComplexPositionProperties?) Declaration public static bool operator !=(ComplexPositionProperties? left, ComplexPositionProperties? right) Parameters Type Name Description ComplexPositionProperties left ComplexPositionProperties right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Model.EmptyAuraProperties.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Model.EmptyAuraProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override EmptyAuraProperties <Clone>$() Returns Type Description EmptyAuraProperties Overrides AuraActionPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.Shared.Model.EmptyAuraProperties.-ctor.html": {
    "href": "api/EyeAuras.Shared.Model.EmptyAuraProperties.-ctor.html",
    "title": "Constructor EmptyAuraProperties | EyeAuras Docs",
    "keywords": "Constructor EmptyAuraProperties EmptyAuraProperties() Declaration public EmptyAuraProperties()"
  },
  "api/EyeAuras.Shared.Model.EmptyAuraProperties.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.Model.EmptyAuraProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraActionPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.Shared.Model.EmptyAuraProperties.Equals.html": {
    "href": "api/EyeAuras.Shared.Model.EmptyAuraProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(object?) Equals(AuraActionPropertiesBase?) Declaration public override sealed bool Equals(AuraActionPropertiesBase? other) Parameters Type Name Description AuraActionPropertiesBase other Returns Type Description bool Overrides AuraActionPropertiesBase.Equals(AuraActionPropertiesBase?) Equals(EmptyAuraProperties?) Declaration public bool Equals(EmptyAuraProperties? other) Parameters Type Name Description EmptyAuraProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Model.EmptyAuraProperties.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Model.EmptyAuraProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraActionPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.Shared.Model.EmptyAuraProperties.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.Model.EmptyAuraProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraActionPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.Shared.Model.EmptyAuraProperties.ToString.html": {
    "href": "api/EyeAuras.Shared.Model.EmptyAuraProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraActionPropertiesBase.ToString()"
  },
  "api/EyeAuras.Shared.Model.EmptyAuraProperties.Version.html": {
    "href": "api/EyeAuras.Shared.Model.EmptyAuraProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.Shared.Model.EmptyAuraProperties.html": {
    "href": "api/EyeAuras.Shared.Model.EmptyAuraProperties.html",
    "title": "Class EmptyAuraProperties | EyeAuras Docs",
    "keywords": "Class EmptyAuraProperties Inheritance object AuraPropertiesBase AuraActionPropertiesBase EmptyAuraProperties Implements IEquatable<AuraPropertiesBase> IAuraActionProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraActionPropertiesBase> IEquatable<EmptyAuraProperties> Inherited Members AuraActionPropertiesBase.Equals(AuraPropertiesBase) AuraActionPropertiesBase.IsIgnored AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public sealed record EmptyAuraProperties : AuraActionPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraActionProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraActionPropertiesBase>, IEquatable<EmptyAuraProperties> Constructors Name Description EmptyAuraProperties() Properties Name Description EqualityContract Version Methods Name Description Equals(AuraActionPropertiesBase?) Equals(EmptyAuraProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(EmptyAuraProperties?, EmptyAuraProperties?) operator !=(EmptyAuraProperties?, EmptyAuraProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.EmptyAuraProperties.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Model.EmptyAuraProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(EmptyAuraProperties?, EmptyAuraProperties?) Declaration public static bool operator ==(EmptyAuraProperties? left, EmptyAuraProperties? right) Parameters Type Name Description EmptyAuraProperties left EmptyAuraProperties right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Model.EmptyAuraProperties.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Model.EmptyAuraProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(EmptyAuraProperties?, EmptyAuraProperties?) Declaration public static bool operator !=(EmptyAuraProperties? left, EmptyAuraProperties? right) Parameters Type Name Description EmptyAuraProperties left EmptyAuraProperties right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Model.IAuraContainer.html": {
    "href": "api/EyeAuras.Shared.Model.IAuraContainer.html",
    "title": "Interface IAuraContainer | EyeAuras Docs",
    "keywords": "Interface IAuraContainer Inherited Members IEntityContainer.IsGlobalId IEntityContainer.ChildrenById IHasId.Id ICanSetPath.FullPath IHasPath.Path IHasName.Name ICanBeSelected.IsSelected Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public interface IAuraContainer : IEntityContainer, IHasId, ICanSetPath, IHasPath, IHasName, ICanBeSelected, IHasSelected Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.IAuraContext.IsActive.html": {
    "href": "api/EyeAuras.Shared.Model.IAuraContext.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Declaration bool? IsActive { get; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Model.IAuraContext.IsReady.html": {
    "href": "api/EyeAuras.Shared.Model.IAuraContext.IsReady.html",
    "title": "Property IsReady | EyeAuras Docs",
    "keywords": "Property IsReady IsReady IsReady means that Aura is fully loaded and is already doing it's work - triggers are working, executor is spinning, etc Declaration bool IsReady { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Model.IAuraContext.OnEnterActions.html": {
    "href": "api/EyeAuras.Shared.Model.IAuraContext.OnEnterActions.html",
    "title": "Property OnEnterActions | EyeAuras Docs",
    "keywords": "Property OnEnterActions OnEnterActions Declaration IComplexAuraAction OnEnterActions { get; } Property Value Type Description IComplexAuraAction"
  },
  "api/EyeAuras.Shared.Model.IAuraContext.OnExitActions.html": {
    "href": "api/EyeAuras.Shared.Model.IAuraContext.OnExitActions.html",
    "title": "Property OnExitActions | EyeAuras Docs",
    "keywords": "Property OnExitActions OnExitActions Declaration IComplexAuraAction OnExitActions { get; } Property Value Type Description IComplexAuraAction"
  },
  "api/EyeAuras.Shared.Model.IAuraContext.Overlays.html": {
    "href": "api/EyeAuras.Shared.Model.IAuraContext.Overlays.html",
    "title": "Property Overlays | EyeAuras Docs",
    "keywords": "Property Overlays Overlays Declaration IComplexAuraOverlay Overlays { get; } Property Value Type Description IComplexAuraOverlay"
  },
  "api/EyeAuras.Shared.Model.IAuraContext.Triggers.html": {
    "href": "api/EyeAuras.Shared.Model.IAuraContext.Triggers.html",
    "title": "Property Triggers | EyeAuras Docs",
    "keywords": "Property Triggers Triggers Declaration IComplexAuraTrigger Triggers { get; } Property Value Type Description IComplexAuraTrigger"
  },
  "api/EyeAuras.Shared.Model.IAuraContext.WhileActiveActions.html": {
    "href": "api/EyeAuras.Shared.Model.IAuraContext.WhileActiveActions.html",
    "title": "Property WhileActiveActions | EyeAuras Docs",
    "keywords": "Property WhileActiveActions WhileActiveActions Declaration IComplexAuraAction WhileActiveActions { get; } Property Value Type Description IComplexAuraAction"
  },
  "api/EyeAuras.Shared.Model.IAuraContext.html": {
    "href": "api/EyeAuras.Shared.Model.IAuraContext.html",
    "title": "Interface IAuraContext | EyeAuras Docs",
    "keywords": "Interface IAuraContext Inherited Members IEyeContext.EyeSharedServices IEntityContainer.IsGlobalId IEntityContainer.ChildrenById ICanSetPath.FullPath IHasPath.Path IHasName.Name ICanBeSelected.IsSelected IHasTimestamp.CreatedAt IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IHasId.Id IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList ICanSetContext.Context IHasVariables.Variables IHasVariables.this[string] IDisposable.Dispose() IHasBounds.BoundsWindow IHasAttachedWindow.ActiveWindow IPauseController.Pause() IPauseController.IsPaused INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public interface IAuraContext : IEyeContext, IAuraContainer, IEntityContainer, ICanSetPath, IHasPath, IHasName, ICanBeSelected, IHasSelected, IHasTimestamp, IAuraObject, IHasId, IBindableReactiveObject, ICanSetContext, IHasContext, IHasVariables, IDisposable, IHasBounds, IHasAttachedWindow, IPauseController, INotifyPropertyChanged Properties Name Description IsActive IsReady IsReady means that Aura is fully loaded and is already doing it's work - triggers are working, executor is spinning, etc OnEnterActions OnExitActions Overlays Triggers WhileActiveActions Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.IAuraModelController.html": {
    "href": "api/EyeAuras.Shared.Model.IAuraModelController.html",
    "title": "Interface IAuraModelController | EyeAuras Docs",
    "keywords": "Interface IAuraModelController Inherited Members IHasName.Name ICanBeLoaded.IsLoaded ICanBeArchived.IsArchived ICloseable.CloseController INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public interface IAuraModelController : IHasName, ICanBeLoaded, ICanBeArchived, ICloseable, INotifyPropertyChanged Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.Bounds.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.Bounds.html",
    "title": "Property Bounds | EyeAuras Docs",
    "keywords": "Property Bounds Bounds The boundaries of the rectangle in the coordinate system. Declaration ReactiveRectangle Bounds { get; } Property Value Type Description ReactiveRectangle"
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.BoundsOffset.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.BoundsOffset.html",
    "title": "Property BoundsOffset | EyeAuras Docs",
    "keywords": "Property BoundsOffset BoundsOffset The offset of the boundaries of the rectangle. Declaration ReactiveRectangle BoundsOffset { get; } Property Value Type Description ReactiveRectangle"
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.ContentAnchor.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.ContentAnchor.html",
    "title": "Property ContentAnchor | EyeAuras Docs",
    "keywords": "Property ContentAnchor ContentAnchor Anchor point that specifies a position within the rectangle. Declaration RegionAnchorType ContentAnchor { get; set; } Property Value Type Description RegionAnchorType Remarks For example, given a rectangle of 200x100 (width x height): If the ContentAnchor is set to TopLeft, and we have a content of size 50x50, the content's top left corner will align with the rectangle's top left corner. If the ContentAnchor is set to BottomRight, and we have a content of size 50x50, the content's top left corner will be positioned at (150,50) within the rectangle."
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.IsLinkedToSource.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.IsLinkedToSource.html",
    "title": "Property IsLinkedToSource | EyeAuras Docs",
    "keywords": "Property IsLinkedToSource IsLinkedToSource Indicates whether the position model is linked to the source. Declaration bool IsLinkedToSource { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.LinkedAuras.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.LinkedAuras.html",
    "title": "Property LinkedAuras | EyeAuras Docs",
    "keywords": "Property LinkedAuras LinkedAuras List of Auras linked to this position model. Declaration IAuraListStateEvaluator LinkedAuras { get; } Property Value Type Description IAuraListStateEvaluator"
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.PositionAnchor.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.PositionAnchor.html",
    "title": "Property PositionAnchor | EyeAuras Docs",
    "keywords": "Property PositionAnchor PositionAnchor Anchor point that determines the position of the rectangle within the overall coordinate system. Declaration RegionAnchorType PositionAnchor { get; set; } Property Value Type Description RegionAnchorType Remarks For example, given a rectangle of 200x100 (width x height): If the PositionAnchor is set to TopLeft, and we want the rectangle to start at the position (50,50) in the coordinate system, the rectangle's top left corner will be placed at (50,50). If the PositionAnchor is set to BottomRight, and we want the rectangle's bottom right corner to be at position (250,150) in the coordinate system, the rectangle's top left corner will be positioned at (50,50) in the coordinate system."
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.Reset.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.Reset.html",
    "title": "Method Reset | EyeAuras Docs",
    "keywords": "Method Reset Reset() Resets the position model to its initial state. Declaration void Reset()"
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.ResetAnchor.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.ResetAnchor.html",
    "title": "Method ResetAnchor | EyeAuras Docs",
    "keywords": "Method ResetAnchor ResetAnchor() Resets the anchor to its initial state. Declaration void ResetAnchor()"
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.ResetOffset.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.ResetOffset.html",
    "title": "Method ResetOffset | EyeAuras Docs",
    "keywords": "Method ResetOffset ResetOffset() Resets the offset to its initial state. Declaration void ResetOffset()"
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.ResetOffsetLocation.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.ResetOffsetLocation.html",
    "title": "Method ResetOffsetLocation | EyeAuras Docs",
    "keywords": "Method ResetOffsetLocation ResetOffsetLocation() Resets the offset location to its initial state. Declaration void ResetOffsetLocation()"
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.ResetOffsetSize.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.ResetOffsetSize.html",
    "title": "Method ResetOffsetSize | EyeAuras Docs",
    "keywords": "Method ResetOffsetSize ResetOffsetSize() Resets the offset size to its initial state. Declaration void ResetOffsetSize()"
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.ResetSource.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.ResetSource.html",
    "title": "Method ResetSource | EyeAuras Docs",
    "keywords": "Method ResetSource ResetSource() Resets the source to its initial state. Declaration void ResetSource()"
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.SourceBounds.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.SourceBounds.html",
    "title": "Property SourceBounds | EyeAuras Docs",
    "keywords": "Property SourceBounds SourceBounds The source rectangle boundaries. Declaration ReactiveRectangle SourceBounds { get; } Property Value Type Description ReactiveRectangle"
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.TwoWay.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.TwoWay.html",
    "title": "Property TwoWay | EyeAuras Docs",
    "keywords": "Property TwoWay TwoWay Indicates whether the position should modify offset whenever output position changes Declaration bool TwoWay { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.WindowBoundsAreAbsolute.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.WindowBoundsAreAbsolute.html",
    "title": "Property WindowBoundsAreAbsolute | EyeAuras Docs",
    "keywords": "Property WindowBoundsAreAbsolute WindowBoundsAreAbsolute Indicates whether the window boundaries are absolute(with window offset) or relative(window-bound). Declaration bool WindowBoundsAreAbsolute { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Model.IComplexPositionModel.html": {
    "href": "api/EyeAuras.Shared.Model.IComplexPositionModel.html",
    "title": "Interface IComplexPositionModel | EyeAuras Docs",
    "keywords": "Interface IComplexPositionModel Represents an object with a complex position within a given coordinate system. The position is determined by a rectangle's bounds and its two anchor points, the PositionAnchor which sets the rectangle's position within the system and the ContentAnchor which sets a point within the rectangle. Inherited Members IAuraObject<ComplexPositionProperties>.Properties IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() IHasId.Id ICanSetContext.Context IHasAttachedWindow.ActiveWindow INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public interface IComplexPositionModel : IAuraObject<ComplexPositionProperties>, IAuraObject, IBindableReactiveObject, IDisposable, IHasId, ICanSetContext, IHasContext, IHasAttachedWindow, INotifyPropertyChanged Properties Name Description Bounds The boundaries of the rectangle in the coordinate system. BoundsOffset The offset of the boundaries of the rectangle. ContentAnchor Anchor point that specifies a position within the rectangle. IsLinkedToSource Indicates whether the position model is linked to the source. LinkedAuras List of Auras linked to this position model. PositionAnchor Anchor point that determines the position of the rectangle within the overall coordinate system. SourceBounds The source rectangle boundaries. TwoWay Indicates whether the position should modify offset whenever output position changes WindowBoundsAreAbsolute Indicates whether the window boundaries are absolute(with window offset) or relative(window-bound). Methods Name Description Reset() Resets the position model to its initial state. ResetAnchor() Resets the anchor to its initial state. ResetOffset() Resets the offset to its initial state. ResetOffsetLocation() Resets the offset location to its initial state. ResetOffsetSize() Resets the offset size to its initial state. ResetSource() Resets the source to its initial state. Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.IEntityContainer.ChildrenById.html": {
    "href": "api/EyeAuras.Shared.Model.IEntityContainer.ChildrenById.html",
    "title": "Property ChildrenById | EyeAuras Docs",
    "keywords": "Property ChildrenById ChildrenById Declaration IObservableCache<IAuraObject, string> ChildrenById { get; } Property Value Type Description IObservableCache<IAuraObject, string>"
  },
  "api/EyeAuras.Shared.Model.IEntityContainer.IsGlobalId.html": {
    "href": "api/EyeAuras.Shared.Model.IEntityContainer.IsGlobalId.html",
    "title": "Property IsGlobalId | EyeAuras Docs",
    "keywords": "Property IsGlobalId IsGlobalId Shows that IDs of items in this container are app-global and not wired to a specific parent Declaration bool IsGlobalId { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Model.IEntityContainer.html": {
    "href": "api/EyeAuras.Shared.Model.IEntityContainer.html",
    "title": "Interface IEntityContainer | EyeAuras Docs",
    "keywords": "Interface IEntityContainer Inherited Members IHasId.Id Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public interface IEntityContainer : IHasId Properties Name Description ChildrenById IsGlobalId Shows that IDs of items in this container are app-global and not wired to a specific parent Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.IEyeAuraModel.IsInitialized.html": {
    "href": "api/EyeAuras.Shared.Model.IEyeAuraModel.IsInitialized.html",
    "title": "Property IsInitialized | EyeAuras Docs",
    "keywords": "Property IsInitialized IsInitialized IsInitialized means that AppContext has provided execution Quota to that aura. Until then it's the same as Paused - triggers are working but actions are not executed As soon as aura is initialized it cannot be de-initialized without unload Declaration bool IsInitialized { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Model.IEyeAuraModel.html": {
    "href": "api/EyeAuras.Shared.Model.IEyeAuraModel.html",
    "title": "Interface IEyeAuraModel | EyeAuras Docs",
    "keywords": "Interface IEyeAuraModel Inherited Members IAuraContext.Overlays IAuraContext.Triggers IAuraContext.OnEnterActions IAuraContext.WhileActiveActions IAuraContext.OnExitActions IAuraContext.IsActive IAuraContext.IsReady IEyeContext.EyeSharedServices IEntityContainer.IsGlobalId IEntityContainer.ChildrenById ICanSetPath.FullPath IHasPath.Path IHasName.Name ICanBeSelected.IsSelected IHasTimestamp.CreatedAt IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IHasId.Id IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList ICanSetContext.Context IHasVariables.Variables IHasVariables.this[string] IDisposable.Dispose() IHasBounds.BoundsWindow IHasAttachedWindow.ActiveWindow IPauseController.Pause() IPauseController.IsPaused INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public interface IEyeAuraModel : IAuraContext, IEyeContext, IAuraContainer, IEntityContainer, ICanSetPath, IHasPath, IHasName, ICanBeSelected, IHasSelected, IHasTimestamp, IAuraObject, IHasId, IBindableReactiveObject, ICanSetContext, IHasContext, IHasVariables, IDisposable, IHasBounds, IHasAttachedWindow, IPauseController, INotifyPropertyChanged Properties Name Description IsInitialized IsInitialized means that AppContext has provided execution Quota to that aura. Until then it's the same as Paused - triggers are working but actions are not executed As soon as aura is initialized it cannot be de-initialized without unload Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.IEyeContext.EyeSharedServices.html": {
    "href": "api/EyeAuras.Shared.Model.IEyeContext.EyeSharedServices.html",
    "title": "Property EyeSharedServices | EyeAuras Docs",
    "keywords": "Property EyeSharedServices EyeSharedServices Points to program services which could be used to access internals. This API is not stable and is a subject to change Declaration IEyeSharedServices EyeSharedServices { get; } Property Value Type Description IEyeSharedServices"
  },
  "api/EyeAuras.Shared.Model.IEyeContext.html": {
    "href": "api/EyeAuras.Shared.Model.IEyeContext.html",
    "title": "Interface IEyeContext | EyeAuras Docs",
    "keywords": "Interface IEyeContext Accessor which is attached to most Aura objects and holds contextual references/information about it This API is not stable and is a subject to change Inherited Members IEntityContainer.IsGlobalId IEntityContainer.ChildrenById ICanSetPath.FullPath IHasPath.Path IHasName.Name ICanBeSelected.IsSelected IHasTimestamp.CreatedAt IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IHasId.Id IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList ICanSetContext.Context IHasVariables.Variables IHasVariables.this[string] IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public interface IEyeContext : IAuraContainer, IEntityContainer, ICanSetPath, IHasPath, IHasName, ICanBeSelected, IHasSelected, IHasTimestamp, IAuraObject, IHasId, IBindableReactiveObject, ICanSetContext, IHasContext, IHasVariables, IDisposable, INotifyPropertyChanged Properties Name Description EyeSharedServices Points to program services which could be used to access internals. This API is not stable and is a subject to change Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.IFolderContext.html": {
    "href": "api/EyeAuras.Shared.Model.IFolderContext.html",
    "title": "Interface IFolderContext | EyeAuras Docs",
    "keywords": "Interface IFolderContext Inherited Members IEyeContext.EyeSharedServices IEntityContainer.IsGlobalId IEntityContainer.ChildrenById ICanSetPath.FullPath IHasPath.Path IHasName.Name ICanBeSelected.IsSelected IHasTimestamp.CreatedAt IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IHasId.Id IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList ICanSetContext.Context IHasVariables.Variables IHasVariables.this[string] IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public interface IFolderContext : IEyeContext, IAuraContainer, IEntityContainer, ICanSetPath, IHasPath, IHasName, ICanBeSelected, IHasSelected, IHasTimestamp, IAuraObject, IHasId, IBindableReactiveObject, ICanSetContext, IHasContext, IHasVariables, IDisposable, INotifyPropertyChanged Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.IHasVariables.Item.html": {
    "href": "api/EyeAuras.Shared.Model.IHasVariables.Item.html",
    "title": "Property this | EyeAuras Docs",
    "keywords": "Property this this[string] Declaration object this[string key] { get; set; } Parameters Type Name Description string key Property Value Type Description object"
  },
  "api/EyeAuras.Shared.Model.IHasVariables.Variables.html": {
    "href": "api/EyeAuras.Shared.Model.IHasVariables.Variables.html",
    "title": "Property Variables | EyeAuras Docs",
    "keywords": "Property Variables Variables Declaration IHierarchicalSourceCache<AuraVariable, string> Variables { get; } Property Value Type Description IHierarchicalSourceCache<AuraVariable, string>"
  },
  "api/EyeAuras.Shared.Model.IHasVariables.html": {
    "href": "api/EyeAuras.Shared.Model.IHasVariables.html",
    "title": "Interface IHasVariables | EyeAuras Docs",
    "keywords": "Interface IHasVariables Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface IHasVariables : IDisposable, INotifyPropertyChanged Properties Name Description this[string] Variables Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.ProxyAuraModel.-ctor.html": {
    "href": "api/EyeAuras.Shared.Model.ProxyAuraModel.-ctor.html",
    "title": "Constructor ProxyAuraModel | EyeAuras Docs",
    "keywords": "Constructor ProxyAuraModel ProxyAuraModel(IAuraRepository) Declaration protected ProxyAuraModel(IAuraRepository auraRepository) Parameters Type Name Description IAuraRepository auraRepository"
  },
  "api/EyeAuras.Shared.Model.ProxyAuraModel.BeautifyProxyName.html": {
    "href": "api/EyeAuras.Shared.Model.ProxyAuraModel.BeautifyProxyName.html",
    "title": "Method BeautifyProxyName | EyeAuras Docs",
    "keywords": "Method BeautifyProxyName BeautifyProxyName(string) Declaration protected static string BeautifyProxyName(string name) Parameters Type Name Description string name Returns Type Description string"
  },
  "api/EyeAuras.Shared.Model.ProxyAuraModel.FormatToString.html": {
    "href": "api/EyeAuras.Shared.Model.ProxyAuraModel.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides AuraObjectBase.FormatToString(ToStringBuilder)"
  },
  "api/EyeAuras.Shared.Model.ProxyAuraModel.IsResolvable.html": {
    "href": "api/EyeAuras.Shared.Model.ProxyAuraModel.IsResolvable.html",
    "title": "Property IsResolvable | EyeAuras Docs",
    "keywords": "Property IsResolvable IsResolvable Declaration public bool IsResolvable { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Model.ProxyAuraModel.LoadProperties.html": {
    "href": "api/EyeAuras.Shared.Model.ProxyAuraModel.LoadProperties.html",
    "title": "Method LoadProperties | EyeAuras Docs",
    "keywords": "Method LoadProperties LoadProperties(IAuraProperties) Declaration protected override void LoadProperties(IAuraProperties source) Parameters Type Name Description IAuraProperties source Overrides AuraObjectBase.LoadProperties(IAuraProperties)"
  },
  "api/EyeAuras.Shared.Model.ProxyAuraModel.Properties.html": {
    "href": "api/EyeAuras.Shared.Model.ProxyAuraModel.Properties.html",
    "title": "Property Properties | EyeAuras Docs",
    "keywords": "Property Properties Properties Properties could be Proxy or usual properties type. ProxyProperties in case of unknown Properties type and usual one in case of unknown Model type Declaration public IAuraProperties Properties { get; set; } Property Value Type Description IAuraProperties"
  },
  "api/EyeAuras.Shared.Model.ProxyAuraModel.SaveProperties.html": {
    "href": "api/EyeAuras.Shared.Model.ProxyAuraModel.SaveProperties.html",
    "title": "Method SaveProperties | EyeAuras Docs",
    "keywords": "Method SaveProperties SaveProperties() Declaration protected override IAuraProperties SaveProperties() Returns Type Description IAuraProperties Overrides AuraObjectBase.SaveProperties()"
  },
  "api/EyeAuras.Shared.Model.ProxyAuraModel.html": {
    "href": "api/EyeAuras.Shared.Model.ProxyAuraModel.html",
    "title": "Class ProxyAuraModel | EyeAuras Docs",
    "keywords": "Class ProxyAuraModel Inheritance object DisposableReactiveObject BindableReactiveObject AuraObjectBase ProxyAuraModel Implements IAuraObject IBindableReactiveObject IDisposable INotifyPropertyChanged IHasId ICanSetContext IHasContext Inherited Members AuraObjectBase.RaisePropertiesWhen<T>(IObservableList<T>) AuraObjectBase.RaisePropertiesWhen<T, TKey>(ISourceCache<T, TKey>) AuraObjectBase.RaisePropertiesWhen<TCollection, T>(TCollection) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollectionEx<T>) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollection<T>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>, CompositeDisposable) AuraObjectBase.RaisePropertiesWhen<T>(IObservable<T>) AuraObjectBase.RaisePropertiesWhen<T>(params IObservable<T>[]) AuraObjectBase.RaisePropertiesWhenAny<T>(T, params Expression<Func<T, object>>[]) AuraObjectBase.RaisePropertiesWhen<T>(params IAuraObject<T>[]) AuraObjectBase.ResolveBinding(string) AuraObjectBase.AddOrUpdateBinding(AuraBindingProperties) AuraObjectBase.IsLoadingProperties AuraObjectBase.IsSavingProperties AuraObjectBase.Context AuraObjectBase.Id BindableReactiveObject.RemoveBinding(string) BindableReactiveObject.ClearBindings() BindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) BindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) BindableReactiveObject.RemoveBinding(IReactiveBinding) BindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) BindableReactiveObject.Log BindableReactiveObject.ObjectId BindableReactiveObject.HasBindings BindableReactiveObject.Bindings BindableReactiveObject.BindingsList object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public abstract class ProxyAuraModel : AuraObjectBase, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext Constructors Name Description ProxyAuraModel(IAuraRepository) Properties Name Description IsResolvable Properties Properties could be Proxy or usual properties type. ProxyProperties in case of unknown Properties type and usual one in case of unknown Model type Methods Name Description BeautifyProxyName(string) FormatToString(ToStringBuilder) LoadProperties(IAuraProperties) SaveProperties() Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Model.RegionAnchorType.html": {
    "href": "api/EyeAuras.Shared.Model.RegionAnchorType.html",
    "title": "Enum RegionAnchorType | EyeAuras Docs",
    "keywords": "Enum RegionAnchorType Namespace: EyeAuras.Shared.Model Assembly: EyeAuras.Shared.dll Syntax public enum RegionAnchorType Fields Name Description Bottom BottomLeft BottomRight Center Left Right Top TopLeft TopRight Extension Methods ObjectExtensions.AddTo<RegionAnchorType, TCollection>(RegionAnchorType, ISourceList<TCollection>) ObjectExtensions.AddTo<RegionAnchorType, TCollection>(RegionAnchorType, ICollection<TCollection>) ObjectExtensions.CloneJson<RegionAnchorType>(RegionAnchorType) ObjectExtensions.CopyPropertiesTo<RegionAnchorType, TTarget>(RegionAnchorType, TTarget) ObjectExtensions.DumpToTextRaw<RegionAnchorType>(RegionAnchorType) ObjectExtensions.DumpToText<RegionAnchorType>(RegionAnchorType) ObjectExtensions.Dump<RegionAnchorType>(RegionAnchorType) ObjectExtensions.GetPropertyAccessor<RegionAnchorType, TValue>(RegionAnchorType, Expression<Func<RegionAnchorType, TValue>>) ObjectExtensions.InsertTo<RegionAnchorType, TCollection>(RegionAnchorType, IList<TCollection>, int) ObjectExtensions.ToJson<RegionAnchorType>(RegionAnchorType) ObjectExtensions.ToStringSafe<RegionAnchorType>(RegionAnchorType) ObjectExtensions.TransferPropertiesTo<RegionAnchorType, TTarget>(RegionAnchorType, TTarget, params string[]) XDocumentExtensions.AddTo<RegionAnchorType>(RegionAnchorType, XContainer)"
  },
  "api/EyeAuras.Shared.Model.html": {
    "href": "api/EyeAuras.Shared.Model.html",
    "title": "Namespace EyeAuras.Shared.Model | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Shared.Model Classes AuraObjectBase AuraObjectBase<T> AuraPropertiesBase AuraPropertiesEditorBase<TSource> AuraPropertyAttribute Marks Properties that will be tracked via INotifyChanged When property changes that means that .Properties if this model must be invalidated ComplexPositionProperties EmptyAuraProperties ProxyAuraModel Structs AuraVariable Interfaces IAuraContainer IAuraContext IAuraModelController IComplexPositionModel Represents an object with a complex position within a given coordinate system. The position is determined by a rectangle's bounds and its two anchor points, the PositionAnchor which sets the rectangle's position within the system and the ContentAnchor which sets a point within the rectangle. IEntityContainer IEyeAuraModel IEyeContext Accessor which is attached to most Aura objects and holds contextual references/information about it This API is not stable and is a subject to change IFolderContext IHasVariables Enums RegionAnchorType"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override AuraEvaluatorProperties <Clone>$() Returns Type Description AuraEvaluatorProperties Overrides AuraPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.-ctor.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.-ctor.html",
    "title": "Constructor AuraEvaluatorProperties | EyeAuras Docs",
    "keywords": "Constructor AuraEvaluatorProperties AuraEvaluatorProperties() Declaration public AuraEvaluatorProperties()"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.Conditions.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.Conditions.html",
    "title": "Property Conditions | EyeAuras Docs",
    "keywords": "Property Conditions Conditions Declaration public AuraStateDescriptor[] Conditions { get; set; } Property Value Type Description AuraStateDescriptor[]"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.Equals.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraPropertiesBase.Equals(object?) Equals(AuraPropertiesBase?) Declaration public override sealed bool Equals(AuraPropertiesBase? other) Parameters Type Name Description AuraPropertiesBase other Returns Type Description bool Overrides AuraPropertiesBase.Equals(AuraPropertiesBase?) Equals(AuraEvaluatorProperties?) Declaration public bool Equals(AuraEvaluatorProperties? other) Parameters Type Name Description AuraEvaluatorProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.FromObsoleteAuraIds.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.FromObsoleteAuraIds.html",
    "title": "Method FromObsoleteAuraIds | EyeAuras Docs",
    "keywords": "Method FromObsoleteAuraIds FromObsoleteAuraIds(string[], AuraEvaluatorOperationMode) Declaration public static AuraEvaluatorProperties FromObsoleteAuraIds(string[] auraIds, AuraEvaluatorOperationMode operationMode) Parameters Type Name Description string[] auraIds AuraEvaluatorOperationMode operationMode Returns Type Description AuraEvaluatorProperties FromObsoleteAuraIds(AuraEvaluatorProperties, string[], AuraEvaluatorOperationMode) Declaration public static AuraEvaluatorProperties FromObsoleteAuraIds(AuraEvaluatorProperties instance, string[] auraIds, AuraEvaluatorOperationMode operationMode) Parameters Type Name Description AuraEvaluatorProperties instance string[] auraIds AuraEvaluatorOperationMode operationMode Returns Type Description AuraEvaluatorProperties"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.LinkedAuraIds.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.LinkedAuraIds.html",
    "title": "Property LinkedAuraIds | EyeAuras Docs",
    "keywords": "Property LinkedAuraIds LinkedAuraIds Declaration public IReadOnlyList<string> LinkedAuraIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedAuraIds"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.LinkedFolderIds.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.LinkedFolderIds.html",
    "title": "Property LinkedFolderIds | EyeAuras Docs",
    "keywords": "Property LinkedFolderIds LinkedFolderIds Declaration public IReadOnlyList<string> LinkedFolderIds { get; } Property Value Type Description IReadOnlyList<string> Implements IHasLinkedAuraIds.LinkedFolderIds"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.OperationMode.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.OperationMode.html",
    "title": "Property OperationMode | EyeAuras Docs",
    "keywords": "Property OperationMode OperationMode Declaration public AuraEvaluatorOperationMode OperationMode { get; set; } Property Value Type Description AuraEvaluatorOperationMode"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.ReplaceId.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.ReplaceId.html",
    "title": "Method ReplaceId | EyeAuras Docs",
    "keywords": "Method ReplaceId ReplaceId(string, string) Declaration public void ReplaceId(string previousId, string newId) Parameters Type Name Description string previousId string newId Implements IHasLinkedAuraIds.ReplaceId(string, string)"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.ToString.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraPropertiesBase.ToString()"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.Version.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.html",
    "title": "Class AuraEvaluatorProperties | EyeAuras Docs",
    "keywords": "Class AuraEvaluatorProperties Inheritance object AuraPropertiesBase AuraEvaluatorProperties Implements IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraPropertiesBase> IHasLinkedAuraIds IEquatable<AuraEvaluatorProperties> Inherited Members AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Modularity Assembly: EyeAuras.Shared.Metadata.dll Syntax public sealed record AuraEvaluatorProperties : AuraPropertiesBase, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraPropertiesBase>, IHasLinkedAuraIds, IEquatable<AuraEvaluatorProperties> Constructors Name Description AuraEvaluatorProperties() Properties Name Description Conditions EqualityContract LinkedAuraIds LinkedFolderIds OperationMode Version Methods Name Description Equals(AuraPropertiesBase?) Equals(AuraEvaluatorProperties?) Equals(object?) FromObsoleteAuraIds(AuraEvaluatorProperties, string[], AuraEvaluatorOperationMode) FromObsoleteAuraIds(string[], AuraEvaluatorOperationMode) GetHashCode() PrintMembers(StringBuilder) ReplaceId(string, string) ToString() <Clone>$() Operators Name Description operator ==(AuraEvaluatorProperties?, AuraEvaluatorProperties?) operator !=(AuraEvaluatorProperties?, AuraEvaluatorProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(AuraEvaluatorProperties?, AuraEvaluatorProperties?) Declaration public static bool operator ==(AuraEvaluatorProperties? left, AuraEvaluatorProperties? right) Parameters Type Name Description AuraEvaluatorProperties left AuraEvaluatorProperties right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraEvaluatorProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(AuraEvaluatorProperties?, AuraEvaluatorProperties?) Declaration public static bool operator !=(AuraEvaluatorProperties? left, AuraEvaluatorProperties? right) Parameters Type Name Description AuraEvaluatorProperties left AuraEvaluatorProperties right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public AuraStateDescriptor <Clone>$() Returns Type Description AuraStateDescriptor"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.-ctor.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.-ctor.html",
    "title": "Constructor AuraStateDescriptor | EyeAuras Docs",
    "keywords": "Constructor AuraStateDescriptor AuraStateDescriptor() Declaration public AuraStateDescriptor()"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.AuraId.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.AuraId.html",
    "title": "Property AuraId | EyeAuras Docs",
    "keywords": "Property AuraId AuraId Declaration public string AuraId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.Condition.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.Condition.html",
    "title": "Property Condition | EyeAuras Docs",
    "keywords": "Property Condition Condition Declaration public AuraEvaluatorConditionType? Condition { get; set; } Property Value Type Description AuraEvaluatorConditionType?"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.Equals.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(AuraStateDescriptor?) Declaration public bool Equals(AuraStateDescriptor? other) Parameters Type Name Description AuraStateDescriptor other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.FolderId.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.FolderId.html",
    "title": "Property FolderId | EyeAuras Docs",
    "keywords": "Property FolderId FolderId Declaration public string FolderId { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.IsActive.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Declaration public bool? IsActive { get; set; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.IsEmpty.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.IsEmpty.html",
    "title": "Property IsEmpty | EyeAuras Docs",
    "keywords": "Property IsEmpty IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.IsLoaded.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.IsLoaded.html",
    "title": "Property IsLoaded | EyeAuras Docs",
    "keywords": "Property IsLoaded IsLoaded Declaration public bool? IsLoaded { get; set; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.IsValid.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.IsValid.html",
    "title": "Property IsValid | EyeAuras Docs",
    "keywords": "Property IsValid IsValid Declaration public bool IsValid { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.ToString.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.html",
    "title": "Class AuraStateDescriptor | EyeAuras Docs",
    "keywords": "Class AuraStateDescriptor Inheritance object AuraStateDescriptor Implements IEquatable<AuraStateDescriptor> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Modularity Assembly: EyeAuras.Shared.Metadata.dll Syntax public sealed record AuraStateDescriptor : IEquatable<AuraStateDescriptor> Constructors Name Description AuraStateDescriptor() Properties Name Description AuraId Condition FolderId IsActive IsEmpty IsLoaded IsValid Methods Name Description Equals(AuraStateDescriptor?) Equals(object?) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(AuraStateDescriptor?, AuraStateDescriptor?) operator !=(AuraStateDescriptor?, AuraStateDescriptor?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(AuraStateDescriptor?, AuraStateDescriptor?) Declaration public static bool operator ==(AuraStateDescriptor? left, AuraStateDescriptor? right) Parameters Type Name Description AuraStateDescriptor left AuraStateDescriptor right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Modularity.AuraStateDescriptor.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(AuraStateDescriptor?, AuraStateDescriptor?) Declaration public static bool operator !=(AuraStateDescriptor? left, AuraStateDescriptor? right) Parameters Type Name Description AuraStateDescriptor left AuraStateDescriptor right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Modularity.EyeSchedulers.Triggers.html": {
    "href": "api/EyeAuras.Shared.Modularity.EyeSchedulers.Triggers.html",
    "title": "Field Triggers | EyeAuras Docs",
    "keywords": "Field Triggers Namespace: EyeAuras.Shared.Modularity Assembly: EyeAuras.Shared.dll Syntax public const string Triggers = \"Trggr\" Returns Type Description string"
  },
  "api/EyeAuras.Shared.Modularity.EyeSchedulers.html": {
    "href": "api/EyeAuras.Shared.Modularity.EyeSchedulers.html",
    "title": "Class EyeSchedulers | EyeAuras Docs",
    "keywords": "Class EyeSchedulers Inheritance object EyeSchedulers Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Modularity Assembly: EyeAuras.Shared.dll Syntax public static class EyeSchedulers Fields Name Description Triggers"
  },
  "api/EyeAuras.Shared.Modularity.html": {
    "href": "api/EyeAuras.Shared.Modularity.html",
    "title": "Namespace EyeAuras.Shared.Modularity | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Shared.Modularity Classes AuraEvaluatorProperties AuraStateDescriptor EyeSchedulers"
  },
  "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.-ctor.html": {
    "href": "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.-ctor.html",
    "title": "Constructor ComplexAuraOverlay | EyeAuras Docs",
    "keywords": "Constructor ComplexAuraOverlay ComplexAuraOverlay() Declaration public ComplexAuraOverlay()"
  },
  "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.Collection.html": {
    "href": "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.Collection.html",
    "title": "Property Collection | EyeAuras Docs",
    "keywords": "Property Collection Collection Declaration public IReadOnlyObservableCollection<IAuraOverlay> Collection { get; } Property Value Type Description IReadOnlyObservableCollection<IAuraOverlay> Implements IObservableListEx<T>.Collection"
  },
  "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.CollectionChanged.html": {
    "href": "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.CollectionChanged.html",
    "title": "Event CollectionChanged | EyeAuras Docs",
    "keywords": "Event CollectionChanged Implements CollectionChanged Namespace: EyeAuras.Shared.Overlays Assembly: EyeAuras.Shared.dll Syntax public event NotifyCollectionChangedEventHandler CollectionChanged Returns Type Description NotifyCollectionChangedEventHandler"
  },
  "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.Connect.html": {
    "href": "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.Connect.html",
    "title": "Method Connect | EyeAuras Docs",
    "keywords": "Method Connect Connect(Func<IAuraOverlay, bool>) Declaration public IObservable<IChangeSet<IAuraOverlay>> Connect(Func<IAuraOverlay, bool> predicate = null) Parameters Type Name Description Func<IAuraOverlay, bool> predicate Returns Type Description IObservable<IChangeSet<IAuraOverlay>>"
  },
  "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.Count.html": {
    "href": "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public int Count { get; } Property Value Type Description int"
  },
  "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.CountChanged.html": {
    "href": "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.CountChanged.html",
    "title": "Property CountChanged | EyeAuras Docs",
    "keywords": "Property CountChanged CountChanged Declaration public IObservable<int> CountChanged { get; } Property Value Type Description IObservable<int>"
  },
  "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.Edit.html": {
    "href": "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.Edit.html",
    "title": "Method Edit | EyeAuras Docs",
    "keywords": "Method Edit Edit(Action<IExtendedList<IAuraOverlay>>) Declaration public void Edit(Action<IExtendedList<IAuraOverlay>> updateAction) Parameters Type Name Description Action<IExtendedList<IAuraOverlay>> updateAction"
  },
  "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.GetEnumerator.html": {
    "href": "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.GetEnumerator.html",
    "title": "Method GetEnumerator | EyeAuras Docs",
    "keywords": "Method GetEnumerator GetEnumerator() Declaration public IEnumerator<IAuraOverlay> GetEnumerator() Returns Type Description IEnumerator<IAuraOverlay> Implements IEnumerable<T>.GetEnumerator()"
  },
  "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.Items.html": {
    "href": "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.Items.html",
    "title": "Property Items | EyeAuras Docs",
    "keywords": "Property Items Items Declaration public IEnumerable<IAuraOverlay> Items { get; } Property Value Type Description IEnumerable<IAuraOverlay>"
  },
  "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.Preview.html": {
    "href": "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.Preview.html",
    "title": "Method Preview | EyeAuras Docs",
    "keywords": "Method Preview Preview(Func<IAuraOverlay, bool>) Declaration public IObservable<IChangeSet<IAuraOverlay>> Preview(Func<IAuraOverlay, bool> predicate = null) Parameters Type Name Description Func<IAuraOverlay, bool> predicate Returns Type Description IObservable<IChangeSet<IAuraOverlay>>"
  },
  "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.VisitLoad.html": {
    "href": "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.VisitLoad.html",
    "title": "Method VisitLoad | EyeAuras Docs",
    "keywords": "Method VisitLoad VisitLoad(EmptyAuraProperties) Declaration protected override void VisitLoad(EmptyAuraProperties source) Parameters Type Name Description EmptyAuraProperties source Overrides AuraObjectBase<EmptyAuraProperties>.VisitLoad(EmptyAuraProperties)"
  },
  "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.VisitSave.html": {
    "href": "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.VisitSave.html",
    "title": "Method VisitSave | EyeAuras Docs",
    "keywords": "Method VisitSave VisitSave(EmptyAuraProperties) Declaration protected override void VisitSave(EmptyAuraProperties target) Parameters Type Name Description EmptyAuraProperties target Overrides AuraObjectBase<EmptyAuraProperties>.VisitSave(EmptyAuraProperties)"
  },
  "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.html": {
    "href": "api/EyeAuras.Shared.Overlays.ComplexAuraOverlay.html",
    "title": "Class ComplexAuraOverlay | EyeAuras Docs",
    "keywords": "Class ComplexAuraOverlay Inheritance object DisposableReactiveObject BindableReactiveObject AuraObjectBase AuraObjectBase<EmptyAuraProperties> ComplexAuraOverlay Implements IAuraObject<EmptyAuraProperties> IAuraObject IBindableReactiveObject IHasId IComplexAuraOverlay IComplexAuraList<IAuraOverlay> ISourceListEx<IAuraOverlay> ISourceList<IAuraOverlay> IObservableListEx<IAuraOverlay> IObservableList<IAuraOverlay> IEnumerable<IAuraOverlay> IEnumerable IDisposable INotifyPropertyChanged INotifyCollectionChanged ICanSetContext IHasContext Inherited Members AuraObjectBase<EmptyAuraProperties>.Properties AuraObjectBase.ResolveBinding(string) AuraObjectBase.AddOrUpdateBinding(AuraBindingProperties) AuraObjectBase.IsLoadingProperties AuraObjectBase.IsSavingProperties AuraObjectBase.Context AuraObjectBase.Id BindableReactiveObject.RemoveBinding(string) BindableReactiveObject.ClearBindings() BindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) BindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) BindableReactiveObject.RemoveBinding(IReactiveBinding) BindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) BindableReactiveObject.ObjectId BindableReactiveObject.HasBindings BindableReactiveObject.Bindings BindableReactiveObject.BindingsList object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Overlays Assembly: EyeAuras.Shared.dll Syntax public sealed class ComplexAuraOverlay : AuraObjectBase<EmptyAuraProperties>, IAuraObject<EmptyAuraProperties>, IAuraObject, IBindableReactiveObject, IHasId, IComplexAuraOverlay, IComplexAuraList<IAuraOverlay>, ISourceListEx<IAuraOverlay>, ISourceList<IAuraOverlay>, IObservableListEx<IAuraOverlay>, IObservableList<IAuraOverlay>, IEnumerable<IAuraOverlay>, IEnumerable, IDisposable, INotifyPropertyChanged, INotifyCollectionChanged, ICanSetContext, IHasContext Constructors Name Description ComplexAuraOverlay() Properties Name Description Collection Count CountChanged Items Methods Name Description Connect(Func<IAuraOverlay, bool>) Edit(Action<IExtendedList<IAuraOverlay>>) GetEnumerator() Preview(Func<IAuraOverlay, bool>) VisitLoad(EmptyAuraProperties) VisitSave(EmptyAuraProperties) Events Name Description CollectionChanged Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Overlays.IAuraOverlay.AuraModelController.html": {
    "href": "api/EyeAuras.Shared.Overlays.IAuraOverlay.AuraModelController.html",
    "title": "Property AuraModelController | EyeAuras Docs",
    "keywords": "Property AuraModelController AuraModelController Declaration IAuraModelController AuraModelController { get; set; } Property Value Type Description IAuraModelController"
  },
  "api/EyeAuras.Shared.Overlays.IAuraOverlay.BackgroundColor.html": {
    "href": "api/EyeAuras.Shared.Overlays.IAuraOverlay.BackgroundColor.html",
    "title": "Property BackgroundColor | EyeAuras Docs",
    "keywords": "Property BackgroundColor BackgroundColor Declaration Color BackgroundColor { get; set; } Property Value Type Description Color"
  },
  "api/EyeAuras.Shared.Overlays.IAuraOverlay.BorderColor.html": {
    "href": "api/EyeAuras.Shared.Overlays.IAuraOverlay.BorderColor.html",
    "title": "Property BorderColor | EyeAuras Docs",
    "keywords": "Property BorderColor BorderColor Declaration Color BorderColor { get; set; } Property Value Type Description Color"
  },
  "api/EyeAuras.Shared.Overlays.IAuraOverlay.BorderThickness.html": {
    "href": "api/EyeAuras.Shared.Overlays.IAuraOverlay.BorderThickness.html",
    "title": "Property BorderThickness | EyeAuras Docs",
    "keywords": "Property BorderThickness BorderThickness Declaration double BorderThickness { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.Overlays.IAuraOverlay.EnableHeader.html": {
    "href": "api/EyeAuras.Shared.Overlays.IAuraOverlay.EnableHeader.html",
    "title": "Property EnableHeader | EyeAuras Docs",
    "keywords": "Property EnableHeader EnableHeader Declaration bool EnableHeader { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Overlays.IAuraOverlay.IsClickThrough.html": {
    "href": "api/EyeAuras.Shared.Overlays.IAuraOverlay.IsClickThrough.html",
    "title": "Property IsClickThrough | EyeAuras Docs",
    "keywords": "Property IsClickThrough IsClickThrough Declaration bool IsClickThrough { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Overlays.IAuraOverlay.IsIgnored.html": {
    "href": "api/EyeAuras.Shared.Overlays.IAuraOverlay.IsIgnored.html",
    "title": "Property IsIgnored | EyeAuras Docs",
    "keywords": "Property IsIgnored IsIgnored Indicates whether this Overlay is ignored and should not be shown Declaration bool IsIgnored { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Overlays.IAuraOverlay.MaintainAspectRatio.html": {
    "href": "api/EyeAuras.Shared.Overlays.IAuraOverlay.MaintainAspectRatio.html",
    "title": "Property MaintainAspectRatio | EyeAuras Docs",
    "keywords": "Property MaintainAspectRatio MaintainAspectRatio Declaration bool MaintainAspectRatio { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Overlays.IAuraOverlay.OverlayPosition.html": {
    "href": "api/EyeAuras.Shared.Overlays.IAuraOverlay.OverlayPosition.html",
    "title": "Property OverlayPosition | EyeAuras Docs",
    "keywords": "Property OverlayPosition OverlayPosition Declaration IComplexPositionModel OverlayPosition { get; } Property Value Type Description IComplexPositionModel"
  },
  "api/EyeAuras.Shared.Overlays.IAuraOverlay.ThumbnailOpacity.html": {
    "href": "api/EyeAuras.Shared.Overlays.IAuraOverlay.ThumbnailOpacity.html",
    "title": "Property ThumbnailOpacity | EyeAuras Docs",
    "keywords": "Property ThumbnailOpacity ThumbnailOpacity Declaration double ThumbnailOpacity { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.Overlays.IAuraOverlay.Title.html": {
    "href": "api/EyeAuras.Shared.Overlays.IAuraOverlay.Title.html",
    "title": "Property Title | EyeAuras Docs",
    "keywords": "Property Title Title Declaration string Title { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Overlays.IAuraOverlay.html": {
    "href": "api/EyeAuras.Shared.Overlays.IAuraOverlay.html",
    "title": "Interface IAuraOverlay | EyeAuras Docs",
    "keywords": "Interface IAuraOverlay Inherited Members IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Overlays Assembly: EyeAuras.Shared.dll Syntax public interface IAuraOverlay : IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription, INotifyPropertyChanged Properties Name Description AuraModelController BackgroundColor BorderColor BorderThickness EnableHeader IsClickThrough IsIgnored Indicates whether this Overlay is ignored and should not be shown MaintainAspectRatio OverlayPosition ThumbnailOpacity Title Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Overlays.IComplexAuraOverlay.html": {
    "href": "api/EyeAuras.Shared.Overlays.IComplexAuraOverlay.html",
    "title": "Interface IComplexAuraOverlay | EyeAuras Docs",
    "keywords": "Interface IComplexAuraOverlay Inherited Members IObservableListEx<IAuraOverlay>.Collection IEnumerable<IAuraOverlay>.GetEnumerator() IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged INotifyCollectionChanged.CollectionChanged ICanSetContext.Context Namespace: EyeAuras.Shared.Overlays Assembly: EyeAuras.Shared.dll Syntax public interface IComplexAuraOverlay : IComplexAuraList<IAuraOverlay>, ISourceListEx<IAuraOverlay>, ISourceList<IAuraOverlay>, IObservableListEx<IAuraOverlay>, IObservableList<IAuraOverlay>, IEnumerable<IAuraOverlay>, IEnumerable, IDisposable, INotifyPropertyChanged, INotifyCollectionChanged, ICanSetContext, IHasContext Extension Methods ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Overlays.html": {
    "href": "api/EyeAuras.Shared.Overlays.html",
    "title": "Namespace EyeAuras.Shared.Overlays | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Shared.Overlays Classes ComplexAuraOverlay Interfaces IAuraOverlay IComplexAuraOverlay"
  },
  "api/EyeAuras.Shared.ProxyAuraProperties.-Clone--.html": {
    "href": "api/EyeAuras.Shared.ProxyAuraProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override ProxyAuraProperties <Clone>$() Returns Type Description ProxyAuraProperties Overrides AuraPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.Shared.ProxyAuraProperties.-ctor.html": {
    "href": "api/EyeAuras.Shared.ProxyAuraProperties.-ctor.html",
    "title": "Constructor ProxyAuraProperties | EyeAuras Docs",
    "keywords": "Constructor ProxyAuraProperties ProxyAuraProperties(PoeConfigMetadata<IAuraProperties>) Declaration public ProxyAuraProperties(PoeConfigMetadata<IAuraProperties> metadata) Parameters Type Name Description PoeConfigMetadata<IAuraProperties> metadata"
  },
  "api/EyeAuras.Shared.ProxyAuraProperties.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.ProxyAuraProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.Shared.ProxyAuraProperties.Equals.html": {
    "href": "api/EyeAuras.Shared.ProxyAuraProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraPropertiesBase.Equals(object?) Equals(AuraPropertiesBase?) Declaration public override sealed bool Equals(AuraPropertiesBase? other) Parameters Type Name Description AuraPropertiesBase other Returns Type Description bool Overrides AuraPropertiesBase.Equals(AuraPropertiesBase?) Equals(ProxyAuraProperties?) Declaration public bool Equals(ProxyAuraProperties? other) Parameters Type Name Description ProxyAuraProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.ProxyAuraProperties.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.ProxyAuraProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.Shared.ProxyAuraProperties.Metadata.html": {
    "href": "api/EyeAuras.Shared.ProxyAuraProperties.Metadata.html",
    "title": "Property Metadata | EyeAuras Docs",
    "keywords": "Property Metadata Metadata Declaration public PoeConfigMetadata<IAuraProperties> Metadata { get; } Property Value Type Description PoeConfigMetadata<IAuraProperties>"
  },
  "api/EyeAuras.Shared.ProxyAuraProperties.ModuleName.html": {
    "href": "api/EyeAuras.Shared.ProxyAuraProperties.ModuleName.html",
    "title": "Property ModuleName | EyeAuras Docs",
    "keywords": "Property ModuleName ModuleName Declaration public string ModuleName { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.ProxyAuraProperties.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.ProxyAuraProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.Shared.ProxyAuraProperties.ToString.html": {
    "href": "api/EyeAuras.Shared.ProxyAuraProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraPropertiesBase.ToString()"
  },
  "api/EyeAuras.Shared.ProxyAuraProperties.Version.html": {
    "href": "api/EyeAuras.Shared.ProxyAuraProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version"
  },
  "api/EyeAuras.Shared.ProxyAuraProperties.html": {
    "href": "api/EyeAuras.Shared.ProxyAuraProperties.html",
    "title": "Class ProxyAuraProperties | EyeAuras Docs",
    "keywords": "Class ProxyAuraProperties Inheritance object AuraPropertiesBase ProxyAuraProperties Implements IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraPropertiesBase> IEquatable<ProxyAuraProperties> Inherited Members AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared Assembly: EyeAuras.Shared.dll Syntax public sealed record ProxyAuraProperties : AuraPropertiesBase, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraPropertiesBase>, IEquatable<ProxyAuraProperties> Constructors Name Description ProxyAuraProperties(PoeConfigMetadata<IAuraProperties>) Properties Name Description EqualityContract Metadata ModuleName Version Methods Name Description Equals(AuraPropertiesBase?) Equals(ProxyAuraProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(ProxyAuraProperties?, ProxyAuraProperties?) operator !=(ProxyAuraProperties?, ProxyAuraProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.ProxyAuraProperties.op_Equality.html": {
    "href": "api/EyeAuras.Shared.ProxyAuraProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ProxyAuraProperties?, ProxyAuraProperties?) Declaration public static bool operator ==(ProxyAuraProperties? left, ProxyAuraProperties? right) Parameters Type Name Description ProxyAuraProperties left ProxyAuraProperties right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.ProxyAuraProperties.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.ProxyAuraProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ProxyAuraProperties?, ProxyAuraProperties?) Declaration public static bool operator !=(ProxyAuraProperties? left, ProxyAuraProperties? right) Parameters Type Name Description ProxyAuraProperties left ProxyAuraProperties right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.InheritContext.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.InheritContext.html",
    "title": "Method InheritContext | EyeAuras Docs",
    "keywords": "Method InheritContext InheritContext<TTarget, TSource>(TTarget, TSource) Declaration public static TTarget InheritContext<TTarget, TSource>(this TTarget target, TSource source) where TTarget : ICanSetContext where TSource : ICanSetContext, IDisposableReactiveObject Parameters Type Name Description TTarget target TSource source Returns Type Description TTarget Type Parameters Name Description TTarget TSource"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.TryWaitForActivation.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.TryWaitForActivation.html",
    "title": "Method TryWaitForActivation | EyeAuras Docs",
    "keywords": "Method TryWaitForActivation TryWaitForActivation(IAura, TimeSpan) Declaration public static bool TryWaitForActivation(this IAura aura, TimeSpan timeout) Parameters Type Name Description IAura aura TimeSpan timeout Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.TryWaitForDeactivation.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.TryWaitForDeactivation.html",
    "title": "Method TryWaitForDeactivation | EyeAuras Docs",
    "keywords": "Method TryWaitForDeactivation TryWaitForDeactivation(IAura, TimeSpan) Declaration public static bool TryWaitForDeactivation(this IAura aura, TimeSpan timeout) Parameters Type Name Description IAura aura TimeSpan timeout Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.TryWaitForIsActive.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.TryWaitForIsActive.html",
    "title": "Method TryWaitForIsActive | EyeAuras Docs",
    "keywords": "Method TryWaitForIsActive TryWaitForIsActive(IAura, bool, TimeSpan) Declaration public static bool TryWaitForIsActive(this IAura aura, bool expectedIsActive, TimeSpan timeout) Parameters Type Name Description IAura aura bool expectedIsActive TimeSpan timeout Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.WaitForActivation.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.WaitForActivation.html",
    "title": "Method WaitForActivation | EyeAuras Docs",
    "keywords": "Method WaitForActivation WaitForActivation(IAura, TimeSpan) Declaration public static void WaitForActivation(this IAura aura, TimeSpan timeout) Parameters Type Name Description IAura aura TimeSpan timeout"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.WaitForDeactivation.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.WaitForDeactivation.html",
    "title": "Method WaitForDeactivation | EyeAuras Docs",
    "keywords": "Method WaitForDeactivation WaitForDeactivation(IAura, TimeSpan) Declaration public static void WaitForDeactivation(this IAura aura, TimeSpan timeout) Parameters Type Name Description IAura aura TimeSpan timeout"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.WaitForIsActive.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.WaitForIsActive.html",
    "title": "Method WaitForIsActive | EyeAuras Docs",
    "keywords": "Method WaitForIsActive WaitForIsActive(IAura, bool, TimeSpan) Declaration public static void WaitForIsActive(this IAura aura, bool expectedIsActive, TimeSpan timeout) Parameters Type Name Description IAura aura bool expectedIsActive TimeSpan timeout"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.WithContext.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.WithContext.html",
    "title": "Method WithContext | EyeAuras Docs",
    "keywords": "Method WithContext WithContext<TTarget, TContext>(TTarget, TContext) Declaration public static TTarget WithContext<TTarget, TContext>(this TTarget target, TContext context) where TTarget : ICanSetContext where TContext : IAuraContext Parameters Type Name Description TTarget target TContext context Returns Type Description TTarget Type Parameters Name Description TTarget TContext WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) Declaration public static TTarget WithContext<TTarget, TSrc, TContext>(this TTarget target, TSrc source, Expression<Func<TSrc, TContext>> sourceExpr) where TTarget : ICanSetContext where TSrc : IDisposableReactiveObject where TContext : IEyeContext Parameters Type Name Description TTarget target TSrc source Expression<Func<TSrc, TContext>> sourceExpr Returns Type Description TTarget Type Parameters Name Description TTarget TSrc TContext"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraModelExtensions.html",
    "title": "Class AuraModelExtensions | EyeAuras Docs",
    "keywords": "Class AuraModelExtensions Inheritance object AuraModelExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Scaffolding Assembly: EyeAuras.Shared.dll Syntax public static class AuraModelExtensions Methods Name Description InheritContext<TTarget, TSource>(TTarget, TSource) TryWaitForActivation(IAura, TimeSpan) TryWaitForDeactivation(IAura, TimeSpan) TryWaitForIsActive(IAura, bool, TimeSpan) WaitForActivation(IAura, TimeSpan) WaitForDeactivation(IAura, TimeSpan) WaitForIsActive(IAura, bool, TimeSpan) WithContext<TTarget, TContext>(TTarget, TContext) WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>)"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.ExtractChildrenOfType.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.ExtractChildrenOfType.html",
    "title": "Method ExtractChildrenOfType | EyeAuras Docs",
    "keywords": "Method ExtractChildrenOfType ExtractChildrenOfType<T>(IAura, out ReadOnlyObservableCollection<T>) Declaration public static IDisposable ExtractChildrenOfType<T>(this IAura aura, out ReadOnlyObservableCollection<T> children) where T : class Parameters Type Name Description IAura aura ReadOnlyObservableCollection<T> children Returns Type Description IDisposable Type Parameters Name Description T ExtractChildrenOfType<T>(IObservable<IChangeSet<IAura>>) Declaration public static ISourceList<T> ExtractChildrenOfType<T>(this IObservable<IChangeSet<IAura>> auras) where T : class Parameters Type Name Description IObservable<IChangeSet<IAura>> auras Returns Type Description ISourceList<T> Type Parameters Name Description T ExtractChildrenOfType<T>(ReadOnlyObservableCollection<IAura>) Declaration public static ISourceList<T> ExtractChildrenOfType<T>(this ReadOnlyObservableCollection<IAura> auras) where T : class Parameters Type Name Description ReadOnlyObservableCollection<IAura> auras Returns Type Description ISourceList<T> Type Parameters Name Description T"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.GetEnablingConditions.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.GetEnablingConditions.html",
    "title": "Method GetEnablingConditions | EyeAuras Docs",
    "keywords": "Method GetEnablingConditions GetEnablingConditions(IAura) Declaration public static IEnumerable<IAuraTrigger> GetEnablingConditions(this IAura aura) Parameters Type Name Description IAura aura Returns Type Description IEnumerable<IAuraTrigger>"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.GetModelSafe.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.GetModelSafe.html",
    "title": "Method GetModelSafe | EyeAuras Docs",
    "keywords": "Method GetModelSafe GetModelSafe(IAura) Declaration public static IEyeAuraModel GetModelSafe(this IAura aura) Parameters Type Name Description IAura aura Returns Type Description IEyeAuraModel"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.GetOnEnterActions.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.GetOnEnterActions.html",
    "title": "Method GetOnEnterActions | EyeAuras Docs",
    "keywords": "Method GetOnEnterActions GetOnEnterActions(IAura) Declaration public static IEnumerable<IAuraAction> GetOnEnterActions(this IAura aura) Parameters Type Name Description IAura aura Returns Type Description IEnumerable<IAuraAction>"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.GetOnExitActions.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.GetOnExitActions.html",
    "title": "Method GetOnExitActions | EyeAuras Docs",
    "keywords": "Method GetOnExitActions GetOnExitActions(IAura) Declaration public static IEnumerable<IAuraAction> GetOnExitActions(this IAura aura) Parameters Type Name Description IAura aura Returns Type Description IEnumerable<IAuraAction>"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.GetOverlays.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.GetOverlays.html",
    "title": "Method GetOverlays | EyeAuras Docs",
    "keywords": "Method GetOverlays GetOverlays(IAura) Declaration public static IEnumerable<IAuraOverlay> GetOverlays(this IAura aura) Parameters Type Name Description IAura aura Returns Type Description IEnumerable<IAuraOverlay>"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.GetTriggers.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.GetTriggers.html",
    "title": "Method GetTriggers | EyeAuras Docs",
    "keywords": "Method GetTriggers GetTriggers(IAura) Declaration public static IEnumerable<IAuraTrigger> GetTriggers(this IAura aura) Parameters Type Name Description IAura aura Returns Type Description IEnumerable<IAuraTrigger>"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.GetWhileActiveActions.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.GetWhileActiveActions.html",
    "title": "Method GetWhileActiveActions | EyeAuras Docs",
    "keywords": "Method GetWhileActiveActions GetWhileActiveActions(IAura) Declaration public static IEnumerable<IAuraAction> GetWhileActiveActions(this IAura aura) Parameters Type Name Description IAura aura Returns Type Description IEnumerable<IAuraAction>"
  },
  "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.AuraViewModelExtensions.html",
    "title": "Class AuraViewModelExtensions | EyeAuras Docs",
    "keywords": "Class AuraViewModelExtensions Inheritance object AuraViewModelExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Scaffolding Assembly: EyeAuras.Shared.dll Syntax public static class AuraViewModelExtensions Methods Name Description ExtractChildrenOfType<T>(IAura, out ReadOnlyObservableCollection<T>) ExtractChildrenOfType<T>(ReadOnlyObservableCollection<IAura>) ExtractChildrenOfType<T>(IObservable<IChangeSet<IAura>>) GetEnablingConditions(IAura) GetModelSafe(IAura) GetOnEnterActions(IAura) GetOnExitActions(IAura) GetOverlays(IAura) GetTriggers(IAura) GetWhileActiveActions(IAura)"
  },
  "api/EyeAuras.Shared.Scaffolding.BindingValueConverterRepositoryExtensions.ConvertOrDefault.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.BindingValueConverterRepositoryExtensions.ConvertOrDefault.html",
    "title": "Method ConvertOrDefault | EyeAuras Docs",
    "keywords": "Method ConvertOrDefault ConvertOrDefault<TDst>(IBindingValueConverterRepository, object) Declaration public static TDst ConvertOrDefault<TDst>(this IBindingValueConverterRepository converter, object src) Parameters Type Name Description IBindingValueConverterRepository converter object src Returns Type Description TDst Type Parameters Name Description TDst"
  },
  "api/EyeAuras.Shared.Scaffolding.BindingValueConverterRepositoryExtensions.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.BindingValueConverterRepositoryExtensions.html",
    "title": "Class BindingValueConverterRepositoryExtensions | EyeAuras Docs",
    "keywords": "Class BindingValueConverterRepositoryExtensions Inheritance object BindingValueConverterRepositoryExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Scaffolding Assembly: EyeAuras.Shared.dll Syntax public static class BindingValueConverterRepositoryExtensions Methods Name Description ConvertOrDefault<TDst>(IBindingValueConverterRepository, object)"
  },
  "api/EyeAuras.Shared.Scaffolding.ChangeSetExtensions.AssignContextToItems.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.ChangeSetExtensions.AssignContextToItems.html",
    "title": "Method AssignContextToItems | EyeAuras Docs",
    "keywords": "Method AssignContextToItems AssignContextToItems<T>(IObservable<IChangeSet<T>>, Func<IAuraContext>) Declaration public static IObservable<IChangeSet<T>> AssignContextToItems<T>(this IObservable<IChangeSet<T>> changes, Func<IAuraContext> contextProvider) where T : class, ICanSetContext Parameters Type Name Description IObservable<IChangeSet<T>> changes Func<IAuraContext> contextProvider Returns Type Description IObservable<IChangeSet<T>> Type Parameters Name Description T"
  },
  "api/EyeAuras.Shared.Scaffolding.ChangeSetExtensions.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.ChangeSetExtensions.html",
    "title": "Class ChangeSetExtensions | EyeAuras Docs",
    "keywords": "Class ChangeSetExtensions Inheritance object ChangeSetExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Scaffolding Assembly: EyeAuras.Shared.dll Syntax public static class ChangeSetExtensions Methods Name Description AssignContextToItems<T>(IObservable<IChangeSet<T>>, Func<IAuraContext>)"
  },
  "api/EyeAuras.Shared.Scaffolding.NullableExtensions.ToAuraStateDescription.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.NullableExtensions.ToAuraStateDescription.html",
    "title": "Method ToAuraStateDescription | EyeAuras Docs",
    "keywords": "Method ToAuraStateDescription ToAuraStateDescription(bool?) Declaration public static string ToAuraStateDescription(this bool? isActive) Parameters Type Name Description bool? isActive Returns Type Description string"
  },
  "api/EyeAuras.Shared.Scaffolding.NullableExtensions.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.NullableExtensions.html",
    "title": "Class NullableExtensions | EyeAuras Docs",
    "keywords": "Class NullableExtensions Inheritance object NullableExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Scaffolding Assembly: EyeAuras.Shared.dll Syntax public static class NullableExtensions Methods Name Description ToAuraStateDescription(bool?)"
  },
  "api/EyeAuras.Shared.Scaffolding.WindowHandleExtensions.ToWindowMatchExpressionOrDefault.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.WindowHandleExtensions.ToWindowMatchExpressionOrDefault.html",
    "title": "Method ToWindowMatchExpressionOrDefault | EyeAuras Docs",
    "keywords": "Method ToWindowMatchExpressionOrDefault ToWindowMatchExpressionOrDefault(IWindowHandle) Declaration public static WindowMatchExpression ToWindowMatchExpressionOrDefault(this IWindowHandle windowHandle) Parameters Type Name Description IWindowHandle windowHandle Returns Type Description WindowMatchExpression"
  },
  "api/EyeAuras.Shared.Scaffolding.WindowHandleExtensions.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.WindowHandleExtensions.html",
    "title": "Class WindowHandleExtensions | EyeAuras Docs",
    "keywords": "Class WindowHandleExtensions Inheritance object WindowHandleExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Scaffolding Assembly: EyeAuras.Shared.dll Syntax public static class WindowHandleExtensions Methods Name Description ToWindowMatchExpressionOrDefault(IWindowHandle)"
  },
  "api/EyeAuras.Shared.Scaffolding.html": {
    "href": "api/EyeAuras.Shared.Scaffolding.html",
    "title": "Namespace EyeAuras.Shared.Scaffolding | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Shared.Scaffolding Classes AuraModelExtensions AuraViewModelExtensions BindingValueConverterRepositoryExtensions ChangeSetExtensions NullableExtensions WindowHandleExtensions"
  },
  "api/EyeAuras.Shared.Services.AuraEvaluatorConditionType.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEvaluatorConditionType.html",
    "title": "Enum AuraEvaluatorConditionType | EyeAuras Docs",
    "keywords": "Enum AuraEvaluatorConditionType Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.Metadata.dll Syntax public enum AuraEvaluatorConditionType Fields Name Description AllActive All conditions must be active, boolean AND AllInactive All conditions must be inactive, boolean NOT+AND AnyActive At least one conditions must be active, boolean OR Extension Methods ObjectExtensions.AddTo<AuraEvaluatorConditionType, TCollection>(AuraEvaluatorConditionType, ISourceList<TCollection>) ObjectExtensions.AddTo<AuraEvaluatorConditionType, TCollection>(AuraEvaluatorConditionType, ICollection<TCollection>) ObjectExtensions.CloneJson<AuraEvaluatorConditionType>(AuraEvaluatorConditionType) ObjectExtensions.CopyPropertiesTo<AuraEvaluatorConditionType, TTarget>(AuraEvaluatorConditionType, TTarget) ObjectExtensions.DumpToTextRaw<AuraEvaluatorConditionType>(AuraEvaluatorConditionType) ObjectExtensions.DumpToText<AuraEvaluatorConditionType>(AuraEvaluatorConditionType) ObjectExtensions.Dump<AuraEvaluatorConditionType>(AuraEvaluatorConditionType) ObjectExtensions.GetPropertyAccessor<AuraEvaluatorConditionType, TValue>(AuraEvaluatorConditionType, Expression<Func<AuraEvaluatorConditionType, TValue>>) ObjectExtensions.InsertTo<AuraEvaluatorConditionType, TCollection>(AuraEvaluatorConditionType, IList<TCollection>, int) ObjectExtensions.ToJson<AuraEvaluatorConditionType>(AuraEvaluatorConditionType) ObjectExtensions.ToStringSafe<AuraEvaluatorConditionType>(AuraEvaluatorConditionType) ObjectExtensions.TransferPropertiesTo<AuraEvaluatorConditionType, TTarget>(AuraEvaluatorConditionType, TTarget, params string[]) XDocumentExtensions.AddTo<AuraEvaluatorConditionType>(AuraEvaluatorConditionType, XContainer)"
  },
  "api/EyeAuras.Shared.Services.AuraEvaluatorOperationMode.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEvaluatorOperationMode.html",
    "title": "Enum AuraEvaluatorOperationMode | EyeAuras Docs",
    "keywords": "Enum AuraEvaluatorOperationMode Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.Metadata.dll Syntax public enum AuraEvaluatorOperationMode Fields Name Description All All evaluators must be active, boolean AND Any At least one evaluator must be active, boolean OR Extension Methods ObjectExtensions.AddTo<AuraEvaluatorOperationMode, TCollection>(AuraEvaluatorOperationMode, ISourceList<TCollection>) ObjectExtensions.AddTo<AuraEvaluatorOperationMode, TCollection>(AuraEvaluatorOperationMode, ICollection<TCollection>) ObjectExtensions.CloneJson<AuraEvaluatorOperationMode>(AuraEvaluatorOperationMode) ObjectExtensions.CopyPropertiesTo<AuraEvaluatorOperationMode, TTarget>(AuraEvaluatorOperationMode, TTarget) ObjectExtensions.DumpToTextRaw<AuraEvaluatorOperationMode>(AuraEvaluatorOperationMode) ObjectExtensions.DumpToText<AuraEvaluatorOperationMode>(AuraEvaluatorOperationMode) ObjectExtensions.Dump<AuraEvaluatorOperationMode>(AuraEvaluatorOperationMode) ObjectExtensions.GetPropertyAccessor<AuraEvaluatorOperationMode, TValue>(AuraEvaluatorOperationMode, Expression<Func<AuraEvaluatorOperationMode, TValue>>) ObjectExtensions.InsertTo<AuraEvaluatorOperationMode, TCollection>(AuraEvaluatorOperationMode, IList<TCollection>, int) ObjectExtensions.ToJson<AuraEvaluatorOperationMode>(AuraEvaluatorOperationMode) ObjectExtensions.ToStringSafe<AuraEvaluatorOperationMode>(AuraEvaluatorOperationMode) ObjectExtensions.TransferPropertiesTo<AuraEvaluatorOperationMode, TTarget>(AuraEvaluatorOperationMode, TTarget, params string[]) XDocumentExtensions.AddTo<AuraEvaluatorOperationMode>(AuraEvaluatorOperationMode, XContainer)"
  },
  "api/EyeAuras.Shared.Services.AuraEvent.Category.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEvent.Category.html",
    "title": "Property Category | EyeAuras Docs",
    "keywords": "Property Category Category Declaration public AuraEventCategory Category { get; init; } Property Value Type Description AuraEventCategory"
  },
  "api/EyeAuras.Shared.Services.AuraEvent.Context.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEvent.Context.html",
    "title": "Property Context | EyeAuras Docs",
    "keywords": "Property Context Context Contains info about context which was active at the moment of event Declaration public IEyeContext Context { get; init; } Property Value Type Description IEyeContext"
  },
  "api/EyeAuras.Shared.Services.AuraEvent.Equals.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEvent.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) Equals(AuraEvent) Declaration public bool Equals(AuraEvent other) Parameters Type Name Description AuraEvent other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Services.AuraEvent.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEvent.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode()"
  },
  "api/EyeAuras.Shared.Services.AuraEvent.Loglevel.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEvent.Loglevel.html",
    "title": "Property Loglevel | EyeAuras Docs",
    "keywords": "Property Loglevel Loglevel Declaration public FluentLogLevel Loglevel { get; init; } Property Value Type Description FluentLogLevel"
  },
  "api/EyeAuras.Shared.Services.AuraEvent.SenderInfo.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEvent.SenderInfo.html",
    "title": "Property SenderInfo | EyeAuras Docs",
    "keywords": "Property SenderInfo SenderInfo Contains some information describing where message comes from - path of aura, name of service/channel, etc Declaration public string SenderInfo { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Services.AuraEvent.Text.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEvent.Text.html",
    "title": "Property Text | EyeAuras Docs",
    "keywords": "Property Text Text Message that will be displayed to a user Declaration public required string Text { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Services.AuraEvent.Timestamp.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEvent.Timestamp.html",
    "title": "Property Timestamp | EyeAuras Docs",
    "keywords": "Property Timestamp Timestamp Declaration public DateTimeOffset Timestamp { get; init; } Property Value Type Description DateTimeOffset"
  },
  "api/EyeAuras.Shared.Services.AuraEvent.ToString.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEvent.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.Shared.Services.AuraEvent.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEvent.html",
    "title": "Struct AuraEvent | EyeAuras Docs",
    "keywords": "Struct AuraEvent Implements IEquatable<AuraEvent> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public readonly struct AuraEvent : IEquatable<AuraEvent> Properties Name Description Category Context Contains info about context which was active at the moment of event Loglevel SenderInfo Contains some information describing where message comes from - path of aura, name of service/channel, etc Text Message that will be displayed to a user Timestamp Methods Name Description Equals(AuraEvent) Equals(object) GetHashCode() ToString() Operators Name Description operator ==(AuraEvent, AuraEvent) operator !=(AuraEvent, AuraEvent) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.Shared.Services.AuraEvent.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEvent.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(AuraEvent, AuraEvent) Declaration public static bool operator ==(AuraEvent left, AuraEvent right) Parameters Type Name Description AuraEvent left AuraEvent right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Services.AuraEvent.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEvent.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(AuraEvent, AuraEvent) Declaration public static bool operator !=(AuraEvent left, AuraEvent right) Parameters Type Name Description AuraEvent left AuraEvent right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Services.AuraEventCategory.html": {
    "href": "api/EyeAuras.Shared.Services.AuraEventCategory.html",
    "title": "Enum AuraEventCategory | EyeAuras Docs",
    "keywords": "Enum AuraEventCategory Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public enum AuraEventCategory Fields Name Description Aura Communications Compiler None Script System Extension Methods ObjectExtensions.AddTo<AuraEventCategory, TCollection>(AuraEventCategory, ISourceList<TCollection>) ObjectExtensions.AddTo<AuraEventCategory, TCollection>(AuraEventCategory, ICollection<TCollection>) ObjectExtensions.CloneJson<AuraEventCategory>(AuraEventCategory) ObjectExtensions.CopyPropertiesTo<AuraEventCategory, TTarget>(AuraEventCategory, TTarget) ObjectExtensions.DumpToTextRaw<AuraEventCategory>(AuraEventCategory) ObjectExtensions.DumpToText<AuraEventCategory>(AuraEventCategory) ObjectExtensions.Dump<AuraEventCategory>(AuraEventCategory) ObjectExtensions.GetPropertyAccessor<AuraEventCategory, TValue>(AuraEventCategory, Expression<Func<AuraEventCategory, TValue>>) ObjectExtensions.InsertTo<AuraEventCategory, TCollection>(AuraEventCategory, IList<TCollection>, int) ObjectExtensions.ToJson<AuraEventCategory>(AuraEventCategory) ObjectExtensions.ToStringSafe<AuraEventCategory>(AuraEventCategory) ObjectExtensions.TransferPropertiesTo<AuraEventCategory, TTarget>(AuraEventCategory, TTarget, params string[]) XDocumentExtensions.AddTo<AuraEventCategory>(AuraEventCategory, XContainer)"
  },
  "api/EyeAuras.Shared.Services.IAppModuleLoader.LoadModulesFromBytes.html": {
    "href": "api/EyeAuras.Shared.Services.IAppModuleLoader.LoadModulesFromBytes.html",
    "title": "Method LoadModulesFromBytes | EyeAuras Docs",
    "keywords": "Method LoadModulesFromBytes LoadModulesFromBytes(byte[], FileInfo) Declaration void LoadModulesFromBytes(byte[] assemblyBytes, FileInfo moduleRef) Parameters Type Name Description byte[] assemblyBytes FileInfo moduleRef"
  },
  "api/EyeAuras.Shared.Services.IAppModuleLoader.UnzipCompressedModule.html": {
    "href": "api/EyeAuras.Shared.Services.IAppModuleLoader.UnzipCompressedModule.html",
    "title": "Method UnzipCompressedModule | EyeAuras Docs",
    "keywords": "Method UnzipCompressedModule UnzipCompressedModule(string, byte[]) Declaration DirectoryInfo UnzipCompressedModule(string moduleName, byte[] zipBytes) Parameters Type Name Description string moduleName byte[] zipBytes Returns Type Description DirectoryInfo"
  },
  "api/EyeAuras.Shared.Services.IAppModuleLoader.html": {
    "href": "api/EyeAuras.Shared.Services.IAppModuleLoader.html",
    "title": "Interface IAppModuleLoader | EyeAuras Docs",
    "keywords": "Interface IAppModuleLoader Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IAppModuleLoader Methods Name Description LoadModulesFromBytes(byte[], FileInfo) UnzipCompressedModule(string, byte[]) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IAppModulePathResolver.ResolvePath.html": {
    "href": "api/EyeAuras.Shared.Services.IAppModulePathResolver.ResolvePath.html",
    "title": "Method ResolvePath | EyeAuras Docs",
    "keywords": "Method ResolvePath ResolvePath<T>() Declaration DirectoryInfo ResolvePath<T>() where T : IModule Returns Type Description DirectoryInfo Type Parameters Name Description T"
  },
  "api/EyeAuras.Shared.Services.IAppModulePathResolver.html": {
    "href": "api/EyeAuras.Shared.Services.IAppModulePathResolver.html",
    "title": "Interface IAppModulePathResolver | EyeAuras Docs",
    "keywords": "Interface IAppModulePathResolver Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IAppModulePathResolver Methods Name Description ResolvePath<T>() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IAuraEvaluator.Aura.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraEvaluator.Aura.html",
    "title": "Property Aura | EyeAuras Docs",
    "keywords": "Property Aura Aura Declaration IAura Aura { get; } Property Value Type Description IAura"
  },
  "api/EyeAuras.Shared.Services.IAuraEvaluator.AuraId.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraEvaluator.AuraId.html",
    "title": "Property AuraId | EyeAuras Docs",
    "keywords": "Property AuraId AuraId Declaration string AuraId { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Services.IAuraEvaluator.CyclicReferences.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraEvaluator.CyclicReferences.html",
    "title": "Property CyclicReferences | EyeAuras Docs",
    "keywords": "Property CyclicReferences CyclicReferences Declaration IAura[] CyclicReferences { get; } Property Value Type Description IAura[]"
  },
  "api/EyeAuras.Shared.Services.IAuraEvaluator.ExpectedIsActive.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraEvaluator.ExpectedIsActive.html",
    "title": "Property ExpectedIsActive | EyeAuras Docs",
    "keywords": "Property ExpectedIsActive ExpectedIsActive Declaration bool? ExpectedIsActive { get; set; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Services.IAuraEvaluator.IsActive.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraEvaluator.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Declaration bool? IsActive { get; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Services.IAuraEvaluator.IsCyclicReference.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraEvaluator.IsCyclicReference.html",
    "title": "Property IsCyclicReference | EyeAuras Docs",
    "keywords": "Property IsCyclicReference IsCyclicReference Declaration bool? IsCyclicReference { get; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Services.IAuraEvaluator.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraEvaluator.html",
    "title": "Interface IAuraEvaluator | EyeAuras Docs",
    "keywords": "Interface IAuraEvaluator Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IAuraEvaluator : IDisposable, INotifyPropertyChanged Properties Name Description Aura AuraId CyclicReferences ExpectedIsActive IsActive IsCyclicReference Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IAuraEventLoggingService.Events.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraEventLoggingService.Events.html",
    "title": "Property Events | EyeAuras Docs",
    "keywords": "Property Events Events Declaration CircularSourceList<AuraEvent> Events { get; } Property Value Type Description CircularSourceList<AuraEvent>"
  },
  "api/EyeAuras.Shared.Services.IAuraEventLoggingService.LogMessage.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraEventLoggingService.LogMessage.html",
    "title": "Method LogMessage | EyeAuras Docs",
    "keywords": "Method LogMessage LogMessage(AuraEvent) Declaration void LogMessage(AuraEvent auraEvent) Parameters Type Name Description AuraEvent auraEvent LogMessage(string, AuraEventCategory) Declaration void LogMessage(string message, AuraEventCategory category) Parameters Type Name Description string message AuraEventCategory category"
  },
  "api/EyeAuras.Shared.Services.IAuraEventLoggingService.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraEventLoggingService.html",
    "title": "Interface IAuraEventLoggingService | EyeAuras Docs",
    "keywords": "Interface IAuraEventLoggingService Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IAuraEventLoggingService Properties Name Description Events Methods Name Description LogMessage(AuraEvent) LogMessage(string, AuraEventCategory) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IAuraListEvaluator.Evaluators.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListEvaluator.Evaluators.html",
    "title": "Property Evaluators | EyeAuras Docs",
    "keywords": "Property Evaluators Evaluators Declaration IObservableList<IAuraEvaluator> Evaluators { get; } Property Value Type Description IObservableList<IAuraEvaluator>"
  },
  "api/EyeAuras.Shared.Services.IAuraListEvaluator.HasCyclicReferences.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListEvaluator.HasCyclicReferences.html",
    "title": "Property HasCyclicReferences | EyeAuras Docs",
    "keywords": "Property HasCyclicReferences HasCyclicReferences Declaration bool HasCyclicReferences { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Services.IAuraListEvaluator.IsActive.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListEvaluator.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Declaration bool? IsActive { get; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Services.IAuraListEvaluator.Properties.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListEvaluator.Properties.html",
    "title": "Property Properties | EyeAuras Docs",
    "keywords": "Property Properties Properties Declaration AuraStateDescriptor Properties { get; } Property Value Type Description AuraStateDescriptor"
  },
  "api/EyeAuras.Shared.Services.IAuraListEvaluator.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListEvaluator.html",
    "title": "Interface IAuraListEvaluator | EyeAuras Docs",
    "keywords": "Interface IAuraListEvaluator Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IAuraListEvaluator : IDisposable, INotifyPropertyChanged Properties Name Description Evaluators HasCyclicReferences IsActive Properties Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.AddAuraById.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.AddAuraById.html",
    "title": "Method AddAuraById | EyeAuras Docs",
    "keywords": "Method AddAuraById AddAuraById(string) Declaration void AddAuraById(string auraId) Parameters Type Name Description string auraId"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.AddFolderById.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.AddFolderById.html",
    "title": "Method AddFolderById | EyeAuras Docs",
    "keywords": "Method AddFolderById AddFolderById(string) Declaration void AddFolderById(string folderId) Parameters Type Name Description string folderId"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.AllowDisabledAuras.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.AllowDisabledAuras.html",
    "title": "Property AllowDisabledAuras | EyeAuras Docs",
    "keywords": "Property AllowDisabledAuras AllowDisabledAuras Declaration bool AllowDisabledAuras { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.AllowSelfLink.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.AllowSelfLink.html",
    "title": "Property AllowSelfLink | EyeAuras Docs",
    "keywords": "Property AllowSelfLink AllowSelfLink Declaration bool AllowSelfLink { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.AurasById.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.AurasById.html",
    "title": "Property AurasById | EyeAuras Docs",
    "keywords": "Property AurasById AurasById Declaration IObservableCache<IAura, string> AurasById { get; } Property Value Type Description IObservableCache<IAura, string>"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.Clear.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.Clear.html",
    "title": "Method Clear | EyeAuras Docs",
    "keywords": "Method Clear Clear() Declaration void Clear()"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.Count.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration int Count { get; } Property Value Type Description int"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.DefaultIsActive.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.DefaultIsActive.html",
    "title": "Property DefaultIsActive | EyeAuras Docs",
    "keywords": "Property DefaultIsActive DefaultIsActive Declaration bool? DefaultIsActive { get; set; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.Evaluators.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.Evaluators.html",
    "title": "Property Evaluators | EyeAuras Docs",
    "keywords": "Property Evaluators Evaluators Declaration IObservableList<IAuraEvaluator> Evaluators { get; } Property Value Type Description IObservableList<IAuraEvaluator>"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.FoldersById.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.FoldersById.html",
    "title": "Property FoldersById | EyeAuras Docs",
    "keywords": "Property FoldersById FoldersById Declaration IObservableCache<IFolder, string> FoldersById { get; } Property Value Type Description IObservableCache<IFolder, string>"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.HasCyclicReferences.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.HasCyclicReferences.html",
    "title": "Property HasCyclicReferences | EyeAuras Docs",
    "keywords": "Property HasCyclicReferences HasCyclicReferences Declaration bool HasCyclicReferences { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.IsActive.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Declaration bool? IsActive { get; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.ListEvaluators.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.ListEvaluators.html",
    "title": "Property ListEvaluators | EyeAuras Docs",
    "keywords": "Property ListEvaluators ListEvaluators Declaration IObservableList<IAuraListEvaluator> ListEvaluators { get; } Property Value Type Description IObservableList<IAuraListEvaluator>"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.OperationMode.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.OperationMode.html",
    "title": "Property OperationMode | EyeAuras Docs",
    "keywords": "Property OperationMode OperationMode Declaration AuraEvaluatorOperationMode OperationMode { get; set; } Property Value Type Description AuraEvaluatorOperationMode"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.Remove.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.Remove.html",
    "title": "Method Remove | EyeAuras Docs",
    "keywords": "Method Remove Remove(IAuraListEvaluator) Declaration void Remove(IAuraListEvaluator evaluator) Parameters Type Name Description IAuraListEvaluator evaluator"
  },
  "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraListStateEvaluator.html",
    "title": "Interface IAuraListStateEvaluator | EyeAuras Docs",
    "keywords": "Interface IAuraListStateEvaluator Inherited Members IAuraObject<AuraEvaluatorProperties>.Properties IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IAuraListStateEvaluator : IAuraObject<AuraEvaluatorProperties>, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext Properties Name Description AllowDisabledAuras AllowSelfLink AurasById Count DefaultIsActive Evaluators FoldersById HasCyclicReferences IsActive ListEvaluators OperationMode Methods Name Description AddAuraById(string) AddFolderById(string) Clear() Remove(IAuraListEvaluator) Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IAuraRegistrator.Register.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRegistrator.Register.html",
    "title": "Method Register | EyeAuras Docs",
    "keywords": "Method Register Register<TAuraModelEditor, TAuraModel>() Declaration void Register<TAuraModelEditor, TAuraModel>() where TAuraModelEditor : IAuraPropertiesEditor<TAuraModel> where TAuraModel : IAuraObject Type Parameters Name Description TAuraModelEditor TAuraModel Register<TAuraModel>() Declaration void Register<TAuraModel>() where TAuraModel : IAuraObject Type Parameters Name Description TAuraModel"
  },
  "api/EyeAuras.Shared.Services.IAuraRegistrator.RegisterProxy.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRegistrator.RegisterProxy.html",
    "title": "Method RegisterProxy | EyeAuras Docs",
    "keywords": "Method RegisterProxy RegisterProxy<TAuraModel, TProxy>() Declaration void RegisterProxy<TAuraModel, TProxy>() where TAuraModel : IAuraObject where TProxy : TAuraModel Type Parameters Name Description TAuraModel TProxy"
  },
  "api/EyeAuras.Shared.Services.IAuraRegistrator.RegisterVariableEditor.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRegistrator.RegisterVariableEditor.html",
    "title": "Method RegisterVariableEditor | EyeAuras Docs",
    "keywords": "Method RegisterVariableEditor RegisterVariableEditor<TAuraVariableEditor>() Declaration void RegisterVariableEditor<TAuraVariableEditor>() where TAuraVariableEditor : IDefaultVariableEditor Type Parameters Name Description TAuraVariableEditor"
  },
  "api/EyeAuras.Shared.Services.IAuraRegistrator.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRegistrator.html",
    "title": "Interface IAuraRegistrator | EyeAuras Docs",
    "keywords": "Interface IAuraRegistrator Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IAuraRegistrator Methods Name Description RegisterProxy<TAuraModel, TProxy>() RegisterVariableEditor<TAuraVariableEditor>() Register<TAuraModel>() Register<TAuraModelEditor, TAuraModel>() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IAuraRepository.CreateEditor.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRepository.CreateEditor.html",
    "title": "Method CreateEditor | EyeAuras Docs",
    "keywords": "Method CreateEditor CreateEditor(IAuraObject) Declaration IAuraPropertiesEditor CreateEditor(IAuraObject model) Parameters Type Name Description IAuraObject model Returns Type Description IAuraPropertiesEditor CreateEditor(Type) Declaration IAuraPropertiesEditor CreateEditor(Type modelType) Parameters Type Name Description Type modelType Returns Type Description IAuraPropertiesEditor"
  },
  "api/EyeAuras.Shared.Services.IAuraRepository.CreateModel.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRepository.CreateModel.html",
    "title": "Method CreateModel | EyeAuras Docs",
    "keywords": "Method CreateModel CreateModel<TAuraBaseType>(Type) Declaration TAuraBaseType CreateModel<TAuraBaseType>(Type auraModelType) where TAuraBaseType : IAuraObject Parameters Type Name Description Type auraModelType Returns Type Description TAuraBaseType Type Parameters Name Description TAuraBaseType CreateModel<TAuraBaseType>(IAuraProperties) Declaration TAuraBaseType CreateModel<TAuraBaseType>(IAuraProperties properties) where TAuraBaseType : IAuraObject Parameters Type Name Description IAuraProperties properties Returns Type Description TAuraBaseType Type Parameters Name Description TAuraBaseType"
  },
  "api/EyeAuras.Shared.Services.IAuraRepository.CreateProxy.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRepository.CreateProxy.html",
    "title": "Method CreateProxy | EyeAuras Docs",
    "keywords": "Method CreateProxy CreateProxy<TAuraBaseType>(IAuraProperties) Declaration TAuraBaseType CreateProxy<TAuraBaseType>(IAuraProperties properties) where TAuraBaseType : IAuraObject Parameters Type Name Description IAuraProperties properties Returns Type Description TAuraBaseType Type Parameters Name Description TAuraBaseType"
  },
  "api/EyeAuras.Shared.Services.IAuraRepository.CreateVariableEditor.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRepository.CreateVariableEditor.html",
    "title": "Method CreateVariableEditor | EyeAuras Docs",
    "keywords": "Method CreateVariableEditor CreateVariableEditor(Type) Declaration IDefaultVariableEditor CreateVariableEditor(Type modelType) Parameters Type Name Description Type modelType Returns Type Description IDefaultVariableEditor"
  },
  "api/EyeAuras.Shared.Services.IAuraRepository.KnownEntities.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRepository.KnownEntities.html",
    "title": "Property KnownEntities | EyeAuras Docs",
    "keywords": "Property KnownEntities KnownEntities Declaration IObservableList<IAuraObject> KnownEntities { get; } Property Value Type Description IObservableList<IAuraObject>"
  },
  "api/EyeAuras.Shared.Services.IAuraRepository.KnownEntitiesTypes.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRepository.KnownEntitiesTypes.html",
    "title": "Property KnownEntitiesTypes | EyeAuras Docs",
    "keywords": "Property KnownEntitiesTypes KnownEntitiesTypes Declaration IObservableList<Type> KnownEntitiesTypes { get; } Property Value Type Description IObservableList<Type>"
  },
  "api/EyeAuras.Shared.Services.IAuraRepository.ResolveDefaultProperties.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRepository.ResolveDefaultProperties.html",
    "title": "Method ResolveDefaultProperties | EyeAuras Docs",
    "keywords": "Method ResolveDefaultProperties ResolveDefaultProperties(IAuraProperties) Declaration IAuraProperties ResolveDefaultProperties(IAuraProperties properties) Parameters Type Name Description IAuraProperties properties Returns Type Description IAuraProperties"
  },
  "api/EyeAuras.Shared.Services.IAuraRepository.TryResolveModelType.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRepository.TryResolveModelType.html",
    "title": "Method TryResolveModelType | EyeAuras Docs",
    "keywords": "Method TryResolveModelType TryResolveModelType(IAuraProperties, out Type) Declaration bool TryResolveModelType(IAuraProperties properties, out Type modelType) Parameters Type Name Description IAuraProperties properties Type modelType Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Services.IAuraRepository.VariableEditorTypes.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRepository.VariableEditorTypes.html",
    "title": "Property VariableEditorTypes | EyeAuras Docs",
    "keywords": "Property VariableEditorTypes VariableEditorTypes Declaration IObservableList<Type> VariableEditorTypes { get; } Property Value Type Description IObservableList<Type>"
  },
  "api/EyeAuras.Shared.Services.IAuraRepository.WatchModelType.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRepository.WatchModelType.html",
    "title": "Method WatchModelType | EyeAuras Docs",
    "keywords": "Method WatchModelType WatchModelType(IAuraProperties) Declaration IObservable<Type> WatchModelType(IAuraProperties properties) Parameters Type Name Description IAuraProperties properties Returns Type Description IObservable<Type>"
  },
  "api/EyeAuras.Shared.Services.IAuraRepository.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraRepository.html",
    "title": "Interface IAuraRepository | EyeAuras Docs",
    "keywords": "Interface IAuraRepository Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IAuraRepository Properties Name Description KnownEntities KnownEntitiesTypes VariableEditorTypes Methods Name Description CreateEditor(IAuraObject) CreateEditor(Type) CreateModel<TAuraBaseType>(IAuraProperties) CreateModel<TAuraBaseType>(Type) CreateProxy<TAuraBaseType>(IAuraProperties) CreateVariableEditor(Type) ResolveDefaultProperties(IAuraProperties) TryResolveModelType(IAuraProperties, out Type) WatchModelType(IAuraProperties) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IAuraTreeSelectionService.SelectedItem.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraTreeSelectionService.SelectedItem.html",
    "title": "Property SelectedItem | EyeAuras Docs",
    "keywords": "Property SelectedItem SelectedItem Declaration IEyeItem SelectedItem { get; set; } Property Value Type Description IEyeItem"
  },
  "api/EyeAuras.Shared.Services.IAuraTreeSelectionService.html": {
    "href": "api/EyeAuras.Shared.Services.IAuraTreeSelectionService.html",
    "title": "Interface IAuraTreeSelectionService | EyeAuras Docs",
    "keywords": "Interface IAuraTreeSelectionService Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IAuraTreeSelectionService Properties Name Description SelectedItem Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IBindingValueConverterRepository.CanConvert.html": {
    "href": "api/EyeAuras.Shared.Services.IBindingValueConverterRepository.CanConvert.html",
    "title": "Method CanConvert | EyeAuras Docs",
    "keywords": "Method CanConvert CanConvert(Type, Type) Declaration bool CanConvert(Type sourceType, Type targetType) Parameters Type Name Description Type sourceType Type targetType Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Services.IBindingValueConverterRepository.Instance.html": {
    "href": "api/EyeAuras.Shared.Services.IBindingValueConverterRepository.Instance.html",
    "title": "Property Instance | EyeAuras Docs",
    "keywords": "Property Instance Instance Declaration public static IBindingValueConverterRepository Instance { get; } Property Value Type Description IBindingValueConverterRepository"
  },
  "api/EyeAuras.Shared.Services.IBindingValueConverterRepository.RegisterConverter.html": {
    "href": "api/EyeAuras.Shared.Services.IBindingValueConverterRepository.RegisterConverter.html",
    "title": "Method RegisterConverter | EyeAuras Docs",
    "keywords": "Method RegisterConverter RegisterConverter<TSource, TTarget>(Func<TSource, TTarget>) Declaration void RegisterConverter<TSource, TTarget>(Func<TSource, TTarget> converter) Parameters Type Name Description Func<TSource, TTarget> converter Type Parameters Name Description TSource TTarget RegisterConverter<TSource, TTarget>(IConverter<TSource, TTarget>) Declaration void RegisterConverter<TSource, TTarget>(IConverter<TSource, TTarget> converter) Parameters Type Name Description IConverter<TSource, TTarget> converter Type Parameters Name Description TSource TTarget"
  },
  "api/EyeAuras.Shared.Services.IBindingValueConverterRepository.TryConvert.html": {
    "href": "api/EyeAuras.Shared.Services.IBindingValueConverterRepository.TryConvert.html",
    "title": "Method TryConvert | EyeAuras Docs",
    "keywords": "Method TryConvert TryConvert(object, Type, out object) Declaration bool TryConvert(object value, Type targetType, out object result) Parameters Type Name Description object value Type targetType object result Returns Type Description bool TryConvert<T>(object, out T) Declaration bool TryConvert<T>(object value, out T result) Parameters Type Name Description object value T result Returns Type Description bool Type Parameters Name Description T"
  },
  "api/EyeAuras.Shared.Services.IBindingValueConverterRepository.html": {
    "href": "api/EyeAuras.Shared.Services.IBindingValueConverterRepository.html",
    "title": "Interface IBindingValueConverterRepository | EyeAuras Docs",
    "keywords": "Interface IBindingValueConverterRepository Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IBindingValueConverterRepository Properties Name Description Instance Methods Name Description CanConvert(Type, Type) RegisterConverter<TSource, TTarget>(IConverter<TSource, TTarget>) RegisterConverter<TSource, TTarget>(Func<TSource, TTarget>) TryConvert(object, Type, out object) TryConvert<T>(object, out T) Extension Methods BindingValueConverterRepositoryExtensions.ConvertOrDefault<TDst>(IBindingValueConverterRepository, object) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IComplexWindowHandleMatcher.Add.html": {
    "href": "api/EyeAuras.Shared.Services.IComplexWindowHandleMatcher.Add.html",
    "title": "Method Add | EyeAuras Docs",
    "keywords": "Method Add Add(IWindowHandleMatcher) Declaration IDisposable Add(IWindowHandleMatcher matcher) Parameters Type Name Description IWindowHandleMatcher matcher Returns Type Description IDisposable"
  },
  "api/EyeAuras.Shared.Services.IComplexWindowHandleMatcher.Matcher.html": {
    "href": "api/EyeAuras.Shared.Services.IComplexWindowHandleMatcher.Matcher.html",
    "title": "Property Matcher | EyeAuras Docs",
    "keywords": "Property Matcher Matcher Declaration IWindowHandleMatcher Matcher { get; } Property Value Type Description IWindowHandleMatcher"
  },
  "api/EyeAuras.Shared.Services.IComplexWindowHandleMatcher.html": {
    "href": "api/EyeAuras.Shared.Services.IComplexWindowHandleMatcher.html",
    "title": "Interface IComplexWindowHandleMatcher | EyeAuras Docs",
    "keywords": "Interface IComplexWindowHandleMatcher Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IComplexWindowHandleMatcher : IDisposable, INotifyPropertyChanged Properties Name Description Matcher Methods Name Description Add(IWindowHandleMatcher) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IEyeEntityFactory.CanCreateModel.html": {
    "href": "api/EyeAuras.Shared.Services.IEyeEntityFactory.CanCreateModel.html",
    "title": "Method CanCreateModel | EyeAuras Docs",
    "keywords": "Method CanCreateModel CanCreateModel(IAuraProperties) Declaration bool CanCreateModel(IAuraProperties modelProperties) Parameters Type Name Description IAuraProperties modelProperties Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Services.IEyeEntityFactory.Create.html": {
    "href": "api/EyeAuras.Shared.Services.IEyeEntityFactory.Create.html",
    "title": "Method Create | EyeAuras Docs",
    "keywords": "Method Create Create<TModel>(IEntityContainer, PoeConfigMetadata<IAuraProperties>) Declaration TModel Create<TModel>(IEntityContainer parent, PoeConfigMetadata<IAuraProperties> metadata) where TModel : IAuraObject Parameters Type Name Description IEntityContainer parent PoeConfigMetadata<IAuraProperties> metadata Returns Type Description TModel Type Parameters Name Description TModel Create<TModel>(IEntityContainer, IAuraProperties) Declaration TModel Create<TModel>(IEntityContainer parent, IAuraProperties modelProperties) where TModel : IAuraObject Parameters Type Name Description IEntityContainer parent IAuraProperties modelProperties Returns Type Description TModel Type Parameters Name Description TModel Create<TModel>(IAuraProperties) Declaration TModel Create<TModel>(IAuraProperties modelProperties) where TModel : IAuraObject Parameters Type Name Description IAuraProperties modelProperties Returns Type Description TModel Type Parameters Name Description TModel"
  },
  "api/EyeAuras.Shared.Services.IEyeEntityFactory.CreateProxy.html": {
    "href": "api/EyeAuras.Shared.Services.IEyeEntityFactory.CreateProxy.html",
    "title": "Method CreateProxy | EyeAuras Docs",
    "keywords": "Method CreateProxy CreateProxy<TModel>(IEntityContainer, PoeConfigMetadata<IAuraProperties>) Declaration TModel CreateProxy<TModel>(IEntityContainer parent, PoeConfigMetadata<IAuraProperties> metadata) where TModel : IAuraObject Parameters Type Name Description IEntityContainer parent PoeConfigMetadata<IAuraProperties> metadata Returns Type Description TModel Type Parameters Name Description TModel"
  },
  "api/EyeAuras.Shared.Services.IEyeEntityFactory.Deserialize.html": {
    "href": "api/EyeAuras.Shared.Services.IEyeEntityFactory.Deserialize.html",
    "title": "Method Deserialize | EyeAuras Docs",
    "keywords": "Method Deserialize Deserialize(IEntityContainer, PoeConfigMetadata<IAuraProperties>) Declaration IAuraProperties Deserialize(IEntityContainer parent, PoeConfigMetadata<IAuraProperties> metadata) Parameters Type Name Description IEntityContainer parent PoeConfigMetadata<IAuraProperties> metadata Returns Type Description IAuraProperties"
  },
  "api/EyeAuras.Shared.Services.IEyeEntityFactory.ReloadModelsSink.html": {
    "href": "api/EyeAuras.Shared.Services.IEyeEntityFactory.ReloadModelsSink.html",
    "title": "Property ReloadModelsSink | EyeAuras Docs",
    "keywords": "Property ReloadModelsSink ReloadModelsSink Declaration IObservable<Unit> ReloadModelsSink { get; } Property Value Type Description IObservable<Unit>"
  },
  "api/EyeAuras.Shared.Services.IEyeEntityFactory.ToMetadata.html": {
    "href": "api/EyeAuras.Shared.Services.IEyeEntityFactory.ToMetadata.html",
    "title": "Method ToMetadata | EyeAuras Docs",
    "keywords": "Method ToMetadata ToMetadata(IEnumerable<IAuraProperties>) Declaration IEnumerable<PoeConfigMetadata<IAuraProperties>> ToMetadata(IEnumerable<IAuraProperties> properties) Parameters Type Name Description IEnumerable<IAuraProperties> properties Returns Type Description IEnumerable<PoeConfigMetadata<IAuraProperties>>"
  },
  "api/EyeAuras.Shared.Services.IEyeEntityFactory.html": {
    "href": "api/EyeAuras.Shared.Services.IEyeEntityFactory.html",
    "title": "Interface IEyeEntityFactory | EyeAuras Docs",
    "keywords": "Interface IEyeEntityFactory Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IEyeEntityFactory Properties Name Description ReloadModelsSink Methods Name Description CanCreateModel(IAuraProperties) CreateProxy<TModel>(IEntityContainer, PoeConfigMetadata<IAuraProperties>) Create<TModel>(IAuraProperties) Create<TModel>(IEntityContainer, IAuraProperties) Create<TModel>(IEntityContainer, PoeConfigMetadata<IAuraProperties>) Deserialize(IEntityContainer, PoeConfigMetadata<IAuraProperties>) ToMetadata(IEnumerable<IAuraProperties>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IImportWindowDisplayer.ShowDialog.html": {
    "href": "api/EyeAuras.Shared.Services.IImportWindowDisplayer.ShowDialog.html",
    "title": "Method ShowDialog | EyeAuras Docs",
    "keywords": "Method ShowDialog ShowDialog(object) Declaration Task ShowDialog(object arg) Parameters Type Name Description object arg Returns Type Description Task"
  },
  "api/EyeAuras.Shared.Services.IImportWindowDisplayer.ShowDialogFromClipboard.html": {
    "href": "api/EyeAuras.Shared.Services.IImportWindowDisplayer.ShowDialogFromClipboard.html",
    "title": "Method ShowDialogFromClipboard | EyeAuras Docs",
    "keywords": "Method ShowDialogFromClipboard ShowDialogFromClipboard() Declaration Task ShowDialogFromClipboard() Returns Type Description Task"
  },
  "api/EyeAuras.Shared.Services.IImportWindowDisplayer.html": {
    "href": "api/EyeAuras.Shared.Services.IImportWindowDisplayer.html",
    "title": "Interface IImportWindowDisplayer | EyeAuras Docs",
    "keywords": "Interface IImportWindowDisplayer Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IImportWindowDisplayer Methods Name Description ShowDialog(object) ShowDialogFromClipboard() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IMainWindowBlocksRegistrator.AddSecondaryPanelItem.html": {
    "href": "api/EyeAuras.Shared.Services.IMainWindowBlocksRegistrator.AddSecondaryPanelItem.html",
    "title": "Method AddSecondaryPanelItem | EyeAuras Docs",
    "keywords": "Method AddSecondaryPanelItem AddSecondaryPanelItem<T>(object) Declaration IDisposable AddSecondaryPanelItem<T>(object dataTemplateKey = null) Parameters Type Name Description object dataTemplateKey Returns Type Description IDisposable Type Parameters Name Description T"
  },
  "api/EyeAuras.Shared.Services.IMainWindowBlocksRegistrator.AddStatusBarItemLeft.html": {
    "href": "api/EyeAuras.Shared.Services.IMainWindowBlocksRegistrator.AddStatusBarItemLeft.html",
    "title": "Method AddStatusBarItemLeft | EyeAuras Docs",
    "keywords": "Method AddStatusBarItemLeft AddStatusBarItemLeft<T>(object) Declaration IDisposable AddStatusBarItemLeft<T>(object dataTemplateKey = null) Parameters Type Name Description object dataTemplateKey Returns Type Description IDisposable Type Parameters Name Description T"
  },
  "api/EyeAuras.Shared.Services.IMainWindowBlocksRegistrator.AddStatusBarItemRight.html": {
    "href": "api/EyeAuras.Shared.Services.IMainWindowBlocksRegistrator.AddStatusBarItemRight.html",
    "title": "Method AddStatusBarItemRight | EyeAuras Docs",
    "keywords": "Method AddStatusBarItemRight AddStatusBarItemRight<T>(object) Declaration IDisposable AddStatusBarItemRight<T>(object dataTemplateKey = null) Parameters Type Name Description object dataTemplateKey Returns Type Description IDisposable Type Parameters Name Description T"
  },
  "api/EyeAuras.Shared.Services.IMainWindowBlocksRegistrator.AddTitleBarItem.html": {
    "href": "api/EyeAuras.Shared.Services.IMainWindowBlocksRegistrator.AddTitleBarItem.html",
    "title": "Method AddTitleBarItem | EyeAuras Docs",
    "keywords": "Method AddTitleBarItem AddTitleBarItem<T>(object) Declaration IDisposable AddTitleBarItem<T>(object dataTemplateKey = null) Parameters Type Name Description object dataTemplateKey Returns Type Description IDisposable Type Parameters Name Description T"
  },
  "api/EyeAuras.Shared.Services.IMainWindowBlocksRegistrator.AddTreeHeaderItem.html": {
    "href": "api/EyeAuras.Shared.Services.IMainWindowBlocksRegistrator.AddTreeHeaderItem.html",
    "title": "Method AddTreeHeaderItem | EyeAuras Docs",
    "keywords": "Method AddTreeHeaderItem AddTreeHeaderItem<T>(object) Declaration IDisposable AddTreeHeaderItem<T>(object dataTemplateKey = null) Parameters Type Name Description object dataTemplateKey Returns Type Description IDisposable Type Parameters Name Description T"
  },
  "api/EyeAuras.Shared.Services.IMainWindowBlocksRegistrator.html": {
    "href": "api/EyeAuras.Shared.Services.IMainWindowBlocksRegistrator.html",
    "title": "Interface IMainWindowBlocksRegistrator | EyeAuras Docs",
    "keywords": "Interface IMainWindowBlocksRegistrator Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IMainWindowBlocksRegistrator Methods Name Description AddSecondaryPanelItem<T>(object) AddStatusBarItemLeft<T>(object) AddStatusBarItemRight<T>(object) AddTitleBarItem<T>(object) AddTreeHeaderItem<T>(object) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IUsernameProvider.Username.html": {
    "href": "api/EyeAuras.Shared.Services.IUsernameProvider.Username.html",
    "title": "Property Username | EyeAuras Docs",
    "keywords": "Property Username Username Declaration string Username { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Services.IUsernameProvider.html": {
    "href": "api/EyeAuras.Shared.Services.IUsernameProvider.html",
    "title": "Interface IUsernameProvider | EyeAuras Docs",
    "keywords": "Interface IUsernameProvider Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IUsernameProvider Properties Name Description Username Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IWindowHandleMatcher.IsMatch.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowHandleMatcher.IsMatch.html",
    "title": "Method IsMatch | EyeAuras Docs",
    "keywords": "Method IsMatch IsMatch(IWindowHandle) Declaration bool IsMatch(IWindowHandle windowHandle) Parameters Type Name Description IWindowHandle windowHandle Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Services.IWindowHandleMatcher.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowHandleMatcher.html",
    "title": "Interface IWindowHandleMatcher | EyeAuras Docs",
    "keywords": "Interface IWindowHandleMatcher Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IWindowHandleMatcher Methods Name Description IsMatch(IWindowHandle) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IWindowListProvider.AddToUserBlacklist.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowListProvider.AddToUserBlacklist.html",
    "title": "Method AddToUserBlacklist | EyeAuras Docs",
    "keywords": "Method AddToUserBlacklist AddToUserBlacklist(IWindowHandle) Declaration void AddToUserBlacklist(IWindowHandle windowHandle) Parameters Type Name Description IWindowHandle windowHandle"
  },
  "api/EyeAuras.Shared.Services.IWindowListProvider.AllWindowList.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowListProvider.AllWindowList.html",
    "title": "Property AllWindowList | EyeAuras Docs",
    "keywords": "Property AllWindowList AllWindowList All windows including those with empty title/child/etc Declaration IObservableList<IWindowHandle> AllWindowList { get; } Property Value Type Description IObservableList<IWindowHandle>"
  },
  "api/EyeAuras.Shared.Services.IWindowListProvider.BlacklistedWindows.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowListProvider.BlacklistedWindows.html",
    "title": "Property BlacklistedWindows | EyeAuras Docs",
    "keywords": "Property BlacklistedWindows BlacklistedWindows Declaration IObservableList<IWindowHandle> BlacklistedWindows { get; } Property Value Type Description IObservableList<IWindowHandle>"
  },
  "api/EyeAuras.Shared.Services.IWindowListProvider.DesktopWindow.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowListProvider.DesktopWindow.html",
    "title": "Property DesktopWindow | EyeAuras Docs",
    "keywords": "Property DesktopWindow DesktopWindow Primary desktop window handle Declaration IWindowHandle DesktopWindow { get; } Property Value Type Description IWindowHandle"
  },
  "api/EyeAuras.Shared.Services.IWindowListProvider.GetForegroundWindow.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowListProvider.GetForegroundWindow.html",
    "title": "Method GetForegroundWindow | EyeAuras Docs",
    "keywords": "Method GetForegroundWindow GetForegroundWindow() Declaration IWindowHandle GetForegroundWindow() Returns Type Description IWindowHandle"
  },
  "api/EyeAuras.Shared.Services.IWindowListProvider.IgnoredWindows.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowListProvider.IgnoredWindows.html",
    "title": "Property IgnoredWindows | EyeAuras Docs",
    "keywords": "Property IgnoredWindows IgnoredWindows Windows that are ignored by some system filter Declaration IObservableCache<IWindowHandle, nint> IgnoredWindows { get; } Property Value Type Description IObservableCache<IWindowHandle, nint>"
  },
  "api/EyeAuras.Shared.Services.IWindowListProvider.RemoveFromUserBlacklist.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowListProvider.RemoveFromUserBlacklist.html",
    "title": "Method RemoveFromUserBlacklist | EyeAuras Docs",
    "keywords": "Method RemoveFromUserBlacklist RemoveFromUserBlacklist(IWindowHandle) Declaration void RemoveFromUserBlacklist(IWindowHandle windowHandle) Parameters Type Name Description IWindowHandle windowHandle"
  },
  "api/EyeAuras.Shared.Services.IWindowListProvider.ResolveByHandle.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowListProvider.ResolveByHandle.html",
    "title": "Method ResolveByHandle | EyeAuras Docs",
    "keywords": "Method ResolveByHandle ResolveByHandle(nint) Declaration IWindowHandle ResolveByHandle(nint hWnd) Parameters Type Name Description nint hWnd Returns Type Description IWindowHandle"
  },
  "api/EyeAuras.Shared.Services.IWindowListProvider.WindowList.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowListProvider.WindowList.html",
    "title": "Property WindowList | EyeAuras Docs",
    "keywords": "Property WindowList WindowList Visible windows Declaration IObservableList<IWindowHandle> WindowList { get; } Property Value Type Description IObservableList<IWindowHandle>"
  },
  "api/EyeAuras.Shared.Services.IWindowListProvider.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowListProvider.html",
    "title": "Interface IWindowListProvider | EyeAuras Docs",
    "keywords": "Interface IWindowListProvider Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IWindowListProvider : IDisposable, INotifyPropertyChanged Properties Name Description AllWindowList All windows including those with empty title/child/etc BlacklistedWindows DesktopWindow Primary desktop window handle IgnoredWindows Windows that are ignored by some system filter WindowList Visible windows Methods Name Description AddToUserBlacklist(IWindowHandle) GetForegroundWindow() RemoveFromUserBlacklist(IWindowHandle) ResolveByHandle(nint) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IWindowMatcher.FindMatches.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowMatcher.FindMatches.html",
    "title": "Method FindMatches | EyeAuras Docs",
    "keywords": "Method FindMatches FindMatches(IReadOnlyList<IWindowHandle>, WindowMatchExpression) Declaration IReadOnlyList<IWindowHandle> FindMatches(IReadOnlyList<IWindowHandle> windows, WindowMatchExpression matchParams) Parameters Type Name Description IReadOnlyList<IWindowHandle> windows WindowMatchExpression matchParams Returns Type Description IReadOnlyList<IWindowHandle>"
  },
  "api/EyeAuras.Shared.Services.IWindowMatcher.IsMatch.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowMatcher.IsMatch.html",
    "title": "Method IsMatch | EyeAuras Docs",
    "keywords": "Method IsMatch IsMatch(IWindowHandle, WindowMatchParams) Declaration bool IsMatch(IWindowHandle window, WindowMatchParams matchParams) Parameters Type Name Description IWindowHandle window WindowMatchParams matchParams Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Services.IWindowMatcher.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowMatcher.html",
    "title": "Interface IWindowMatcher | EyeAuras Docs",
    "keywords": "Interface IWindowMatcher Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IWindowMatcher Methods Name Description FindMatches(IReadOnlyList<IWindowHandle>, WindowMatchExpression) IsMatch(IWindowHandle, WindowMatchParams) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.IWindowSelector.ActiveWindow.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowSelector.ActiveWindow.html",
    "title": "Property ActiveWindow | EyeAuras Docs",
    "keywords": "Property ActiveWindow ActiveWindow Declaration IWindowHandle ActiveWindow { get; } Property Value Type Description IWindowHandle"
  },
  "api/EyeAuras.Shared.Services.IWindowSelector.GetForegroundWindow.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowSelector.GetForegroundWindow.html",
    "title": "Method GetForegroundWindow | EyeAuras Docs",
    "keywords": "Method GetForegroundWindow GetForegroundWindow() Declaration IWindowHandle GetForegroundWindow() Returns Type Description IWindowHandle"
  },
  "api/EyeAuras.Shared.Services.IWindowSelector.IsIgnored.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowSelector.IsIgnored.html",
    "title": "Method IsIgnored | EyeAuras Docs",
    "keywords": "Method IsIgnored IsIgnored(nint) Declaration bool IsIgnored(nint hWnd) Parameters Type Name Description nint hWnd Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Services.IWindowSelector.MatchingWindowList.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowSelector.MatchingWindowList.html",
    "title": "Property MatchingWindowList | EyeAuras Docs",
    "keywords": "Property MatchingWindowList MatchingWindowList Declaration IReadOnlyList<IWindowHandle> MatchingWindowList { get; } Property Value Type Description IReadOnlyList<IWindowHandle>"
  },
  "api/EyeAuras.Shared.Services.IWindowSelector.OnlyVisible.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowSelector.OnlyVisible.html",
    "title": "Property OnlyVisible | EyeAuras Docs",
    "keywords": "Property OnlyVisible OnlyVisible Declaration bool OnlyVisible { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Services.IWindowSelector.ResolveByHandle.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowSelector.ResolveByHandle.html",
    "title": "Method ResolveByHandle | EyeAuras Docs",
    "keywords": "Method ResolveByHandle ResolveByHandle(nint) Declaration IWindowHandle ResolveByHandle(nint hWnd) Parameters Type Name Description nint hWnd Returns Type Description IWindowHandle"
  },
  "api/EyeAuras.Shared.Services.IWindowSelector.TargetWindow.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowSelector.TargetWindow.html",
    "title": "Property TargetWindow | EyeAuras Docs",
    "keywords": "Property TargetWindow TargetWindow Declaration WindowMatchExpression TargetWindow { get; set; } Property Value Type Description WindowMatchExpression"
  },
  "api/EyeAuras.Shared.Services.IWindowSelector.WindowFilter.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowSelector.WindowFilter.html",
    "title": "Property WindowFilter | EyeAuras Docs",
    "keywords": "Property WindowFilter WindowFilter Declaration Predicate<IWindowHandle> WindowFilter { get; set; } Property Value Type Description Predicate<IWindowHandle>"
  },
  "api/EyeAuras.Shared.Services.IWindowSelector.WindowList.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowSelector.WindowList.html",
    "title": "Property WindowList | EyeAuras Docs",
    "keywords": "Property WindowList WindowList Declaration IReadOnlyObservableCollection<IWindowHandle> WindowList { get; } Property Value Type Description IReadOnlyObservableCollection<IWindowHandle>"
  },
  "api/EyeAuras.Shared.Services.IWindowSelector.WindowTitle.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowSelector.WindowTitle.html",
    "title": "Property WindowTitle | EyeAuras Docs",
    "keywords": "Property WindowTitle WindowTitle Declaration string WindowTitle { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Services.IWindowSelector.html": {
    "href": "api/EyeAuras.Shared.Services.IWindowSelector.html",
    "title": "Interface IWindowSelector | EyeAuras Docs",
    "keywords": "Interface IWindowSelector Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public interface IWindowSelector : IDisposable, INotifyPropertyChanged Properties Name Description ActiveWindow MatchingWindowList OnlyVisible TargetWindow WindowFilter WindowList WindowTitle Methods Name Description GetForegroundWindow() IsIgnored(nint) ResolveByHandle(nint) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.LambdaWindowHandleMatcher.-ctor.html": {
    "href": "api/EyeAuras.Shared.Services.LambdaWindowHandleMatcher.-ctor.html",
    "title": "Constructor LambdaWindowHandleMatcher | EyeAuras Docs",
    "keywords": "Constructor LambdaWindowHandleMatcher LambdaWindowHandleMatcher(Predicate<IWindowHandle>) Declaration public LambdaWindowHandleMatcher(Predicate<IWindowHandle> matchingFunc) Parameters Type Name Description Predicate<IWindowHandle> matchingFunc"
  },
  "api/EyeAuras.Shared.Services.LambdaWindowHandleMatcher.IsMatch.html": {
    "href": "api/EyeAuras.Shared.Services.LambdaWindowHandleMatcher.IsMatch.html",
    "title": "Method IsMatch | EyeAuras Docs",
    "keywords": "Method IsMatch IsMatch(IWindowHandle) Declaration public bool IsMatch(IWindowHandle windowHandle) Parameters Type Name Description IWindowHandle windowHandle Returns Type Description bool Implements IWindowHandleMatcher.IsMatch(IWindowHandle)"
  },
  "api/EyeAuras.Shared.Services.LambdaWindowHandleMatcher.html": {
    "href": "api/EyeAuras.Shared.Services.LambdaWindowHandleMatcher.html",
    "title": "Class LambdaWindowHandleMatcher | EyeAuras Docs",
    "keywords": "Class LambdaWindowHandleMatcher Inheritance object LambdaWindowHandleMatcher Implements IWindowHandleMatcher Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.dll Syntax public sealed class LambdaWindowHandleMatcher : IWindowHandleMatcher Constructors Name Description LambdaWindowHandleMatcher(Predicate<IWindowHandle>) Methods Name Description IsMatch(IWindowHandle) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Services.WindowMatchExpression.Empty.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchExpression.Empty.html",
    "title": "Field Empty | EyeAuras Docs",
    "keywords": "Field Empty Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.Metadata.dll Syntax public static readonly WindowMatchExpression Empty Returns Type Description WindowMatchExpression"
  },
  "api/EyeAuras.Shared.Services.WindowMatchExpression.Equals.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchExpression.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) Equals(WindowMatchExpression) Declaration public bool Equals(WindowMatchExpression other) Parameters Type Name Description WindowMatchExpression other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Services.WindowMatchExpression.Expression.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchExpression.Expression.html",
    "title": "Property Expression | EyeAuras Docs",
    "keywords": "Property Expression Expression Text of an expression which will be further parsed and used to build a chain of conditions Declaration public string Expression { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Services.WindowMatchExpression.FromExpression.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchExpression.FromExpression.html",
    "title": "Method FromExpression | EyeAuras Docs",
    "keywords": "Method FromExpression FromExpression(string) Declaration public static WindowMatchExpression FromExpression(string matchExpression) Parameters Type Name Description string matchExpression Returns Type Description WindowMatchExpression"
  },
  "api/EyeAuras.Shared.Services.WindowMatchExpression.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchExpression.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode()"
  },
  "api/EyeAuras.Shared.Services.WindowMatchExpression.IsEmpty.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchExpression.IsEmpty.html",
    "title": "Property IsEmpty | EyeAuras Docs",
    "keywords": "Property IsEmpty IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Services.WindowMatchExpression.ToString.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchExpression.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.Shared.Services.WindowMatchExpression.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchExpression.html",
    "title": "Struct WindowMatchExpression | EyeAuras Docs",
    "keywords": "Struct WindowMatchExpression Describes and expression which will be parsed and used to build a list of windows that match it Implements IEquatable<WindowMatchExpression> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.Metadata.dll Syntax public readonly struct WindowMatchExpression : IEquatable<WindowMatchExpression> Fields Name Description Empty Properties Name Description Expression Text of an expression which will be further parsed and used to build a chain of conditions IsEmpty Methods Name Description Equals(WindowMatchExpression) Equals(object) FromExpression(string) GetHashCode() ToString() Operators Name Description operator ==(WindowMatchExpression, WindowMatchExpression) operator !=(WindowMatchExpression, WindowMatchExpression) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.Shared.Services.WindowMatchExpression.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchExpression.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(WindowMatchExpression, WindowMatchExpression) Declaration public static bool operator ==(WindowMatchExpression left, WindowMatchExpression right) Parameters Type Name Description WindowMatchExpression left WindowMatchExpression right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Services.WindowMatchExpression.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchExpression.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(WindowMatchExpression, WindowMatchExpression) Declaration public static bool operator !=(WindowMatchExpression left, WindowMatchExpression right) Parameters Type Name Description WindowMatchExpression left WindowMatchExpression right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Services.WindowMatchParams.-ctor.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchParams.-ctor.html",
    "title": "Constructor WindowMatchParams | EyeAuras Docs",
    "keywords": "Constructor WindowMatchParams WindowMatchParams(string) Declaration public WindowMatchParams(string title) Parameters Type Name Description string title"
  },
  "api/EyeAuras.Shared.Services.WindowMatchParams.Empty.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchParams.Empty.html",
    "title": "Field Empty | EyeAuras Docs",
    "keywords": "Field Empty Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.Metadata.dll Syntax public static readonly WindowMatchParams Empty Returns Type Description WindowMatchParams"
  },
  "api/EyeAuras.Shared.Services.WindowMatchParams.FromExpression.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchParams.FromExpression.html",
    "title": "Method FromExpression | EyeAuras Docs",
    "keywords": "Method FromExpression FromExpression(string) Declaration public static WindowMatchParams FromExpression(string matchExpression) Parameters Type Name Description string matchExpression Returns Type Description WindowMatchParams"
  },
  "api/EyeAuras.Shared.Services.WindowMatchParams.Handle.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchParams.Handle.html",
    "title": "Property Handle | EyeAuras Docs",
    "keywords": "Property Handle Handle Window HWND Declaration public nint Handle { get; } Property Value Type Description nint"
  },
  "api/EyeAuras.Shared.Services.WindowMatchParams.Index.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchParams.Index.html",
    "title": "Property Index | EyeAuras Docs",
    "keywords": "Property Index Index 0-based index of a window, useful when there are more than one match and you need non-first one Declaration public int Index { get; } Property Value Type Description int"
  },
  "api/EyeAuras.Shared.Services.WindowMatchParams.IsEmpty.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchParams.IsEmpty.html",
    "title": "Property IsEmpty | EyeAuras Docs",
    "keywords": "Property IsEmpty IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Services.WindowMatchParams.IsRegex.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchParams.IsRegex.html",
    "title": "Property IsRegex | EyeAuras Docs",
    "keywords": "Property IsRegex IsRegex Indicates whether window title should be treated as regex or not Declaration public bool IsRegex { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Services.WindowMatchParams.IsStrict.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchParams.IsStrict.html",
    "title": "Property IsStrict | EyeAuras Docs",
    "keywords": "Property IsStrict IsStrict Indicates whether to allow only strict matches (by default it's by \"contains\") Declaration public bool IsStrict { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Services.WindowMatchParams.Title.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchParams.Title.html",
    "title": "Property Title | EyeAuras Docs",
    "keywords": "Property Title Title Window title Declaration public string Title { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Services.WindowMatchParams.ToString.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchParams.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.Shared.Services.WindowMatchParams.html": {
    "href": "api/EyeAuras.Shared.Services.WindowMatchParams.html",
    "title": "Struct WindowMatchParams | EyeAuras Docs",
    "keywords": "Struct WindowMatchParams Specifies a set of conditions which should be matched by a window Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Services Assembly: EyeAuras.Shared.Metadata.dll Syntax public readonly struct WindowMatchParams Constructors Name Description WindowMatchParams(string) Fields Name Description Empty Properties Name Description Handle Window HWND Index 0-based index of a window, useful when there are more than one match and you need non-first one IsEmpty IsRegex Indicates whether window title should be treated as regex or not IsStrict Indicates whether to allow only strict matches (by default it's by \"contains\") Title Window title Methods Name Description FromExpression(string) ToString() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.Shared.Services.html": {
    "href": "api/EyeAuras.Shared.Services.html",
    "title": "Namespace EyeAuras.Shared.Services | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Shared.Services Classes LambdaWindowHandleMatcher Structs AuraEvent WindowMatchExpression Describes and expression which will be parsed and used to build a list of windows that match it WindowMatchParams Specifies a set of conditions which should be matched by a window Interfaces IAppModuleLoader IAppModulePathResolver IAuraEvaluator IAuraEventLoggingService IAuraListEvaluator IAuraListStateEvaluator IAuraRegistrator IAuraRepository IAuraTreeSelectionService IBindingValueConverterRepository IComplexWindowHandleMatcher IEyeEntityFactory IImportWindowDisplayer IMainWindowBlocksRegistrator IUsernameProvider IWindowHandleMatcher IWindowListProvider IWindowMatcher IWindowSelector Enums AuraEvaluatorConditionType AuraEvaluatorOperationMode AuraEventCategory"
  },
  "api/EyeAuras.Shared.Sharing.Services.IShareProvider.GetShare.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.IShareProvider.GetShare.html",
    "title": "Method GetShare | EyeAuras Docs",
    "keywords": "Method GetShare GetShare(string, string) Declaration Task<ShareInfo> GetShare(string shareId, string shareKey = null) Parameters Type Name Description string shareId string shareKey Returns Type Description Task<ShareInfo>"
  },
  "api/EyeAuras.Shared.Sharing.Services.IShareProvider.Name.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.IShareProvider.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration string Name { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Sharing.Services.IShareProvider.ToUri.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.IShareProvider.ToUri.html",
    "title": "Method ToUri | EyeAuras Docs",
    "keywords": "Method ToUri ToUri(string) Declaration Uri ToUri(string shareId) Parameters Type Name Description string shareId Returns Type Description Uri"
  },
  "api/EyeAuras.Shared.Sharing.Services.IShareProvider.Update.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.IShareProvider.Update.html",
    "title": "Method Update | EyeAuras Docs",
    "keywords": "Method Update Update(ShareInfo) Declaration Task<ShareInfoMetadata> Update(ShareInfo info) Parameters Type Name Description ShareInfo info Returns Type Description Task<ShareInfoMetadata>"
  },
  "api/EyeAuras.Shared.Sharing.Services.IShareProvider.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.IShareProvider.html",
    "title": "Interface IShareProvider | EyeAuras Docs",
    "keywords": "Interface IShareProvider Namespace: EyeAuras.Shared.Sharing.Services Assembly: EyeAuras.Shared.dll Syntax public interface IShareProvider Properties Name Description Name Methods Name Description GetShare(string, string) ToUri(string) Update(ShareInfo) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfo.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfo.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override ShareInfo <Clone>$() Returns Type Description ShareInfo Overrides ShareInfoMetadata.<Clone>$()"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfo.-ctor.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfo.-ctor.html",
    "title": "Constructor ShareInfo | EyeAuras Docs",
    "keywords": "Constructor ShareInfo ShareInfo() Declaration public ShareInfo()"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfo.Content.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfo.Content.html",
    "title": "Property Content | EyeAuras Docs",
    "keywords": "Property Content Content Declaration public IAuraProperties[] Content { get; init; } Property Value Type Description IAuraProperties[]"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfo.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfo.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides ShareInfoMetadata.EqualityContract"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfo.Equals.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfo.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ShareInfoMetadata.Equals(object?) Equals(ShareInfoMetadata?) Declaration public override sealed bool Equals(ShareInfoMetadata? other) Parameters Type Name Description ShareInfoMetadata other Returns Type Description bool Overrides ShareInfoMetadata.Equals(ShareInfoMetadata?) Equals(ShareInfo?) Declaration public bool Equals(ShareInfo? other) Parameters Type Name Description ShareInfo other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfo.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfo.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ShareInfoMetadata.GetHashCode()"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfo.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfo.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides ShareInfoMetadata.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfo.ToString.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfo.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ShareInfoMetadata.ToString()"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfo.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfo.html",
    "title": "Class ShareInfo | EyeAuras Docs",
    "keywords": "Class ShareInfo Inheritance object ShareInfoMetadata ShareInfo Implements IEquatable<ShareInfoMetadata> IEquatable<ShareInfo> Inherited Members ShareInfoMetadata.ShareUri ShareInfoMetadata.ShareId ShareInfoMetadata.UserName ShareInfoMetadata.ClientVersion ShareInfoMetadata.ViewsCount ShareInfoMetadata.UploadTimestamp ShareInfoMetadata.Revision ShareInfoMetadata.IsPrivate object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Sharing.Services Assembly: EyeAuras.Shared.dll Syntax public sealed record ShareInfo : ShareInfoMetadata, IEquatable<ShareInfoMetadata>, IEquatable<ShareInfo> Constructors Name Description ShareInfo() Properties Name Description Content EqualityContract Methods Name Description Equals(ShareInfo?) Equals(ShareInfoMetadata?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(ShareInfo?, ShareInfo?) operator !=(ShareInfo?, ShareInfo?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfo.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfo.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ShareInfo?, ShareInfo?) Declaration public static bool operator ==(ShareInfo? left, ShareInfo? right) Parameters Type Name Description ShareInfo left ShareInfo right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfo.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfo.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ShareInfo?, ShareInfo?) Declaration public static bool operator !=(ShareInfo? left, ShareInfo? right) Parameters Type Name Description ShareInfo left ShareInfo right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public virtual ShareInfoMetadata <Clone>$() Returns Type Description ShareInfoMetadata"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.-ctor.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.-ctor.html",
    "title": "Constructor ShareInfoMetadata | EyeAuras Docs",
    "keywords": "Constructor ShareInfoMetadata ShareInfoMetadata(ShareInfoMetadata) Declaration protected ShareInfoMetadata(ShareInfoMetadata original) Parameters Type Name Description ShareInfoMetadata original ShareInfoMetadata() Declaration public ShareInfoMetadata()"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.ClientVersion.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.ClientVersion.html",
    "title": "Property ClientVersion | EyeAuras Docs",
    "keywords": "Property ClientVersion ClientVersion Declaration public Version ClientVersion { get; init; } Property Value Type Description Version"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected virtual Type EqualityContract { get; } Property Value Type Description Type"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.Equals.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(ShareInfoMetadata?) Declaration public virtual bool Equals(ShareInfoMetadata? other) Parameters Type Name Description ShareInfoMetadata other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.IsPrivate.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.IsPrivate.html",
    "title": "Property IsPrivate | EyeAuras Docs",
    "keywords": "Property IsPrivate IsPrivate Declaration public bool IsPrivate { get; init; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected virtual bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.Revision.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.Revision.html",
    "title": "Property Revision | EyeAuras Docs",
    "keywords": "Property Revision Revision Declaration public long Revision { get; init; } Property Value Type Description long"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.ShareId.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.ShareId.html",
    "title": "Property ShareId | EyeAuras Docs",
    "keywords": "Property ShareId ShareId Declaration public string ShareId { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.ShareUri.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.ShareUri.html",
    "title": "Property ShareUri | EyeAuras Docs",
    "keywords": "Property ShareUri ShareUri Declaration public Uri ShareUri { get; init; } Property Value Type Description Uri"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.ToString.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.UploadTimestamp.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.UploadTimestamp.html",
    "title": "Property UploadTimestamp | EyeAuras Docs",
    "keywords": "Property UploadTimestamp UploadTimestamp Declaration public DateTimeOffset UploadTimestamp { get; init; } Property Value Type Description DateTimeOffset"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.UserName.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.UserName.html",
    "title": "Property UserName | EyeAuras Docs",
    "keywords": "Property UserName UserName Declaration public string UserName { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.ViewsCount.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.ViewsCount.html",
    "title": "Property ViewsCount | EyeAuras Docs",
    "keywords": "Property ViewsCount ViewsCount Declaration public long ViewsCount { get; init; } Property Value Type Description long"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.html",
    "title": "Class ShareInfoMetadata | EyeAuras Docs",
    "keywords": "Class ShareInfoMetadata Inheritance object ShareInfoMetadata ShareInfo Implements IEquatable<ShareInfoMetadata> Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Sharing.Services Assembly: EyeAuras.Shared.dll Syntax public record ShareInfoMetadata : IEquatable<ShareInfoMetadata> Constructors Name Description ShareInfoMetadata() ShareInfoMetadata(ShareInfoMetadata) Properties Name Description ClientVersion EqualityContract IsPrivate Revision ShareId ShareUri UploadTimestamp UserName ViewsCount Methods Name Description Equals(ShareInfoMetadata?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(ShareInfoMetadata?, ShareInfoMetadata?) operator !=(ShareInfoMetadata?, ShareInfoMetadata?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ShareInfoMetadata?, ShareInfoMetadata?) Declaration public static bool operator ==(ShareInfoMetadata? left, ShareInfoMetadata? right) Parameters Type Name Description ShareInfoMetadata left ShareInfoMetadata right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.ShareInfoMetadata.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ShareInfoMetadata?, ShareInfoMetadata?) Declaration public static bool operator !=(ShareInfoMetadata? left, ShareInfoMetadata? right) Parameters Type Name Description ShareInfoMetadata left ShareInfoMetadata right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Sharing.Services.html": {
    "href": "api/EyeAuras.Shared.Sharing.Services.html",
    "title": "Namespace EyeAuras.Shared.Sharing.Services | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Shared.Sharing.Services Classes ShareInfo ShareInfoMetadata Interfaces IShareProvider"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public ConcurrentMovingStatistics <Clone>$() Returns Type Description ConcurrentMovingStatistics"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.-ctor.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.-ctor.html",
    "title": "Constructor ConcurrentMovingStatistics | EyeAuras Docs",
    "keywords": "Constructor ConcurrentMovingStatistics ConcurrentMovingStatistics(int) Declaration public ConcurrentMovingStatistics(int windowSize) Parameters Type Name Description int windowSize"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Clear.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Clear.html",
    "title": "Method Clear | EyeAuras Docs",
    "keywords": "Method Clear Clear() Declaration public void Clear()"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Count.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public long Count { get; } Property Value Type Description long"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Equals.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(ConcurrentMovingStatistics?) Declaration public bool Equals(ConcurrentMovingStatistics? other) Parameters Type Name Description ConcurrentMovingStatistics other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Maximum.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Maximum.html",
    "title": "Property Maximum | EyeAuras Docs",
    "keywords": "Property Maximum Maximum Declaration public double Maximum { get; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Mean.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Mean.html",
    "title": "Property Mean | EyeAuras Docs",
    "keywords": "Property Mean Mean Declaration public double Mean { get; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Measure.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Measure.html",
    "title": "Method Measure | EyeAuras Docs",
    "keywords": "Method Measure Measure() Declaration public IDisposable Measure() Returns Type Description IDisposable"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Minimum.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Minimum.html",
    "title": "Property Minimum | EyeAuras Docs",
    "keywords": "Property Minimum Minimum Declaration public double Minimum { get; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Push.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.Push.html",
    "title": "Method Push | EyeAuras Docs",
    "keywords": "Method Push Push(double) Declaration public void Push(double value) Parameters Type Name Description double value"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.PushRange.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.PushRange.html",
    "title": "Method PushRange | EyeAuras Docs",
    "keywords": "Method PushRange PushRange(IEnumerable<double>) Declaration public void PushRange(IEnumerable<double> values) Parameters Type Name Description IEnumerable<double> values"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.ToString.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.ToTimeSpanOrDefault.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.ToTimeSpanOrDefault.html",
    "title": "Method ToTimeSpanOrDefault | EyeAuras Docs",
    "keywords": "Method ToTimeSpanOrDefault ToTimeSpanOrDefault() Declaration public TimeSpan ToTimeSpanOrDefault() Returns Type Description TimeSpan"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.WindowSize.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.WindowSize.html",
    "title": "Property WindowSize | EyeAuras Docs",
    "keywords": "Property WindowSize WindowSize Declaration public int WindowSize { get; } Property Value Type Description int"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.html",
    "title": "Class ConcurrentMovingStatistics | EyeAuras Docs",
    "keywords": "Class ConcurrentMovingStatistics Inheritance object ConcurrentMovingStatistics Implements IEquatable<ConcurrentMovingStatistics> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Statistics Assembly: EyeAuras.Shared.dll Syntax public sealed record ConcurrentMovingStatistics : IEquatable<ConcurrentMovingStatistics> Constructors Name Description ConcurrentMovingStatistics(int) Properties Name Description Count Maximum Mean Minimum WindowSize Methods Name Description Clear() Equals(ConcurrentMovingStatistics?) Equals(object?) GetHashCode() Measure() Push(double) PushRange(IEnumerable<double>) ToString() ToTimeSpanOrDefault() <Clone>$() Operators Name Description operator ==(ConcurrentMovingStatistics?, ConcurrentMovingStatistics?) operator !=(ConcurrentMovingStatistics?, ConcurrentMovingStatistics?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ConcurrentMovingStatistics?, ConcurrentMovingStatistics?) Declaration public static bool operator ==(ConcurrentMovingStatistics? left, ConcurrentMovingStatistics? right) Parameters Type Name Description ConcurrentMovingStatistics left ConcurrentMovingStatistics right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Statistics.ConcurrentMovingStatistics.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ConcurrentMovingStatistics?, ConcurrentMovingStatistics?) Declaration public static bool operator !=(ConcurrentMovingStatistics? left, ConcurrentMovingStatistics? right) Parameters Type Name Description ConcurrentMovingStatistics left ConcurrentMovingStatistics right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Statistics.html": {
    "href": "api/EyeAuras.Shared.Statistics.html",
    "title": "Namespace EyeAuras.Shared.Statistics | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Shared.Statistics Classes ConcurrentMovingStatistics"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override AuraTextMessage <Clone>$() Returns Type Description AuraTextMessage Overrides ReactiveRecord.<Clone>$()"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.-ctor.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.-ctor.html",
    "title": "Constructor AuraTextMessage | EyeAuras Docs",
    "keywords": "Constructor AuraTextMessage AuraTextMessage() Declaration public AuraTextMessage()"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.Channel.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.Channel.html",
    "title": "Property Channel | EyeAuras Docs",
    "keywords": "Property Channel Channel Declaration public string Channel { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides ReactiveRecord.EqualityContract"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.Equals.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ReactiveRecord.Equals(object?) Equals(ReactiveRecord?) Declaration public override sealed bool Equals(ReactiveRecord? other) Parameters Type Name Description ReactiveRecord other Returns Type Description bool Overrides ReactiveRecord.Equals(ReactiveRecord?) Equals(AuraTextMessage?) Declaration public bool Equals(AuraTextMessage? other) Parameters Type Name Description AuraTextMessage other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ReactiveRecord.GetHashCode()"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.IsMatched.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.IsMatched.html",
    "title": "Property IsMatched | EyeAuras Docs",
    "keywords": "Property IsMatched IsMatched Declaration public bool IsMatched { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.Latency.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.Latency.html",
    "title": "Property Latency | EyeAuras Docs",
    "keywords": "Property Latency Latency Declaration public TimeSpan Latency { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides ReactiveRecord.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.Sender.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.Sender.html",
    "title": "Property Sender | EyeAuras Docs",
    "keywords": "Property Sender Sender Declaration public string Sender { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.Status.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.Status.html",
    "title": "Property Status | EyeAuras Docs",
    "keywords": "Property Status Status Declaration public AuraTextMessageStatus Status { get; set; } Property Value Type Description AuraTextMessageStatus"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.Text.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.Text.html",
    "title": "Property Text | EyeAuras Docs",
    "keywords": "Property Text Text Declaration public string Text { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.Timestamp.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.Timestamp.html",
    "title": "Property Timestamp | EyeAuras Docs",
    "keywords": "Property Timestamp Timestamp Declaration public DateTimeOffset Timestamp { get; init; } Property Value Type Description DateTimeOffset"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.ToString.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ReactiveRecord.ToString()"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.html",
    "title": "Class AuraTextMessage | EyeAuras Docs",
    "keywords": "Class AuraTextMessage Inheritance object ReactiveRecord AuraTextMessage Implements INotifyPropertyChanged IEquatable<ReactiveRecord> IEquatable<AuraTextMessage> Inherited Members ReactiveRecord.RaisePropertyChanged(string) ReactiveRecord.PropertyChanged object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax public sealed record AuraTextMessage : ReactiveRecord, INotifyPropertyChanged, IEquatable<ReactiveRecord>, IEquatable<AuraTextMessage> Constructors Name Description AuraTextMessage() Properties Name Description Channel EqualityContract IsMatched Latency Sender Status Text Timestamp Methods Name Description Equals(AuraTextMessage?) Equals(ReactiveRecord?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(AuraTextMessage?, AuraTextMessage?) operator !=(AuraTextMessage?, AuraTextMessage?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(AuraTextMessage?, AuraTextMessage?) Declaration public static bool operator ==(AuraTextMessage? left, AuraTextMessage? right) Parameters Type Name Description AuraTextMessage left AuraTextMessage right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessage.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessage.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(AuraTextMessage?, AuraTextMessage?) Declaration public static bool operator !=(AuraTextMessage? left, AuraTextMessage? right) Parameters Type Name Description AuraTextMessage left AuraTextMessage right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.AuraTextMessageStatus.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTextMessageStatus.html",
    "title": "Enum AuraTextMessageStatus | EyeAuras Docs",
    "keywords": "Enum AuraTextMessageStatus Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax public enum AuraTextMessageStatus Fields Name Description Processed Processing Received Extension Methods ObjectExtensions.AddTo<AuraTextMessageStatus, TCollection>(AuraTextMessageStatus, ISourceList<TCollection>) ObjectExtensions.AddTo<AuraTextMessageStatus, TCollection>(AuraTextMessageStatus, ICollection<TCollection>) ObjectExtensions.CloneJson<AuraTextMessageStatus>(AuraTextMessageStatus) ObjectExtensions.CopyPropertiesTo<AuraTextMessageStatus, TTarget>(AuraTextMessageStatus, TTarget) ObjectExtensions.DumpToTextRaw<AuraTextMessageStatus>(AuraTextMessageStatus) ObjectExtensions.DumpToText<AuraTextMessageStatus>(AuraTextMessageStatus) ObjectExtensions.Dump<AuraTextMessageStatus>(AuraTextMessageStatus) ObjectExtensions.GetPropertyAccessor<AuraTextMessageStatus, TValue>(AuraTextMessageStatus, Expression<Func<AuraTextMessageStatus, TValue>>) ObjectExtensions.InsertTo<AuraTextMessageStatus, TCollection>(AuraTextMessageStatus, IList<TCollection>, int) ObjectExtensions.ToJson<AuraTextMessageStatus>(AuraTextMessageStatus) ObjectExtensions.ToStringSafe<AuraTextMessageStatus>(AuraTextMessageStatus) ObjectExtensions.TransferPropertiesTo<AuraTextMessageStatus, TTarget>(AuraTextMessageStatus, TTarget, params string[]) XDocumentExtensions.AddTo<AuraTextMessageStatus>(AuraTextMessageStatus, XContainer)"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.-ctor.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.-ctor.html",
    "title": "Constructor AuraTriggerBase | EyeAuras Docs",
    "keywords": "Constructor AuraTriggerBase AuraTriggerBase() Declaration protected AuraTriggerBase() AuraTriggerBase(IScheduler) Declaration protected AuraTriggerBase(IScheduler triggerScheduler) Parameters Type Name Description IScheduler triggerScheduler"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.ActivationProgress.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.ActivationProgress.html",
    "title": "Property ActivationProgress | EyeAuras Docs",
    "keywords": "Property ActivationProgress ActivationProgress Declaration public double ActivationProgress { get; } Property Value Type Description double Implements IAuraTrigger.ActivationProgress"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.ActivationTimeout.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.ActivationTimeout.html",
    "title": "Property ActivationTimeout | EyeAuras Docs",
    "keywords": "Property ActivationTimeout ActivationTimeout Declaration [AuraProperty] public TimeSpan ActivationTimeout { get; set; } Property Value Type Description TimeSpan Implements IAuraTrigger.ActivationTimeout"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.CreateTriggerEventSource.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.CreateTriggerEventSource.html",
    "title": "Method CreateTriggerEventSource | EyeAuras Docs",
    "keywords": "Method CreateTriggerEventSource CreateTriggerEventSource() Declaration protected abstract IObservable<bool?> CreateTriggerEventSource() Returns Type Description IObservable<bool?>"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.DeactivationTimeout.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.DeactivationTimeout.html",
    "title": "Property DeactivationTimeout | EyeAuras Docs",
    "keywords": "Property DeactivationTimeout DeactivationTimeout Declaration [AuraProperty] public TimeSpan DeactivationTimeout { get; set; } Property Value Type Description TimeSpan Implements IAuraTrigger.DeactivationTimeout"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.Description.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.Description.html",
    "title": "Property Description | EyeAuras Docs",
    "keywords": "Property Description Description Description of an item, could be localized Declaration public abstract string Description { get; } Property Value Type Description string Implements IHasDescription.Description"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.EnableAdvancedSettings.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.EnableAdvancedSettings.html",
    "title": "Property EnableAdvancedSettings | EyeAuras Docs",
    "keywords": "Property EnableAdvancedSettings EnableAdvancedSettings Declaration public bool EnableAdvancedSettings { get; set; } Property Value Type Description bool Implements IAuraTrigger.EnableAdvancedSettings"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.FormatToString.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides AuraObjectBase.FormatToString(ToStringBuilder)"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.GetMinIsActiveDelay.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.GetMinIsActiveDelay.html",
    "title": "Method GetMinIsActiveDelay | EyeAuras Docs",
    "keywords": "Method GetMinIsActiveDelay GetMinIsActiveDelay() Declaration protected virtual TimeSpan GetMinIsActiveDelay() Returns Type Description TimeSpan"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.IsActive.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Indicates whether Trigger state IsActive / NOT Active / Unknown(e.g. disabled, not fully ready yet or underlying resource is not available) Declaration public bool? IsActive { get; } Property Value Type Description bool? Implements IAuraTrigger.IsActive"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.IsEnabled.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Indicates whether Trigger is enabled or disabled, for disabled triggers IsActive is expected to be set to null Declaration public bool IsEnabled { get; set; } Property Value Type Description bool Implements IAuraTrigger.IsEnabled"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.IsIgnored.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.IsIgnored.html",
    "title": "Property IsIgnored | EyeAuras Docs",
    "keywords": "Property IsIgnored IsIgnored Indicates whether this Trigger is ignored for all checks in the program or not Declaration [AuraProperty] public bool IsIgnored { get; set; } Property Value Type Description bool Implements IAuraTrigger.IsIgnored"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.IsInverted.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.IsInverted.html",
    "title": "Property IsInverted | EyeAuras Docs",
    "keywords": "Property IsInverted IsInverted Indicates whether IsActive should be Inverted or not for the final result Respected by ComplexAuraTrigger Declaration [AuraProperty] public bool IsInverted { get; set; } Property Value Type Description bool Implements IAuraTrigger.IsInverted"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.Name.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Name of an item(could be filename), usually un-localized and could be used in lookups Declaration public abstract string Name { get; } Property Value Type Description string Implements IHasName.Name"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.NameSuffix.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.NameSuffix.html",
    "title": "Property NameSuffix | EyeAuras Docs",
    "keywords": "Property NameSuffix NameSuffix Suffix which will be appended to Name Declaration public string NameSuffix { get; init; } Property Value Type Description string Implements IAuraEntity.NameSuffix"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.NextIsActive.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.NextIsActive.html",
    "title": "Property NextIsActive | EyeAuras Docs",
    "keywords": "Property NextIsActive NextIsActive Declaration public bool? NextIsActive { get; } Property Value Type Description bool? Implements IAuraTrigger.NextIsActive"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.NextIsActiveTimestamp.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.NextIsActiveTimestamp.html",
    "title": "Property NextIsActiveTimestamp | EyeAuras Docs",
    "keywords": "Property NextIsActiveTimestamp NextIsActiveTimestamp Declaration public DateTimeOffset? NextIsActiveTimestamp { get; } Property Value Type Description DateTimeOffset?"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.TimeLeftTillNextValue.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.TimeLeftTillNextValue.html",
    "title": "Property TimeLeftTillNextValue | EyeAuras Docs",
    "keywords": "Property TimeLeftTillNextValue TimeLeftTillNextValue Declaration public TimeSpan? TimeLeftTillNextValue { get; } Property Value Type Description TimeSpan? Implements IAuraTrigger.TimeLeftTillNextValue"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.VisitLoad.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.VisitLoad.html",
    "title": "Method VisitLoad | EyeAuras Docs",
    "keywords": "Method VisitLoad VisitLoad(TAuraProperties) Declaration protected override void VisitLoad(TAuraProperties source) Parameters Type Name Description TAuraProperties source Overrides AuraObjectBase<TAuraProperties>.VisitLoad(TAuraProperties)"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.VisitSave.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.VisitSave.html",
    "title": "Method VisitSave | EyeAuras Docs",
    "keywords": "Method VisitSave VisitSave(TAuraProperties) Declaration protected override void VisitSave(TAuraProperties target) Parameters Type Name Description TAuraProperties target Overrides AuraObjectBase<TAuraProperties>.VisitSave(TAuraProperties)"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerBase-1.html",
    "title": "Class AuraTriggerBase<TAuraProperties> | EyeAuras Docs",
    "keywords": "Class AuraTriggerBase<TAuraProperties> Inheritance object DisposableReactiveObject BindableReactiveObject AuraObjectBase AuraObjectBase<TAuraProperties> AuraTriggerBase<TAuraProperties> CoreAuraTriggerBase<TAuraProperties> LegacyAuraTriggerBase<TAuraProperties> Implements IAuraObject<TAuraProperties> IAuraTrigger IAuraEntity IAuraObject IBindableReactiveObject IDisposable INotifyPropertyChanged IHasId ICanSetContext IHasContext IHasName IHasDescription Inherited Members AuraObjectBase<TAuraProperties>.SaveProperties() AuraObjectBase<TAuraProperties>.LoadProperties(IAuraProperties) AuraObjectBase<TAuraProperties>.Properties AuraObjectBase.RaisePropertiesWhen<T>(IObservableList<T>) AuraObjectBase.RaisePropertiesWhen<T, TKey>(ISourceCache<T, TKey>) AuraObjectBase.RaisePropertiesWhen<TCollection, T>(TCollection) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollectionEx<T>) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollection<T>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>, CompositeDisposable) AuraObjectBase.RaisePropertiesWhen<T>(IObservable<T>) AuraObjectBase.RaisePropertiesWhen<T>(params IObservable<T>[]) AuraObjectBase.RaisePropertiesWhenAny<T>(T, params Expression<Func<T, object>>[]) AuraObjectBase.RaisePropertiesWhen<T>(params IAuraObject<T>[]) AuraObjectBase.ResolveBinding(string) AuraObjectBase.AddOrUpdateBinding(AuraBindingProperties) AuraObjectBase.IsLoadingProperties AuraObjectBase.IsSavingProperties AuraObjectBase.Context AuraObjectBase.Id BindableReactiveObject.RemoveBinding(string) BindableReactiveObject.ClearBindings() BindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) BindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) BindableReactiveObject.RemoveBinding(IReactiveBinding) BindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) BindableReactiveObject.Log BindableReactiveObject.ObjectId BindableReactiveObject.HasBindings BindableReactiveObject.Bindings BindableReactiveObject.BindingsList object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax public abstract class AuraTriggerBase<TAuraProperties> : AuraObjectBase<TAuraProperties>, IAuraObject<TAuraProperties>, IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription where TAuraProperties : class, IAuraTriggerProperties, new() Type Parameters Name Description TAuraProperties Constructors Name Description AuraTriggerBase() AuraTriggerBase(IScheduler) Properties Name Description ActivationProgress ActivationTimeout DeactivationTimeout Description Description of an item, could be localized EnableAdvancedSettings IsActive Indicates whether Trigger state IsActive / NOT Active / Unknown(e.g. disabled, not fully ready yet or underlying resource is not available) IsEnabled Indicates whether Trigger is enabled or disabled, for disabled triggers IsActive is expected to be set to null IsIgnored Indicates whether this Trigger is ignored for all checks in the program or not IsInverted Indicates whether IsActive should be Inverted or not for the final result Respected by ComplexAuraTrigger Name Name of an item(could be filename), usually un-localized and could be used in lookups NameSuffix Suffix which will be appended to Name NextIsActive NextIsActiveTimestamp TimeLeftTillNextValue Methods Name Description CreateTriggerEventSource() FormatToString(ToStringBuilder) GetMinIsActiveDelay() VisitLoad(TAuraProperties) VisitSave(TAuraProperties) Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override abstract AuraTriggerPropertiesBase <Clone>$() Returns Type Description AuraTriggerPropertiesBase Overrides AuraPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.-ctor.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.-ctor.html",
    "title": "Constructor AuraTriggerPropertiesBase | EyeAuras Docs",
    "keywords": "Constructor AuraTriggerPropertiesBase AuraTriggerPropertiesBase(AuraTriggerPropertiesBase) Declaration protected AuraTriggerPropertiesBase(AuraTriggerPropertiesBase original) Parameters Type Name Description AuraTriggerPropertiesBase original AuraTriggerPropertiesBase() Declaration protected AuraTriggerPropertiesBase()"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.ActivationTimeout.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.ActivationTimeout.html",
    "title": "Property ActivationTimeout | EyeAuras Docs",
    "keywords": "Property ActivationTimeout ActivationTimeout Period of time that must pass before trigger will become Active even if all conditions are met Declaration public TimeSpan ActivationTimeout { get; set; } Property Value Type Description TimeSpan Implements IAuraTriggerProperties.ActivationTimeout"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.DeactivationTimeout.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.DeactivationTimeout.html",
    "title": "Property DeactivationTimeout | EyeAuras Docs",
    "keywords": "Property DeactivationTimeout DeactivationTimeout Period of time that must pass before trigger will become Inactive even if all conditions are met Declaration public TimeSpan DeactivationTimeout { get; set; } Property Value Type Description TimeSpan Implements IAuraTriggerProperties.DeactivationTimeout"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.Equals.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraPropertiesBase.Equals(object?) Equals(AuraPropertiesBase?) Declaration public override sealed bool Equals(AuraPropertiesBase? other) Parameters Type Name Description AuraPropertiesBase other Returns Type Description bool Overrides AuraPropertiesBase.Equals(AuraPropertiesBase?) Equals(AuraTriggerPropertiesBase?) Declaration public virtual bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.IsIgnored.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.IsIgnored.html",
    "title": "Property IsIgnored | EyeAuras Docs",
    "keywords": "Property IsIgnored IsIgnored Indicates whether this Trigger is ignored for all checks in the program or not Declaration public bool IsIgnored { get; set; } Property Value Type Description bool Implements IAuraTriggerProperties.IsIgnored"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.IsInverted.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.IsInverted.html",
    "title": "Property IsInverted | EyeAuras Docs",
    "keywords": "Property IsInverted IsInverted Indicates whether this trigger should be treated as inverted or not Declaration public bool IsInverted { get; set; } Property Value Type Description bool Implements IAuraTriggerProperties.IsInverted"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.ToString.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraPropertiesBase.ToString()"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.html",
    "title": "Class AuraTriggerPropertiesBase | EyeAuras Docs",
    "keywords": "Class AuraTriggerPropertiesBase Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase VolumeLevelTriggerProperties CsharpScriptTriggerProperties ExecuteScriptTriggerProperties AuraIsActiveTriggerProperties DefaultTriggerProperties FileContainsTriggerProperties HotkeyIsActiveProperties TimerTriggerPropertiesV1 TimerTriggerPropertiesV2 WinActiveTriggerProperties WinExistsTriggerProperties WindowCaptureTriggerProperties EmptyAuraTriggerProperties MessageSubscriptionTriggerPropertiesBase Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> Inherited Members AuraPropertiesBase.Id AuraPropertiesBase.Bindings AuraPropertiesBase.Version object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.Metadata.dll Syntax public abstract record AuraTriggerPropertiesBase : AuraPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase> Constructors Name Description AuraTriggerPropertiesBase() AuraTriggerPropertiesBase(AuraTriggerPropertiesBase) Properties Name Description ActivationTimeout Period of time that must pass before trigger will become Active even if all conditions are met DeactivationTimeout Period of time that must pass before trigger will become Inactive even if all conditions are met EqualityContract IsIgnored Indicates whether this Trigger is ignored for all checks in the program or not IsInverted Indicates whether this trigger should be treated as inverted or not Methods Name Description Equals(AuraPropertiesBase?) Equals(AuraTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(AuraTriggerPropertiesBase?, AuraTriggerPropertiesBase?) operator !=(AuraTriggerPropertiesBase?, AuraTriggerPropertiesBase?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(AuraTriggerPropertiesBase?, AuraTriggerPropertiesBase?) Declaration public static bool operator ==(AuraTriggerPropertiesBase? left, AuraTriggerPropertiesBase? right) Parameters Type Name Description AuraTriggerPropertiesBase left AuraTriggerPropertiesBase right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Triggers.AuraTriggerPropertiesBase.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(AuraTriggerPropertiesBase?, AuraTriggerPropertiesBase?) Declaration public static bool operator !=(AuraTriggerPropertiesBase? left, AuraTriggerPropertiesBase? right) Parameters Type Name Description AuraTriggerPropertiesBase left AuraTriggerPropertiesBase right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.-ctor.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.-ctor.html",
    "title": "Constructor ComplexAuraTrigger | EyeAuras Docs",
    "keywords": "Constructor ComplexAuraTrigger ComplexAuraTrigger() Declaration protected ComplexAuraTrigger()"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Add.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Add.html",
    "title": "Method Add | EyeAuras Docs",
    "keywords": "Method Add Add(IAuraTrigger) Declaration public void Add(IAuraTrigger trigger) Parameters Type Name Description IAuraTrigger trigger Implements IComplexAuraTrigger.Add(IAuraTrigger)"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Collection.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Collection.html",
    "title": "Property Collection | EyeAuras Docs",
    "keywords": "Property Collection Collection Declaration public IReadOnlyObservableCollection<IAuraTrigger> Collection { get; } Property Value Type Description IReadOnlyObservableCollection<IAuraTrigger> Implements IObservableListEx<T>.Collection"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.CollectionChanged.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.CollectionChanged.html",
    "title": "Event CollectionChanged | EyeAuras Docs",
    "keywords": "Event CollectionChanged Implements CollectionChanged Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax public event NotifyCollectionChangedEventHandler CollectionChanged Returns Type Description NotifyCollectionChangedEventHandler"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.ConditionType.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.ConditionType.html",
    "title": "Property ConditionType | EyeAuras Docs",
    "keywords": "Property ConditionType ConditionType Declaration public AuraEvaluatorConditionType ConditionType { get; set; } Property Value Type Description AuraEvaluatorConditionType Implements IComplexAuraTrigger.ConditionType"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Connect.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Connect.html",
    "title": "Method Connect | EyeAuras Docs",
    "keywords": "Method Connect Connect(Func<IAuraTrigger, bool>) Declaration public IObservable<IChangeSet<IAuraTrigger>> Connect(Func<IAuraTrigger, bool> predicate = null) Parameters Type Name Description Func<IAuraTrigger, bool> predicate Returns Type Description IObservable<IChangeSet<IAuraTrigger>>"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Count.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public int Count { get; } Property Value Type Description int"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.CountChanged.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.CountChanged.html",
    "title": "Property CountChanged | EyeAuras Docs",
    "keywords": "Property CountChanged CountChanged Declaration public IObservable<int> CountChanged { get; } Property Value Type Description IObservable<int>"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Description.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Description.html",
    "title": "Property Description | EyeAuras Docs",
    "keywords": "Property Description Description Description of an item, could be localized Declaration public override string Description { get; } Property Value Type Description string Overrides AuraTriggerBase<T>.Description Implements IHasDescription.Description"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Edit.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Edit.html",
    "title": "Method Edit | EyeAuras Docs",
    "keywords": "Method Edit Edit(Action<IExtendedList<IAuraTrigger>>) Declaration public void Edit(Action<IExtendedList<IAuraTrigger>> updateAction) Parameters Type Name Description Action<IExtendedList<IAuraTrigger>> updateAction"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.GetEnumerator.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.GetEnumerator.html",
    "title": "Method GetEnumerator | EyeAuras Docs",
    "keywords": "Method GetEnumerator GetEnumerator() Declaration public IEnumerator<IAuraTrigger> GetEnumerator() Returns Type Description IEnumerator<IAuraTrigger> Implements IEnumerable<T>.GetEnumerator()"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.GetMinIsActiveDelay.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.GetMinIsActiveDelay.html",
    "title": "Method GetMinIsActiveDelay | EyeAuras Docs",
    "keywords": "Method GetMinIsActiveDelay GetMinIsActiveDelay() Declaration protected override TimeSpan GetMinIsActiveDelay() Returns Type Description TimeSpan Overrides AuraTriggerBase<T>.GetMinIsActiveDelay()"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.IsReady.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.IsReady.html",
    "title": "Property IsReady | EyeAuras Docs",
    "keywords": "Property IsReady IsReady Declaration public bool IsReady { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Items.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Items.html",
    "title": "Property Items | EyeAuras Docs",
    "keywords": "Property Items Items Declaration public IEnumerable<IAuraTrigger> Items { get; } Property Value Type Description IEnumerable<IAuraTrigger>"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Name.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Name of an item(could be filename), usually un-localized and could be used in lookups Declaration public override string Name { get; } Property Value Type Description string Overrides AuraTriggerBase<T>.Name Implements IHasName.Name"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Preview.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Preview.html",
    "title": "Method Preview | EyeAuras Docs",
    "keywords": "Method Preview Preview(Func<IAuraTrigger, bool>) Declaration public IObservable<IChangeSet<IAuraTrigger>> Preview(Func<IAuraTrigger, bool> predicate = null) Parameters Type Name Description Func<IAuraTrigger, bool> predicate Returns Type Description IObservable<IChangeSet<IAuraTrigger>>"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Remove.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.Remove.html",
    "title": "Method Remove | EyeAuras Docs",
    "keywords": "Method Remove Remove(IAuraTrigger) Declaration public bool Remove(IAuraTrigger trigger) Parameters Type Name Description IAuraTrigger trigger Returns Type Description bool Implements IComplexAuraTrigger.Remove(IAuraTrigger)"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger-1.html",
    "title": "Class ComplexAuraTrigger<T> | EyeAuras Docs",
    "keywords": "Class ComplexAuraTrigger<T> Inheritance object DisposableReactiveObject BindableReactiveObject AuraObjectBase AuraObjectBase<T> AuraTriggerBase<T> LegacyAuraTriggerBase<T> ComplexAuraTrigger<T> ComplexAuraTrigger Implements IAuraObject<T> IComplexAuraTrigger IComplexAuraList<IAuraTrigger> ISourceListEx<IAuraTrigger> ISourceList<IAuraTrigger> IObservableListEx<IAuraTrigger> IObservableList<IAuraTrigger> IEnumerable<IAuraTrigger> IEnumerable INotifyCollectionChanged IAuraTrigger IAuraEntity IAuraObject IBindableReactiveObject IDisposable INotifyPropertyChanged IHasId ICanSetContext IHasContext IHasName IHasDescription Inherited Members LegacyAuraTriggerBase<T>.CreateTriggerEventSource() LegacyAuraTriggerBase<T>.TriggerValue AuraTriggerBase<T>.VisitLoad(T) AuraTriggerBase<T>.VisitSave(T) AuraTriggerBase<T>.FormatToString(ToStringBuilder) AuraTriggerBase<T>.NameSuffix AuraTriggerBase<T>.NextIsActiveTimestamp AuraTriggerBase<T>.EnableAdvancedSettings AuraTriggerBase<T>.IsInverted AuraTriggerBase<T>.IsActive AuraTriggerBase<T>.IsEnabled AuraTriggerBase<T>.IsIgnored AuraTriggerBase<T>.NextIsActive AuraTriggerBase<T>.ActivationTimeout AuraTriggerBase<T>.DeactivationTimeout AuraTriggerBase<T>.TimeLeftTillNextValue AuraTriggerBase<T>.ActivationProgress AuraObjectBase<T>.SaveProperties() AuraObjectBase<T>.LoadProperties(IAuraProperties) AuraObjectBase<T>.Properties AuraObjectBase.RaisePropertiesWhen<T>(IObservableList<T>) AuraObjectBase.RaisePropertiesWhen<T, TKey>(ISourceCache<T, TKey>) AuraObjectBase.RaisePropertiesWhen<TCollection, T>(TCollection) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollectionEx<T>) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollection<T>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>, CompositeDisposable) AuraObjectBase.RaisePropertiesWhen<T>(IObservable<T>) AuraObjectBase.RaisePropertiesWhen<T>(params IObservable<T>[]) AuraObjectBase.RaisePropertiesWhenAny<T>(T, params Expression<Func<T, object>>[]) AuraObjectBase.RaisePropertiesWhen<T>(params IAuraObject<T>[]) AuraObjectBase.ResolveBinding(string) AuraObjectBase.AddOrUpdateBinding(AuraBindingProperties) AuraObjectBase.IsLoadingProperties AuraObjectBase.IsSavingProperties AuraObjectBase.Context AuraObjectBase.Id BindableReactiveObject.RemoveBinding(string) BindableReactiveObject.ClearBindings() BindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) BindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) BindableReactiveObject.RemoveBinding(IReactiveBinding) BindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) BindableReactiveObject.Log BindableReactiveObject.ObjectId BindableReactiveObject.HasBindings BindableReactiveObject.Bindings BindableReactiveObject.BindingsList object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax public abstract class ComplexAuraTrigger<T> : LegacyAuraTriggerBase<T>, IAuraObject<T>, IComplexAuraTrigger, IComplexAuraList<IAuraTrigger>, ISourceListEx<IAuraTrigger>, ISourceList<IAuraTrigger>, IObservableListEx<IAuraTrigger>, IObservableList<IAuraTrigger>, IEnumerable<IAuraTrigger>, IEnumerable, INotifyCollectionChanged, IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription where T : class, IAuraTriggerProperties, new() Type Parameters Name Description T Constructors Name Description ComplexAuraTrigger() Properties Name Description Collection ConditionType Count CountChanged Description Description of an item, could be localized IsReady Items Name Name of an item(could be filename), usually un-localized and could be used in lookups Methods Name Description Add(IAuraTrigger) Connect(Func<IAuraTrigger, bool>) Edit(Action<IExtendedList<IAuraTrigger>>) GetEnumerator() GetMinIsActiveDelay() Preview(Func<IAuraTrigger, bool>) Remove(IAuraTrigger) Events Name Description CollectionChanged Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger.-ctor.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger.-ctor.html",
    "title": "Constructor ComplexAuraTrigger | EyeAuras Docs",
    "keywords": "Constructor ComplexAuraTrigger ComplexAuraTrigger() Declaration public ComplexAuraTrigger()"
  },
  "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger.html": {
    "href": "api/EyeAuras.Shared.Triggers.ComplexAuraTrigger.html",
    "title": "Class ComplexAuraTrigger | EyeAuras Docs",
    "keywords": "Class ComplexAuraTrigger Inheritance object DisposableReactiveObject BindableReactiveObject AuraObjectBase AuraObjectBase<EmptyAuraTriggerProperties> AuraTriggerBase<EmptyAuraTriggerProperties> LegacyAuraTriggerBase<EmptyAuraTriggerProperties> ComplexAuraTrigger<EmptyAuraTriggerProperties> ComplexAuraTrigger Implements IAuraObject<EmptyAuraTriggerProperties> IComplexAuraTrigger IComplexAuraList<IAuraTrigger> ISourceListEx<IAuraTrigger> ISourceList<IAuraTrigger> IObservableListEx<IAuraTrigger> IObservableList<IAuraTrigger> IEnumerable<IAuraTrigger> IEnumerable INotifyCollectionChanged IAuraTrigger IAuraEntity IAuraObject IBindableReactiveObject IDisposable INotifyPropertyChanged IHasId ICanSetContext IHasContext IHasName IHasDescription Inherited Members ComplexAuraTrigger<EmptyAuraTriggerProperties>.Connect(Func<IAuraTrigger, bool>) ComplexAuraTrigger<EmptyAuraTriggerProperties>.Preview(Func<IAuraTrigger, bool>) ComplexAuraTrigger<EmptyAuraTriggerProperties>.Add(IAuraTrigger) ComplexAuraTrigger<EmptyAuraTriggerProperties>.Remove(IAuraTrigger) ComplexAuraTrigger<EmptyAuraTriggerProperties>.Edit(Action<IExtendedList<IAuraTrigger>>) ComplexAuraTrigger<EmptyAuraTriggerProperties>.GetEnumerator() ComplexAuraTrigger<EmptyAuraTriggerProperties>.ConditionType ComplexAuraTrigger<EmptyAuraTriggerProperties>.Name ComplexAuraTrigger<EmptyAuraTriggerProperties>.Description ComplexAuraTrigger<EmptyAuraTriggerProperties>.IsReady ComplexAuraTrigger<EmptyAuraTriggerProperties>.CountChanged ComplexAuraTrigger<EmptyAuraTriggerProperties>.Items ComplexAuraTrigger<EmptyAuraTriggerProperties>.Count ComplexAuraTrigger<EmptyAuraTriggerProperties>.Collection ComplexAuraTrigger<EmptyAuraTriggerProperties>.CollectionChanged LegacyAuraTriggerBase<EmptyAuraTriggerProperties>.TriggerValue AuraTriggerBase<EmptyAuraTriggerProperties>.NameSuffix AuraTriggerBase<EmptyAuraTriggerProperties>.NextIsActiveTimestamp AuraTriggerBase<EmptyAuraTriggerProperties>.EnableAdvancedSettings AuraTriggerBase<EmptyAuraTriggerProperties>.IsInverted AuraTriggerBase<EmptyAuraTriggerProperties>.IsActive AuraTriggerBase<EmptyAuraTriggerProperties>.IsEnabled AuraTriggerBase<EmptyAuraTriggerProperties>.IsIgnored AuraTriggerBase<EmptyAuraTriggerProperties>.NextIsActive AuraTriggerBase<EmptyAuraTriggerProperties>.ActivationTimeout AuraTriggerBase<EmptyAuraTriggerProperties>.DeactivationTimeout AuraTriggerBase<EmptyAuraTriggerProperties>.TimeLeftTillNextValue AuraTriggerBase<EmptyAuraTriggerProperties>.ActivationProgress AuraObjectBase<EmptyAuraTriggerProperties>.Properties AuraObjectBase.ResolveBinding(string) AuraObjectBase.AddOrUpdateBinding(AuraBindingProperties) AuraObjectBase.IsLoadingProperties AuraObjectBase.IsSavingProperties AuraObjectBase.Context AuraObjectBase.Id BindableReactiveObject.RemoveBinding(string) BindableReactiveObject.ClearBindings() BindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) BindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) BindableReactiveObject.RemoveBinding(IReactiveBinding) BindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) BindableReactiveObject.ObjectId BindableReactiveObject.HasBindings BindableReactiveObject.Bindings BindableReactiveObject.BindingsList object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax public sealed class ComplexAuraTrigger : ComplexAuraTrigger<EmptyAuraTriggerProperties>, IAuraObject<EmptyAuraTriggerProperties>, IComplexAuraTrigger, IComplexAuraList<IAuraTrigger>, ISourceListEx<IAuraTrigger>, ISourceList<IAuraTrigger>, IObservableListEx<IAuraTrigger>, IObservableList<IAuraTrigger>, IEnumerable<IAuraTrigger>, IEnumerable, INotifyCollectionChanged, IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Constructors Name Description ComplexAuraTrigger() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Triggers.CoreAuraTriggerBase-1.-ctor.html": {
    "href": "api/EyeAuras.Shared.Triggers.CoreAuraTriggerBase-1.-ctor.html",
    "title": "Constructor CoreAuraTriggerBase | EyeAuras Docs",
    "keywords": "Constructor CoreAuraTriggerBase CoreAuraTriggerBase() Declaration protected CoreAuraTriggerBase()"
  },
  "api/EyeAuras.Shared.Triggers.CoreAuraTriggerBase-1.CreateTriggerCore.html": {
    "href": "api/EyeAuras.Shared.Triggers.CoreAuraTriggerBase-1.CreateTriggerCore.html",
    "title": "Method CreateTriggerCore | EyeAuras Docs",
    "keywords": "Method CreateTriggerCore CreateTriggerCore() Declaration protected abstract CoreAuraTriggerBase<TAuraProperties>.TriggerCoreBase CreateTriggerCore() Returns Type Description CoreAuraTriggerBase<TAuraProperties>.TriggerCoreBase"
  },
  "api/EyeAuras.Shared.Triggers.CoreAuraTriggerBase-1.CreateTriggerEventSource.html": {
    "href": "api/EyeAuras.Shared.Triggers.CoreAuraTriggerBase-1.CreateTriggerEventSource.html",
    "title": "Method CreateTriggerEventSource | EyeAuras Docs",
    "keywords": "Method CreateTriggerEventSource CreateTriggerEventSource() Declaration protected override sealed IObservable<bool?> CreateTriggerEventSource() Returns Type Description IObservable<bool?> Overrides AuraTriggerBase<TAuraProperties>.CreateTriggerEventSource()"
  },
  "api/EyeAuras.Shared.Triggers.CoreAuraTriggerBase-1.TriggerCoreBase.-ctor.html": {
    "href": "api/EyeAuras.Shared.Triggers.CoreAuraTriggerBase-1.TriggerCoreBase.-ctor.html",
    "title": "Constructor TriggerCoreBase | EyeAuras Docs",
    "keywords": "Constructor TriggerCoreBase TriggerCoreBase() Declaration protected TriggerCoreBase()"
  },
  "api/EyeAuras.Shared.Triggers.CoreAuraTriggerBase-1.TriggerCoreBase.TriggerValue.html": {
    "href": "api/EyeAuras.Shared.Triggers.CoreAuraTriggerBase-1.TriggerCoreBase.TriggerValue.html",
    "title": "Property TriggerValue | EyeAuras Docs",
    "keywords": "Property TriggerValue TriggerValue Declaration public bool? TriggerValue { get; protected set; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Triggers.CoreAuraTriggerBase-1.TriggerCoreBase.html": {
    "href": "api/EyeAuras.Shared.Triggers.CoreAuraTriggerBase-1.TriggerCoreBase.html",
    "title": "Class CoreAuraTriggerBase<TAuraProperties>.TriggerCoreBase | EyeAuras Docs",
    "keywords": "Class CoreAuraTriggerBase<TAuraProperties>.TriggerCoreBase Inheritance object DisposableReactiveObject CoreAuraTriggerBase<TAuraProperties>.TriggerCoreBase Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax protected abstract class CoreAuraTriggerBase<TAuraProperties>.TriggerCoreBase : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Constructors Name Description TriggerCoreBase() Properties Name Description TriggerValue Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Triggers.CoreAuraTriggerBase-1.html": {
    "href": "api/EyeAuras.Shared.Triggers.CoreAuraTriggerBase-1.html",
    "title": "Class CoreAuraTriggerBase<TAuraProperties> | EyeAuras Docs",
    "keywords": "Class CoreAuraTriggerBase<TAuraProperties> Inheritance object DisposableReactiveObject BindableReactiveObject AuraObjectBase AuraObjectBase<TAuraProperties> AuraTriggerBase<TAuraProperties> CoreAuraTriggerBase<TAuraProperties> Implements IAuraObject<TAuraProperties> IAuraTrigger IAuraEntity IAuraObject IBindableReactiveObject IDisposable INotifyPropertyChanged IHasId ICanSetContext IHasContext IHasName IHasDescription Inherited Members AuraTriggerBase<TAuraProperties>.GetMinIsActiveDelay() AuraTriggerBase<TAuraProperties>.VisitLoad(TAuraProperties) AuraTriggerBase<TAuraProperties>.VisitSave(TAuraProperties) AuraTriggerBase<TAuraProperties>.FormatToString(ToStringBuilder) AuraTriggerBase<TAuraProperties>.NameSuffix AuraTriggerBase<TAuraProperties>.NextIsActiveTimestamp AuraTriggerBase<TAuraProperties>.Name AuraTriggerBase<TAuraProperties>.Description AuraTriggerBase<TAuraProperties>.EnableAdvancedSettings AuraTriggerBase<TAuraProperties>.IsInverted AuraTriggerBase<TAuraProperties>.IsActive AuraTriggerBase<TAuraProperties>.IsEnabled AuraTriggerBase<TAuraProperties>.IsIgnored AuraTriggerBase<TAuraProperties>.NextIsActive AuraTriggerBase<TAuraProperties>.ActivationTimeout AuraTriggerBase<TAuraProperties>.DeactivationTimeout AuraTriggerBase<TAuraProperties>.TimeLeftTillNextValue AuraTriggerBase<TAuraProperties>.ActivationProgress AuraObjectBase<TAuraProperties>.SaveProperties() AuraObjectBase<TAuraProperties>.LoadProperties(IAuraProperties) AuraObjectBase<TAuraProperties>.Properties AuraObjectBase.RaisePropertiesWhen<T>(IObservableList<T>) AuraObjectBase.RaisePropertiesWhen<T, TKey>(ISourceCache<T, TKey>) AuraObjectBase.RaisePropertiesWhen<TCollection, T>(TCollection) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollectionEx<T>) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollection<T>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>, CompositeDisposable) AuraObjectBase.RaisePropertiesWhen<T>(IObservable<T>) AuraObjectBase.RaisePropertiesWhen<T>(params IObservable<T>[]) AuraObjectBase.RaisePropertiesWhenAny<T>(T, params Expression<Func<T, object>>[]) AuraObjectBase.RaisePropertiesWhen<T>(params IAuraObject<T>[]) AuraObjectBase.ResolveBinding(string) AuraObjectBase.AddOrUpdateBinding(AuraBindingProperties) AuraObjectBase.IsLoadingProperties AuraObjectBase.IsSavingProperties AuraObjectBase.Context AuraObjectBase.Id BindableReactiveObject.RemoveBinding(string) BindableReactiveObject.ClearBindings() BindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) BindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) BindableReactiveObject.RemoveBinding(IReactiveBinding) BindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) BindableReactiveObject.Log BindableReactiveObject.ObjectId BindableReactiveObject.HasBindings BindableReactiveObject.Bindings BindableReactiveObject.BindingsList object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax public abstract class CoreAuraTriggerBase<TAuraProperties> : AuraTriggerBase<TAuraProperties>, IAuraObject<TAuraProperties>, IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription where TAuraProperties : class, IAuraTriggerProperties, new() Type Parameters Name Description TAuraProperties Constructors Name Description CoreAuraTriggerBase() Methods Name Description CreateTriggerCore() CreateTriggerEventSource() Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override EmptyAuraTriggerProperties <Clone>$() Returns Type Description EmptyAuraTriggerProperties Overrides AuraTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.-ctor.html": {
    "href": "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.-ctor.html",
    "title": "Constructor EmptyAuraTriggerProperties | EyeAuras Docs",
    "keywords": "Constructor EmptyAuraTriggerProperties EmptyAuraTriggerProperties() Declaration public EmptyAuraTriggerProperties()"
  },
  "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.Equals.html": {
    "href": "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(object?) Equals(AuraTriggerPropertiesBase?) Declaration public override sealed bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase?) Equals(EmptyAuraTriggerProperties?) Declaration public bool Equals(EmptyAuraTriggerProperties? other) Parameters Type Name Description EmptyAuraTriggerProperties other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.ToString.html": {
    "href": "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.Version.html": {
    "href": "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public override int Version { get; set; } Property Value Type Description int Overrides AuraPropertiesBase.Version Implements IHasVersion.Version"
  },
  "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.html": {
    "href": "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.html",
    "title": "Class EmptyAuraTriggerProperties | EyeAuras Docs",
    "keywords": "Class EmptyAuraTriggerProperties Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase EmptyAuraTriggerProperties Implements IEquatable<AuraPropertiesBase> IEquatable<AuraTriggerPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<EmptyAuraTriggerProperties> Inherited Members AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax public sealed record EmptyAuraTriggerProperties : AuraTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IEquatable<AuraTriggerPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<EmptyAuraTriggerProperties> Constructors Name Description EmptyAuraTriggerProperties() Properties Name Description EqualityContract Version Methods Name Description Equals(AuraTriggerPropertiesBase?) Equals(EmptyAuraTriggerProperties?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(EmptyAuraTriggerProperties?, EmptyAuraTriggerProperties?) operator !=(EmptyAuraTriggerProperties?, EmptyAuraTriggerProperties?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(EmptyAuraTriggerProperties?, EmptyAuraTriggerProperties?) Declaration public static bool operator ==(EmptyAuraTriggerProperties? left, EmptyAuraTriggerProperties? right) Parameters Type Name Description EmptyAuraTriggerProperties left EmptyAuraTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Triggers.EmptyAuraTriggerProperties.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(EmptyAuraTriggerProperties?, EmptyAuraTriggerProperties?) Declaration public static bool operator !=(EmptyAuraTriggerProperties? left, EmptyAuraTriggerProperties? right) Parameters Type Name Description EmptyAuraTriggerProperties left EmptyAuraTriggerProperties right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTrigger.ActivationProgress.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTrigger.ActivationProgress.html",
    "title": "Property ActivationProgress | EyeAuras Docs",
    "keywords": "Property ActivationProgress ActivationProgress Declaration double ActivationProgress { get; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTrigger.ActivationTimeout.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTrigger.ActivationTimeout.html",
    "title": "Property ActivationTimeout | EyeAuras Docs",
    "keywords": "Property ActivationTimeout ActivationTimeout Declaration TimeSpan ActivationTimeout { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTrigger.DeactivationTimeout.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTrigger.DeactivationTimeout.html",
    "title": "Property DeactivationTimeout | EyeAuras Docs",
    "keywords": "Property DeactivationTimeout DeactivationTimeout Declaration TimeSpan DeactivationTimeout { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTrigger.EnableAdvancedSettings.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTrigger.EnableAdvancedSettings.html",
    "title": "Property EnableAdvancedSettings | EyeAuras Docs",
    "keywords": "Property EnableAdvancedSettings EnableAdvancedSettings Declaration bool EnableAdvancedSettings { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTrigger.IsActive.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTrigger.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Indicates whether Trigger state IsActive / NOT Active / Unknown(e.g. disabled, not fully ready yet or underlying resource is not available) Declaration bool? IsActive { get; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTrigger.IsEnabled.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTrigger.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Indicates whether Trigger is enabled or disabled, for disabled triggers IsActive is expected to be set to null Declaration bool IsEnabled { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTrigger.IsIgnored.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTrigger.IsIgnored.html",
    "title": "Property IsIgnored | EyeAuras Docs",
    "keywords": "Property IsIgnored IsIgnored Indicates whether this Trigger is ignored for all checks in the program or not Declaration bool IsIgnored { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTrigger.IsInverted.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTrigger.IsInverted.html",
    "title": "Property IsInverted | EyeAuras Docs",
    "keywords": "Property IsInverted IsInverted Indicates whether IsActive should be Inverted or not for the final result Respected by ComplexAuraTrigger Declaration bool IsInverted { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTrigger.NextIsActive.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTrigger.NextIsActive.html",
    "title": "Property NextIsActive | EyeAuras Docs",
    "keywords": "Property NextIsActive NextIsActive Declaration bool? NextIsActive { get; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTrigger.TimeLeftTillNextValue.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTrigger.TimeLeftTillNextValue.html",
    "title": "Property TimeLeftTillNextValue | EyeAuras Docs",
    "keywords": "Property TimeLeftTillNextValue TimeLeftTillNextValue Declaration TimeSpan? TimeLeftTillNextValue { get; } Property Value Type Description TimeSpan?"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTrigger.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTrigger.html",
    "title": "Interface IAuraTrigger | EyeAuras Docs",
    "keywords": "Interface IAuraTrigger Inherited Members IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax public interface IAuraTrigger : IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description ActivationProgress ActivationTimeout DeactivationTimeout EnableAdvancedSettings IsActive Indicates whether Trigger state IsActive / NOT Active / Unknown(e.g. disabled, not fully ready yet or underlying resource is not available) IsEnabled Indicates whether Trigger is enabled or disabled, for disabled triggers IsActive is expected to be set to null IsIgnored Indicates whether this Trigger is ignored for all checks in the program or not IsInverted Indicates whether IsActive should be Inverted or not for the final result Respected by ComplexAuraTrigger NextIsActive TimeLeftTillNextValue Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTriggerProperties.ActivationTimeout.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTriggerProperties.ActivationTimeout.html",
    "title": "Property ActivationTimeout | EyeAuras Docs",
    "keywords": "Property ActivationTimeout ActivationTimeout Period of time that must pass before trigger will become Active even if all conditions are met Declaration TimeSpan ActivationTimeout { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTriggerProperties.DeactivationTimeout.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTriggerProperties.DeactivationTimeout.html",
    "title": "Property DeactivationTimeout | EyeAuras Docs",
    "keywords": "Property DeactivationTimeout DeactivationTimeout Period of time that must pass before trigger will become Inactive even if all conditions are met Declaration TimeSpan DeactivationTimeout { get; set; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTriggerProperties.IsIgnored.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTriggerProperties.IsIgnored.html",
    "title": "Property IsIgnored | EyeAuras Docs",
    "keywords": "Property IsIgnored IsIgnored Indicates whether this Trigger is ignored for all checks in the program or not Declaration bool IsIgnored { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTriggerProperties.IsInverted.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTriggerProperties.IsInverted.html",
    "title": "Property IsInverted | EyeAuras Docs",
    "keywords": "Property IsInverted IsInverted Indicates whether this trigger should be treated as inverted or not Declaration bool IsInverted { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.IAuraTriggerProperties.html": {
    "href": "api/EyeAuras.Shared.Triggers.IAuraTriggerProperties.html",
    "title": "Interface IAuraTriggerProperties | EyeAuras Docs",
    "keywords": "Interface IAuraTriggerProperties Inherited Members IAuraProperties.Bindings IHasVersion.Version ICanSetId.Id Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.Metadata.dll Syntax public interface IAuraTriggerProperties : IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId Properties Name Description ActivationTimeout Period of time that must pass before trigger will become Active even if all conditions are met DeactivationTimeout Period of time that must pass before trigger will become Inactive even if all conditions are met IsIgnored Indicates whether this Trigger is ignored for all checks in the program or not IsInverted Indicates whether this trigger should be treated as inverted or not Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Triggers.IComplexAuraTrigger.Add.html": {
    "href": "api/EyeAuras.Shared.Triggers.IComplexAuraTrigger.Add.html",
    "title": "Method Add | EyeAuras Docs",
    "keywords": "Method Add Add(IAuraTrigger) Declaration void Add(IAuraTrigger trigger) Parameters Type Name Description IAuraTrigger trigger"
  },
  "api/EyeAuras.Shared.Triggers.IComplexAuraTrigger.ConditionType.html": {
    "href": "api/EyeAuras.Shared.Triggers.IComplexAuraTrigger.ConditionType.html",
    "title": "Property ConditionType | EyeAuras Docs",
    "keywords": "Property ConditionType ConditionType Declaration AuraEvaluatorConditionType ConditionType { get; set; } Property Value Type Description AuraEvaluatorConditionType"
  },
  "api/EyeAuras.Shared.Triggers.IComplexAuraTrigger.Remove.html": {
    "href": "api/EyeAuras.Shared.Triggers.IComplexAuraTrigger.Remove.html",
    "title": "Method Remove | EyeAuras Docs",
    "keywords": "Method Remove Remove(IAuraTrigger) Declaration bool Remove(IAuraTrigger trigger) Parameters Type Name Description IAuraTrigger trigger Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.IComplexAuraTrigger.html": {
    "href": "api/EyeAuras.Shared.Triggers.IComplexAuraTrigger.html",
    "title": "Interface IComplexAuraTrigger | EyeAuras Docs",
    "keywords": "Interface IComplexAuraTrigger Inherited Members IObservableListEx<IAuraTrigger>.Collection IEnumerable<IAuraTrigger>.GetEnumerator() INotifyCollectionChanged.CollectionChanged IAuraTrigger.IsIgnored IAuraTrigger.IsInverted IAuraTrigger.IsActive IAuraTrigger.IsEnabled IAuraTrigger.TimeLeftTillNextValue IAuraTrigger.ActivationTimeout IAuraTrigger.DeactivationTimeout IAuraTrigger.ActivationProgress IAuraTrigger.NextIsActive IAuraTrigger.EnableAdvancedSettings IAuraEntity.NameSuffix IAuraObject.AddOrUpdateBinding(AuraBindingProperties) IAuraObject.ResolveBinding(string) IAuraObject.Properties IBindableReactiveObject.RemoveBinding(string) IBindableReactiveObject.RemoveBinding(IReactiveBinding) IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) IBindableReactiveObject.ClearBindings() IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) IBindableReactiveObject.ObjectId IBindableReactiveObject.HasBindings IBindableReactiveObject.Bindings IBindableReactiveObject.BindingsList IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasId.Id ICanSetContext.Context IHasName.Name IHasDescription.Description Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax public interface IComplexAuraTrigger : IComplexAuraList<IAuraTrigger>, ISourceListEx<IAuraTrigger>, ISourceList<IAuraTrigger>, IObservableListEx<IAuraTrigger>, IObservableList<IAuraTrigger>, IEnumerable<IAuraTrigger>, IEnumerable, INotifyCollectionChanged, IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription Properties Name Description ConditionType Methods Name Description Add(IAuraTrigger) Remove(IAuraTrigger) Extension Methods ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Triggers.LegacyAuraTriggerBase-1.-ctor.html": {
    "href": "api/EyeAuras.Shared.Triggers.LegacyAuraTriggerBase-1.-ctor.html",
    "title": "Constructor LegacyAuraTriggerBase | EyeAuras Docs",
    "keywords": "Constructor LegacyAuraTriggerBase LegacyAuraTriggerBase() Declaration protected LegacyAuraTriggerBase()"
  },
  "api/EyeAuras.Shared.Triggers.LegacyAuraTriggerBase-1.CreateTriggerEventSource.html": {
    "href": "api/EyeAuras.Shared.Triggers.LegacyAuraTriggerBase-1.CreateTriggerEventSource.html",
    "title": "Method CreateTriggerEventSource | EyeAuras Docs",
    "keywords": "Method CreateTriggerEventSource CreateTriggerEventSource() Declaration protected override sealed IObservable<bool?> CreateTriggerEventSource() Returns Type Description IObservable<bool?> Overrides AuraTriggerBase<TAuraProperties>.CreateTriggerEventSource()"
  },
  "api/EyeAuras.Shared.Triggers.LegacyAuraTriggerBase-1.TriggerValue.html": {
    "href": "api/EyeAuras.Shared.Triggers.LegacyAuraTriggerBase-1.TriggerValue.html",
    "title": "Property TriggerValue | EyeAuras Docs",
    "keywords": "Property TriggerValue TriggerValue Declaration public bool? TriggerValue { get; set; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Triggers.LegacyAuraTriggerBase-1.html": {
    "href": "api/EyeAuras.Shared.Triggers.LegacyAuraTriggerBase-1.html",
    "title": "Class LegacyAuraTriggerBase<TAuraProperties> | EyeAuras Docs",
    "keywords": "Class LegacyAuraTriggerBase<TAuraProperties> Inheritance object DisposableReactiveObject BindableReactiveObject AuraObjectBase AuraObjectBase<TAuraProperties> AuraTriggerBase<TAuraProperties> LegacyAuraTriggerBase<TAuraProperties> ComplexAuraTrigger<T> MessageSubscriptionTriggerBase<TProperties, TMessage> Implements IAuraObject<TAuraProperties> IAuraTrigger IAuraEntity IAuraObject IBindableReactiveObject IDisposable INotifyPropertyChanged IHasId ICanSetContext IHasContext IHasName IHasDescription Inherited Members AuraTriggerBase<TAuraProperties>.GetMinIsActiveDelay() AuraTriggerBase<TAuraProperties>.VisitLoad(TAuraProperties) AuraTriggerBase<TAuraProperties>.VisitSave(TAuraProperties) AuraTriggerBase<TAuraProperties>.FormatToString(ToStringBuilder) AuraTriggerBase<TAuraProperties>.NameSuffix AuraTriggerBase<TAuraProperties>.NextIsActiveTimestamp AuraTriggerBase<TAuraProperties>.Name AuraTriggerBase<TAuraProperties>.Description AuraTriggerBase<TAuraProperties>.EnableAdvancedSettings AuraTriggerBase<TAuraProperties>.IsInverted AuraTriggerBase<TAuraProperties>.IsActive AuraTriggerBase<TAuraProperties>.IsEnabled AuraTriggerBase<TAuraProperties>.IsIgnored AuraTriggerBase<TAuraProperties>.NextIsActive AuraTriggerBase<TAuraProperties>.ActivationTimeout AuraTriggerBase<TAuraProperties>.DeactivationTimeout AuraTriggerBase<TAuraProperties>.TimeLeftTillNextValue AuraTriggerBase<TAuraProperties>.ActivationProgress AuraObjectBase<TAuraProperties>.SaveProperties() AuraObjectBase<TAuraProperties>.LoadProperties(IAuraProperties) AuraObjectBase<TAuraProperties>.Properties AuraObjectBase.RaisePropertiesWhen<T>(IObservableList<T>) AuraObjectBase.RaisePropertiesWhen<T, TKey>(ISourceCache<T, TKey>) AuraObjectBase.RaisePropertiesWhen<TCollection, T>(TCollection) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollectionEx<T>) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollection<T>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>, CompositeDisposable) AuraObjectBase.RaisePropertiesWhen<T>(IObservable<T>) AuraObjectBase.RaisePropertiesWhen<T>(params IObservable<T>[]) AuraObjectBase.RaisePropertiesWhenAny<T>(T, params Expression<Func<T, object>>[]) AuraObjectBase.RaisePropertiesWhen<T>(params IAuraObject<T>[]) AuraObjectBase.ResolveBinding(string) AuraObjectBase.AddOrUpdateBinding(AuraBindingProperties) AuraObjectBase.IsLoadingProperties AuraObjectBase.IsSavingProperties AuraObjectBase.Context AuraObjectBase.Id BindableReactiveObject.RemoveBinding(string) BindableReactiveObject.ClearBindings() BindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) BindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) BindableReactiveObject.RemoveBinding(IReactiveBinding) BindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) BindableReactiveObject.Log BindableReactiveObject.ObjectId BindableReactiveObject.HasBindings BindableReactiveObject.Bindings BindableReactiveObject.BindingsList object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax public abstract class LegacyAuraTriggerBase<TAuraProperties> : AuraTriggerBase<TAuraProperties>, IAuraObject<TAuraProperties>, IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription where TAuraProperties : class, IAuraTriggerProperties, new() Type Parameters Name Description TAuraProperties Constructors Name Description LegacyAuraTriggerBase() Properties Name Description TriggerValue Methods Name Description CreateTriggerEventSource() Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.ActivationTextEvaluator.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.ActivationTextEvaluator.html",
    "title": "Property ActivationTextEvaluator | EyeAuras Docs",
    "keywords": "Property ActivationTextEvaluator ActivationTextEvaluator Declaration public ISwitchableTextEvaluatorViewModel ActivationTextEvaluator { get; } Property Value Type Description ISwitchableTextEvaluatorViewModel"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.AuraMessages.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.AuraMessages.html",
    "title": "Property AuraMessages | EyeAuras Docs",
    "keywords": "Property AuraMessages AuraMessages Declaration public IObservableList<AuraTextMessage> AuraMessages { get; } Property Value Type Description IObservableList<AuraTextMessage>"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.ClearHistory.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.ClearHistory.html",
    "title": "Method ClearHistory | EyeAuras Docs",
    "keywords": "Method ClearHistory ClearHistory() Declaration public void ClearHistory()"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.Convert.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.Convert.html",
    "title": "Method Convert | EyeAuras Docs",
    "keywords": "Method Convert Convert(TMessage) Declaration protected abstract AuraTextMessage Convert(TMessage message) Parameters Type Name Description TMessage message Returns Type Description AuraTextMessage"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.DeactivateAutomatically.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.DeactivateAutomatically.html",
    "title": "Property DeactivateAutomatically | EyeAuras Docs",
    "keywords": "Property DeactivateAutomatically DeactivateAutomatically Declaration public bool DeactivateAutomatically { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.DeactivationTextEvaluator.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.DeactivationTextEvaluator.html",
    "title": "Property DeactivationTextEvaluator | EyeAuras Docs",
    "keywords": "Property DeactivationTextEvaluator DeactivationTextEvaluator Declaration public ISwitchableTextEvaluatorViewModel DeactivationTextEvaluator { get; } Property Value Type Description ISwitchableTextEvaluatorViewModel"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.HandleMessage.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.HandleMessage.html",
    "title": "Method HandleMessage | EyeAuras Docs",
    "keywords": "Method HandleMessage HandleMessage(TMessage) Declaration protected void HandleMessage(TMessage message) Parameters Type Name Description TMessage message"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.LastAuraMessage.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.LastAuraMessage.html",
    "title": "Property LastAuraMessage | EyeAuras Docs",
    "keywords": "Property LastAuraMessage LastAuraMessage Declaration public AuraTextMessage LastAuraMessage { get; protected set; } Property Value Type Description AuraTextMessage"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.LastMessage.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.LastMessage.html",
    "title": "Property LastMessage | EyeAuras Docs",
    "keywords": "Property LastMessage LastMessage Declaration public TMessage LastMessage { get; protected set; } Property Value Type Description TMessage"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.MessageThrottlingPeriod.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.MessageThrottlingPeriod.html",
    "title": "Property MessageThrottlingPeriod | EyeAuras Docs",
    "keywords": "Property MessageThrottlingPeriod MessageThrottlingPeriod Declaration public TimeSpan MessageThrottlingPeriod { get; } Property Value Type Description TimeSpan"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.Messages.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.Messages.html",
    "title": "Property Messages | EyeAuras Docs",
    "keywords": "Property Messages Messages Declaration public IObservableList<TMessage> Messages { get; } Property Value Type Description IObservableList<TMessage>"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.VisitLoad.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.VisitLoad.html",
    "title": "Method VisitLoad | EyeAuras Docs",
    "keywords": "Method VisitLoad VisitLoad(TProperties) Declaration protected override void VisitLoad(TProperties source) Parameters Type Name Description TProperties source Overrides AuraTriggerBase<TProperties>.VisitLoad(TProperties)"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.VisitSave.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.VisitSave.html",
    "title": "Method VisitSave | EyeAuras Docs",
    "keywords": "Method VisitSave VisitSave(TProperties) Declaration protected override void VisitSave(TProperties target) Parameters Type Name Description TProperties target Overrides AuraTriggerBase<TProperties>.VisitSave(TProperties)"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerBase-2.html",
    "title": "Class MessageSubscriptionTriggerBase<TProperties, TMessage> | EyeAuras Docs",
    "keywords": "Class MessageSubscriptionTriggerBase<TProperties, TMessage> Inheritance object DisposableReactiveObject BindableReactiveObject AuraObjectBase AuraObjectBase<TProperties> AuraTriggerBase<TProperties> LegacyAuraTriggerBase<TProperties> MessageSubscriptionTriggerBase<TProperties, TMessage> Implements IAuraObject<TProperties> IAuraTrigger IAuraEntity IAuraObject IBindableReactiveObject IDisposable INotifyPropertyChanged IHasId ICanSetContext IHasContext IHasName IHasDescription Inherited Members LegacyAuraTriggerBase<TProperties>.CreateTriggerEventSource() LegacyAuraTriggerBase<TProperties>.TriggerValue AuraTriggerBase<TProperties>.GetMinIsActiveDelay() AuraTriggerBase<TProperties>.FormatToString(ToStringBuilder) AuraTriggerBase<TProperties>.NameSuffix AuraTriggerBase<TProperties>.NextIsActiveTimestamp AuraTriggerBase<TProperties>.Name AuraTriggerBase<TProperties>.Description AuraTriggerBase<TProperties>.EnableAdvancedSettings AuraTriggerBase<TProperties>.IsInverted AuraTriggerBase<TProperties>.IsActive AuraTriggerBase<TProperties>.IsEnabled AuraTriggerBase<TProperties>.IsIgnored AuraTriggerBase<TProperties>.NextIsActive AuraTriggerBase<TProperties>.ActivationTimeout AuraTriggerBase<TProperties>.DeactivationTimeout AuraTriggerBase<TProperties>.TimeLeftTillNextValue AuraTriggerBase<TProperties>.ActivationProgress AuraObjectBase<TProperties>.SaveProperties() AuraObjectBase<TProperties>.LoadProperties(IAuraProperties) AuraObjectBase<TProperties>.Properties AuraObjectBase.RaisePropertiesWhen<T>(IObservableList<T>) AuraObjectBase.RaisePropertiesWhen<T, TKey>(ISourceCache<T, TKey>) AuraObjectBase.RaisePropertiesWhen<TCollection, T>(TCollection) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollectionEx<T>) AuraObjectBase.RaisePropertiesWhen<T>(ObservableCollection<T>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>) AuraObjectBase.RaisePropertiesWhen(IObservable<string>, CompositeDisposable) AuraObjectBase.RaisePropertiesWhen<T>(IObservable<T>) AuraObjectBase.RaisePropertiesWhen<T>(params IObservable<T>[]) AuraObjectBase.RaisePropertiesWhenAny<T>(T, params Expression<Func<T, object>>[]) AuraObjectBase.RaisePropertiesWhen<T>(params IAuraObject<T>[]) AuraObjectBase.ResolveBinding(string) AuraObjectBase.AddOrUpdateBinding(AuraBindingProperties) AuraObjectBase.IsLoadingProperties AuraObjectBase.IsSavingProperties AuraObjectBase.Context AuraObjectBase.Id BindableReactiveObject.RemoveBinding(string) BindableReactiveObject.ClearBindings() BindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) BindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) BindableReactiveObject.RemoveBinding(IReactiveBinding) BindableReactiveObject.AddOrUpdateBinding(IReactiveBinding) BindableReactiveObject.Log BindableReactiveObject.ObjectId BindableReactiveObject.HasBindings BindableReactiveObject.Bindings BindableReactiveObject.BindingsList object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax public abstract class MessageSubscriptionTriggerBase<TProperties, TMessage> : LegacyAuraTriggerBase<TProperties>, IAuraObject<TProperties>, IAuraTrigger, IAuraEntity, IAuraObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged, IHasId, ICanSetContext, IHasContext, IHasName, IHasDescription where TProperties : MessageSubscriptionTriggerPropertiesBase, IAuraTriggerProperties, new() where TMessage : class Type Parameters Name Description TProperties TMessage Properties Name Description ActivationTextEvaluator AuraMessages DeactivateAutomatically DeactivationTextEvaluator LastAuraMessage LastMessage MessageThrottlingPeriod Messages Methods Name Description ClearHistory() Convert(TMessage) HandleMessage(TMessage) VisitLoad(TProperties) VisitSave(TProperties) Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.-Clone--.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override abstract MessageSubscriptionTriggerPropertiesBase <Clone>$() Returns Type Description MessageSubscriptionTriggerPropertiesBase Overrides AuraTriggerPropertiesBase.<Clone>$()"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.-ctor.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.-ctor.html",
    "title": "Constructor MessageSubscriptionTriggerPropertiesBase | EyeAuras Docs",
    "keywords": "Constructor MessageSubscriptionTriggerPropertiesBase MessageSubscriptionTriggerPropertiesBase(MessageSubscriptionTriggerPropertiesBase) Declaration protected MessageSubscriptionTriggerPropertiesBase(MessageSubscriptionTriggerPropertiesBase original) Parameters Type Name Description MessageSubscriptionTriggerPropertiesBase original MessageSubscriptionTriggerPropertiesBase() Declaration protected MessageSubscriptionTriggerPropertiesBase()"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.ActivationEvaluatorType.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.ActivationEvaluatorType.html",
    "title": "Property ActivationEvaluatorType | EyeAuras Docs",
    "keywords": "Property ActivationEvaluatorType ActivationEvaluatorType Declaration public TextEvaluatorType ActivationEvaluatorType { get; set; } Property Value Type Description TextEvaluatorType"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.ActivationIgnoreCase.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.ActivationIgnoreCase.html",
    "title": "Property ActivationIgnoreCase | EyeAuras Docs",
    "keywords": "Property ActivationIgnoreCase ActivationIgnoreCase Declaration public bool ActivationIgnoreCase { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.ActivationText.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.ActivationText.html",
    "title": "Property ActivationText | EyeAuras Docs",
    "keywords": "Property ActivationText ActivationText Declaration public string ActivationText { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.DeactivateAutomatically.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.DeactivateAutomatically.html",
    "title": "Property DeactivateAutomatically | EyeAuras Docs",
    "keywords": "Property DeactivateAutomatically DeactivateAutomatically Declaration public bool DeactivateAutomatically { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.DeactivationEvaluatorType.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.DeactivationEvaluatorType.html",
    "title": "Property DeactivationEvaluatorType | EyeAuras Docs",
    "keywords": "Property DeactivationEvaluatorType DeactivationEvaluatorType Declaration public TextEvaluatorType DeactivationEvaluatorType { get; set; } Property Value Type Description TextEvaluatorType"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.DeactivationIgnoreCase.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.DeactivationIgnoreCase.html",
    "title": "Property DeactivationIgnoreCase | EyeAuras Docs",
    "keywords": "Property DeactivationIgnoreCase DeactivationIgnoreCase Declaration public bool DeactivationIgnoreCase { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.DeactivationText.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.DeactivationText.html",
    "title": "Property DeactivationText | EyeAuras Docs",
    "keywords": "Property DeactivationText DeactivationText Declaration public string DeactivationText { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.EqualityContract.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides AuraTriggerPropertiesBase.EqualityContract"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.Equals.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(object?) Equals(AuraTriggerPropertiesBase?) Declaration public override sealed bool Equals(AuraTriggerPropertiesBase? other) Parameters Type Name Description AuraTriggerPropertiesBase other Returns Type Description bool Overrides AuraTriggerPropertiesBase.Equals(AuraTriggerPropertiesBase?) Equals(MessageSubscriptionTriggerPropertiesBase?) Declaration public virtual bool Equals(MessageSubscriptionTriggerPropertiesBase? other) Parameters Type Name Description MessageSubscriptionTriggerPropertiesBase other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.GetHashCode.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides AuraTriggerPropertiesBase.GetHashCode()"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.PrintMembers.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides AuraTriggerPropertiesBase.PrintMembers(StringBuilder)"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.ToString.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides AuraTriggerPropertiesBase.ToString()"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.html",
    "title": "Class MessageSubscriptionTriggerPropertiesBase | EyeAuras Docs",
    "keywords": "Class MessageSubscriptionTriggerPropertiesBase Inheritance object AuraPropertiesBase AuraTriggerPropertiesBase MessageSubscriptionTriggerPropertiesBase TelegramSubscriptionTriggerProperties MessageSubscriptionTriggerProperties Implements IEquatable<AuraPropertiesBase> IAuraTriggerProperties IAuraProperties IPoeEyeConfigVersioned IPoeEyeConfig IHasVersion ICanSetId IHasId IEquatable<AuraTriggerPropertiesBase> IEquatable<MessageSubscriptionTriggerPropertiesBase> Inherited Members AuraTriggerPropertiesBase.Equals(AuraPropertiesBase) AuraTriggerPropertiesBase.IsIgnored AuraTriggerPropertiesBase.IsInverted AuraTriggerPropertiesBase.ActivationTimeout AuraTriggerPropertiesBase.DeactivationTimeout AuraPropertiesBase.Id AuraPropertiesBase.Bindings AuraPropertiesBase.Version object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax public abstract record MessageSubscriptionTriggerPropertiesBase : AuraTriggerPropertiesBase, IEquatable<AuraPropertiesBase>, IAuraTriggerProperties, IAuraProperties, IPoeEyeConfigVersioned, IPoeEyeConfig, IHasVersion, ICanSetId, IHasId, IEquatable<AuraTriggerPropertiesBase>, IEquatable<MessageSubscriptionTriggerPropertiesBase> Constructors Name Description MessageSubscriptionTriggerPropertiesBase() MessageSubscriptionTriggerPropertiesBase(MessageSubscriptionTriggerPropertiesBase) Properties Name Description ActivationEvaluatorType ActivationIgnoreCase ActivationText DeactivateAutomatically DeactivationEvaluatorType DeactivationIgnoreCase DeactivationText EqualityContract Methods Name Description Equals(AuraTriggerPropertiesBase?) Equals(MessageSubscriptionTriggerPropertiesBase?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(MessageSubscriptionTriggerPropertiesBase?, MessageSubscriptionTriggerPropertiesBase?) operator !=(MessageSubscriptionTriggerPropertiesBase?, MessageSubscriptionTriggerPropertiesBase?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.op_Equality.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(MessageSubscriptionTriggerPropertiesBase?, MessageSubscriptionTriggerPropertiesBase?) Declaration public static bool operator ==(MessageSubscriptionTriggerPropertiesBase? left, MessageSubscriptionTriggerPropertiesBase? right) Parameters Type Name Description MessageSubscriptionTriggerPropertiesBase left MessageSubscriptionTriggerPropertiesBase right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.op_Inequality.html": {
    "href": "api/EyeAuras.Shared.Triggers.MessageSubscriptionTriggerPropertiesBase.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(MessageSubscriptionTriggerPropertiesBase?, MessageSubscriptionTriggerPropertiesBase?) Declaration public static bool operator !=(MessageSubscriptionTriggerPropertiesBase? left, MessageSubscriptionTriggerPropertiesBase? right) Parameters Type Name Description MessageSubscriptionTriggerPropertiesBase left MessageSubscriptionTriggerPropertiesBase right Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Triggers.TriggerEventData.Message.html": {
    "href": "api/EyeAuras.Shared.Triggers.TriggerEventData.Message.html",
    "title": "Property Message | EyeAuras Docs",
    "keywords": "Property Message Message Declaration public string Message { get; init; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Triggers.TriggerEventData.Timestamp.html": {
    "href": "api/EyeAuras.Shared.Triggers.TriggerEventData.Timestamp.html",
    "title": "Property Timestamp | EyeAuras Docs",
    "keywords": "Property Timestamp Timestamp Declaration public DateTimeOffset Timestamp { get; init; } Property Value Type Description DateTimeOffset"
  },
  "api/EyeAuras.Shared.Triggers.TriggerEventData.ToString.html": {
    "href": "api/EyeAuras.Shared.Triggers.TriggerEventData.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/EyeAuras.Shared.Triggers.TriggerEventData.Value.html": {
    "href": "api/EyeAuras.Shared.Triggers.TriggerEventData.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration public bool? Value { get; init; } Property Value Type Description bool?"
  },
  "api/EyeAuras.Shared.Triggers.TriggerEventData.html": {
    "href": "api/EyeAuras.Shared.Triggers.TriggerEventData.html",
    "title": "Struct TriggerEventData | EyeAuras Docs",
    "keywords": "Struct TriggerEventData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: EyeAuras.Shared.Triggers Assembly: EyeAuras.Shared.dll Syntax public readonly struct TriggerEventData Properties Name Description Message Timestamp Value Methods Name Description ToString() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/EyeAuras.Shared.Triggers.html": {
    "href": "api/EyeAuras.Shared.Triggers.html",
    "title": "Namespace EyeAuras.Shared.Triggers | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Shared.Triggers Classes AuraTextMessage AuraTriggerBase<TAuraProperties> AuraTriggerPropertiesBase ComplexAuraTrigger ComplexAuraTrigger<T> CoreAuraTriggerBase<TAuraProperties> CoreAuraTriggerBase<TAuraProperties>.TriggerCoreBase EmptyAuraTriggerProperties LegacyAuraTriggerBase<TAuraProperties> MessageSubscriptionTriggerBase<TProperties, TMessage> MessageSubscriptionTriggerPropertiesBase Structs TriggerEventData Interfaces IAuraTrigger IAuraTriggerProperties IComplexAuraTrigger Enums AuraTextMessageStatus"
  },
  "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.-ctor.html": {
    "href": "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.-ctor.html",
    "title": "Constructor DefaultVariableEditorBase | EyeAuras Docs",
    "keywords": "Constructor DefaultVariableEditorBase DefaultVariableEditorBase(string) Declaration protected DefaultVariableEditorBase(string variableName) Parameters Type Name Description string variableName"
  },
  "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.CacheAccessor.html": {
    "href": "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.CacheAccessor.html",
    "title": "Property CacheAccessor | EyeAuras Docs",
    "keywords": "Property CacheAccessor CacheAccessor Declaration public SourceCacheAccessor<AuraVariable, string> CacheAccessor { get; } Property Value Type Description SourceCacheAccessor<AuraVariable, string>"
  },
  "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.Description.html": {
    "href": "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.Description.html",
    "title": "Property Description | EyeAuras Docs",
    "keywords": "Property Description Description Declaration public abstract string Description { get; } Property Value Type Description string Implements IDefaultVariableEditor.Description"
  },
  "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.Folder.html": {
    "href": "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.Folder.html",
    "title": "Property Folder | EyeAuras Docs",
    "keywords": "Property Folder Folder Declaration public IFolder Folder { get; set; } Property Value Type Description IFolder Implements IDefaultVariableEditor.Folder"
  },
  "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.IsEnabled.html": {
    "href": "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description bool Implements IDefaultVariableEditor.IsEnabled"
  },
  "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.Name.html": {
    "href": "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration public abstract string Name { get; } Property Value Type Description string Implements IDefaultVariableEditor.Name"
  },
  "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.Priority.html": {
    "href": "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.Priority.html",
    "title": "Property Priority | EyeAuras Docs",
    "keywords": "Property Priority Priority Declaration public int Priority { get; protected set; } Property Value Type Description int Implements IDefaultVariableEditor.Priority"
  },
  "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.VariableName.html": {
    "href": "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.VariableName.html",
    "title": "Property VariableName | EyeAuras Docs",
    "keywords": "Property VariableName VariableName Declaration public string VariableName { get; } Property Value Type Description string Implements IDefaultVariableEditor.VariableName"
  },
  "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.html": {
    "href": "api/EyeAuras.Shared.Variables.DefaultVariableEditorBase.html",
    "title": "Class DefaultVariableEditorBase | EyeAuras Docs",
    "keywords": "Class DefaultVariableEditorBase Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger DefaultVariableEditorBase Implements IDefaultVariableEditor IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Variables Assembly: EyeAuras.Shared.dll Syntax public abstract class DefaultVariableEditorBase : DisposableReactiveObjectWithLogger, IDefaultVariableEditor, IDisposable, INotifyPropertyChanged Constructors Name Description DefaultVariableEditorBase(string) Properties Name Description CacheAccessor Description Folder IsEnabled Name Priority VariableName Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Variables.IDefaultVariableEditor.Description.html": {
    "href": "api/EyeAuras.Shared.Variables.IDefaultVariableEditor.Description.html",
    "title": "Property Description | EyeAuras Docs",
    "keywords": "Property Description Description Declaration string Description { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Variables.IDefaultVariableEditor.Folder.html": {
    "href": "api/EyeAuras.Shared.Variables.IDefaultVariableEditor.Folder.html",
    "title": "Property Folder | EyeAuras Docs",
    "keywords": "Property Folder Folder Declaration IFolder Folder { get; set; } Property Value Type Description IFolder"
  },
  "api/EyeAuras.Shared.Variables.IDefaultVariableEditor.IsEnabled.html": {
    "href": "api/EyeAuras.Shared.Variables.IDefaultVariableEditor.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Declaration bool IsEnabled { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.Variables.IDefaultVariableEditor.Name.html": {
    "href": "api/EyeAuras.Shared.Variables.IDefaultVariableEditor.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration string Name { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Variables.IDefaultVariableEditor.Priority.html": {
    "href": "api/EyeAuras.Shared.Variables.IDefaultVariableEditor.Priority.html",
    "title": "Property Priority | EyeAuras Docs",
    "keywords": "Property Priority Priority Declaration int Priority { get; } Property Value Type Description int"
  },
  "api/EyeAuras.Shared.Variables.IDefaultVariableEditor.VariableName.html": {
    "href": "api/EyeAuras.Shared.Variables.IDefaultVariableEditor.VariableName.html",
    "title": "Property VariableName | EyeAuras Docs",
    "keywords": "Property VariableName VariableName Declaration string VariableName { get; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.Variables.IDefaultVariableEditor.html": {
    "href": "api/EyeAuras.Shared.Variables.IDefaultVariableEditor.html",
    "title": "Interface IDefaultVariableEditor | EyeAuras Docs",
    "keywords": "Interface IDefaultVariableEditor Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.Variables Assembly: EyeAuras.Shared.dll Syntax public interface IDefaultVariableEditor : IDisposable, INotifyPropertyChanged Properties Name Description Description Folder IsEnabled Name Priority VariableName Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.Variables.VariablesUtils.DefaultVariableNameToPropertyPath.html": {
    "href": "api/EyeAuras.Shared.Variables.VariablesUtils.DefaultVariableNameToPropertyPath.html",
    "title": "Method DefaultVariableNameToPropertyPath | EyeAuras Docs",
    "keywords": "Method DefaultVariableNameToPropertyPath DefaultVariableNameToPropertyPath(string) Declaration public static string DefaultVariableNameToPropertyPath(string variableName) Parameters Type Name Description string variableName Returns Type Description string"
  },
  "api/EyeAuras.Shared.Variables.VariablesUtils.DefaultVariablePrefix.html": {
    "href": "api/EyeAuras.Shared.Variables.VariablesUtils.DefaultVariablePrefix.html",
    "title": "Field DefaultVariablePrefix | EyeAuras Docs",
    "keywords": "Field DefaultVariablePrefix Namespace: EyeAuras.Shared.Variables Assembly: EyeAuras.Shared.dll Syntax public const string DefaultVariablePrefix = \"default.\" Returns Type Description string"
  },
  "api/EyeAuras.Shared.Variables.VariablesUtils.IsDefaultVariableName.html": {
    "href": "api/EyeAuras.Shared.Variables.VariablesUtils.IsDefaultVariableName.html",
    "title": "Method IsDefaultVariableName | EyeAuras Docs",
    "keywords": "Method IsDefaultVariableName IsDefaultVariableName(string) Declaration public static bool IsDefaultVariableName(string variableName) Parameters Type Name Description string variableName Returns Type Description bool"
  },
  "api/EyeAuras.Shared.Variables.VariablesUtils.PropertyPathToDefaultVariableName.html": {
    "href": "api/EyeAuras.Shared.Variables.VariablesUtils.PropertyPathToDefaultVariableName.html",
    "title": "Method PropertyPathToDefaultVariableName | EyeAuras Docs",
    "keywords": "Method PropertyPathToDefaultVariableName PropertyPathToDefaultVariableName(string) Declaration public static string PropertyPathToDefaultVariableName(string propertyPath) Parameters Type Name Description string propertyPath Returns Type Description string"
  },
  "api/EyeAuras.Shared.Variables.VariablesUtils.html": {
    "href": "api/EyeAuras.Shared.Variables.VariablesUtils.html",
    "title": "Class VariablesUtils | EyeAuras Docs",
    "keywords": "Class VariablesUtils Inheritance object VariablesUtils Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: EyeAuras.Shared.Variables Assembly: EyeAuras.Shared.dll Syntax public static class VariablesUtils Fields Name Description DefaultVariablePrefix Methods Name Description DefaultVariableNameToPropertyPath(string) IsDefaultVariableName(string) PropertyPathToDefaultVariableName(string)"
  },
  "api/EyeAuras.Shared.Variables.html": {
    "href": "api/EyeAuras.Shared.Variables.html",
    "title": "Namespace EyeAuras.Shared.Variables | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Shared.Variables Classes DefaultVariableEditorBase VariablesUtils Interfaces IDefaultVariableEditor"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraListStateEvaluatorEditor.AddAuraButtonText.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraListStateEvaluatorEditor.AddAuraButtonText.html",
    "title": "Property AddAuraButtonText | EyeAuras Docs",
    "keywords": "Property AddAuraButtonText AddAuraButtonText Declaration string AddAuraButtonText { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraListStateEvaluatorEditor.ShowLinks.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraListStateEvaluatorEditor.ShowLinks.html",
    "title": "Property ShowLinks | EyeAuras Docs",
    "keywords": "Property ShowLinks ShowLinks Declaration bool ShowLinks { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraListStateEvaluatorEditor.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraListStateEvaluatorEditor.html",
    "title": "Interface IAuraListStateEvaluatorEditor | EyeAuras Docs",
    "keywords": "Interface IAuraListStateEvaluatorEditor Inherited Members IAuraPropertiesEditor<IAuraListStateEvaluator>.Source IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged ICanSetContext.Context Namespace: EyeAuras.Shared.ViewModels Assembly: EyeAuras.Shared.dll Syntax public interface IAuraListStateEvaluatorEditor : IAuraPropertiesEditor<IAuraListStateEvaluator>, IAuraPropertiesEditor, IDisposable, INotifyPropertyChanged, ICanSetContext, IHasContext Properties Name Description AddAuraButtonText ShowLinks Extension Methods AuraModelExtensions.InheritContext<TTarget, TSource>(TTarget, TSource) AuraModelExtensions.WithContext<TTarget, TContext>(TTarget, TContext) AuraModelExtensions.WithContext<TTarget, TSrc, TContext>(TTarget, TSrc, Expression<Func<TSrc, TContext>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.AuraModelController.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.AuraModelController.html",
    "title": "Property AuraModelController | EyeAuras Docs",
    "keywords": "Property AuraModelController AuraModelController Declaration IAuraModelController AuraModelController { get; set; } Property Value Type Description IAuraModelController"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.BackgroundColor.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.BackgroundColor.html",
    "title": "Property BackgroundColor | EyeAuras Docs",
    "keywords": "Property BackgroundColor BackgroundColor Declaration Color BackgroundColor { get; set; } Property Value Type Description Color"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.BorderColor.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.BorderColor.html",
    "title": "Property BorderColor | EyeAuras Docs",
    "keywords": "Property BorderColor BorderColor Declaration Color BorderColor { get; set; } Property Value Type Description Color"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.BorderThickness.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.BorderThickness.html",
    "title": "Property BorderThickness | EyeAuras Docs",
    "keywords": "Property BorderThickness BorderThickness Declaration double BorderThickness { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.EnableHeader.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.EnableHeader.html",
    "title": "Property EnableHeader | EyeAuras Docs",
    "keywords": "Property EnableHeader EnableHeader Declaration bool EnableHeader { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.IsClickThrough.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.IsClickThrough.html",
    "title": "Property IsClickThrough | EyeAuras Docs",
    "keywords": "Property IsClickThrough IsClickThrough Declaration bool IsClickThrough { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.IsFocusable.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.IsFocusable.html",
    "title": "Property IsFocusable | EyeAuras Docs",
    "keywords": "Property IsFocusable IsFocusable Declaration bool IsFocusable { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.IsInitialized.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.IsInitialized.html",
    "title": "Property IsInitialized | EyeAuras Docs",
    "keywords": "Property IsInitialized IsInitialized Declaration bool IsInitialized { get; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.MaintainAspectRatio.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.MaintainAspectRatio.html",
    "title": "Property MaintainAspectRatio | EyeAuras Docs",
    "keywords": "Property MaintainAspectRatio MaintainAspectRatio Declaration bool MaintainAspectRatio { get; set; } Property Value Type Description bool"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.Overlay.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.Overlay.html",
    "title": "Property Overlay | EyeAuras Docs",
    "keywords": "Property Overlay Overlay Declaration IOverlayViewModel Overlay { get; set; } Property Value Type Description IOverlayViewModel"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.OverlayBounds.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.OverlayBounds.html",
    "title": "Property OverlayBounds | EyeAuras Docs",
    "keywords": "Property OverlayBounds OverlayBounds Declaration Rectangle OverlayBounds { get; set; } Property Value Type Description Rectangle"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.TargetAspectRatio.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.TargetAspectRatio.html",
    "title": "Property TargetAspectRatio | EyeAuras Docs",
    "keywords": "Property TargetAspectRatio TargetAspectRatio Declaration double? TargetAspectRatio { get; set; } Property Value Type Description double?"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.ThumbnailOpacity.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.ThumbnailOpacity.html",
    "title": "Property ThumbnailOpacity | EyeAuras Docs",
    "keywords": "Property ThumbnailOpacity ThumbnailOpacity Declaration double ThumbnailOpacity { get; set; } Property Value Type Description double"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.Title.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.Title.html",
    "title": "Property Title | EyeAuras Docs",
    "keywords": "Property Title Title Declaration string Title { get; set; } Property Value Type Description string"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraOverlayContent.html",
    "title": "Interface IAuraOverlayContent | EyeAuras Docs",
    "keywords": "Interface IAuraOverlayContent Represents view model for overlay content, could be processed on a separate scheduler Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.ViewModels Assembly: EyeAuras.Shared.dll Syntax public interface IAuraOverlayContent : IDisposable, INotifyPropertyChanged Properties Name Description AuraModelController BackgroundColor BorderColor BorderThickness EnableHeader IsClickThrough IsFocusable IsInitialized MaintainAspectRatio Overlay OverlayBounds TargetAspectRatio ThumbnailOpacity Title Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.ViewModels.IAuraVariablesEditor.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IAuraVariablesEditor.html",
    "title": "Interface IAuraVariablesEditor | EyeAuras Docs",
    "keywords": "Interface IAuraVariablesEditor Inherited Members IAuraPropertiesEditor<IHasVariables>.Source IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasName.Name Namespace: EyeAuras.Shared.ViewModels Assembly: EyeAuras.Shared.dll Syntax public interface IAuraVariablesEditor : IAuraPropertiesEditor<IHasVariables>, IAuraPropertiesEditor, IDisposable, INotifyPropertyChanged, IHasName Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.ViewModels.IWindowSelectorEditor.Source.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IWindowSelectorEditor.Source.html",
    "title": "Property Source | EyeAuras Docs",
    "keywords": "Property Source Source Declaration IWindowSelector Source { get; set; } Property Value Type Description IWindowSelector"
  },
  "api/EyeAuras.Shared.ViewModels.IWindowSelectorEditor.html": {
    "href": "api/EyeAuras.Shared.ViewModels.IWindowSelectorEditor.html",
    "title": "Interface IWindowSelectorEditor | EyeAuras Docs",
    "keywords": "Interface IWindowSelectorEditor Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: EyeAuras.Shared.ViewModels Assembly: EyeAuras.Shared.dll Syntax public interface IWindowSelectorEditor : IDisposable, INotifyPropertyChanged Properties Name Description Source Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/EyeAuras.Shared.ViewModels.html": {
    "href": "api/EyeAuras.Shared.ViewModels.html",
    "title": "Namespace EyeAuras.Shared.ViewModels | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Shared.ViewModels Interfaces IAuraListStateEvaluatorEditor IAuraOverlayContent Represents view model for overlay content, could be processed on a separate scheduler IAuraVariablesEditor IWindowSelectorEditor"
  },
  "api/EyeAuras.Shared.html": {
    "href": "api/EyeAuras.Shared.html",
    "title": "Namespace EyeAuras.Shared | EyeAuras Docs",
    "keywords": "Namespace EyeAuras.Shared Namespaces EyeAuras.Shared.Actions EyeAuras.Shared.Bindings EyeAuras.Shared.EntityListEditor EyeAuras.Shared.Model EyeAuras.Shared.Modularity EyeAuras.Shared.Overlays EyeAuras.Shared.Scaffolding EyeAuras.Shared.Services EyeAuras.Shared.Sharing.Services EyeAuras.Shared.Statistics EyeAuras.Shared.Triggers EyeAuras.Shared.Variables EyeAuras.Shared.ViewModels Classes ContextInheritor<TTarget, TSrc, TContext> ProxyAuraProperties Interfaces IAura IAuraEntity Represents aura object which has name and description IAuraObject IAuraObject<T> IAuraProperties IAuraPropertiesEditor IAuraPropertiesEditor<T> IBehaviorTree ICanBeArchived ICanSetContext ICanSetId ICanSetIndex ICanSetName ICanSetPath ICanSetTimestamp IComplexAuraList<T> IEyeItem Item in a program tree (folders, auras, etc) IEyeSharedServices Contains utility services which could be used to access program internals IFolder IHasAttachedWindow IHasAuraProperties<T> IHasBounds IHasContext IHasDescription IHasId IHasIndex IHasLinkedAuraIds IHasLinkedAuras IHasName IHasPath IHasTimestamp"
  },
  "api/EyeAuras.html": {
    "href": "api/EyeAuras.html",
    "title": "Namespace EyeAuras | EyeAuras Docs",
    "keywords": "Namespace EyeAuras Namespaces EyeAuras.AdvancedAuras EyeAuras.BehaviorTree EyeAuras.Blazor EyeAuras.BlazorAuras.Overlays.WebUI EyeAuras.CsScriptAuras EyeAuras.DefaultAuras EyeAuras.Graphics EyeAuras.NetworkAuras EyeAuras.OpenCVAuras EyeAuras.Scripting EyeAuras.Shared"
  },
  "api/PoeShared.AppArguments.-ctor.html": {
    "href": "api/PoeShared.AppArguments.-ctor.html",
    "title": "Constructor AppArguments | EyeAuras Docs",
    "keywords": "Constructor AppArguments AppArguments() Declaration public AppArguments()"
  },
  "api/PoeShared.AppArguments.AppDataDirectory.html": {
    "href": "api/PoeShared.AppArguments.AppDataDirectory.html",
    "title": "Property AppDataDirectory | EyeAuras Docs",
    "keywords": "Property AppDataDirectory AppDataDirectory Declaration public string AppDataDirectory { get; } Property Value Type Description string Implements IAppConfig.AppDataDirectory"
  },
  "api/PoeShared.AppArguments.AppDomainDirectory.html": {
    "href": "api/PoeShared.AppArguments.AppDomainDirectory.html",
    "title": "Property AppDomainDirectory | EyeAuras Docs",
    "keywords": "Property AppDomainDirectory AppDomainDirectory Declaration public string AppDomainDirectory { get; } Property Value Type Description string Implements IAppConfig.AppDomainDirectory"
  },
  "api/PoeShared.AppArguments.AppName.html": {
    "href": "api/PoeShared.AppArguments.AppName.html",
    "title": "Property AppName | EyeAuras Docs",
    "keywords": "Property AppName AppName Declaration public string AppName { get; set; } Property Value Type Description string Implements IAppConfig.AppName"
  },
  "api/PoeShared.AppArguments.AppSupportMail.html": {
    "href": "api/PoeShared.AppArguments.AppSupportMail.html",
    "title": "Property AppSupportMail | EyeAuras Docs",
    "keywords": "Property AppSupportMail AppSupportMail Declaration public string AppSupportMail { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.AppArguments.AppTitle.html": {
    "href": "api/PoeShared.AppArguments.AppTitle.html",
    "title": "Property AppTitle | EyeAuras Docs",
    "keywords": "Property AppTitle AppTitle Declaration public string AppTitle { get; } Property Value Type Description string Implements IAppConfig.AppTitle"
  },
  "api/PoeShared.AppArguments.ApplicationExecutableName.html": {
    "href": "api/PoeShared.AppArguments.ApplicationExecutableName.html",
    "title": "Property ApplicationExecutableName | EyeAuras Docs",
    "keywords": "Property ApplicationExecutableName ApplicationExecutableName Declaration public string ApplicationExecutableName { get; } Property Value Type Description string Implements IAppConfig.ApplicationExecutableName"
  },
  "api/PoeShared.AppArguments.ApplicationExecutablePath.html": {
    "href": "api/PoeShared.AppArguments.ApplicationExecutablePath.html",
    "title": "Property ApplicationExecutablePath | EyeAuras Docs",
    "keywords": "Property ApplicationExecutablePath ApplicationExecutablePath Declaration public string ApplicationExecutablePath { get; } Property Value Type Description string Implements IAppConfig.ApplicationExecutablePath"
  },
  "api/PoeShared.AppArguments.CommandLineArguments.html": {
    "href": "api/PoeShared.AppArguments.CommandLineArguments.html",
    "title": "Property CommandLineArguments | EyeAuras Docs",
    "keywords": "Property CommandLineArguments CommandLineArguments Declaration public string[] CommandLineArguments { get; } Property Value Type Description string[] Implements IAppArguments.CommandLineArguments"
  },
  "api/PoeShared.AppArguments.EnvironmentAppData.html": {
    "href": "api/PoeShared.AppArguments.EnvironmentAppData.html",
    "title": "Property EnvironmentAppData | EyeAuras Docs",
    "keywords": "Property EnvironmentAppData EnvironmentAppData Declaration public DirectoryInfo EnvironmentAppData { get; } Property Value Type Description DirectoryInfo Implements IAppConfig.EnvironmentAppData"
  },
  "api/PoeShared.AppArguments.EnvironmentLocalAppData.html": {
    "href": "api/PoeShared.AppArguments.EnvironmentLocalAppData.html",
    "title": "Property EnvironmentLocalAppData | EyeAuras Docs",
    "keywords": "Property EnvironmentLocalAppData EnvironmentLocalAppData Declaration public DirectoryInfo EnvironmentLocalAppData { get; } Property Value Type Description DirectoryInfo Implements IAppConfig.EnvironmentLocalAppData"
  },
  "api/PoeShared.AppArguments.FormatToString.html": {
    "href": "api/PoeShared.AppArguments.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides DisposableReactiveObject.FormatToString(ToStringBuilder)"
  },
  "api/PoeShared.AppArguments.IsElevated.html": {
    "href": "api/PoeShared.AppArguments.IsElevated.html",
    "title": "Property IsElevated | EyeAuras Docs",
    "keywords": "Property IsElevated IsElevated Declaration public bool IsElevated { get; set; } Property Value Type Description bool Implements IAppArguments.IsElevated"
  },
  "api/PoeShared.AppArguments.IsLinux.html": {
    "href": "api/PoeShared.AppArguments.IsLinux.html",
    "title": "Property IsLinux | EyeAuras Docs",
    "keywords": "Property IsLinux IsLinux Declaration public bool IsLinux { get; } Property Value Type Description bool"
  },
  "api/PoeShared.AppArguments.IsWindows.html": {
    "href": "api/PoeShared.AppArguments.IsWindows.html",
    "title": "Property IsWindows | EyeAuras Docs",
    "keywords": "Property IsWindows IsWindows Declaration public bool IsWindows { get; } Property Value Type Description bool"
  },
  "api/PoeShared.AppArguments.LocalAppDataDirectory.html": {
    "href": "api/PoeShared.AppArguments.LocalAppDataDirectory.html",
    "title": "Property LocalAppDataDirectory | EyeAuras Docs",
    "keywords": "Property LocalAppDataDirectory LocalAppDataDirectory Declaration public string LocalAppDataDirectory { get; } Property Value Type Description string Implements IAppConfig.LocalAppDataDirectory"
  },
  "api/PoeShared.AppArguments.Parse.html": {
    "href": "api/PoeShared.AppArguments.Parse.html",
    "title": "Method Parse | EyeAuras Docs",
    "keywords": "Method Parse Parse(string[]) Declaration public bool Parse(string[] args) Parameters Type Name Description string[] args Returns Type Description bool Implements IAppArguments.Parse(string[])"
  },
  "api/PoeShared.AppArguments.ProcessId.html": {
    "href": "api/PoeShared.AppArguments.ProcessId.html",
    "title": "Property ProcessId | EyeAuras Docs",
    "keywords": "Property ProcessId ProcessId Declaration public int ProcessId { get; } Property Value Type Description int Implements IAppConfig.ProcessId"
  },
  "api/PoeShared.AppArguments.SharedAppDataDirectory.html": {
    "href": "api/PoeShared.AppArguments.SharedAppDataDirectory.html",
    "title": "Property SharedAppDataDirectory | EyeAuras Docs",
    "keywords": "Property SharedAppDataDirectory SharedAppDataDirectory Declaration public string SharedAppDataDirectory { get; } Property Value Type Description string Implements IAppConfig.SharedAppDataDirectory"
  },
  "api/PoeShared.AppArguments.StartupArgs.html": {
    "href": "api/PoeShared.AppArguments.StartupArgs.html",
    "title": "Property StartupArgs | EyeAuras Docs",
    "keywords": "Property StartupArgs StartupArgs Declaration public string StartupArgs { get; } Property Value Type Description string Implements IAppArguments.StartupArgs"
  },
  "api/PoeShared.AppArguments.Version.html": {
    "href": "api/PoeShared.AppArguments.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration public Version Version { get; } Property Value Type Description Version Implements IAppConfig.Version"
  },
  "api/PoeShared.AppArguments.html": {
    "href": "api/PoeShared.AppArguments.html",
    "title": "Class AppArguments | EyeAuras Docs",
    "keywords": "Class AppArguments Inheritance object DisposableReactiveObject AppOptions AppArguments Implements IDisposable INotifyPropertyChanged IAppArguments IAppConfig Inherited Members AppOptions.AutostartFlagValue AppOptions.AutostartFlag AppOptions.IsAutostart AppOptions.IsDebugMode AppOptions.Profile AppOptions.IsLazyMode AppOptions.ShowUpdater AppOptions.IsSafeMode AppOptions.IsAdminMode AppOptions.PrismModules object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared Assembly: PoeShared.dll Syntax public class AppArguments : AppOptions, IDisposable, INotifyPropertyChanged, IAppArguments, IAppConfig Constructors Name Description AppArguments() Properties Name Description AppDataDirectory AppDomainDirectory AppName AppSupportMail AppTitle ApplicationExecutableName ApplicationExecutablePath CommandLineArguments EnvironmentAppData EnvironmentLocalAppData IsElevated IsLinux IsWindows LocalAppDataDirectory ProcessId SharedAppDataDirectory StartupArgs Version Methods Name Description FormatToString(ToStringBuilder) Parse(string[]) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.AppOptions.-ctor.html": {
    "href": "api/PoeShared.AppOptions.-ctor.html",
    "title": "Constructor AppOptions | EyeAuras Docs",
    "keywords": "Constructor AppOptions AppOptions() Declaration public AppOptions()"
  },
  "api/PoeShared.AppOptions.AutostartFlag.html": {
    "href": "api/PoeShared.AppOptions.AutostartFlag.html",
    "title": "Property AutostartFlag | EyeAuras Docs",
    "keywords": "Property AutostartFlag AutostartFlag Declaration public string AutostartFlag { get; } Property Value Type Description string"
  },
  "api/PoeShared.AppOptions.AutostartFlagValue.html": {
    "href": "api/PoeShared.AppOptions.AutostartFlagValue.html",
    "title": "Field AutostartFlagValue | EyeAuras Docs",
    "keywords": "Field AutostartFlagValue Namespace: PoeShared Assembly: PoeShared.dll Syntax protected const string AutostartFlagValue = \"autostart\" Returns Type Description string"
  },
  "api/PoeShared.AppOptions.IsAdminMode.html": {
    "href": "api/PoeShared.AppOptions.IsAdminMode.html",
    "title": "Property IsAdminMode | EyeAuras Docs",
    "keywords": "Property IsAdminMode IsAdminMode Declaration public bool? IsAdminMode { get; set; } Property Value Type Description bool?"
  },
  "api/PoeShared.AppOptions.IsAutostart.html": {
    "href": "api/PoeShared.AppOptions.IsAutostart.html",
    "title": "Property IsAutostart | EyeAuras Docs",
    "keywords": "Property IsAutostart IsAutostart Declaration public bool IsAutostart { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.AppOptions.IsDebugMode.html": {
    "href": "api/PoeShared.AppOptions.IsDebugMode.html",
    "title": "Property IsDebugMode | EyeAuras Docs",
    "keywords": "Property IsDebugMode IsDebugMode Declaration public bool IsDebugMode { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.AppOptions.IsLazyMode.html": {
    "href": "api/PoeShared.AppOptions.IsLazyMode.html",
    "title": "Property IsLazyMode | EyeAuras Docs",
    "keywords": "Property IsLazyMode IsLazyMode Declaration public bool IsLazyMode { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.AppOptions.IsSafeMode.html": {
    "href": "api/PoeShared.AppOptions.IsSafeMode.html",
    "title": "Property IsSafeMode | EyeAuras Docs",
    "keywords": "Property IsSafeMode IsSafeMode Declaration public bool? IsSafeMode { get; set; } Property Value Type Description bool?"
  },
  "api/PoeShared.AppOptions.PrismModules.html": {
    "href": "api/PoeShared.AppOptions.PrismModules.html",
    "title": "Property PrismModules | EyeAuras Docs",
    "keywords": "Property PrismModules PrismModules Declaration public IEnumerable<string> PrismModules { get; set; } Property Value Type Description IEnumerable<string>"
  },
  "api/PoeShared.AppOptions.Profile.html": {
    "href": "api/PoeShared.AppOptions.Profile.html",
    "title": "Property Profile | EyeAuras Docs",
    "keywords": "Property Profile Profile Declaration public string Profile { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.AppOptions.ShowUpdater.html": {
    "href": "api/PoeShared.AppOptions.ShowUpdater.html",
    "title": "Property ShowUpdater | EyeAuras Docs",
    "keywords": "Property ShowUpdater ShowUpdater Declaration public bool ShowUpdater { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.AppOptions.html": {
    "href": "api/PoeShared.AppOptions.html",
    "title": "Class AppOptions | EyeAuras Docs",
    "keywords": "Class AppOptions Inheritance object DisposableReactiveObject AppOptions AppArguments Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared Assembly: PoeShared.dll Syntax public class AppOptions : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Constructors Name Description AppOptions() Fields Name Description AutostartFlagValue Properties Name Description AutostartFlag IsAdminMode IsAutostart IsDebugMode IsLazyMode IsSafeMode PrismModules Profile ShowUpdater Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Audio.Services.AudioNotificationType.html": {
    "href": "api/PoeShared.Audio.Services.AudioNotificationType.html",
    "title": "Enum AudioNotificationType | EyeAuras Docs",
    "keywords": "Enum AudioNotificationType Namespace: PoeShared.Audio.Services Assembly: PoeShared.Native.dll Syntax public enum AudioNotificationType Fields Name Description Bell Cricket Cuckoo DingDong Disabled Droplet Keyboard Mercury Minions OwlHoot1 OwlHoot2 Ping Pizzicato Silence SingleCricket Twinkle Whisper Whistle Wob Extension Methods ObjectExtensions.AddTo<AudioNotificationType, TCollection>(AudioNotificationType, ISourceList<TCollection>) ObjectExtensions.AddTo<AudioNotificationType, TCollection>(AudioNotificationType, ICollection<TCollection>) ObjectExtensions.CloneJson<AudioNotificationType>(AudioNotificationType) ObjectExtensions.CopyPropertiesTo<AudioNotificationType, TTarget>(AudioNotificationType, TTarget) ObjectExtensions.DumpToTextRaw<AudioNotificationType>(AudioNotificationType) ObjectExtensions.DumpToText<AudioNotificationType>(AudioNotificationType) ObjectExtensions.Dump<AudioNotificationType>(AudioNotificationType) ObjectExtensions.GetPropertyAccessor<AudioNotificationType, TValue>(AudioNotificationType, Expression<Func<AudioNotificationType, TValue>>) ObjectExtensions.InsertTo<AudioNotificationType, TCollection>(AudioNotificationType, IList<TCollection>, int) ObjectExtensions.ToJson<AudioNotificationType>(AudioNotificationType) ObjectExtensions.ToStringSafe<AudioNotificationType>(AudioNotificationType) ObjectExtensions.TransferPropertiesTo<AudioNotificationType, TTarget>(AudioNotificationType, TTarget, params string[]) XDocumentExtensions.AddTo<AudioNotificationType>(AudioNotificationType, XContainer)"
  },
  "api/PoeShared.Audio.Services.AudioPlayerRequest.-Clone--.html": {
    "href": "api/PoeShared.Audio.Services.AudioPlayerRequest.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public AudioPlayerRequest <Clone>$() Returns Type Description AudioPlayerRequest"
  },
  "api/PoeShared.Audio.Services.AudioPlayerRequest.-ctor.html": {
    "href": "api/PoeShared.Audio.Services.AudioPlayerRequest.-ctor.html",
    "title": "Constructor AudioPlayerRequest | EyeAuras Docs",
    "keywords": "Constructor AudioPlayerRequest AudioPlayerRequest() Declaration public AudioPlayerRequest()"
  },
  "api/PoeShared.Audio.Services.AudioPlayerRequest.CancellationToken.html": {
    "href": "api/PoeShared.Audio.Services.AudioPlayerRequest.CancellationToken.html",
    "title": "Property CancellationToken | EyeAuras Docs",
    "keywords": "Property CancellationToken CancellationToken Declaration public CancellationToken CancellationToken { get; init; } Property Value Type Description CancellationToken"
  },
  "api/PoeShared.Audio.Services.AudioPlayerRequest.Equals.html": {
    "href": "api/PoeShared.Audio.Services.AudioPlayerRequest.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(AudioPlayerRequest?) Declaration public bool Equals(AudioPlayerRequest? other) Parameters Type Name Description AudioPlayerRequest other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/PoeShared.Audio.Services.AudioPlayerRequest.GetHashCode.html": {
    "href": "api/PoeShared.Audio.Services.AudioPlayerRequest.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/PoeShared.Audio.Services.AudioPlayerRequest.OutputDevice.html": {
    "href": "api/PoeShared.Audio.Services.AudioPlayerRequest.OutputDevice.html",
    "title": "Property OutputDevice | EyeAuras Docs",
    "keywords": "Property OutputDevice OutputDevice Declaration public WaveOutDevice OutputDevice { get; init; } Property Value Type Description WaveOutDevice"
  },
  "api/PoeShared.Audio.Services.AudioPlayerRequest.ToString.html": {
    "href": "api/PoeShared.Audio.Services.AudioPlayerRequest.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/PoeShared.Audio.Services.AudioPlayerRequest.Volume.html": {
    "href": "api/PoeShared.Audio.Services.AudioPlayerRequest.Volume.html",
    "title": "Property Volume | EyeAuras Docs",
    "keywords": "Property Volume Volume Declaration public float? Volume { get; init; } Property Value Type Description float?"
  },
  "api/PoeShared.Audio.Services.AudioPlayerRequest.WaveData.html": {
    "href": "api/PoeShared.Audio.Services.AudioPlayerRequest.WaveData.html",
    "title": "Property WaveData | EyeAuras Docs",
    "keywords": "Property WaveData WaveData Declaration public byte[] WaveData { get; init; } Property Value Type Description byte[]"
  },
  "api/PoeShared.Audio.Services.AudioPlayerRequest.html": {
    "href": "api/PoeShared.Audio.Services.AudioPlayerRequest.html",
    "title": "Class AudioPlayerRequest | EyeAuras Docs",
    "keywords": "Class AudioPlayerRequest Inheritance object AudioPlayerRequest Implements IEquatable<AudioPlayerRequest> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Audio.Services Assembly: PoeShared.Native.dll Syntax public sealed record AudioPlayerRequest : IEquatable<AudioPlayerRequest> Constructors Name Description AudioPlayerRequest() Properties Name Description CancellationToken OutputDevice Volume WaveData Methods Name Description Equals(AudioPlayerRequest?) Equals(object?) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(AudioPlayerRequest?, AudioPlayerRequest?) operator !=(AudioPlayerRequest?, AudioPlayerRequest?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Audio.Services.AudioPlayerRequest.op_Equality.html": {
    "href": "api/PoeShared.Audio.Services.AudioPlayerRequest.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(AudioPlayerRequest?, AudioPlayerRequest?) Declaration public static bool operator ==(AudioPlayerRequest? left, AudioPlayerRequest? right) Parameters Type Name Description AudioPlayerRequest left AudioPlayerRequest right Returns Type Description bool"
  },
  "api/PoeShared.Audio.Services.AudioPlayerRequest.op_Inequality.html": {
    "href": "api/PoeShared.Audio.Services.AudioPlayerRequest.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(AudioPlayerRequest?, AudioPlayerRequest?) Declaration public static bool operator !=(AudioPlayerRequest? left, AudioPlayerRequest? right) Parameters Type Name Description AudioPlayerRequest left AudioPlayerRequest right Returns Type Description bool"
  },
  "api/PoeShared.Audio.Services.IAudioNotificationsManager.AddFromFile.html": {
    "href": "api/PoeShared.Audio.Services.IAudioNotificationsManager.AddFromFile.html",
    "title": "Method AddFromFile | EyeAuras Docs",
    "keywords": "Method AddFromFile AddFromFile(FileInfo) Declaration string AddFromFile(FileInfo soundFile) Parameters Type Name Description FileInfo soundFile Returns Type Description string"
  },
  "api/PoeShared.Audio.Services.IAudioNotificationsManager.Notifications.html": {
    "href": "api/PoeShared.Audio.Services.IAudioNotificationsManager.Notifications.html",
    "title": "Property Notifications | EyeAuras Docs",
    "keywords": "Property Notifications Notifications Declaration ReadOnlyObservableCollection<string> Notifications { get; } Property Value Type Description ReadOnlyObservableCollection<string>"
  },
  "api/PoeShared.Audio.Services.IAudioNotificationsManager.OutputDevice.html": {
    "href": "api/PoeShared.Audio.Services.IAudioNotificationsManager.OutputDevice.html",
    "title": "Property OutputDevice | EyeAuras Docs",
    "keywords": "Property OutputDevice OutputDevice Declaration WaveOutDevice OutputDevice { get; set; } Property Value Type Description WaveOutDevice"
  },
  "api/PoeShared.Audio.Services.IAudioNotificationsManager.PlayNotification.html": {
    "href": "api/PoeShared.Audio.Services.IAudioNotificationsManager.PlayNotification.html",
    "title": "Method PlayNotification | EyeAuras Docs",
    "keywords": "Method PlayNotification PlayNotification(AudioNotificationType) Declaration Task PlayNotification(AudioNotificationType notificationType) Parameters Type Name Description AudioNotificationType notificationType Returns Type Description Task PlayNotification(string) Declaration Task PlayNotification(string notificationName) Parameters Type Name Description string notificationName Returns Type Description Task PlayNotification(string, float) Declaration Task PlayNotification(string notificationName, float volume) Parameters Type Name Description string notificationName float volume Volume, 1.0 is full scale Returns Type Description Task PlayNotification(string, float, CancellationToken) Declaration Task PlayNotification(string notificationName, float volume, CancellationToken cancellationToken) Parameters Type Name Description string notificationName float volume CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/PoeShared.Audio.Services.IAudioNotificationsManager.html": {
    "href": "api/PoeShared.Audio.Services.IAudioNotificationsManager.html",
    "title": "Interface IAudioNotificationsManager | EyeAuras Docs",
    "keywords": "Interface IAudioNotificationsManager Namespace: PoeShared.Audio.Services Assembly: PoeShared.Native.dll Syntax public interface IAudioNotificationsManager Properties Name Description Notifications OutputDevice Methods Name Description AddFromFile(FileInfo) PlayNotification(AudioNotificationType) PlayNotification(string) PlayNotification(string, float) PlayNotification(string, float, CancellationToken) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Audio.Services.IAudioPlayer.GetDevices.html": {
    "href": "api/PoeShared.Audio.Services.IAudioPlayer.GetDevices.html",
    "title": "Method GetDevices | EyeAuras Docs",
    "keywords": "Method GetDevices GetDevices() Declaration IEnumerable<WaveOutDevice> GetDevices() Returns Type Description IEnumerable<WaveOutDevice>"
  },
  "api/PoeShared.Audio.Services.IAudioPlayer.Play.html": {
    "href": "api/PoeShared.Audio.Services.IAudioPlayer.Play.html",
    "title": "Method Play | EyeAuras Docs",
    "keywords": "Method Play Play(byte[]) Declaration Task Play(byte[] waveData) Parameters Type Name Description byte[] waveData Returns Type Description Task Play(byte[], float) Declaration Task Play(byte[] waveData, float volume) Parameters Type Name Description byte[] waveData float volume Returns Type Description Task Play(AudioPlayerRequest) Declaration Task Play(AudioPlayerRequest request) Parameters Type Name Description AudioPlayerRequest request Returns Type Description Task"
  },
  "api/PoeShared.Audio.Services.IAudioPlayer.html": {
    "href": "api/PoeShared.Audio.Services.IAudioPlayer.html",
    "title": "Interface IAudioPlayer | EyeAuras Docs",
    "keywords": "Interface IAudioPlayer Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Audio.Services Assembly: PoeShared.Native.dll Syntax public interface IAudioPlayer : IDisposable, INotifyPropertyChanged Methods Name Description GetDevices() Play(AudioPlayerRequest) Play(byte[]) Play(byte[], float) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Audio.Services.IEmbeddedSoundLibrarySource.html": {
    "href": "api/PoeShared.Audio.Services.IEmbeddedSoundLibrarySource.html",
    "title": "Interface IEmbeddedSoundLibrarySource | EyeAuras Docs",
    "keywords": "Interface IEmbeddedSoundLibrarySource Inherited Members ISoundLibrarySource.TryToLoadSourceByName(string, out byte[]) ISoundLibrarySource.SourceName Namespace: PoeShared.Audio.Services Assembly: PoeShared.Native.dll Syntax public interface IEmbeddedSoundLibrarySource : ISoundLibrarySource Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Audio.Services.IFileSoundLibrarySource.AddFromFile.html": {
    "href": "api/PoeShared.Audio.Services.IFileSoundLibrarySource.AddFromFile.html",
    "title": "Method AddFromFile | EyeAuras Docs",
    "keywords": "Method AddFromFile AddFromFile(FileInfo) Declaration string AddFromFile(FileInfo soundFile) Parameters Type Name Description FileInfo soundFile Returns Type Description string"
  },
  "api/PoeShared.Audio.Services.IFileSoundLibrarySource.AddFromWaveData.html": {
    "href": "api/PoeShared.Audio.Services.IFileSoundLibrarySource.AddFromWaveData.html",
    "title": "Method AddFromWaveData | EyeAuras Docs",
    "keywords": "Method AddFromWaveData AddFromWaveData(string, byte[]) Declaration string AddFromWaveData(string notification, byte[] waveData) Parameters Type Name Description string notification byte[] waveData Returns Type Description string"
  },
  "api/PoeShared.Audio.Services.IFileSoundLibrarySource.html": {
    "href": "api/PoeShared.Audio.Services.IFileSoundLibrarySource.html",
    "title": "Interface IFileSoundLibrarySource | EyeAuras Docs",
    "keywords": "Interface IFileSoundLibrarySource Inherited Members ISoundLibrarySource.TryToLoadSourceByName(string, out byte[]) ISoundLibrarySource.SourceName Namespace: PoeShared.Audio.Services Assembly: PoeShared.Native.dll Syntax public interface IFileSoundLibrarySource : ISoundLibrarySource Methods Name Description AddFromFile(FileInfo) AddFromWaveData(string, byte[]) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Audio.Services.IProcessAudioController.SetIsMutedByProcessId.html": {
    "href": "api/PoeShared.Audio.Services.IProcessAudioController.SetIsMutedByProcessId.html",
    "title": "Method SetIsMutedByProcessId | EyeAuras Docs",
    "keywords": "Method SetIsMutedByProcessId SetIsMutedByProcessId(bool, int) Declaration void SetIsMutedByProcessId(bool isMuted, int processId) Parameters Type Name Description bool isMuted int processId"
  },
  "api/PoeShared.Audio.Services.IProcessAudioController.SetIsMutedByProcessName.html": {
    "href": "api/PoeShared.Audio.Services.IProcessAudioController.SetIsMutedByProcessName.html",
    "title": "Method SetIsMutedByProcessName | EyeAuras Docs",
    "keywords": "Method SetIsMutedByProcessName SetIsMutedByProcessName(bool, string) Declaration void SetIsMutedByProcessName(bool isMuted, string processName) Parameters Type Name Description bool isMuted string processName"
  },
  "api/PoeShared.Audio.Services.IProcessAudioController.html": {
    "href": "api/PoeShared.Audio.Services.IProcessAudioController.html",
    "title": "Interface IProcessAudioController | EyeAuras Docs",
    "keywords": "Interface IProcessAudioController Namespace: PoeShared.Audio.Services Assembly: PoeShared.Native.dll Syntax public interface IProcessAudioController Methods Name Description SetIsMutedByProcessId(bool, int) SetIsMutedByProcessName(bool, string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Audio.Services.ISoundLibrarySource.SourceName.html": {
    "href": "api/PoeShared.Audio.Services.ISoundLibrarySource.SourceName.html",
    "title": "Property SourceName | EyeAuras Docs",
    "keywords": "Property SourceName SourceName Declaration ReadOnlyObservableCollection<string> SourceName { get; } Property Value Type Description ReadOnlyObservableCollection<string>"
  },
  "api/PoeShared.Audio.Services.ISoundLibrarySource.TryToLoadSourceByName.html": {
    "href": "api/PoeShared.Audio.Services.ISoundLibrarySource.TryToLoadSourceByName.html",
    "title": "Method TryToLoadSourceByName | EyeAuras Docs",
    "keywords": "Method TryToLoadSourceByName TryToLoadSourceByName(string, out byte[]) Declaration bool TryToLoadSourceByName(string name, out byte[] waveData) Parameters Type Name Description string name byte[] waveData Returns Type Description bool"
  },
  "api/PoeShared.Audio.Services.ISoundLibrarySource.html": {
    "href": "api/PoeShared.Audio.Services.ISoundLibrarySource.html",
    "title": "Interface ISoundLibrarySource | EyeAuras Docs",
    "keywords": "Interface ISoundLibrarySource Namespace: PoeShared.Audio.Services Assembly: PoeShared.Native.dll Syntax public interface ISoundLibrarySource Properties Name Description SourceName Methods Name Description TryToLoadSourceByName(string, out byte[]) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Audio.Services.WaveOutDevice.-ctor.html": {
    "href": "api/PoeShared.Audio.Services.WaveOutDevice.-ctor.html",
    "title": "Constructor WaveOutDevice | EyeAuras Docs",
    "keywords": "Constructor WaveOutDevice WaveOutDevice() Declaration public WaveOutDevice()"
  },
  "api/PoeShared.Audio.Services.WaveOutDevice.DefaultDevice.html": {
    "href": "api/PoeShared.Audio.Services.WaveOutDevice.DefaultDevice.html",
    "title": "Field DefaultDevice | EyeAuras Docs",
    "keywords": "Field DefaultDevice Namespace: PoeShared.Audio.Services Assembly: PoeShared.Native.dll Syntax public static readonly WaveOutDevice DefaultDevice Returns Type Description WaveOutDevice"
  },
  "api/PoeShared.Audio.Services.WaveOutDevice.DeviceNumber.html": {
    "href": "api/PoeShared.Audio.Services.WaveOutDevice.DeviceNumber.html",
    "title": "Property DeviceNumber | EyeAuras Docs",
    "keywords": "Property DeviceNumber DeviceNumber Declaration public int DeviceNumber { get; init; } Property Value Type Description int"
  },
  "api/PoeShared.Audio.Services.WaveOutDevice.Equals.html": {
    "href": "api/PoeShared.Audio.Services.WaveOutDevice.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object)"
  },
  "api/PoeShared.Audio.Services.WaveOutDevice.GetHashCode.html": {
    "href": "api/PoeShared.Audio.Services.WaveOutDevice.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/PoeShared.Audio.Services.WaveOutDevice.Id.html": {
    "href": "api/PoeShared.Audio.Services.WaveOutDevice.Id.html",
    "title": "Property Id | EyeAuras Docs",
    "keywords": "Property Id Id Declaration public string Id { get; } Property Value Type Description string"
  },
  "api/PoeShared.Audio.Services.WaveOutDevice.MultimediaDeviceName.html": {
    "href": "api/PoeShared.Audio.Services.WaveOutDevice.MultimediaDeviceName.html",
    "title": "Property MultimediaDeviceName | EyeAuras Docs",
    "keywords": "Property MultimediaDeviceName MultimediaDeviceName Declaration public string MultimediaDeviceName { get; init; } Property Value Type Description string"
  },
  "api/PoeShared.Audio.Services.WaveOutDevice.Name.html": {
    "href": "api/PoeShared.Audio.Services.WaveOutDevice.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration public string Name { get; } Property Value Type Description string"
  },
  "api/PoeShared.Audio.Services.WaveOutDevice.ToString.html": {
    "href": "api/PoeShared.Audio.Services.WaveOutDevice.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/PoeShared.Audio.Services.WaveOutDevice.WaveOutCapabilities.html": {
    "href": "api/PoeShared.Audio.Services.WaveOutDevice.WaveOutCapabilities.html",
    "title": "Property WaveOutCapabilities | EyeAuras Docs",
    "keywords": "Property WaveOutCapabilities WaveOutCapabilities Declaration public WaveOutCapabilities WaveOutCapabilities { get; init; } Property Value Type Description WaveOutCapabilities"
  },
  "api/PoeShared.Audio.Services.WaveOutDevice.html": {
    "href": "api/PoeShared.Audio.Services.WaveOutDevice.html",
    "title": "Class WaveOutDevice | EyeAuras Docs",
    "keywords": "Class WaveOutDevice Inheritance object WaveOutDevice Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Audio.Services Assembly: PoeShared.Native.dll Syntax public sealed class WaveOutDevice Constructors Name Description WaveOutDevice() Fields Name Description DefaultDevice Properties Name Description DeviceNumber Id MultimediaDeviceName Name WaveOutCapabilities Methods Name Description Equals(object) GetHashCode() ToString() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Audio.Services.html": {
    "href": "api/PoeShared.Audio.Services.html",
    "title": "Namespace PoeShared.Audio.Services | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Audio.Services Classes AudioPlayerRequest WaveOutDevice Interfaces IAudioNotificationsManager IAudioPlayer IEmbeddedSoundLibrarySource IFileSoundLibrarySource IProcessAudioController ISoundLibrarySource Enums AudioNotificationType"
  },
  "api/PoeShared.Bindings.BindableReactiveObject.-ctor.html": {
    "href": "api/PoeShared.Bindings.BindableReactiveObject.-ctor.html",
    "title": "Constructor BindableReactiveObject | EyeAuras Docs",
    "keywords": "Constructor BindableReactiveObject BindableReactiveObject() Declaration protected BindableReactiveObject()"
  },
  "api/PoeShared.Bindings.BindableReactiveObject.AddOrUpdateBinding.html": {
    "href": "api/PoeShared.Bindings.BindableReactiveObject.AddOrUpdateBinding.html",
    "title": "Method AddOrUpdateBinding | EyeAuras Docs",
    "keywords": "Method AddOrUpdateBinding AddOrUpdateBinding<TSource>(string, TSource, string) Declaration public IReactiveBinding AddOrUpdateBinding<TSource>(string targetPropertyPath, TSource source, string sourcePropertyPath) where TSource : DisposableReactiveObject Parameters Type Name Description string targetPropertyPath TSource source string sourcePropertyPath Returns Type Description IReactiveBinding Type Parameters Name Description TSource Implements IBindableReactiveObject.AddOrUpdateBinding<TSource>(string, TSource, string) AddOrUpdateBinding(IValueProvider, string) Declaration public IReactiveBinding AddOrUpdateBinding(IValueProvider valueSource, string targetPropertyPath) Parameters Type Name Description IValueProvider valueSource string targetPropertyPath Returns Type Description IReactiveBinding Implements IBindableReactiveObject.AddOrUpdateBinding(IValueProvider, string) AddOrUpdateBinding(IReactiveBinding) Declaration public void AddOrUpdateBinding(IReactiveBinding binding) Parameters Type Name Description IReactiveBinding binding Implements IBindableReactiveObject.AddOrUpdateBinding(IReactiveBinding)"
  },
  "api/PoeShared.Bindings.BindableReactiveObject.Bindings.html": {
    "href": "api/PoeShared.Bindings.BindableReactiveObject.Bindings.html",
    "title": "Property Bindings | EyeAuras Docs",
    "keywords": "Property Bindings Bindings Declaration public IObservableCache<IReactiveBinding, string> Bindings { get; } Property Value Type Description IObservableCache<IReactiveBinding, string> Implements IBindableReactiveObject.Bindings"
  },
  "api/PoeShared.Bindings.BindableReactiveObject.BindingsList.html": {
    "href": "api/PoeShared.Bindings.BindableReactiveObject.BindingsList.html",
    "title": "Property BindingsList | EyeAuras Docs",
    "keywords": "Property BindingsList BindingsList Declaration public ReadOnlyObservableCollection<IReactiveBinding> BindingsList { get; } Property Value Type Description ReadOnlyObservableCollection<IReactiveBinding> Implements IBindableReactiveObject.BindingsList"
  },
  "api/PoeShared.Bindings.BindableReactiveObject.ClearBindings.html": {
    "href": "api/PoeShared.Bindings.BindableReactiveObject.ClearBindings.html",
    "title": "Method ClearBindings | EyeAuras Docs",
    "keywords": "Method ClearBindings ClearBindings() Declaration public void ClearBindings() Implements IBindableReactiveObject.ClearBindings()"
  },
  "api/PoeShared.Bindings.BindableReactiveObject.HasBindings.html": {
    "href": "api/PoeShared.Bindings.BindableReactiveObject.HasBindings.html",
    "title": "Property HasBindings | EyeAuras Docs",
    "keywords": "Property HasBindings HasBindings Declaration public bool HasBindings { get; } Property Value Type Description bool Implements IBindableReactiveObject.HasBindings"
  },
  "api/PoeShared.Bindings.BindableReactiveObject.Log.html": {
    "href": "api/PoeShared.Bindings.BindableReactiveObject.Log.html",
    "title": "Property Log | EyeAuras Docs",
    "keywords": "Property Log Log Declaration protected IFluentLog Log { get; } Property Value Type Description IFluentLog"
  },
  "api/PoeShared.Bindings.BindableReactiveObject.ObjectId.html": {
    "href": "api/PoeShared.Bindings.BindableReactiveObject.ObjectId.html",
    "title": "Property ObjectId | EyeAuras Docs",
    "keywords": "Property ObjectId ObjectId Declaration public string ObjectId { get; } Property Value Type Description string Implements IBindableReactiveObject.ObjectId"
  },
  "api/PoeShared.Bindings.BindableReactiveObject.RemoveBinding.html": {
    "href": "api/PoeShared.Bindings.BindableReactiveObject.RemoveBinding.html",
    "title": "Method RemoveBinding | EyeAuras Docs",
    "keywords": "Method RemoveBinding RemoveBinding(string) Declaration public void RemoveBinding(string targetPropertyPath) Parameters Type Name Description string targetPropertyPath Implements IBindableReactiveObject.RemoveBinding(string) RemoveBinding(IReactiveBinding) Declaration public void RemoveBinding(IReactiveBinding binding) Parameters Type Name Description IReactiveBinding binding Implements IBindableReactiveObject.RemoveBinding(IReactiveBinding)"
  },
  "api/PoeShared.Bindings.BindableReactiveObject.ResolveBinding.html": {
    "href": "api/PoeShared.Bindings.BindableReactiveObject.ResolveBinding.html",
    "title": "Method ResolveBinding | EyeAuras Docs",
    "keywords": "Method ResolveBinding ResolveBinding(string) Declaration public IReactiveBinding ResolveBinding(string propertyPath) Parameters Type Name Description string propertyPath Returns Type Description IReactiveBinding Implements IBindableReactiveObject.ResolveBinding(string)"
  },
  "api/PoeShared.Bindings.BindableReactiveObject.html": {
    "href": "api/PoeShared.Bindings.BindableReactiveObject.html",
    "title": "Class BindableReactiveObject | EyeAuras Docs",
    "keywords": "Class BindableReactiveObject Inheritance object DisposableReactiveObject BindableReactiveObject AuraObjectBase Implements IBindableReactiveObject IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public abstract class BindableReactiveObject : DisposableReactiveObject, IBindableReactiveObject, IDisposable, INotifyPropertyChanged Constructors Name Description BindableReactiveObject() Properties Name Description Bindings BindingsList HasBindings Log ObjectId Methods Name Description AddOrUpdateBinding(IReactiveBinding) AddOrUpdateBinding(IValueProvider, string) AddOrUpdateBinding<TSource>(string, TSource, string) ClearBindings() RemoveBinding(IReactiveBinding) RemoveBinding(string) ResolveBinding(string) Extension Methods BindableReactiveObjectExtensions.AddOrUpdateBinding<TTarget, TSource, TProperty>(TTarget, Expression<Func<TTarget, TProperty>>, TSource, Expression<Func<TSource, TProperty>>) DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Bindings.BindableReactiveObjectExtensions.AddOrUpdateBinding.html": {
    "href": "api/PoeShared.Bindings.BindableReactiveObjectExtensions.AddOrUpdateBinding.html",
    "title": "Method AddOrUpdateBinding | EyeAuras Docs",
    "keywords": "Method AddOrUpdateBinding AddOrUpdateBinding<TTarget, TSource, TProperty>(TTarget, Expression<Func<TTarget, TProperty>>, TSource, Expression<Func<TSource, TProperty>>) Declaration public static IDisposable AddOrUpdateBinding<TTarget, TSource, TProperty>(this TTarget instance, Expression<Func<TTarget, TProperty>> targetProperty, TSource source, Expression<Func<TSource, TProperty>> sourceExpression) where TTarget : BindableReactiveObject where TSource : DisposableReactiveObject Parameters Type Name Description TTarget instance Expression<Func<TTarget, TProperty>> targetProperty TSource source Expression<Func<TSource, TProperty>> sourceExpression Returns Type Description IDisposable Type Parameters Name Description TTarget TSource TProperty"
  },
  "api/PoeShared.Bindings.BindableReactiveObjectExtensions.html": {
    "href": "api/PoeShared.Bindings.BindableReactiveObjectExtensions.html",
    "title": "Class BindableReactiveObjectExtensions | EyeAuras Docs",
    "keywords": "Class BindableReactiveObjectExtensions Inheritance object BindableReactiveObjectExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public static class BindableReactiveObjectExtensions Methods Name Description AddOrUpdateBinding<TTarget, TSource, TProperty>(TTarget, Expression<Func<TTarget, TProperty>>, TSource, Expression<Func<TSource, TProperty>>)"
  },
  "api/PoeShared.Bindings.CsharpExpressionParser.-ctor.html": {
    "href": "api/PoeShared.Bindings.CsharpExpressionParser.-ctor.html",
    "title": "Constructor CsharpExpressionParser | EyeAuras Docs",
    "keywords": "Constructor CsharpExpressionParser CsharpExpressionParser() Declaration public CsharpExpressionParser()"
  },
  "api/PoeShared.Bindings.CsharpExpressionParser.CustomTypeProvider.html": {
    "href": "api/PoeShared.Bindings.CsharpExpressionParser.CustomTypeProvider.html",
    "title": "Property CustomTypeProvider | EyeAuras Docs",
    "keywords": "Property CustomTypeProvider CustomTypeProvider Interface for providing functionality to find custom types for or resolve any type by full or simple name. Declaration public IDynamicLinqCustomTypeProvider CustomTypeProvider { get; } Property Value Type Description IDynamicLinqCustomTypeProvider Implements ICsharpExpressionParser.CustomTypeProvider"
  },
  "api/PoeShared.Bindings.CsharpExpressionParser.ParseFunction.html": {
    "href": "api/PoeShared.Bindings.CsharpExpressionParser.ParseFunction.html",
    "title": "Method ParseFunction | EyeAuras Docs",
    "keywords": "Method ParseFunction ParseFunction<TSource, TResult>(string) Parses a function expression. Declaration public Expression<Func<TSource, TResult>> ParseFunction<TSource, TResult>(string expression) Parameters Type Name Description string expression The expression string to parse. Returns Type Description Expression<Func<TSource, TResult>> The parsed function expression. Type Parameters Name Description TSource The type of the source parameter. TResult The type of the result. Implements ICsharpExpressionParser.ParseFunction<TSource, TResult>(string)"
  },
  "api/PoeShared.Bindings.CsharpExpressionParser.html": {
    "href": "api/PoeShared.Bindings.CsharpExpressionParser.html",
    "title": "Class CsharpExpressionParser | EyeAuras Docs",
    "keywords": "Class CsharpExpressionParser Inheritance object DisposableReactiveObject LazyReactiveObject<CsharpExpressionParser> CsharpExpressionParser Implements IDisposable INotifyPropertyChanged ICsharpExpressionParser Inherited Members LazyReactiveObject<CsharpExpressionParser>.Instance object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public sealed class CsharpExpressionParser : LazyReactiveObject<CsharpExpressionParser>, IDisposable, INotifyPropertyChanged, ICsharpExpressionParser Constructors Name Description CsharpExpressionParser() Properties Name Description CustomTypeProvider Interface for providing functionality to find custom types for or resolve any type by full or simple name. Methods Name Description ParseFunction<TSource, TResult>(string) Parses a function expression. Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Bindings.ExpressionWatcher-2.-ctor.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher-2.-ctor.html",
    "title": "Constructor ExpressionWatcher | EyeAuras Docs",
    "keywords": "Constructor ExpressionWatcher ExpressionWatcher(Expression<Func<TSource, TProperty>>, Expression<Func<TSource, bool>>) Declaration public ExpressionWatcher(Expression<Func<TSource, TProperty>> sourceAccessor, Expression<Func<TSource, bool>> condition) Parameters Type Name Description Expression<Func<TSource, TProperty>> sourceAccessor Expression<Func<TSource, bool>> condition ExpressionWatcher(Expression<Func<TSource, TProperty>>) Declaration public ExpressionWatcher(Expression<Func<TSource, TProperty>> sourceAccessor) Parameters Type Name Description Expression<Func<TSource, TProperty>> sourceAccessor"
  },
  "api/PoeShared.Bindings.ExpressionWatcher-2.CanSetValue.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher-2.CanSetValue.html",
    "title": "Property CanSetValue | EyeAuras Docs",
    "keywords": "Property CanSetValue CanSetValue True if is is possible to set current value, requires SupportsSetValue and Source to be non-null Declaration public bool CanSetValue { get; } Property Value Type Description bool Implements IValueWatcher.CanSetValue"
  },
  "api/PoeShared.Bindings.ExpressionWatcher-2.Error.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher-2.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Declaration public Exception Error { get; } Property Value Type Description Exception Implements IValueProvider.Error"
  },
  "api/PoeShared.Bindings.ExpressionWatcher-2.FormatToString.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher-2.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides DisposableReactiveObject.FormatToString(ToStringBuilder)"
  },
  "api/PoeShared.Bindings.ExpressionWatcher-2.HasValue.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher-2.HasValue.html",
    "title": "Property HasValue | EyeAuras Docs",
    "keywords": "Property HasValue HasValue Declaration public bool HasValue { get; } Property Value Type Description bool Implements IValueProvider.HasValue"
  },
  "api/PoeShared.Bindings.ExpressionWatcher-2.SetCurrentValue.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher-2.SetCurrentValue.html",
    "title": "Method SetCurrentValue | EyeAuras Docs",
    "keywords": "Method SetCurrentValue SetCurrentValue(object) Attempts to set current value, should throw only in extreme cases (e.g. misconfiguration), otherwise sets Error Declaration public void SetCurrentValue(object newValue) Parameters Type Name Description object newValue Implements IValueWatcher.SetCurrentValue(object) SetCurrentValue(TProperty) Declaration public void SetCurrentValue(TProperty newValue) Parameters Type Name Description TProperty newValue"
  },
  "api/PoeShared.Bindings.ExpressionWatcher-2.Source.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher-2.Source.html",
    "title": "Property Source | EyeAuras Docs",
    "keywords": "Property Source Source Declaration public TSource Source { get; set; } Property Value Type Description TSource"
  },
  "api/PoeShared.Bindings.ExpressionWatcher-2.SourceExpression.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher-2.SourceExpression.html",
    "title": "Property SourceExpression | EyeAuras Docs",
    "keywords": "Property SourceExpression SourceExpression Declaration public string SourceExpression { get; } Property Value Type Description string"
  },
  "api/PoeShared.Bindings.ExpressionWatcher-2.SupportsSetValue.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher-2.SupportsSetValue.html",
    "title": "Property SupportsSetValue | EyeAuras Docs",
    "keywords": "Property SupportsSetValue SupportsSetValue True if this value watcher knows how to set current Value Declaration public bool SupportsSetValue { get; } Property Value Type Description bool Implements IValueWatcher.SupportsSetValue"
  },
  "api/PoeShared.Bindings.ExpressionWatcher-2.Value.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher-2.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration public TProperty Value { get; } Property Value Type Description TProperty"
  },
  "api/PoeShared.Bindings.ExpressionWatcher-2.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher-2.html",
    "title": "Class ExpressionWatcher<TSource, TProperty> | EyeAuras Docs",
    "keywords": "Class ExpressionWatcher<TSource, TProperty> Inheritance object DisposableReactiveObject ExpressionWatcher<TSource, TProperty> Implements IValueWatcher IValueProvider IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public sealed class ExpressionWatcher<TSource, TProperty> : DisposableReactiveObject, IValueWatcher, IValueProvider, IDisposable, INotifyPropertyChanged where TSource : class Type Parameters Name Description TSource TProperty Constructors Name Description ExpressionWatcher(Expression<Func<TSource, TProperty>>) ExpressionWatcher(Expression<Func<TSource, TProperty>>, Expression<Func<TSource, bool>>) Properties Name Description CanSetValue True if is is possible to set current value, requires SupportsSetValue and Source to be non-null Error HasValue Source SourceExpression SupportsSetValue True if this value watcher knows how to set current Value Value Methods Name Description FormatToString(ToStringBuilder) SetCurrentValue(object) Attempts to set current value, should throw only in extreme cases (e.g. misconfiguration), otherwise sets Error SetCurrentValue(TProperty) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Bindings.ExpressionWatcher.-ctor.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher.-ctor.html",
    "title": "Constructor ExpressionWatcher | EyeAuras Docs",
    "keywords": "Constructor ExpressionWatcher ExpressionWatcher(Type) Declaration public ExpressionWatcher(Type propertyType) Parameters Type Name Description Type propertyType"
  },
  "api/PoeShared.Bindings.ExpressionWatcher.ConditionExpression.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher.ConditionExpression.html",
    "title": "Property ConditionExpression | EyeAuras Docs",
    "keywords": "Property ConditionExpression ConditionExpression Declaration public string ConditionExpression { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.Bindings.ExpressionWatcher.FormatToString.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides DisposableReactiveObject.FormatToString(ToStringBuilder)"
  },
  "api/PoeShared.Bindings.ExpressionWatcher.SourceExpression.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher.SourceExpression.html",
    "title": "Property SourceExpression | EyeAuras Docs",
    "keywords": "Property SourceExpression SourceExpression Declaration public string SourceExpression { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.Bindings.ExpressionWatcher.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcher.html",
    "title": "Class ExpressionWatcher | EyeAuras Docs",
    "keywords": "Class ExpressionWatcher Inheritance object DisposableReactiveObject ExpressionWatcherBase ExpressionWatcher Implements IValueWatcher IValueProvider IDisposable INotifyPropertyChanged Inherited Members ExpressionWatcherBase.Binder ExpressionWatcherBase.SetCurrentValue(object) ExpressionWatcherBase.PropertyType ExpressionWatcherBase.SourceType ExpressionWatcherBase.Watcher ExpressionWatcherBase.Source ExpressionWatcherBase.Value ExpressionWatcherBase.CanSetValue ExpressionWatcherBase.SupportsSetValue ExpressionWatcherBase.HasValue ExpressionWatcherBase.Error object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public class ExpressionWatcher : ExpressionWatcherBase, IValueWatcher, IValueProvider, IDisposable, INotifyPropertyChanged Constructors Name Description ExpressionWatcher(Type) Properties Name Description ConditionExpression SourceExpression Methods Name Description FormatToString(ToStringBuilder) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.-ctor.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.-ctor.html",
    "title": "Constructor ExpressionWatcherBase | EyeAuras Docs",
    "keywords": "Constructor ExpressionWatcherBase ExpressionWatcherBase() Declaration protected ExpressionWatcherBase()"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.Binder.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.Binder.html",
    "title": "Field Binder | EyeAuras Docs",
    "keywords": "Field Binder Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax protected static readonly Binder<ExpressionWatcherBase> Binder Returns Type Description Binder<ExpressionWatcherBase>"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.CanSetValue.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.CanSetValue.html",
    "title": "Property CanSetValue | EyeAuras Docs",
    "keywords": "Property CanSetValue CanSetValue True if is is possible to set current value, requires SupportsSetValue and Source to be non-null Declaration public bool CanSetValue { get; } Property Value Type Description bool Implements IValueWatcher.CanSetValue"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.ConditionExpression.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.ConditionExpression.html",
    "title": "Property ConditionExpression | EyeAuras Docs",
    "keywords": "Property ConditionExpression ConditionExpression Declaration protected string ConditionExpression { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.Error.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Declaration public Exception Error { get; } Property Value Type Description Exception Implements IValueProvider.Error"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.HasValue.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.HasValue.html",
    "title": "Property HasValue | EyeAuras Docs",
    "keywords": "Property HasValue HasValue Declaration public bool HasValue { get; } Property Value Type Description bool Implements IValueProvider.HasValue"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.PropertyType.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.PropertyType.html",
    "title": "Property PropertyType | EyeAuras Docs",
    "keywords": "Property PropertyType PropertyType Declaration public Type PropertyType { get; protected set; } Property Value Type Description Type"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.SetCurrentValue.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.SetCurrentValue.html",
    "title": "Method SetCurrentValue | EyeAuras Docs",
    "keywords": "Method SetCurrentValue SetCurrentValue(object) Attempts to set current value, should throw only in extreme cases (e.g. misconfiguration), otherwise sets Error Declaration public void SetCurrentValue(object newValue) Parameters Type Name Description object newValue Implements IValueWatcher.SetCurrentValue(object)"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.Source.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.Source.html",
    "title": "Property Source | EyeAuras Docs",
    "keywords": "Property Source Source Declaration public object Source { get; set; } Property Value Type Description object Implements IValueWatcher.Source"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.SourceExpression.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.SourceExpression.html",
    "title": "Property SourceExpression | EyeAuras Docs",
    "keywords": "Property SourceExpression SourceExpression Declaration protected string SourceExpression { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.SourceType.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.SourceType.html",
    "title": "Property SourceType | EyeAuras Docs",
    "keywords": "Property SourceType SourceType Declaration public Type SourceType { get; } Property Value Type Description Type"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.SupportsSetValue.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.SupportsSetValue.html",
    "title": "Property SupportsSetValue | EyeAuras Docs",
    "keywords": "Property SupportsSetValue SupportsSetValue True if this value watcher knows how to set current Value Declaration public bool SupportsSetValue { get; } Property Value Type Description bool Implements IValueWatcher.SupportsSetValue"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.Value.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration public object Value { get; } Property Value Type Description object Implements IValueProvider.Value"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.Watcher.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.Watcher.html",
    "title": "Property Watcher | EyeAuras Docs",
    "keywords": "Property Watcher Watcher Declaration public IValueWatcher Watcher { get; } Property Value Type Description IValueWatcher"
  },
  "api/PoeShared.Bindings.ExpressionWatcherBase.html": {
    "href": "api/PoeShared.Bindings.ExpressionWatcherBase.html",
    "title": "Class ExpressionWatcherBase | EyeAuras Docs",
    "keywords": "Class ExpressionWatcherBase Inheritance object DisposableReactiveObject ExpressionWatcherBase ExpressionWatcher PropertyPathWatcher Implements IValueWatcher IValueProvider IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public abstract class ExpressionWatcherBase : DisposableReactiveObject, IValueWatcher, IValueProvider, IDisposable, INotifyPropertyChanged Constructors Name Description ExpressionWatcherBase() Fields Name Description Binder Properties Name Description CanSetValue True if is is possible to set current value, requires SupportsSetValue and Source to be non-null ConditionExpression Error HasValue PropertyType Source SourceExpression SourceType SupportsSetValue True if this value watcher knows how to set current Value Value Watcher Methods Name Description SetCurrentValue(object) Attempts to set current value, should throw only in extreme cases (e.g. misconfiguration), otherwise sets Error Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Bindings.IBindableReactiveObject.AddOrUpdateBinding.html": {
    "href": "api/PoeShared.Bindings.IBindableReactiveObject.AddOrUpdateBinding.html",
    "title": "Method AddOrUpdateBinding | EyeAuras Docs",
    "keywords": "Method AddOrUpdateBinding AddOrUpdateBinding(IReactiveBinding) Declaration void AddOrUpdateBinding(IReactiveBinding binding) Parameters Type Name Description IReactiveBinding binding AddOrUpdateBinding<TSource>(string, TSource, string) Declaration IReactiveBinding AddOrUpdateBinding<TSource>(string targetPropertyPath, TSource source, string sourcePropertyPath) where TSource : DisposableReactiveObject Parameters Type Name Description string targetPropertyPath TSource source string sourcePropertyPath Returns Type Description IReactiveBinding Type Parameters Name Description TSource AddOrUpdateBinding(IValueProvider, string) Declaration IReactiveBinding AddOrUpdateBinding(IValueProvider valueSource, string targetPropertyPath) Parameters Type Name Description IValueProvider valueSource string targetPropertyPath Returns Type Description IReactiveBinding"
  },
  "api/PoeShared.Bindings.IBindableReactiveObject.Bindings.html": {
    "href": "api/PoeShared.Bindings.IBindableReactiveObject.Bindings.html",
    "title": "Property Bindings | EyeAuras Docs",
    "keywords": "Property Bindings Bindings Declaration IObservableCache<IReactiveBinding, string> Bindings { get; } Property Value Type Description IObservableCache<IReactiveBinding, string>"
  },
  "api/PoeShared.Bindings.IBindableReactiveObject.BindingsList.html": {
    "href": "api/PoeShared.Bindings.IBindableReactiveObject.BindingsList.html",
    "title": "Property BindingsList | EyeAuras Docs",
    "keywords": "Property BindingsList BindingsList Declaration ReadOnlyObservableCollection<IReactiveBinding> BindingsList { get; } Property Value Type Description ReadOnlyObservableCollection<IReactiveBinding>"
  },
  "api/PoeShared.Bindings.IBindableReactiveObject.ClearBindings.html": {
    "href": "api/PoeShared.Bindings.IBindableReactiveObject.ClearBindings.html",
    "title": "Method ClearBindings | EyeAuras Docs",
    "keywords": "Method ClearBindings ClearBindings() Declaration void ClearBindings()"
  },
  "api/PoeShared.Bindings.IBindableReactiveObject.HasBindings.html": {
    "href": "api/PoeShared.Bindings.IBindableReactiveObject.HasBindings.html",
    "title": "Property HasBindings | EyeAuras Docs",
    "keywords": "Property HasBindings HasBindings Declaration bool HasBindings { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Bindings.IBindableReactiveObject.ObjectId.html": {
    "href": "api/PoeShared.Bindings.IBindableReactiveObject.ObjectId.html",
    "title": "Property ObjectId | EyeAuras Docs",
    "keywords": "Property ObjectId ObjectId Declaration string ObjectId { get; } Property Value Type Description string"
  },
  "api/PoeShared.Bindings.IBindableReactiveObject.RemoveBinding.html": {
    "href": "api/PoeShared.Bindings.IBindableReactiveObject.RemoveBinding.html",
    "title": "Method RemoveBinding | EyeAuras Docs",
    "keywords": "Method RemoveBinding RemoveBinding(string) Declaration void RemoveBinding(string targetPropertyPath) Parameters Type Name Description string targetPropertyPath RemoveBinding(IReactiveBinding) Declaration void RemoveBinding(IReactiveBinding binding) Parameters Type Name Description IReactiveBinding binding"
  },
  "api/PoeShared.Bindings.IBindableReactiveObject.ResolveBinding.html": {
    "href": "api/PoeShared.Bindings.IBindableReactiveObject.ResolveBinding.html",
    "title": "Method ResolveBinding | EyeAuras Docs",
    "keywords": "Method ResolveBinding ResolveBinding(string) Declaration IReactiveBinding ResolveBinding(string propertyPath) Parameters Type Name Description string propertyPath Returns Type Description IReactiveBinding"
  },
  "api/PoeShared.Bindings.IBindableReactiveObject.html": {
    "href": "api/PoeShared.Bindings.IBindableReactiveObject.html",
    "title": "Interface IBindableReactiveObject | EyeAuras Docs",
    "keywords": "Interface IBindableReactiveObject Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public interface IBindableReactiveObject : IDisposable, INotifyPropertyChanged Properties Name Description Bindings BindingsList HasBindings ObjectId Methods Name Description AddOrUpdateBinding(IReactiveBinding) AddOrUpdateBinding(IValueProvider, string) AddOrUpdateBinding<TSource>(string, TSource, string) ClearBindings() RemoveBinding(IReactiveBinding) RemoveBinding(string) ResolveBinding(string) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Bindings.ICsharpExpressionParser.CustomTypeProvider.html": {
    "href": "api/PoeShared.Bindings.ICsharpExpressionParser.CustomTypeProvider.html",
    "title": "Property CustomTypeProvider | EyeAuras Docs",
    "keywords": "Property CustomTypeProvider CustomTypeProvider Interface for providing functionality to find custom types for or resolve any type by full or simple name. Declaration IDynamicLinqCustomTypeProvider CustomTypeProvider { get; } Property Value Type Description IDynamicLinqCustomTypeProvider"
  },
  "api/PoeShared.Bindings.ICsharpExpressionParser.InputParameterName.html": {
    "href": "api/PoeShared.Bindings.ICsharpExpressionParser.InputParameterName.html",
    "title": "Field InputParameterName | EyeAuras Docs",
    "keywords": "Field InputParameterName Name of input parameter in lambda expressions, e.g. x => x.ToString(), InputParameterName here is \"x\" Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public const string InputParameterName = \"x\" Returns Type Description string"
  },
  "api/PoeShared.Bindings.ICsharpExpressionParser.ParseFunction.html": {
    "href": "api/PoeShared.Bindings.ICsharpExpressionParser.ParseFunction.html",
    "title": "Method ParseFunction | EyeAuras Docs",
    "keywords": "Method ParseFunction ParseFunction<TSource, TResult>(string) Parses a function expression. Declaration Expression<Func<TSource, TResult>> ParseFunction<TSource, TResult>(string expression) Parameters Type Name Description string expression The expression string to parse. Returns Type Description Expression<Func<TSource, TResult>> The parsed function expression. Type Parameters Name Description TSource The type of the source parameter. TResult The type of the result."
  },
  "api/PoeShared.Bindings.ICsharpExpressionParser.html": {
    "href": "api/PoeShared.Bindings.ICsharpExpressionParser.html",
    "title": "Interface ICsharpExpressionParser | EyeAuras Docs",
    "keywords": "Interface ICsharpExpressionParser Defines methods to parse C# expressions. Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public interface ICsharpExpressionParser Fields Name Description InputParameterName Name of input parameter in lambda expressions, e.g. x => x.ToString(), InputParameterName here is \"x\" Properties Name Description CustomTypeProvider Interface for providing functionality to find custom types for or resolve any type by full or simple name. Methods Name Description ParseFunction<TSource, TResult>(string) Parses a function expression. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Bindings.IReactiveBinding.Error.html": {
    "href": "api/PoeShared.Bindings.IReactiveBinding.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Declaration string Error { get; } Property Value Type Description string"
  },
  "api/PoeShared.Bindings.IReactiveBinding.IsActive.html": {
    "href": "api/PoeShared.Bindings.IReactiveBinding.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Declaration bool IsActive { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Bindings.IReactiveBinding.SourceWatcher.html": {
    "href": "api/PoeShared.Bindings.IReactiveBinding.SourceWatcher.html",
    "title": "Property SourceWatcher | EyeAuras Docs",
    "keywords": "Property SourceWatcher SourceWatcher Declaration IValueProvider SourceWatcher { get; } Property Value Type Description IValueProvider"
  },
  "api/PoeShared.Bindings.IReactiveBinding.TargetPropertyPath.html": {
    "href": "api/PoeShared.Bindings.IReactiveBinding.TargetPropertyPath.html",
    "title": "Property TargetPropertyPath | EyeAuras Docs",
    "keywords": "Property TargetPropertyPath TargetPropertyPath Currently it's property path - could be nested Declaration string TargetPropertyPath { get; } Property Value Type Description string"
  },
  "api/PoeShared.Bindings.IReactiveBinding.TargetWatcher.html": {
    "href": "api/PoeShared.Bindings.IReactiveBinding.TargetWatcher.html",
    "title": "Property TargetWatcher | EyeAuras Docs",
    "keywords": "Property TargetWatcher TargetWatcher Declaration IValueWatcher TargetWatcher { get; } Property Value Type Description IValueWatcher"
  },
  "api/PoeShared.Bindings.IReactiveBinding.html": {
    "href": "api/PoeShared.Bindings.IReactiveBinding.html",
    "title": "Interface IReactiveBinding | EyeAuras Docs",
    "keywords": "Interface IReactiveBinding Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public interface IReactiveBinding : IDisposable, INotifyPropertyChanged Properties Name Description Error IsActive SourceWatcher TargetPropertyPath Currently it's property path - could be nested TargetWatcher Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Bindings.IValueProvider.Error.html": {
    "href": "api/PoeShared.Bindings.IValueProvider.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Declaration Exception Error { get; } Property Value Type Description Exception"
  },
  "api/PoeShared.Bindings.IValueProvider.HasValue.html": {
    "href": "api/PoeShared.Bindings.IValueProvider.HasValue.html",
    "title": "Property HasValue | EyeAuras Docs",
    "keywords": "Property HasValue HasValue Declaration bool HasValue { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Bindings.IValueProvider.Value.html": {
    "href": "api/PoeShared.Bindings.IValueProvider.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration object Value { get; } Property Value Type Description object"
  },
  "api/PoeShared.Bindings.IValueProvider.html": {
    "href": "api/PoeShared.Bindings.IValueProvider.html",
    "title": "Interface IValueProvider | EyeAuras Docs",
    "keywords": "Interface IValueProvider Values providers are responsible for providing an actual value OR show an exception if value retrieval is not possible Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public interface IValueProvider : IDisposable, INotifyPropertyChanged Properties Name Description Error HasValue Value Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Bindings.IValueWatcher.CanSetValue.html": {
    "href": "api/PoeShared.Bindings.IValueWatcher.CanSetValue.html",
    "title": "Property CanSetValue | EyeAuras Docs",
    "keywords": "Property CanSetValue CanSetValue True if is is possible to set current value, requires SupportsSetValue and Source to be non-null Declaration bool CanSetValue { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Bindings.IValueWatcher.SetCurrentValue.html": {
    "href": "api/PoeShared.Bindings.IValueWatcher.SetCurrentValue.html",
    "title": "Method SetCurrentValue | EyeAuras Docs",
    "keywords": "Method SetCurrentValue SetCurrentValue(object) Attempts to set current value, should throw only in extreme cases (e.g. misconfiguration), otherwise sets Error Declaration void SetCurrentValue(object newValue) Parameters Type Name Description object newValue"
  },
  "api/PoeShared.Bindings.IValueWatcher.Source.html": {
    "href": "api/PoeShared.Bindings.IValueWatcher.Source.html",
    "title": "Property Source | EyeAuras Docs",
    "keywords": "Property Source Source Declaration object Source { get; set; } Property Value Type Description object"
  },
  "api/PoeShared.Bindings.IValueWatcher.SupportsSetValue.html": {
    "href": "api/PoeShared.Bindings.IValueWatcher.SupportsSetValue.html",
    "title": "Property SupportsSetValue | EyeAuras Docs",
    "keywords": "Property SupportsSetValue SupportsSetValue True if this value watcher knows how to set current Value Declaration bool SupportsSetValue { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Bindings.IValueWatcher.html": {
    "href": "api/PoeShared.Bindings.IValueWatcher.html",
    "title": "Interface IValueWatcher | EyeAuras Docs",
    "keywords": "Interface IValueWatcher Value watchers are responsible for not only providing value/error but are able to set current value in some cases Inherited Members IValueProvider.HasValue IValueProvider.Value IValueProvider.Error IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public interface IValueWatcher : IValueProvider, IDisposable, INotifyPropertyChanged Properties Name Description CanSetValue True if is is possible to set current value, requires SupportsSetValue and Source to be non-null Source SupportsSetValue True if this value watcher knows how to set current Value Methods Name Description SetCurrentValue(object) Attempts to set current value, should throw only in extreme cases (e.g. misconfiguration), otherwise sets Error Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Bindings.ObservableValueWrapper.-ctor.html": {
    "href": "api/PoeShared.Bindings.ObservableValueWrapper.-ctor.html",
    "title": "Constructor ObservableValueWrapper | EyeAuras Docs",
    "keywords": "Constructor ObservableValueWrapper ObservableValueWrapper(IObservable<object>, IValueWatcher) Declaration public ObservableValueWrapper(IObservable<object> valueSource, IValueWatcher targetWatcher) Parameters Type Name Description IObservable<object> valueSource IValueWatcher targetWatcher"
  },
  "api/PoeShared.Bindings.ObservableValueWrapper.Value.html": {
    "href": "api/PoeShared.Bindings.ObservableValueWrapper.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration public object Value { get; } Property Value Type Description object"
  },
  "api/PoeShared.Bindings.ObservableValueWrapper.html": {
    "href": "api/PoeShared.Bindings.ObservableValueWrapper.html",
    "title": "Class ObservableValueWrapper | EyeAuras Docs",
    "keywords": "Class ObservableValueWrapper Inheritance object DisposableReactiveObject ObservableValueWrapper Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public sealed class ObservableValueWrapper : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Constructors Name Description ObservableValueWrapper(IObservable<object>, IValueWatcher) Properties Name Description Value Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Bindings.PropertyPathWatcher.-ctor.html": {
    "href": "api/PoeShared.Bindings.PropertyPathWatcher.-ctor.html",
    "title": "Constructor PropertyPathWatcher | EyeAuras Docs",
    "keywords": "Constructor PropertyPathWatcher PropertyPathWatcher() Declaration public PropertyPathWatcher()"
  },
  "api/PoeShared.Bindings.PropertyPathWatcher.FormatToString.html": {
    "href": "api/PoeShared.Bindings.PropertyPathWatcher.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides DisposableReactiveObject.FormatToString(ToStringBuilder)"
  },
  "api/PoeShared.Bindings.PropertyPathWatcher.PropertyPath.html": {
    "href": "api/PoeShared.Bindings.PropertyPathWatcher.PropertyPath.html",
    "title": "Property PropertyPath | EyeAuras Docs",
    "keywords": "Property PropertyPath PropertyPath Declaration public string PropertyPath { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.Bindings.PropertyPathWatcher.html": {
    "href": "api/PoeShared.Bindings.PropertyPathWatcher.html",
    "title": "Class PropertyPathWatcher | EyeAuras Docs",
    "keywords": "Class PropertyPathWatcher Inheritance object DisposableReactiveObject ExpressionWatcherBase PropertyPathWatcher Implements IValueWatcher IValueProvider IDisposable INotifyPropertyChanged Inherited Members ExpressionWatcherBase.SetCurrentValue(object) ExpressionWatcherBase.PropertyType ExpressionWatcherBase.SourceType ExpressionWatcherBase.Watcher ExpressionWatcherBase.Source ExpressionWatcherBase.Value ExpressionWatcherBase.CanSetValue ExpressionWatcherBase.SupportsSetValue ExpressionWatcherBase.HasValue ExpressionWatcherBase.Error object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public sealed class PropertyPathWatcher : ExpressionWatcherBase, IValueWatcher, IValueProvider, IDisposable, INotifyPropertyChanged Constructors Name Description PropertyPathWatcher() Properties Name Description PropertyPath Methods Name Description FormatToString(ToStringBuilder) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Bindings.ReactiveBinding.-ctor.html": {
    "href": "api/PoeShared.Bindings.ReactiveBinding.-ctor.html",
    "title": "Constructor ReactiveBinding | EyeAuras Docs",
    "keywords": "Constructor ReactiveBinding ReactiveBinding(string, IValueProvider, IValueWatcher) Declaration public ReactiveBinding(string targetPropertyPath, IValueProvider sourceValueProvider, IValueWatcher targetWatcher) Parameters Type Name Description string targetPropertyPath IValueProvider sourceValueProvider IValueWatcher targetWatcher"
  },
  "api/PoeShared.Bindings.ReactiveBinding.Error.html": {
    "href": "api/PoeShared.Bindings.ReactiveBinding.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Declaration public string Error { get; } Property Value Type Description string Implements IReactiveBinding.Error"
  },
  "api/PoeShared.Bindings.ReactiveBinding.FormatToString.html": {
    "href": "api/PoeShared.Bindings.ReactiveBinding.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides DisposableReactiveObject.FormatToString(ToStringBuilder)"
  },
  "api/PoeShared.Bindings.ReactiveBinding.IsActive.html": {
    "href": "api/PoeShared.Bindings.ReactiveBinding.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Declaration public bool IsActive { get; } Property Value Type Description bool Implements IReactiveBinding.IsActive"
  },
  "api/PoeShared.Bindings.ReactiveBinding.SourceWatcher.html": {
    "href": "api/PoeShared.Bindings.ReactiveBinding.SourceWatcher.html",
    "title": "Property SourceWatcher | EyeAuras Docs",
    "keywords": "Property SourceWatcher SourceWatcher Declaration public IValueProvider SourceWatcher { get; } Property Value Type Description IValueProvider Implements IReactiveBinding.SourceWatcher"
  },
  "api/PoeShared.Bindings.ReactiveBinding.TargetPropertyPath.html": {
    "href": "api/PoeShared.Bindings.ReactiveBinding.TargetPropertyPath.html",
    "title": "Property TargetPropertyPath | EyeAuras Docs",
    "keywords": "Property TargetPropertyPath TargetPropertyPath Currently it's property path - could be nested Declaration public string TargetPropertyPath { get; } Property Value Type Description string Implements IReactiveBinding.TargetPropertyPath"
  },
  "api/PoeShared.Bindings.ReactiveBinding.TargetWatcher.html": {
    "href": "api/PoeShared.Bindings.ReactiveBinding.TargetWatcher.html",
    "title": "Property TargetWatcher | EyeAuras Docs",
    "keywords": "Property TargetWatcher TargetWatcher Declaration public IValueWatcher TargetWatcher { get; } Property Value Type Description IValueWatcher Implements IReactiveBinding.TargetWatcher"
  },
  "api/PoeShared.Bindings.ReactiveBinding.html": {
    "href": "api/PoeShared.Bindings.ReactiveBinding.html",
    "title": "Class ReactiveBinding | EyeAuras Docs",
    "keywords": "Class ReactiveBinding Inheritance object DisposableReactiveObject ReactiveBinding AuraReactiveBinding Implements IReactiveBinding IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Bindings Assembly: PoeShared.dll Syntax public class ReactiveBinding : DisposableReactiveObject, IReactiveBinding, IDisposable, INotifyPropertyChanged Constructors Name Description ReactiveBinding(string, IValueProvider, IValueWatcher) Properties Name Description Error IsActive SourceWatcher TargetPropertyPath Currently it's property path - could be nested TargetWatcher Methods Name Description FormatToString(ToStringBuilder) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Bindings.html": {
    "href": "api/PoeShared.Bindings.html",
    "title": "Namespace PoeShared.Bindings | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Bindings Classes BindableReactiveObject BindableReactiveObjectExtensions CsharpExpressionParser ExpressionWatcher ExpressionWatcherBase ExpressionWatcher<TSource, TProperty> ObservableValueWrapper PropertyPathWatcher ReactiveBinding Interfaces IBindableReactiveObject ICsharpExpressionParser Defines methods to parse C# expressions. IReactiveBinding IValueProvider Values providers are responsible for providing an actual value OR show an exception if value retrieval is not possible IValueWatcher Value watchers are responsible for not only providing value/error but are able to set current value in some cases"
  },
  "api/PoeShared.Blazor.BlazorContentPresenter.-ctor.html": {
    "href": "api/PoeShared.Blazor.BlazorContentPresenter.-ctor.html",
    "title": "Constructor BlazorContentPresenter | EyeAuras Docs",
    "keywords": "Constructor BlazorContentPresenter BlazorContentPresenter() Declaration public BlazorContentPresenter()"
  },
  "api/PoeShared.Blazor.BlazorContentPresenter.BuildRenderTree.html": {
    "href": "api/PoeShared.Blazor.BlazorContentPresenter.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters Type Name Description RenderTreeBuilder __builder Overrides ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/PoeShared.Blazor.BlazorContentPresenter.Content.html": {
    "href": "api/PoeShared.Blazor.BlazorContentPresenter.Content.html",
    "title": "Property Content | EyeAuras Docs",
    "keywords": "Property Content Content Declaration [Parameter] public object Content { get; set; } Property Value Type Description object"
  },
  "api/PoeShared.Blazor.BlazorContentPresenter.IsInitialized.html": {
    "href": "api/PoeShared.Blazor.BlazorContentPresenter.IsInitialized.html",
    "title": "Property IsInitialized | EyeAuras Docs",
    "keywords": "Property IsInitialized IsInitialized Declaration public bool IsInitialized { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Blazor.BlazorContentPresenter.OnInitialized.html": {
    "href": "api/PoeShared.Blazor.BlazorContentPresenter.OnInitialized.html",
    "title": "Method OnInitialized | EyeAuras Docs",
    "keywords": "Method OnInitialized OnInitialized() Declaration protected override void OnInitialized() Overrides ReactiveComponentBase.OnInitialized()"
  },
  "api/PoeShared.Blazor.BlazorContentPresenter.OnParametersSet.html": {
    "href": "api/PoeShared.Blazor.BlazorContentPresenter.OnParametersSet.html",
    "title": "Method OnParametersSet | EyeAuras Docs",
    "keywords": "Method OnParametersSet OnParametersSet() Declaration protected override void OnParametersSet() Overrides ReactiveComponentBase.OnParametersSet()"
  },
  "api/PoeShared.Blazor.BlazorContentPresenter.ResolvedViewType.html": {
    "href": "api/PoeShared.Blazor.BlazorContentPresenter.ResolvedViewType.html",
    "title": "Property ResolvedViewType | EyeAuras Docs",
    "keywords": "Property ResolvedViewType ResolvedViewType Declaration public Type ResolvedViewType { get; } Property Value Type Description Type"
  },
  "api/PoeShared.Blazor.BlazorContentPresenter.ViewRepository.html": {
    "href": "api/PoeShared.Blazor.BlazorContentPresenter.ViewRepository.html",
    "title": "Property ViewRepository | EyeAuras Docs",
    "keywords": "Property ViewRepository ViewRepository Declaration [Inject] public IBlazorViewRepository ViewRepository { get; set; } Property Value Type Description IBlazorViewRepository"
  },
  "api/PoeShared.Blazor.BlazorContentPresenter.ViewType.html": {
    "href": "api/PoeShared.Blazor.BlazorContentPresenter.ViewType.html",
    "title": "Property ViewType | EyeAuras Docs",
    "keywords": "Property ViewType ViewType Declaration [Parameter] public Type ViewType { get; set; } Property Value Type Description Type"
  },
  "api/PoeShared.Blazor.BlazorContentPresenter.ViewTypeKey.html": {
    "href": "api/PoeShared.Blazor.BlazorContentPresenter.ViewTypeKey.html",
    "title": "Property ViewTypeKey | EyeAuras Docs",
    "keywords": "Property ViewTypeKey ViewTypeKey Declaration [Parameter] public object ViewTypeKey { get; set; } Property Value Type Description object"
  },
  "api/PoeShared.Blazor.BlazorContentPresenter.html": {
    "href": "api/PoeShared.Blazor.BlazorContentPresenter.html",
    "title": "Class BlazorContentPresenter | EyeAuras Docs",
    "keywords": "Class BlazorContentPresenter Inheritance object ComponentBase ReactiveComponentBase BlazorContentPresenter Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor Assembly: PoeShared.Blazor.dll Syntax public class BlazorContentPresenter : ReactiveComponentBase, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description BlazorContentPresenter() Properties Name Description Content IsInitialized ResolvedViewType ViewRepository ViewType ViewTypeKey Methods Name Description BuildRenderTree(RenderTreeBuilder) OnInitialized() OnParametersSet() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.BlazorContentRepository.-ctor.html": {
    "href": "api/PoeShared.Blazor.BlazorContentRepository.-ctor.html",
    "title": "Constructor BlazorContentRepository | EyeAuras Docs",
    "keywords": "Constructor BlazorContentRepository BlazorContentRepository() Declaration public BlazorContentRepository()"
  },
  "api/PoeShared.Blazor.BlazorContentRepository.AdditionalFiles.html": {
    "href": "api/PoeShared.Blazor.BlazorContentRepository.AdditionalFiles.html",
    "title": "Property AdditionalFiles | EyeAuras Docs",
    "keywords": "Property AdditionalFiles AdditionalFiles Declaration public ISourceList<IFileInfo> AdditionalFiles { get; } Property Value Type Description ISourceList<IFileInfo> Implements IBlazorContentRepository.AdditionalFiles"
  },
  "api/PoeShared.Blazor.BlazorContentRepository.html": {
    "href": "api/PoeShared.Blazor.BlazorContentRepository.html",
    "title": "Class BlazorContentRepository | EyeAuras Docs",
    "keywords": "Class BlazorContentRepository Inheritance object BlazorContentRepository Implements IBlazorContentRepository Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor Assembly: PoeShared.Blazor.dll Syntax public sealed class BlazorContentRepository : IBlazorContentRepository Constructors Name Description BlazorContentRepository() Properties Name Description AdditionalFiles Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.BlazorReactiveComponent-1.-ctor.html": {
    "href": "api/PoeShared.Blazor.BlazorReactiveComponent-1.-ctor.html",
    "title": "Constructor BlazorReactiveComponent | EyeAuras Docs",
    "keywords": "Constructor BlazorReactiveComponent BlazorReactiveComponent() Declaration protected BlazorReactiveComponent()"
  },
  "api/PoeShared.Blazor.BlazorReactiveComponent-1.DataContext.html": {
    "href": "api/PoeShared.Blazor.BlazorReactiveComponent-1.DataContext.html",
    "title": "Property DataContext | EyeAuras Docs",
    "keywords": "Property DataContext DataContext Declaration public TContext DataContext { get; set; } Property Value Type Description TContext"
  },
  "api/PoeShared.Blazor.BlazorReactiveComponent-1.OnInitialized.html": {
    "href": "api/PoeShared.Blazor.BlazorReactiveComponent-1.OnInitialized.html",
    "title": "Method OnInitialized | EyeAuras Docs",
    "keywords": "Method OnInitialized OnInitialized() Declaration protected override void OnInitialized() Overrides ReactiveComponentBase.OnInitialized()"
  },
  "api/PoeShared.Blazor.BlazorReactiveComponent-1.Track.html": {
    "href": "api/PoeShared.Blazor.BlazorReactiveComponent-1.Track.html",
    "title": "Method Track | EyeAuras Docs",
    "keywords": "Method Track Track<TOut>(Expression<Func<TContext, TOut>>) Declaration public TOut Track<TOut>(Expression<Func<TContext, TOut>> selector) Parameters Type Name Description Expression<Func<TContext, TOut>> selector Returns Type Description TOut Type Parameters Name Description TOut"
  },
  "api/PoeShared.Blazor.BlazorReactiveComponent-1.TrackState.html": {
    "href": "api/PoeShared.Blazor.BlazorReactiveComponent-1.TrackState.html",
    "title": "Method TrackState | EyeAuras Docs",
    "keywords": "Method TrackState TrackState<TOut>(Expression<Func<TContext, TOut>>) Declaration public void TrackState<TOut>(Expression<Func<TContext, TOut>> selector) Parameters Type Name Description Expression<Func<TContext, TOut>> selector Type Parameters Name Description TOut"
  },
  "api/PoeShared.Blazor.BlazorReactiveComponent-1.html": {
    "href": "api/PoeShared.Blazor.BlazorReactiveComponent-1.html",
    "title": "Class BlazorReactiveComponent<TContext> | EyeAuras Docs",
    "keywords": "Class BlazorReactiveComponent<TContext> Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent BlazorReactiveComponent<TContext> BehaviorTreeDebugger BehaviorTreeNodeEditor BehaviorTreeNodeIcon BehaviorTreeNodeLabel BehaviorTreeSelector BehaviorTreeNodeEditor CheckBlackboardConditionNodeEditor CooldownNodeEditor SetBlackboardConditionNodeEditor SubTreeNodeEditor TimeoutNodeEditor ReactiveBlazorReteControl AuraEventLogViewer MainCounterView WebUIComponent WebAuraGraph Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder) ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor Assembly: PoeShared.Blazor.dll Syntax public abstract class BlazorReactiveComponent<TContext> : BlazorReactiveComponent, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent where TContext : class Type Parameters Name Description TContext Constructors Name Description BlazorReactiveComponent() Properties Name Description DataContext Methods Name Description OnInitialized() TrackState<TOut>(Expression<Func<TContext, TOut>>) Track<TOut>(Expression<Func<TContext, TOut>>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.BlazorReactiveComponent.-ctor.html": {
    "href": "api/PoeShared.Blazor.BlazorReactiveComponent.-ctor.html",
    "title": "Constructor BlazorReactiveComponent | EyeAuras Docs",
    "keywords": "Constructor BlazorReactiveComponent BlazorReactiveComponent() Declaration protected BlazorReactiveComponent()"
  },
  "api/PoeShared.Blazor.BlazorReactiveComponent.html": {
    "href": "api/PoeShared.Blazor.BlazorReactiveComponent.html",
    "title": "Class BlazorReactiveComponent | EyeAuras Docs",
    "keywords": "Class BlazorReactiveComponent Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent EyePagination<TItem> ReactiveButton BlazorReactiveComponent<TContext> Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members BlazorReactiveComponentBase.Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) BlazorReactiveComponentBase.JsRuntime BlazorReactiveComponentBase.DataContext BlazorReactiveComponentBase.WhenChanged ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder) ReactiveComponentBase.OnInitialized() ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor Assembly: PoeShared.Blazor.dll Syntax public abstract class BlazorReactiveComponent : BlazorReactiveComponentBase, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description BlazorReactiveComponent() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.BlazorReactiveComponentBase.-ctor.html": {
    "href": "api/PoeShared.Blazor.BlazorReactiveComponentBase.-ctor.html",
    "title": "Constructor BlazorReactiveComponentBase | EyeAuras Docs",
    "keywords": "Constructor BlazorReactiveComponentBase BlazorReactiveComponentBase() Declaration protected BlazorReactiveComponentBase()"
  },
  "api/PoeShared.Blazor.BlazorReactiveComponentBase.DataContext.html": {
    "href": "api/PoeShared.Blazor.BlazorReactiveComponentBase.DataContext.html",
    "title": "Property DataContext | EyeAuras Docs",
    "keywords": "Property DataContext DataContext Declaration [Parameter] public object DataContext { get; set; } Property Value Type Description object"
  },
  "api/PoeShared.Blazor.BlazorReactiveComponentBase.JsRuntime.html": {
    "href": "api/PoeShared.Blazor.BlazorReactiveComponentBase.JsRuntime.html",
    "title": "Property JsRuntime | EyeAuras Docs",
    "keywords": "Property JsRuntime JsRuntime Declaration [Inject] public IJSRuntime JsRuntime { get; } Property Value Type Description IJSRuntime"
  },
  "api/PoeShared.Blazor.BlazorReactiveComponentBase.Track.html": {
    "href": "api/PoeShared.Blazor.BlazorReactiveComponentBase.Track.html",
    "title": "Method Track | EyeAuras Docs",
    "keywords": "Method Track Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) Declaration public TOut Track<TExpressionContext, TOut>(TExpressionContext context, Expression<Func<TExpressionContext, TOut>> selector) where TExpressionContext : class Parameters Type Name Description TExpressionContext context Expression<Func<TExpressionContext, TOut>> selector Returns Type Description TOut Type Parameters Name Description TExpressionContext TOut"
  },
  "api/PoeShared.Blazor.BlazorReactiveComponentBase.WhenChanged.html": {
    "href": "api/PoeShared.Blazor.BlazorReactiveComponentBase.WhenChanged.html",
    "title": "Property WhenChanged | EyeAuras Docs",
    "keywords": "Property WhenChanged WhenChanged Declaration public IObservable<object> WhenChanged { get; } Property Value Type Description IObservable<object>"
  },
  "api/PoeShared.Blazor.BlazorReactiveComponentBase.html": {
    "href": "api/PoeShared.Blazor.BlazorReactiveComponentBase.html",
    "title": "Class BlazorReactiveComponentBase | EyeAuras Docs",
    "keywords": "Class BlazorReactiveComponentBase Inheritance object ComponentBase ReactiveComponentBase BlazorReactiveComponentBase BlazorReactiveComponent Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members ReactiveComponentBase.PrepareLogger() ReactiveComponentBase.Dispose() ReactiveComponentBase.Refresh() ReactiveComponentBase.ShouldRender() ReactiveComponentBase.OnAfterRender(bool) ReactiveComponentBase.OnAfterRenderAsync(bool) ReactiveComponentBase.BuildRenderTree(RenderTreeBuilder) ReactiveComponentBase.OnInitialized() ReactiveComponentBase.OnInitializedAsync() ReactiveComponentBase.OnParametersSet() ReactiveComponentBase.SetParametersAsync(ParameterView) ReactiveComponentBase.OnParametersSetAsync() ReactiveComponentBase.RaisePropertyChanged(string) ReactiveComponentBase.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveComponentBase.RefreshPeriod ReactiveComponentBase.WhenRefresh ReactiveComponentBase.Log ReactiveComponentBase.ObjectId ReactiveComponentBase.RefreshCount ReactiveComponentBase.RawRefreshCount ReactiveComponentBase.Name ReactiveComponentBase.Anchors ReactiveComponentBase.PropertyChanged ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor Assembly: PoeShared.Blazor.dll Syntax public abstract class BlazorReactiveComponentBase : ReactiveComponentBase, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description BlazorReactiveComponentBase() Properties Name Description DataContext JsRuntime WhenChanged Methods Name Description Track<TExpressionContext, TOut>(TExpressionContext, Expression<Func<TExpressionContext, TOut>>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.-ctor.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.-ctor.html",
    "title": "Constructor DisposableReactiveComponent | EyeAuras Docs",
    "keywords": "Constructor DisposableReactiveComponent DisposableReactiveComponent() Declaration protected DisposableReactiveComponent()"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.Error.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Declaration public string Error { get; protected set; } Property Value Type Description string Implements IHasError.Error"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.HandleAfterRenderAsync.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.HandleAfterRenderAsync.html",
    "title": "Method HandleAfterRenderAsync | EyeAuras Docs",
    "keywords": "Method HandleAfterRenderAsync HandleAfterRenderAsync(bool) Declaration protected virtual Task HandleAfterRenderAsync(bool firstRender) Parameters Type Name Description bool firstRender Returns Type Description Task"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.HandleInitializedAsync.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.HandleInitializedAsync.html",
    "title": "Method HandleInitializedAsync | EyeAuras Docs",
    "keywords": "Method HandleInitializedAsync HandleInitializedAsync() Declaration protected virtual Task HandleInitializedAsync() Returns Type Description Task"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.HandleParametersSetAsync.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.HandleParametersSetAsync.html",
    "title": "Method HandleParametersSetAsync | EyeAuras Docs",
    "keywords": "Method HandleParametersSetAsync HandleParametersSetAsync() Declaration protected virtual Task HandleParametersSetAsync() Returns Type Description Task"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.HandleSubmit.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.HandleSubmit.html",
    "title": "Method HandleSubmit | EyeAuras Docs",
    "keywords": "Method HandleSubmit HandleSubmit(EditContext) Declaration public Task HandleSubmit(EditContext context) Parameters Type Name Description EditContext context Returns Type Description Task"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.HandleSubmitInternal.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.HandleSubmitInternal.html",
    "title": "Method HandleSubmitInternal | EyeAuras Docs",
    "keywords": "Method HandleSubmitInternal HandleSubmitInternal(EditContext) Declaration protected virtual Task HandleSubmitInternal(EditContext context) Parameters Type Name Description EditContext context Returns Type Description Task"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.HandleValidSubmit.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.HandleValidSubmit.html",
    "title": "Method HandleValidSubmit | EyeAuras Docs",
    "keywords": "Method HandleValidSubmit HandleValidSubmit() Declaration protected virtual Task HandleValidSubmit() Returns Type Description Task"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.HttpContextAccessor.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.HttpContextAccessor.html",
    "title": "Property HttpContextAccessor | EyeAuras Docs",
    "keywords": "Property HttpContextAccessor HttpContextAccessor Declaration public IHttpContextAccessor HttpContextAccessor { get; set; } Property Value Type Description IHttpContextAccessor"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.JsRuntime.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.JsRuntime.html",
    "title": "Property JsRuntime | EyeAuras Docs",
    "keywords": "Property JsRuntime JsRuntime Declaration public IJSRuntime JsRuntime { get; set; } Property Value Type Description IJSRuntime"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.Localizer.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.Localizer.html",
    "title": "Property Localizer | EyeAuras Docs",
    "keywords": "Property Localizer Localizer Declaration public IStringLocalizer Localizer { get; set; } Property Value Type Description IStringLocalizer"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.NavigationManager.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.NavigationManager.html",
    "title": "Property NavigationManager | EyeAuras Docs",
    "keywords": "Property NavigationManager NavigationManager Declaration public NavigationManager NavigationManager { get; set; } Property Value Type Description NavigationManager"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.OnAfterRenderAsync.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.OnAfterRenderAsync.html",
    "title": "Method OnAfterRenderAsync | EyeAuras Docs",
    "keywords": "Method OnAfterRenderAsync OnAfterRenderAsync(bool) Declaration public Task OnAfterRenderAsync(bool firstRender) Parameters Type Name Description bool firstRender Returns Type Description Task"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.OnInitializedAsync.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.OnInitializedAsync.html",
    "title": "Method OnInitializedAsync | EyeAuras Docs",
    "keywords": "Method OnInitializedAsync OnInitializedAsync() Declaration public Task OnInitializedAsync() Returns Type Description Task"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.OnParametersSetAsync.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.OnParametersSetAsync.html",
    "title": "Method OnParametersSetAsync | EyeAuras Docs",
    "keywords": "Method OnParametersSetAsync OnParametersSetAsync() Declaration public Task OnParametersSetAsync() Returns Type Description Task"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.QueryParameters.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.QueryParameters.html",
    "title": "Property QueryParameters | EyeAuras Docs",
    "keywords": "Property QueryParameters QueryParameters Declaration public IDictionary<string, StringValues> QueryParameters { get; set; } Property Value Type Description IDictionary<string, StringValues>"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.Validate.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.Validate.html",
    "title": "Method Validate | EyeAuras Docs",
    "keywords": "Method Validate Validate() Declaration protected virtual Task<ValidationResult> Validate() Returns Type Description Task<ValidationResult>"
  },
  "api/PoeShared.Blazor.DisposableReactiveComponent.html": {
    "href": "api/PoeShared.Blazor.DisposableReactiveComponent.html",
    "title": "Class DisposableReactiveComponent | EyeAuras Docs",
    "keywords": "Class DisposableReactiveComponent Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger DisposableReactiveComponent Implements IDisposable INotifyPropertyChanged IHasError Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor Assembly: PoeShared.Blazor.dll Syntax public abstract class DisposableReactiveComponent : DisposableReactiveObjectWithLogger, IDisposable, INotifyPropertyChanged, IHasError Constructors Name Description DisposableReactiveComponent() Properties Name Description Error HttpContextAccessor JsRuntime Localizer NavigationManager QueryParameters Methods Name Description HandleAfterRenderAsync(bool) HandleInitializedAsync() HandleParametersSetAsync() HandleSubmit(EditContext) HandleSubmitInternal(EditContext) HandleValidSubmit() OnAfterRenderAsync(bool) OnInitializedAsync() OnParametersSetAsync() Validate() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.IBlazorContentRepository.AdditionalFiles.html": {
    "href": "api/PoeShared.Blazor.IBlazorContentRepository.AdditionalFiles.html",
    "title": "Property AdditionalFiles | EyeAuras Docs",
    "keywords": "Property AdditionalFiles AdditionalFiles Declaration ISourceList<IFileInfo> AdditionalFiles { get; } Property Value Type Description ISourceList<IFileInfo>"
  },
  "api/PoeShared.Blazor.IBlazorContentRepository.html": {
    "href": "api/PoeShared.Blazor.IBlazorContentRepository.html",
    "title": "Interface IBlazorContentRepository | EyeAuras Docs",
    "keywords": "Interface IBlazorContentRepository Namespace: PoeShared.Blazor Assembly: PoeShared.Blazor.dll Syntax public interface IBlazorContentRepository Properties Name Description AdditionalFiles Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.IReactiveComponent.html": {
    "href": "api/PoeShared.Blazor.IReactiveComponent.html",
    "title": "Interface IReactiveComponent | EyeAuras Docs",
    "keywords": "Interface IReactiveComponent Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IRefreshableComponent.WhenRefresh Namespace: PoeShared.Blazor Assembly: PoeShared.Blazor.dll Syntax public interface IReactiveComponent : IDisposable, INotifyPropertyChanged, IRefreshableComponent Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.IRefreshableComponent.WhenRefresh.html": {
    "href": "api/PoeShared.Blazor.IRefreshableComponent.WhenRefresh.html",
    "title": "Property WhenRefresh | EyeAuras Docs",
    "keywords": "Property WhenRefresh WhenRefresh Two-side channel which allows no notify component when it has to be refreshed AND allows the component model to notify about refresh request Declaration ISubject<object> WhenRefresh { get; } Property Value Type Description ISubject<object>"
  },
  "api/PoeShared.Blazor.IRefreshableComponent.html": {
    "href": "api/PoeShared.Blazor.IRefreshableComponent.html",
    "title": "Interface IRefreshableComponent | EyeAuras Docs",
    "keywords": "Interface IRefreshableComponent Namespace: PoeShared.Blazor Assembly: PoeShared.Blazor.dll Syntax public interface IRefreshableComponent Properties Name Description WhenRefresh Two-side channel which allows no notify component when it has to be refreshed AND allows the component model to notify about refresh request Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Prism.BlazorServiceCollection.-ctor.html": {
    "href": "api/PoeShared.Blazor.Prism.BlazorServiceCollection.-ctor.html",
    "title": "Constructor BlazorServiceCollection | EyeAuras Docs",
    "keywords": "Constructor BlazorServiceCollection BlazorServiceCollection() Declaration public BlazorServiceCollection()"
  },
  "api/PoeShared.Blazor.Prism.BlazorServiceCollection.Instance.html": {
    "href": "api/PoeShared.Blazor.Prism.BlazorServiceCollection.Instance.html",
    "title": "Property Instance | EyeAuras Docs",
    "keywords": "Property Instance Instance Declaration public static BlazorServiceCollection Instance { get; } Property Value Type Description BlazorServiceCollection"
  },
  "api/PoeShared.Blazor.Prism.BlazorServiceCollection.html": {
    "href": "api/PoeShared.Blazor.Prism.BlazorServiceCollection.html",
    "title": "Class BlazorServiceCollection | EyeAuras Docs",
    "keywords": "Class BlazorServiceCollection Inheritance object ServiceCollection BlazorServiceCollection Implements IServiceCollection IList<ServiceDescriptor> ICollection<ServiceDescriptor> IEnumerable<ServiceDescriptor> IEnumerable Inherited Members ServiceCollection.Clear() ServiceCollection.Contains(ServiceDescriptor) ServiceCollection.CopyTo(ServiceDescriptor[], int) ServiceCollection.Remove(ServiceDescriptor) ServiceCollection.GetEnumerator() ServiceCollection.IndexOf(ServiceDescriptor) ServiceCollection.Insert(int, ServiceDescriptor) ServiceCollection.RemoveAt(int) ServiceCollection.Count ServiceCollection.IsReadOnly ServiceCollection.this[int] object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor.Prism Assembly: PoeShared.Blazor.dll Syntax public sealed class BlazorServiceCollection : ServiceCollection, IServiceCollection, IList<ServiceDescriptor>, ICollection<ServiceDescriptor>, IEnumerable<ServiceDescriptor>, IEnumerable Constructors Name Description BlazorServiceCollection() Properties Name Description Instance Extension Methods ServiceCollectionExtension.AddBlazorContentRepository(IServiceCollection, IUnityContainer) ServiceCollectionExtension.AddBlazorRepository(IServiceCollection, IUnityContainer) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Prism.ServiceCollectionExtension.AddBlazorContentRepository.html": {
    "href": "api/PoeShared.Blazor.Prism.ServiceCollectionExtension.AddBlazorContentRepository.html",
    "title": "Method AddBlazorContentRepository | EyeAuras Docs",
    "keywords": "Method AddBlazorContentRepository AddBlazorContentRepository(IServiceCollection, IUnityContainer) Declaration public static IServiceCollection AddBlazorContentRepository(this IServiceCollection services, IUnityContainer unityContainer) Parameters Type Name Description IServiceCollection services IUnityContainer unityContainer Returns Type Description IServiceCollection"
  },
  "api/PoeShared.Blazor.Prism.ServiceCollectionExtension.AddBlazorRepository.html": {
    "href": "api/PoeShared.Blazor.Prism.ServiceCollectionExtension.AddBlazorRepository.html",
    "title": "Method AddBlazorRepository | EyeAuras Docs",
    "keywords": "Method AddBlazorRepository AddBlazorRepository(IServiceCollection, IUnityContainer) Declaration public static IServiceCollection AddBlazorRepository(this IServiceCollection services, IUnityContainer unityContainer) Parameters Type Name Description IServiceCollection services IUnityContainer unityContainer Returns Type Description IServiceCollection"
  },
  "api/PoeShared.Blazor.Prism.ServiceCollectionExtension.html": {
    "href": "api/PoeShared.Blazor.Prism.ServiceCollectionExtension.html",
    "title": "Class ServiceCollectionExtension | EyeAuras Docs",
    "keywords": "Class ServiceCollectionExtension Inheritance object ServiceCollectionExtension Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor.Prism Assembly: PoeShared.Blazor.dll Syntax public static class ServiceCollectionExtension Methods Name Description AddBlazorContentRepository(IServiceCollection, IUnityContainer) AddBlazorRepository(IServiceCollection, IUnityContainer)"
  },
  "api/PoeShared.Blazor.Prism.html": {
    "href": "api/PoeShared.Blazor.Prism.html",
    "title": "Namespace PoeShared.Blazor.Prism | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Blazor.Prism Classes BlazorServiceCollection ServiceCollectionExtension"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.-ctor.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.-ctor.html",
    "title": "Constructor ReactiveComponentBase | EyeAuras Docs",
    "keywords": "Constructor ReactiveComponentBase ReactiveComponentBase() Declaration protected ReactiveComponentBase()"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.Anchors.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.Anchors.html",
    "title": "Property Anchors | EyeAuras Docs",
    "keywords": "Property Anchors Anchors Gets a composite disposable container that can contain multiple disposables, all of which will be disposed when this container is disposed. Declaration public CompositeDisposable Anchors { get; } Property Value Type Description CompositeDisposable A composite disposable containing all disposables associated with this object."
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.BuildRenderTree.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.BuildRenderTree.html",
    "title": "Method BuildRenderTree | EyeAuras Docs",
    "keywords": "Method BuildRenderTree BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder builder) Parameters Type Name Description RenderTreeBuilder builder Overrides ComponentBase.BuildRenderTree(RenderTreeBuilder)"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.Dispose.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.Dispose.html",
    "title": "Method Dispose | EyeAuras Docs",
    "keywords": "Method Dispose Dispose() Declaration public void Dispose() Implements IDisposable.Dispose()"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.Log.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.Log.html",
    "title": "Property Log | EyeAuras Docs",
    "keywords": "Property Log Log Declaration protected IFluentLog Log { get; } Property Value Type Description IFluentLog"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.Name.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration [Parameter] public string Name { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.ObjectId.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.ObjectId.html",
    "title": "Property ObjectId | EyeAuras Docs",
    "keywords": "Property ObjectId ObjectId Declaration protected string ObjectId { get; } Property Value Type Description string"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.OnAfterRender.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.OnAfterRender.html",
    "title": "Method OnAfterRender | EyeAuras Docs",
    "keywords": "Method OnAfterRender OnAfterRender(bool) Declaration protected override void OnAfterRender(bool firstRender) Parameters Type Name Description bool firstRender Overrides ComponentBase.OnAfterRender(bool)"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.OnAfterRenderAsync.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.OnAfterRenderAsync.html",
    "title": "Method OnAfterRenderAsync | EyeAuras Docs",
    "keywords": "Method OnAfterRenderAsync OnAfterRenderAsync(bool) Declaration protected override Task OnAfterRenderAsync(bool firstRender) Parameters Type Name Description bool firstRender Returns Type Description Task Overrides ComponentBase.OnAfterRenderAsync(bool)"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.OnInitialized.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.OnInitialized.html",
    "title": "Method OnInitialized | EyeAuras Docs",
    "keywords": "Method OnInitialized OnInitialized() Declaration protected override void OnInitialized() Overrides ComponentBase.OnInitialized()"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.OnInitializedAsync.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.OnInitializedAsync.html",
    "title": "Method OnInitializedAsync | EyeAuras Docs",
    "keywords": "Method OnInitializedAsync OnInitializedAsync() Declaration protected override Task OnInitializedAsync() Returns Type Description Task Overrides ComponentBase.OnInitializedAsync()"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.OnParametersSet.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.OnParametersSet.html",
    "title": "Method OnParametersSet | EyeAuras Docs",
    "keywords": "Method OnParametersSet OnParametersSet() Declaration protected override void OnParametersSet() Overrides ComponentBase.OnParametersSet()"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.OnParametersSetAsync.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.OnParametersSetAsync.html",
    "title": "Method OnParametersSetAsync | EyeAuras Docs",
    "keywords": "Method OnParametersSetAsync OnParametersSetAsync() Declaration protected override Task OnParametersSetAsync() Returns Type Description Task Overrides ComponentBase.OnParametersSetAsync()"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.PrepareLogger.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.PrepareLogger.html",
    "title": "Method PrepareLogger | EyeAuras Docs",
    "keywords": "Method PrepareLogger PrepareLogger() Declaration protected virtual IFluentLog PrepareLogger() Returns Type Description IFluentLog"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.PropertyChanged.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.PropertyChanged.html",
    "title": "Event PropertyChanged | EyeAuras Docs",
    "keywords": "Event PropertyChanged Implements PropertyChanged Namespace: PoeShared.Blazor Assembly: PoeShared.Blazor.dll Syntax public event PropertyChangedEventHandler PropertyChanged Returns Type Description PropertyChangedEventHandler"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.RaiseAndSet.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.RaiseAndSet.html",
    "title": "Method RaiseAndSet | EyeAuras Docs",
    "keywords": "Method RaiseAndSet RaiseAndSet<TRet>(ref TRet, TRet, string) Declaration protected TRet RaiseAndSet<TRet>(ref TRet backingField, TRet newValue, string propertyName = null) Parameters Type Name Description TRet backingField TRet newValue string propertyName Returns Type Description TRet Type Parameters Name Description TRet"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.RaiseAndSetIfChanged.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.RaiseAndSetIfChanged.html",
    "title": "Method RaiseAndSetIfChanged | EyeAuras Docs",
    "keywords": "Method RaiseAndSetIfChanged RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) Declaration protected TRet RaiseAndSetIfChanged<TRet>(ref TRet backingField, TRet newValue, string propertyName = null) Parameters Type Name Description TRet backingField TRet newValue string propertyName Returns Type Description TRet Type Parameters Name Description TRet"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.RaisePropertyChanged.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.RaisePropertyChanged.html",
    "title": "Method RaisePropertyChanged | EyeAuras Docs",
    "keywords": "Method RaisePropertyChanged RaisePropertyChanged(string) Raises a change notification indicating that a property has changed. Declaration public void RaisePropertyChanged(string propertyName) Parameters Type Name Description string propertyName The name of the property that has changed."
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.RawRefreshCount.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.RawRefreshCount.html",
    "title": "Property RawRefreshCount | EyeAuras Docs",
    "keywords": "Property RawRefreshCount RawRefreshCount Declaration public long RawRefreshCount { get; } Property Value Type Description long"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.Refresh.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.Refresh.html",
    "title": "Method Refresh | EyeAuras Docs",
    "keywords": "Method Refresh Refresh() Declaration protected Task Refresh() Returns Type Description Task"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.RefreshCount.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.RefreshCount.html",
    "title": "Property RefreshCount | EyeAuras Docs",
    "keywords": "Property RefreshCount RefreshCount Declaration public long RefreshCount { get; } Property Value Type Description long"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.RefreshPeriod.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.RefreshPeriod.html",
    "title": "Property RefreshPeriod | EyeAuras Docs",
    "keywords": "Property RefreshPeriod RefreshPeriod Declaration public TimeSpan RefreshPeriod { get; set; } Property Value Type Description TimeSpan"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.SetParametersAsync.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.SetParametersAsync.html",
    "title": "Method SetParametersAsync | EyeAuras Docs",
    "keywords": "Method SetParametersAsync SetParametersAsync(ParameterView) Declaration public override Task SetParametersAsync(ParameterView parameters) Parameters Type Name Description ParameterView parameters Returns Type Description Task Overrides ComponentBase.SetParametersAsync(ParameterView)"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.ShouldRender.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.ShouldRender.html",
    "title": "Method ShouldRender | EyeAuras Docs",
    "keywords": "Method ShouldRender ShouldRender() Declaration protected override bool ShouldRender() Returns Type Description bool Overrides ComponentBase.ShouldRender()"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.WhenRefresh.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.WhenRefresh.html",
    "title": "Property WhenRefresh | EyeAuras Docs",
    "keywords": "Property WhenRefresh WhenRefresh Two-side channel which allows no notify component when it has to be refreshed AND allows the component model to notify about refresh request Declaration public ISubject<object> WhenRefresh { get; } Property Value Type Description ISubject<object> Implements IRefreshableComponent.WhenRefresh"
  },
  "api/PoeShared.Blazor.ReactiveComponentBase.html": {
    "href": "api/PoeShared.Blazor.ReactiveComponentBase.html",
    "title": "Class ReactiveComponentBase | EyeAuras Docs",
    "keywords": "Class ReactiveComponentBase Inheritance object ComponentBase ReactiveComponentBase BlazorContentPresenter BlazorReactiveComponentBase Implements IComponent IHandleEvent IHandleAfterRender IReactiveComponent IDisposable INotifyPropertyChanged IRefreshableComponent Inherited Members ComponentBase.StateHasChanged() ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor Assembly: PoeShared.Blazor.dll Syntax public abstract class ReactiveComponentBase : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender, IReactiveComponent, IDisposable, INotifyPropertyChanged, IRefreshableComponent Constructors Name Description ReactiveComponentBase() Properties Name Description Anchors Gets a composite disposable container that can contain multiple disposables, all of which will be disposed when this container is disposed. Log Name ObjectId RawRefreshCount RefreshCount RefreshPeriod WhenRefresh Two-side channel which allows no notify component when it has to be refreshed AND allows the component model to notify about refresh request Methods Name Description BuildRenderTree(RenderTreeBuilder) Dispose() OnAfterRender(bool) OnAfterRenderAsync(bool) OnInitialized() OnInitializedAsync() OnParametersSet() OnParametersSetAsync() PrepareLogger() RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) RaiseAndSet<TRet>(ref TRet, TRet, string) RaisePropertyChanged(string) Raises a change notification indicating that a property has changed. Refresh() SetParametersAsync(ParameterView) ShouldRender() Events Name Description PropertyChanged Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Scaffolding.BlazorErrorBoundary.-ctor.html": {
    "href": "api/PoeShared.Blazor.Scaffolding.BlazorErrorBoundary.-ctor.html",
    "title": "Constructor BlazorErrorBoundary | EyeAuras Docs",
    "keywords": "Constructor BlazorErrorBoundary BlazorErrorBoundary() Declaration public BlazorErrorBoundary()"
  },
  "api/PoeShared.Blazor.Scaffolding.BlazorErrorBoundary.CurrentException.html": {
    "href": "api/PoeShared.Blazor.Scaffolding.BlazorErrorBoundary.CurrentException.html",
    "title": "Property CurrentException | EyeAuras Docs",
    "keywords": "Property CurrentException CurrentException Declaration public Exception CurrentException { get; } Property Value Type Description Exception"
  },
  "api/PoeShared.Blazor.Scaffolding.BlazorErrorBoundary.html": {
    "href": "api/PoeShared.Blazor.Scaffolding.BlazorErrorBoundary.html",
    "title": "Class BlazorErrorBoundary | EyeAuras Docs",
    "keywords": "Class BlazorErrorBoundary Inheritance object ComponentBase ErrorBoundaryBase ErrorBoundary BlazorErrorBoundary Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ErrorBoundary.OnErrorAsync(Exception) ErrorBoundary.BuildRenderTree(RenderTreeBuilder) ErrorBoundaryBase.Recover() ErrorBoundaryBase.ChildContent ErrorBoundaryBase.ErrorContent ErrorBoundaryBase.MaximumErrorCount ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.SetParametersAsync(ParameterView) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor.Scaffolding Assembly: PoeShared.Blazor.dll Syntax public class BlazorErrorBoundary : ErrorBoundary, IComponent, IHandleEvent, IHandleAfterRender Constructors Name Description BlazorErrorBoundary() Properties Name Description CurrentException Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Scaffolding.FileProviderExtensions.Watch.html": {
    "href": "api/PoeShared.Blazor.Scaffolding.FileProviderExtensions.Watch.html",
    "title": "Method Watch | EyeAuras Docs",
    "keywords": "Method Watch Watch(PhysicalFileProvider, string) Declaration public static IObservable<FileSystemEventArgs> Watch(this PhysicalFileProvider fileProvider, string fileName) Parameters Type Name Description PhysicalFileProvider fileProvider string fileName Returns Type Description IObservable<FileSystemEventArgs>"
  },
  "api/PoeShared.Blazor.Scaffolding.FileProviderExtensions.html": {
    "href": "api/PoeShared.Blazor.Scaffolding.FileProviderExtensions.html",
    "title": "Class FileProviderExtensions | EyeAuras Docs",
    "keywords": "Class FileProviderExtensions Inheritance object FileProviderExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor.Scaffolding Assembly: PoeShared.Blazor.dll Syntax public static class FileProviderExtensions Methods Name Description Watch(PhysicalFileProvider, string)"
  },
  "api/PoeShared.Blazor.Scaffolding.html": {
    "href": "api/PoeShared.Blazor.Scaffolding.html",
    "title": "Namespace PoeShared.Blazor.Scaffolding | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Blazor.Scaffolding Classes BlazorErrorBoundary FileProviderExtensions"
  },
  "api/PoeShared.Blazor.Services.BlazorViewAttribute.-ctor.html": {
    "href": "api/PoeShared.Blazor.Services.BlazorViewAttribute.-ctor.html",
    "title": "Constructor BlazorViewAttribute | EyeAuras Docs",
    "keywords": "Constructor BlazorViewAttribute BlazorViewAttribute() Declaration public BlazorViewAttribute()"
  },
  "api/PoeShared.Blazor.Services.BlazorViewAttribute.IsForManualRegistrationOnly.html": {
    "href": "api/PoeShared.Blazor.Services.BlazorViewAttribute.IsForManualRegistrationOnly.html",
    "title": "Property IsForManualRegistrationOnly | EyeAuras Docs",
    "keywords": "Property IsForManualRegistrationOnly IsForManualRegistrationOnly Declaration public bool IsForManualRegistrationOnly { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.Blazor.Services.BlazorViewAttribute.ViewKey.html": {
    "href": "api/PoeShared.Blazor.Services.BlazorViewAttribute.ViewKey.html",
    "title": "Property ViewKey | EyeAuras Docs",
    "keywords": "Property ViewKey ViewKey Declaration public object ViewKey { get; set; } Property Value Type Description object"
  },
  "api/PoeShared.Blazor.Services.BlazorViewAttribute.html": {
    "href": "api/PoeShared.Blazor.Services.BlazorViewAttribute.html",
    "title": "Class BlazorViewAttribute | EyeAuras Docs",
    "keywords": "Class BlazorViewAttribute Inheritance object Attribute BlazorViewAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Blazor.Services Assembly: PoeShared.Blazor.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = true)] public class BlazorViewAttribute : Attribute Constructors Name Description BlazorViewAttribute() Properties Name Description IsForManualRegistrationOnly ViewKey Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Services.BlazorViewRepository.-ctor.html": {
    "href": "api/PoeShared.Blazor.Services.BlazorViewRepository.-ctor.html",
    "title": "Constructor BlazorViewRepository | EyeAuras Docs",
    "keywords": "Constructor BlazorViewRepository BlazorViewRepository(IClock, IAssemblyTracker) Declaration public BlazorViewRepository(IClock clock, IAssemblyTracker assemblyTracker) Parameters Type Name Description IClock clock IAssemblyTracker assemblyTracker"
  },
  "api/PoeShared.Blazor.Services.BlazorViewRepository.AutomaticallyProcessAssemblies.html": {
    "href": "api/PoeShared.Blazor.Services.BlazorViewRepository.AutomaticallyProcessAssemblies.html",
    "title": "Property AutomaticallyProcessAssemblies | EyeAuras Docs",
    "keywords": "Property AutomaticallyProcessAssemblies AutomaticallyProcessAssemblies Declaration public bool AutomaticallyProcessAssemblies { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.Blazor.Services.BlazorViewRepository.RegisterViewType.html": {
    "href": "api/PoeShared.Blazor.Services.BlazorViewRepository.RegisterViewType.html",
    "title": "Method RegisterViewType | EyeAuras Docs",
    "keywords": "Method RegisterViewType RegisterViewType(Type, object) Registers the provided Blazor view type with an optional associated key. Once a view type is registered, it can be looked up using its content type and the specified key. Declaration public void RegisterViewType(Type viewType, object key = null) Parameters Type Name Description Type viewType The Blazor view type to register. This type should inherit from a base Blazor view component. object key An optional key to associate with the view type. This allows multiple views to be registered for the same content type but differentiated by key. Implements IBlazorViewRegistrator.RegisterViewType(Type, object) Examples registrator.RegisterViewType(typeof(MyDetailView), \"Detail\"); registrator.RegisterViewType(typeof(MySummaryView), \"Summary\");"
  },
  "api/PoeShared.Blazor.Services.BlazorViewRepository.ResolveViewType.html": {
    "href": "api/PoeShared.Blazor.Services.BlazorViewRepository.ResolveViewType.html",
    "title": "Method ResolveViewType | EyeAuras Docs",
    "keywords": "Method ResolveViewType ResolveViewType(Type, object) Resolves and retrieves the registered Blazor view type for a given content type and an optional key. Declaration public Type ResolveViewType(Type contentType, object key = null) Parameters Type Name Description Type contentType The content type associated with the desired Blazor view. This typically corresponds to a data model or ViewModel type that the view is designed to display. object key An optional key that was used during view registration. If multiple views are registered for the same content type, the key can be used to differentiate between them. Returns Type Description Type The registered Blazor view type that matches the provided content type and key. If no match is found, returns null. Implements IBlazorViewRepository.ResolveViewType(Type, object) Examples var detailViewType = repo.ResolveViewType(typeof(MyContentModel), \"Detail\"); var summaryViewType = repo.ResolveViewType(typeof(MyContentModel), \"Summary\");"
  },
  "api/PoeShared.Blazor.Services.BlazorViewRepository.html": {
    "href": "api/PoeShared.Blazor.Services.BlazorViewRepository.html",
    "title": "Class BlazorViewRepository | EyeAuras Docs",
    "keywords": "Class BlazorViewRepository Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger BlazorViewRepository Implements IDisposable INotifyPropertyChanged IBlazorViewRepository IBlazorViewRegistrator Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor.Services Assembly: PoeShared.Blazor.dll Syntax public class BlazorViewRepository : DisposableReactiveObjectWithLogger, IDisposable, INotifyPropertyChanged, IBlazorViewRepository, IBlazorViewRegistrator Constructors Name Description BlazorViewRepository(IClock, IAssemblyTracker) Properties Name Description AutomaticallyProcessAssemblies Methods Name Description RegisterViewType(Type, object) Registers the provided Blazor view type with an optional associated key. Once a view type is registered, it can be looked up using its content type and the specified key. ResolveViewType(Type, object) Resolves and retrieves the registered Blazor view type for a given content type and an optional key. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Services.IBlazorViewRegistrator.RegisterViewType.html": {
    "href": "api/PoeShared.Blazor.Services.IBlazorViewRegistrator.RegisterViewType.html",
    "title": "Method RegisterViewType | EyeAuras Docs",
    "keywords": "Method RegisterViewType RegisterViewType(Type, object) Registers the provided Blazor view type with an optional associated key. Once a view type is registered, it can be looked up using its content type and the specified key. Declaration void RegisterViewType(Type viewType, object key = null) Parameters Type Name Description Type viewType The Blazor view type to register. This type should inherit from a base Blazor view component. object key An optional key to associate with the view type. This allows multiple views to be registered for the same content type but differentiated by key. Examples registrator.RegisterViewType(typeof(MyDetailView), \"Detail\"); registrator.RegisterViewType(typeof(MySummaryView), \"Summary\");"
  },
  "api/PoeShared.Blazor.Services.IBlazorViewRegistrator.html": {
    "href": "api/PoeShared.Blazor.Services.IBlazorViewRegistrator.html",
    "title": "Interface IBlazorViewRegistrator | EyeAuras Docs",
    "keywords": "Interface IBlazorViewRegistrator Represents a service for registering Blazor view types with associated content types and optional keys. By using this service, developers can dynamically register views, making Blazor applications more extensible. Namespace: PoeShared.Blazor.Services Assembly: PoeShared.Blazor.dll Syntax public interface IBlazorViewRegistrator Examples // Registering a view: var registrator = someServiceProvider.GetService<IBlazorViewRegistrator>(); registrator.RegisterViewType(typeof(MyCustomView)); Methods Name Description RegisterViewType(Type, object) Registers the provided Blazor view type with an optional associated key. Once a view type is registered, it can be looked up using its content type and the specified key. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Services.IBlazorViewRepository.ResolveViewType.html": {
    "href": "api/PoeShared.Blazor.Services.IBlazorViewRepository.ResolveViewType.html",
    "title": "Method ResolveViewType | EyeAuras Docs",
    "keywords": "Method ResolveViewType ResolveViewType(Type, object) Resolves and retrieves the registered Blazor view type for a given content type and an optional key. Declaration Type ResolveViewType(Type contentType, object key = null) Parameters Type Name Description Type contentType The content type associated with the desired Blazor view. This typically corresponds to a data model or ViewModel type that the view is designed to display. object key An optional key that was used during view registration. If multiple views are registered for the same content type, the key can be used to differentiate between them. Returns Type Description Type The registered Blazor view type that matches the provided content type and key. If no match is found, returns null. Examples var detailViewType = repo.ResolveViewType(typeof(MyContentModel), \"Detail\"); var summaryViewType = repo.ResolveViewType(typeof(MyContentModel), \"Summary\");"
  },
  "api/PoeShared.Blazor.Services.IBlazorViewRepository.html": {
    "href": "api/PoeShared.Blazor.Services.IBlazorViewRepository.html",
    "title": "Interface IBlazorViewRepository | EyeAuras Docs",
    "keywords": "Interface IBlazorViewRepository Represents a repository for resolving Blazor view types based on content types and optional keys. This interface is designed to facilitate dynamic view lookup, enhancing the modularity of a Blazor application. Namespace: PoeShared.Blazor.Services Assembly: PoeShared.Blazor.dll Syntax public interface IBlazorViewRepository Examples // Resolving a view by its content type: var repo = someServiceProvider.GetService<IBlazorViewRepository>(); var viewType = repo.ResolveViewType(typeof(MyContentModel)); Methods Name Description ResolveViewType(Type, object) Resolves and retrieves the registered Blazor view type for a given content type and an optional key. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Services.html": {
    "href": "api/PoeShared.Blazor.Services.html",
    "title": "Namespace PoeShared.Blazor.Services | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Blazor.Services Classes BlazorViewAttribute BlazorViewRepository Interfaces IBlazorViewRegistrator Represents a service for registering Blazor view types with associated content types and optional keys. By using this service, developers can dynamically register views, making Blazor applications more extensible. IBlazorViewRepository Represents a repository for resolving Blazor view types based on content types and optional keys. This interface is designed to facilitate dynamic view lookup, enhancing the modularity of a Blazor application."
  },
  "api/PoeShared.Blazor.Wpf.Behaviors.WebPopupBehavior.-ctor.html": {
    "href": "api/PoeShared.Blazor.Wpf.Behaviors.WebPopupBehavior.-ctor.html",
    "title": "Constructor WebPopupBehavior | EyeAuras Docs",
    "keywords": "Constructor WebPopupBehavior WebPopupBehavior() Declaration public WebPopupBehavior()"
  },
  "api/PoeShared.Blazor.Wpf.Behaviors.WebPopupBehavior.CloseWhenDeactivated.html": {
    "href": "api/PoeShared.Blazor.Wpf.Behaviors.WebPopupBehavior.CloseWhenDeactivated.html",
    "title": "Property CloseWhenDeactivated | EyeAuras Docs",
    "keywords": "Property CloseWhenDeactivated CloseWhenDeactivated Declaration public bool CloseWhenDeactivated { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.Blazor.Wpf.Behaviors.WebPopupBehavior.CloseWhenDeactivatedProperty.html": {
    "href": "api/PoeShared.Blazor.Wpf.Behaviors.WebPopupBehavior.CloseWhenDeactivatedProperty.html",
    "title": "Field CloseWhenDeactivatedProperty | EyeAuras Docs",
    "keywords": "Field CloseWhenDeactivatedProperty Namespace: PoeShared.Blazor.Wpf.Behaviors Assembly: PoeShared.Blazor.Wpf.dll Syntax public static readonly DependencyProperty CloseWhenDeactivatedProperty Returns Type Description DependencyProperty"
  },
  "api/PoeShared.Blazor.Wpf.Behaviors.WebPopupBehavior.OnAttached.html": {
    "href": "api/PoeShared.Blazor.Wpf.Behaviors.WebPopupBehavior.OnAttached.html",
    "title": "Method OnAttached | EyeAuras Docs",
    "keywords": "Method OnAttached OnAttached() Declaration protected override void OnAttached()"
  },
  "api/PoeShared.Blazor.Wpf.Behaviors.WebPopupBehavior.html": {
    "href": "api/PoeShared.Blazor.Wpf.Behaviors.WebPopupBehavior.html",
    "title": "Class WebPopupBehavior | EyeAuras Docs",
    "keywords": "Class WebPopupBehavior Inheritance object WebPopupBehavior Namespace: PoeShared.Blazor.Wpf.Behaviors Assembly: PoeShared.Blazor.Wpf.dll Syntax public sealed class WebPopupBehavior : Behavior<Popup> Constructors Name Description WebPopupBehavior() Fields Name Description CloseWhenDeactivatedProperty Properties Name Description CloseWhenDeactivated Methods Name Description OnAttached() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Wpf.Behaviors.html": {
    "href": "api/PoeShared.Blazor.Wpf.Behaviors.html",
    "title": "Namespace PoeShared.Blazor.Wpf.Behaviors | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Blazor.Wpf.Behaviors Classes WebPopupBehavior"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.-ctor.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.-ctor.html",
    "title": "Constructor BlazorContentControl | EyeAuras Docs",
    "keywords": "Constructor BlazorContentControl BlazorContentControl() Declaration public BlazorContentControl()"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.AdditionalFiles.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.AdditionalFiles.html",
    "title": "Property AdditionalFiles | EyeAuras Docs",
    "keywords": "Property AdditionalFiles AdditionalFiles Declaration public IEnumerable<IFileInfo> AdditionalFiles { get; set; } Property Value Type Description IEnumerable<IFileInfo> Implements IBlazorContentControl.AdditionalFiles"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.AdditionalFilesProperty.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.AdditionalFilesProperty.html",
    "title": "Field AdditionalFilesProperty | EyeAuras Docs",
    "keywords": "Field AdditionalFilesProperty Namespace: PoeShared.Blazor.Wpf Assembly: PoeShared.Blazor.Wpf.dll Syntax public static readonly DependencyProperty AdditionalFilesProperty Returns Type Description DependencyProperty"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.Container.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.Container.html",
    "title": "Property Container | EyeAuras Docs",
    "keywords": "Property Container Container Declaration public IUnityContainer Container { get; set; } Property Value Type Description IUnityContainer"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.ContainerProperty.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.ContainerProperty.html",
    "title": "Field ContainerProperty | EyeAuras Docs",
    "keywords": "Field ContainerProperty Namespace: PoeShared.Blazor.Wpf Assembly: PoeShared.Blazor.Wpf.dll Syntax public static readonly DependencyProperty ContainerProperty Returns Type Description DependencyProperty"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.Content.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.Content.html",
    "title": "Property Content | EyeAuras Docs",
    "keywords": "Property Content Content Declaration public object Content { get; set; } Property Value Type Description object Implements IBlazorContentControl.Content"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.ContentProperty.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.ContentProperty.html",
    "title": "Field ContentProperty | EyeAuras Docs",
    "keywords": "Field ContentProperty Namespace: PoeShared.Blazor.Wpf Assembly: PoeShared.Blazor.Wpf.dll Syntax public static readonly DependencyProperty ContentProperty Returns Type Description DependencyProperty"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.EnableHotkeys.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.EnableHotkeys.html",
    "title": "Property EnableHotkeys | EyeAuras Docs",
    "keywords": "Property EnableHotkeys EnableHotkeys Declaration public bool EnableHotkeys { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.EnableHotkeysProperty.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.EnableHotkeysProperty.html",
    "title": "Field EnableHotkeysProperty | EyeAuras Docs",
    "keywords": "Field EnableHotkeysProperty Namespace: PoeShared.Blazor.Wpf Assembly: PoeShared.Blazor.Wpf.dll Syntax public static readonly DependencyProperty EnableHotkeysProperty Returns Type Description DependencyProperty"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.IsBusy.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.IsBusy.html",
    "title": "Property IsBusy | EyeAuras Docs",
    "keywords": "Property IsBusy IsBusy Declaration public bool IsBusy { get; } Property Value Type Description bool Implements IBlazorContentControl.IsBusy"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.OnKeyDown.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.OnKeyDown.html",
    "title": "Method OnKeyDown | EyeAuras Docs",
    "keywords": "Method OnKeyDown OnKeyDown(KeyEventArgs) Declaration protected override void OnKeyDown(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e Overrides UIElement.OnKeyDown(KeyEventArgs)"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.OnKeyUp.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.OnKeyUp.html",
    "title": "Method OnKeyUp | EyeAuras Docs",
    "keywords": "Method OnKeyUp OnKeyUp(KeyEventArgs) Declaration protected override void OnKeyUp(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e Overrides UIElement.OnKeyUp(KeyEventArgs)"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.OpenDevTools.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.OpenDevTools.html",
    "title": "Property OpenDevTools | EyeAuras Docs",
    "keywords": "Property OpenDevTools OpenDevTools Declaration public ICommand OpenDevTools { get; } Property Value Type Description ICommand Implements IBlazorContentControl.OpenDevTools"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.ReloadCommand.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.ReloadCommand.html",
    "title": "Property ReloadCommand | EyeAuras Docs",
    "keywords": "Property ReloadCommand ReloadCommand Declaration public ICommand ReloadCommand { get; } Property Value Type Description ICommand Implements IBlazorContentControl.ReloadCommand"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.UnhandledException.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.UnhandledException.html",
    "title": "Property UnhandledException | EyeAuras Docs",
    "keywords": "Property UnhandledException UnhandledException Declaration public Exception UnhandledException { get; } Property Value Type Description Exception Implements IBlazorContentControl.UnhandledException"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.UnhandledExceptionMessage.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.UnhandledExceptionMessage.html",
    "title": "Property UnhandledExceptionMessage | EyeAuras Docs",
    "keywords": "Property UnhandledExceptionMessage UnhandledExceptionMessage Declaration public string UnhandledExceptionMessage { get; } Property Value Type Description string"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.ViewType.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.ViewType.html",
    "title": "Property ViewType | EyeAuras Docs",
    "keywords": "Property ViewType ViewType Declaration public Type ViewType { get; set; } Property Value Type Description Type Implements IBlazorContentControl.ViewType"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.ViewTypeProperty.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.ViewTypeProperty.html",
    "title": "Field ViewTypeProperty | EyeAuras Docs",
    "keywords": "Field ViewTypeProperty Namespace: PoeShared.Blazor.Wpf Assembly: PoeShared.Blazor.Wpf.dll Syntax public static readonly DependencyProperty ViewTypeProperty Returns Type Description DependencyProperty"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.WebView.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.WebView.html",
    "title": "Property WebView | EyeAuras Docs",
    "keywords": "Property WebView WebView We have to dynamically recreate WebView when needed as it is EXTREMELY unfriendly for any changes of associated properties Declaration public BlazorWebViewEx WebView { get; } Property Value Type Description BlazorWebViewEx Implements IBlazorContentControl.WebView"
  },
  "api/PoeShared.Blazor.Wpf.BlazorContentControl.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorContentControl.html",
    "title": "Class BlazorContentControl | EyeAuras Docs",
    "keywords": "Class BlazorContentControl Inheritance object Visual UIElement FrameworkElement Control ReactiveControl BlazorContentControl Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IBlazorContentControl IDisposable INotifyPropertyChanged Inherited Members Control.BorderBrushProperty Control.BorderThicknessProperty Control.BackgroundProperty Control.ForegroundProperty Control.FontFamilyProperty Control.FontSizeProperty Control.FontStretchProperty Control.FontStyleProperty Control.FontWeightProperty Control.HorizontalContentAlignmentProperty Control.VerticalContentAlignmentProperty Control.TabIndexProperty Control.IsTabStopProperty Control.PaddingProperty Control.TemplateProperty Control.PreviewMouseDoubleClickEvent Control.MouseDoubleClickEvent Control.OnTemplateChanged(ControlTemplate, ControlTemplate) Control.ToString() Control.OnPreviewMouseDoubleClick(MouseButtonEventArgs) Control.OnMouseDoubleClick(MouseButtonEventArgs) Control.MeasureOverride(Size) Control.ArrangeOverride(Size) Control.BorderBrush Control.BorderThickness Control.Background Control.Foreground Control.FontFamily Control.FontSize Control.FontStretch Control.FontStyle Control.FontWeight Control.HorizontalContentAlignment Control.VerticalContentAlignment Control.TabIndex Control.IsTabStop Control.Padding Control.Template Control.HandlesScrolling Control.PreviewMouseDoubleClick Control.MouseDoubleClick FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.GetVisualChild(int) FrameworkElement.GetTemplateChild(string) FrameworkElement.FindResource(object) FrameworkElement.TryFindResource(object) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.GetLayoutClip(Size) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnInitialized(EventArgs) FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(string, object) FrameworkElement.UnregisterName(string) FrameworkElement.FindName(string) FrameworkElement.UpdateDefaultStyle() FrameworkElement.AddLogicalChild(object) FrameworkElement.RemoveLogicalChild(object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.VisualChildrenCount FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.LogicalChildren FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.OnRender(DrawingContext) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.HasEffectiveKeyboardFocus UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.OnVisualChildrenChanged(DependencyObject, DependencyObject) Visual.OnDpiChanged(DpiScale, DpiScale) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines Namespace: PoeShared.Blazor.Wpf Assembly: PoeShared.Blazor.Wpf.dll Syntax public class BlazorContentControl : ReactiveControl, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IBlazorContentControl, IDisposable, INotifyPropertyChanged Constructors Name Description BlazorContentControl() Fields Name Description AdditionalFilesProperty ContainerProperty ContentProperty EnableHotkeysProperty ViewTypeProperty Properties Name Description AdditionalFiles Container Content EnableHotkeys IsBusy OpenDevTools ReloadCommand UnhandledException UnhandledExceptionMessage ViewType WebView We have to dynamically recreate WebView when needed as it is EXTREMELY unfriendly for any changes of associated properties Methods Name Description OnKeyDown(KeyEventArgs) OnKeyUp(KeyEventArgs) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Wpf.BlazorWebViewEx.-ctor.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorWebViewEx.-ctor.html",
    "title": "Constructor BlazorWebViewEx | EyeAuras Docs",
    "keywords": "Constructor BlazorWebViewEx BlazorWebViewEx() Declaration public BlazorWebViewEx()"
  },
  "api/PoeShared.Blazor.Wpf.BlazorWebViewEx.Anchors.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorWebViewEx.Anchors.html",
    "title": "Property Anchors | EyeAuras Docs",
    "keywords": "Property Anchors Anchors Declaration protected CompositeDisposable Anchors { get; } Property Value Type Description CompositeDisposable"
  },
  "api/PoeShared.Blazor.Wpf.BlazorWebViewEx.CreateFileProvider.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorWebViewEx.CreateFileProvider.html",
    "title": "Method CreateFileProvider | EyeAuras Docs",
    "keywords": "Method CreateFileProvider CreateFileProvider(string) Creates a file provider for static assets used in the BlazorWebView. The default implementation serves files from disk. Override this method to return a custom IFileProvider to serve assets such as wwwroot/index.html. Call the base method and combine its return value with a CompositeFileProvider to use both custom assets and default assets. Declaration public override IFileProvider CreateFileProvider(string contentRootDir) Parameters Type Name Description string contentRootDir The base directory to use for all requested assets, such as wwwroot. Returns Type Description IFileProvider Returns a IFileProvider for static assets. Overrides BlazorWebView.CreateFileProvider(string)"
  },
  "api/PoeShared.Blazor.Wpf.BlazorWebViewEx.Dispose.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorWebViewEx.Dispose.html",
    "title": "Method Dispose | EyeAuras Docs",
    "keywords": "Method Dispose Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing Dispose() Declaration public void Dispose() Implements IDisposable.Dispose()"
  },
  "api/PoeShared.Blazor.Wpf.BlazorWebViewEx.FileProvider.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorWebViewEx.FileProvider.html",
    "title": "Property FileProvider | EyeAuras Docs",
    "keywords": "Property FileProvider FileProvider Declaration public InMemoryFileProvider FileProvider { get; } Property Value Type Description InMemoryFileProvider"
  },
  "api/PoeShared.Blazor.Wpf.BlazorWebViewEx.TakeScreenshotAsBitmapSource.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorWebViewEx.TakeScreenshotAsBitmapSource.html",
    "title": "Method TakeScreenshotAsBitmapSource | EyeAuras Docs",
    "keywords": "Method TakeScreenshotAsBitmapSource TakeScreenshotAsBitmapSource() Declaration public Task<BitmapSource> TakeScreenshotAsBitmapSource() Returns Type Description Task<BitmapSource>"
  },
  "api/PoeShared.Blazor.Wpf.BlazorWebViewEx.html": {
    "href": "api/PoeShared.Blazor.Wpf.BlazorWebViewEx.html",
    "title": "Class BlazorWebViewEx | EyeAuras Docs",
    "keywords": "Class BlazorWebViewEx Inheritance object Visual UIElement FrameworkElement Control BlazorWebView BlazorWebViewEx Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IAsyncDisposable IDisposable Inherited Members BlazorWebView.HostPageProperty BlazorWebView.StartPathProperty BlazorWebView.RootComponentsProperty BlazorWebView.ServicesProperty BlazorWebView.UrlLoadingProperty BlazorWebView.BlazorWebViewInitializingProperty BlazorWebView.BlazorWebViewInitializedProperty BlazorWebView.OnApplyTemplate() BlazorWebView.OnInitialized(EventArgs) BlazorWebView.DisposeAsyncCore() BlazorWebView.DisposeAsync() BlazorWebView.WebView BlazorWebView.HostPage BlazorWebView.StartPath BlazorWebView.RootComponents BlazorWebView.UrlLoading BlazorWebView.BlazorWebViewInitializing BlazorWebView.BlazorWebViewInitialized BlazorWebView.Services BlazorWebView.UnhandledException Control.BorderBrushProperty Control.BorderThicknessProperty Control.BackgroundProperty Control.ForegroundProperty Control.FontFamilyProperty Control.FontSizeProperty Control.FontStretchProperty Control.FontStyleProperty Control.FontWeightProperty Control.HorizontalContentAlignmentProperty Control.VerticalContentAlignmentProperty Control.TabIndexProperty Control.IsTabStopProperty Control.PaddingProperty Control.TemplateProperty Control.PreviewMouseDoubleClickEvent Control.MouseDoubleClickEvent Control.OnTemplateChanged(ControlTemplate, ControlTemplate) Control.ToString() Control.OnPreviewMouseDoubleClick(MouseButtonEventArgs) Control.OnMouseDoubleClick(MouseButtonEventArgs) Control.MeasureOverride(Size) Control.ArrangeOverride(Size) Control.BorderBrush Control.BorderThickness Control.Background Control.Foreground Control.FontFamily Control.FontSize Control.FontStretch Control.FontStyle Control.FontWeight Control.HorizontalContentAlignment Control.VerticalContentAlignment Control.TabIndex Control.IsTabStop Control.Padding Control.Template Control.HandlesScrolling Control.PreviewMouseDoubleClick Control.MouseDoubleClick FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.GetVisualChild(int) FrameworkElement.GetTemplateChild(string) FrameworkElement.FindResource(object) FrameworkElement.TryFindResource(object) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.GetLayoutClip(Size) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(string, object) FrameworkElement.UnregisterName(string) FrameworkElement.FindName(string) FrameworkElement.UpdateDefaultStyle() FrameworkElement.AddLogicalChild(object) FrameworkElement.RemoveLogicalChild(object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.VisualChildrenCount FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.LogicalChildren FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.OnRender(DrawingContext) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.HasEffectiveKeyboardFocus UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.OnVisualChildrenChanged(DependencyObject, DependencyObject) Visual.OnDpiChanged(DpiScale, DpiScale) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines Namespace: PoeShared.Blazor.Wpf Assembly: PoeShared.Blazor.Wpf.dll Syntax public class BlazorWebViewEx : BlazorWebView, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IAsyncDisposable, IDisposable Constructors Name Description BlazorWebViewEx() Properties Name Description Anchors FileProvider Methods Name Description CreateFileProvider(string) Creates a file provider for static assets used in the BlazorWebView. The default implementation serves files from disk. Override this method to return a custom IFileProvider to serve assets such as wwwroot/index.html. Call the base method and combine its return value with a CompositeFileProvider to use both custom assets and default assets. Dispose() Dispose(bool) TakeScreenshotAsBitmapSource() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Wpf.CachingFileProvider.-ctor.html": {
    "href": "api/PoeShared.Blazor.Wpf.CachingFileProvider.-ctor.html",
    "title": "Constructor CachingFileProvider | EyeAuras Docs",
    "keywords": "Constructor CachingFileProvider CachingFileProvider(DirectoryInfo) Declaration public CachingFileProvider(DirectoryInfo contentRoot) Parameters Type Name Description DirectoryInfo contentRoot"
  },
  "api/PoeShared.Blazor.Wpf.CachingFileProvider.ContentRoot.html": {
    "href": "api/PoeShared.Blazor.Wpf.CachingFileProvider.ContentRoot.html",
    "title": "Property ContentRoot | EyeAuras Docs",
    "keywords": "Property ContentRoot ContentRoot Declaration public DirectoryInfo ContentRoot { get; } Property Value Type Description DirectoryInfo"
  },
  "api/PoeShared.Blazor.Wpf.CachingFileProvider.GetDirectoryContents.html": {
    "href": "api/PoeShared.Blazor.Wpf.CachingFileProvider.GetDirectoryContents.html",
    "title": "Method GetDirectoryContents | EyeAuras Docs",
    "keywords": "Method GetDirectoryContents GetDirectoryContents(string) Declaration public IDirectoryContents GetDirectoryContents(string subpath) Parameters Type Name Description string subpath Returns Type Description IDirectoryContents Implements IFileProvider.GetDirectoryContents(string)"
  },
  "api/PoeShared.Blazor.Wpf.CachingFileProvider.GetFileInfo.html": {
    "href": "api/PoeShared.Blazor.Wpf.CachingFileProvider.GetFileInfo.html",
    "title": "Method GetFileInfo | EyeAuras Docs",
    "keywords": "Method GetFileInfo GetFileInfo(string) Declaration public IFileInfo GetFileInfo(string subpath) Parameters Type Name Description string subpath Returns Type Description IFileInfo Implements IFileProvider.GetFileInfo(string)"
  },
  "api/PoeShared.Blazor.Wpf.CachingFileProvider.Watch.html": {
    "href": "api/PoeShared.Blazor.Wpf.CachingFileProvider.Watch.html",
    "title": "Method Watch | EyeAuras Docs",
    "keywords": "Method Watch Watch(string) Declaration public IChangeToken Watch(string filter) Parameters Type Name Description string filter Returns Type Description IChangeToken Implements IFileProvider.Watch(string)"
  },
  "api/PoeShared.Blazor.Wpf.CachingFileProvider.html": {
    "href": "api/PoeShared.Blazor.Wpf.CachingFileProvider.html",
    "title": "Class CachingFileProvider | EyeAuras Docs",
    "keywords": "Class CachingFileProvider This file provider caches pre-loads all files inside content root which measurably reduces access time on slow systems. Also this fixes a problem with virtualized file system - file watchers which are used by PhysicalFileProvider are not stable Inheritance object CachingFileProvider Implements IFileProvider Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor.Wpf Assembly: PoeShared.Blazor.Wpf.dll Syntax public sealed class CachingFileProvider : IFileProvider Constructors Name Description CachingFileProvider(DirectoryInfo) Properties Name Description ContentRoot Methods Name Description GetDirectoryContents(string) GetFileInfo(string) Watch(string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Wpf.IBlazorContentControl.AdditionalFiles.html": {
    "href": "api/PoeShared.Blazor.Wpf.IBlazorContentControl.AdditionalFiles.html",
    "title": "Property AdditionalFiles | EyeAuras Docs",
    "keywords": "Property AdditionalFiles AdditionalFiles Declaration IEnumerable<IFileInfo> AdditionalFiles { get; set; } Property Value Type Description IEnumerable<IFileInfo>"
  },
  "api/PoeShared.Blazor.Wpf.IBlazorContentControl.Content.html": {
    "href": "api/PoeShared.Blazor.Wpf.IBlazorContentControl.Content.html",
    "title": "Property Content | EyeAuras Docs",
    "keywords": "Property Content Content Declaration object Content { get; set; } Property Value Type Description object"
  },
  "api/PoeShared.Blazor.Wpf.IBlazorContentControl.IsBusy.html": {
    "href": "api/PoeShared.Blazor.Wpf.IBlazorContentControl.IsBusy.html",
    "title": "Property IsBusy | EyeAuras Docs",
    "keywords": "Property IsBusy IsBusy Declaration bool IsBusy { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Blazor.Wpf.IBlazorContentControl.OpenDevTools.html": {
    "href": "api/PoeShared.Blazor.Wpf.IBlazorContentControl.OpenDevTools.html",
    "title": "Property OpenDevTools | EyeAuras Docs",
    "keywords": "Property OpenDevTools OpenDevTools Declaration ICommand OpenDevTools { get; } Property Value Type Description ICommand"
  },
  "api/PoeShared.Blazor.Wpf.IBlazorContentControl.ReloadCommand.html": {
    "href": "api/PoeShared.Blazor.Wpf.IBlazorContentControl.ReloadCommand.html",
    "title": "Property ReloadCommand | EyeAuras Docs",
    "keywords": "Property ReloadCommand ReloadCommand Declaration ICommand ReloadCommand { get; } Property Value Type Description ICommand"
  },
  "api/PoeShared.Blazor.Wpf.IBlazorContentControl.UnhandledException.html": {
    "href": "api/PoeShared.Blazor.Wpf.IBlazorContentControl.UnhandledException.html",
    "title": "Property UnhandledException | EyeAuras Docs",
    "keywords": "Property UnhandledException UnhandledException Declaration Exception UnhandledException { get; } Property Value Type Description Exception"
  },
  "api/PoeShared.Blazor.Wpf.IBlazorContentControl.ViewType.html": {
    "href": "api/PoeShared.Blazor.Wpf.IBlazorContentControl.ViewType.html",
    "title": "Property ViewType | EyeAuras Docs",
    "keywords": "Property ViewType ViewType Declaration Type ViewType { get; set; } Property Value Type Description Type"
  },
  "api/PoeShared.Blazor.Wpf.IBlazorContentControl.WebView.html": {
    "href": "api/PoeShared.Blazor.Wpf.IBlazorContentControl.WebView.html",
    "title": "Property WebView | EyeAuras Docs",
    "keywords": "Property WebView WebView Declaration BlazorWebViewEx WebView { get; } Property Value Type Description BlazorWebViewEx"
  },
  "api/PoeShared.Blazor.Wpf.IBlazorContentControl.html": {
    "href": "api/PoeShared.Blazor.Wpf.IBlazorContentControl.html",
    "title": "Interface IBlazorContentControl | EyeAuras Docs",
    "keywords": "Interface IBlazorContentControl Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Blazor.Wpf Assembly: PoeShared.Blazor.Wpf.dll Syntax public interface IBlazorContentControl : IDisposable, INotifyPropertyChanged Properties Name Description AdditionalFiles Content IsBusy OpenDevTools ReloadCommand UnhandledException ViewType WebView Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Wpf.IWebViewAccessor.AvailableBrowserVersion.html": {
    "href": "api/PoeShared.Blazor.Wpf.IWebViewAccessor.AvailableBrowserVersion.html",
    "title": "Property AvailableBrowserVersion | EyeAuras Docs",
    "keywords": "Property AvailableBrowserVersion AvailableBrowserVersion Declaration string AvailableBrowserVersion { get; } Property Value Type Description string"
  },
  "api/PoeShared.Blazor.Wpf.IWebViewAccessor.InstallType.html": {
    "href": "api/PoeShared.Blazor.Wpf.IWebViewAccessor.InstallType.html",
    "title": "Property InstallType | EyeAuras Docs",
    "keywords": "Property InstallType InstallType Declaration WebViewInstallType InstallType { get; } Property Value Type Description WebViewInstallType"
  },
  "api/PoeShared.Blazor.Wpf.IWebViewAccessor.IsInstalled.html": {
    "href": "api/PoeShared.Blazor.Wpf.IWebViewAccessor.IsInstalled.html",
    "title": "Property IsInstalled | EyeAuras Docs",
    "keywords": "Property IsInstalled IsInstalled Declaration bool IsInstalled { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Blazor.Wpf.IWebViewAccessor.Refresh.html": {
    "href": "api/PoeShared.Blazor.Wpf.IWebViewAccessor.Refresh.html",
    "title": "Method Refresh | EyeAuras Docs",
    "keywords": "Method Refresh Refresh() Declaration void Refresh()"
  },
  "api/PoeShared.Blazor.Wpf.IWebViewAccessor.html": {
    "href": "api/PoeShared.Blazor.Wpf.IWebViewAccessor.html",
    "title": "Interface IWebViewAccessor | EyeAuras Docs",
    "keywords": "Interface IWebViewAccessor Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Blazor.Wpf Assembly: PoeShared.Blazor.Wpf.dll Syntax public interface IWebViewAccessor : IDisposable, INotifyPropertyChanged Properties Name Description AvailableBrowserVersion InstallType IsInstalled Methods Name Description Refresh() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.-ctor.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.-ctor.html",
    "title": "Constructor InMemoryFileInfo | EyeAuras Docs",
    "keywords": "Constructor InMemoryFileInfo InMemoryFileInfo(string, byte[], DateTimeOffset) Declaration public InMemoryFileInfo(string fileName, byte[] fileBytes, DateTimeOffset lastModified) Parameters Type Name Description string fileName byte[] fileBytes DateTimeOffset lastModified"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.CreateReadStream.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.CreateReadStream.html",
    "title": "Method CreateReadStream | EyeAuras Docs",
    "keywords": "Method CreateReadStream CreateReadStream() Declaration public Stream CreateReadStream() Returns Type Description Stream Implements IFileInfo.CreateReadStream()"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.Exists.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.Exists.html",
    "title": "Property Exists | EyeAuras Docs",
    "keywords": "Property Exists Exists Declaration public bool Exists { get; } Property Value Type Description bool Implements IFileInfo.Exists"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.IsDirectory.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.IsDirectory.html",
    "title": "Property IsDirectory | EyeAuras Docs",
    "keywords": "Property IsDirectory IsDirectory Declaration public bool IsDirectory { get; } Property Value Type Description bool Implements IFileInfo.IsDirectory"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.LastModified.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.LastModified.html",
    "title": "Property LastModified | EyeAuras Docs",
    "keywords": "Property LastModified LastModified Declaration public DateTimeOffset LastModified { get; } Property Value Type Description DateTimeOffset Implements IFileInfo.LastModified"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.Length.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.Length.html",
    "title": "Property Length | EyeAuras Docs",
    "keywords": "Property Length Length Declaration public long Length { get; } Property Value Type Description long Implements IFileInfo.Length"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.Name.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration public string Name { get; } Property Value Type Description string Implements IFileInfo.Name"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.PhysicalPath.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.PhysicalPath.html",
    "title": "Property PhysicalPath | EyeAuras Docs",
    "keywords": "Property PhysicalPath PhysicalPath Declaration public string PhysicalPath { get; } Property Value Type Description string Implements IFileInfo.PhysicalPath"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.ToString.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileInfo.html",
    "title": "Class InMemoryFileInfo | EyeAuras Docs",
    "keywords": "Class InMemoryFileInfo Inheritance object InMemoryFileInfo Implements IFileInfo Inherited Members object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor.Wpf Assembly: PoeShared.Blazor.Wpf.dll Syntax public sealed class InMemoryFileInfo : IFileInfo Constructors Name Description InMemoryFileInfo(string, byte[], DateTimeOffset) Properties Name Description Exists IsDirectory LastModified Length Name PhysicalPath Methods Name Description CreateReadStream() ToString() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileProvider.-ctor.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileProvider.-ctor.html",
    "title": "Constructor InMemoryFileProvider | EyeAuras Docs",
    "keywords": "Constructor InMemoryFileProvider InMemoryFileProvider() Declaration public InMemoryFileProvider()"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileProvider.FilesByName.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileProvider.FilesByName.html",
    "title": "Property FilesByName | EyeAuras Docs",
    "keywords": "Property FilesByName FilesByName Declaration public ISourceCache<IFileInfo, OSPath> FilesByName { get; } Property Value Type Description ISourceCache<IFileInfo, OSPath>"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileProvider.GetDirectoryContents.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileProvider.GetDirectoryContents.html",
    "title": "Method GetDirectoryContents | EyeAuras Docs",
    "keywords": "Method GetDirectoryContents GetDirectoryContents(string) Declaration public IDirectoryContents GetDirectoryContents(string subpath) Parameters Type Name Description string subpath Returns Type Description IDirectoryContents Implements IFileProvider.GetDirectoryContents(string)"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileProvider.GetFileInfo.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileProvider.GetFileInfo.html",
    "title": "Method GetFileInfo | EyeAuras Docs",
    "keywords": "Method GetFileInfo GetFileInfo(string) Declaration public IFileInfo GetFileInfo(string subpath) Parameters Type Name Description string subpath Returns Type Description IFileInfo Implements IFileProvider.GetFileInfo(string)"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileProvider.Watch.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileProvider.Watch.html",
    "title": "Method Watch | EyeAuras Docs",
    "keywords": "Method Watch Watch(string) Declaration public IChangeToken Watch(string filter) Parameters Type Name Description string filter Returns Type Description IChangeToken Implements IFileProvider.Watch(string)"
  },
  "api/PoeShared.Blazor.Wpf.InMemoryFileProvider.html": {
    "href": "api/PoeShared.Blazor.Wpf.InMemoryFileProvider.html",
    "title": "Class InMemoryFileProvider | EyeAuras Docs",
    "keywords": "Class InMemoryFileProvider Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger InMemoryFileProvider Implements IDisposable INotifyPropertyChanged IFileProvider Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor.Wpf Assembly: PoeShared.Blazor.Wpf.dll Syntax public sealed class InMemoryFileProvider : DisposableReactiveObjectWithLogger, IDisposable, INotifyPropertyChanged, IFileProvider Constructors Name Description InMemoryFileProvider() Properties Name Description FilesByName Methods Name Description GetDirectoryContents(string) GetFileInfo(string) Watch(string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstaller.DownloadAndInstall.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstaller.DownloadAndInstall.html",
    "title": "Method DownloadAndInstall | EyeAuras Docs",
    "keywords": "Method DownloadAndInstall DownloadAndInstall() Declaration Task DownloadAndInstall() Returns Type Description Task"
  },
  "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstaller.DownloadLink.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstaller.DownloadLink.html",
    "title": "Property DownloadLink | EyeAuras Docs",
    "keywords": "Property DownloadLink DownloadLink Declaration Uri DownloadLink { get; } Property Value Type Description Uri"
  },
  "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstaller.WebViewAccessor.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstaller.WebViewAccessor.html",
    "title": "Property WebViewAccessor | EyeAuras Docs",
    "keywords": "Property WebViewAccessor WebViewAccessor Declaration IWebViewAccessor WebViewAccessor { get; } Property Value Type Description IWebViewAccessor"
  },
  "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstaller.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstaller.html",
    "title": "Interface IWebViewInstaller | EyeAuras Docs",
    "keywords": "Interface IWebViewInstaller Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Blazor.Wpf.Installer Assembly: PoeShared.Blazor.Wpf.dll Syntax public interface IWebViewInstaller : IDisposable, INotifyPropertyChanged Properties Name Description DownloadLink WebViewAccessor Methods Name Description DownloadAndInstall() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstallerDisplayer.ShowDialog.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstallerDisplayer.ShowDialog.html",
    "title": "Method ShowDialog | EyeAuras Docs",
    "keywords": "Method ShowDialog ShowDialog(WebViewInstallerArgs) Declaration bool? ShowDialog(WebViewInstallerArgs args) Parameters Type Name Description WebViewInstallerArgs args Returns Type Description bool?"
  },
  "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstallerDisplayer.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstallerDisplayer.html",
    "title": "Interface IWebViewInstallerDisplayer | EyeAuras Docs",
    "keywords": "Interface IWebViewInstallerDisplayer Namespace: PoeShared.Blazor.Wpf.Installer Assembly: PoeShared.Blazor.Wpf.dll Syntax public interface IWebViewInstallerDisplayer Methods Name Description ShowDialog(WebViewInstallerArgs) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstallerWindow.IsBusy.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstallerWindow.IsBusy.html",
    "title": "Property IsBusy | EyeAuras Docs",
    "keywords": "Property IsBusy IsBusy Declaration bool IsBusy { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstallerWindow.WebViewInstaller.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstallerWindow.WebViewInstaller.html",
    "title": "Property WebViewInstaller | EyeAuras Docs",
    "keywords": "Property WebViewInstaller WebViewInstaller Declaration IWebViewInstaller WebViewInstaller { get; } Property Value Type Description IWebViewInstaller"
  },
  "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstallerWindow.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.IWebViewInstallerWindow.html",
    "title": "Interface IWebViewInstallerWindow | EyeAuras Docs",
    "keywords": "Interface IWebViewInstallerWindow Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Blazor.Wpf.Installer Assembly: PoeShared.Blazor.Wpf.dll Syntax public interface IWebViewInstallerWindow : IDisposable, INotifyPropertyChanged Properties Name Description IsBusy WebViewInstaller Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.-Clone--.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public WebViewInstallerArgs <Clone>$() Returns Type Description WebViewInstallerArgs"
  },
  "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.-ctor.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.-ctor.html",
    "title": "Constructor WebViewInstallerArgs | EyeAuras Docs",
    "keywords": "Constructor WebViewInstallerArgs WebViewInstallerArgs() Declaration public WebViewInstallerArgs()"
  },
  "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.Equals.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(WebViewInstallerArgs?) Declaration public bool Equals(WebViewInstallerArgs? other) Parameters Type Name Description WebViewInstallerArgs other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.GetHashCode.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.Owner.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.Owner.html",
    "title": "Property Owner | EyeAuras Docs",
    "keywords": "Property Owner Owner Declaration public Window Owner { get; set; } Property Value Type Description Window"
  },
  "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.ToString.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.html",
    "title": "Class WebViewInstallerArgs | EyeAuras Docs",
    "keywords": "Class WebViewInstallerArgs Inheritance object WebViewInstallerArgs Implements IEquatable<WebViewInstallerArgs> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Blazor.Wpf.Installer Assembly: PoeShared.Blazor.Wpf.dll Syntax public sealed record WebViewInstallerArgs : IEquatable<WebViewInstallerArgs> Constructors Name Description WebViewInstallerArgs() Properties Name Description Owner Methods Name Description Equals(WebViewInstallerArgs?) Equals(object?) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(WebViewInstallerArgs?, WebViewInstallerArgs?) operator !=(WebViewInstallerArgs?, WebViewInstallerArgs?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.op_Equality.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(WebViewInstallerArgs?, WebViewInstallerArgs?) Declaration public static bool operator ==(WebViewInstallerArgs? left, WebViewInstallerArgs? right) Parameters Type Name Description WebViewInstallerArgs left WebViewInstallerArgs right Returns Type Description bool"
  },
  "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.op_Inequality.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.WebViewInstallerArgs.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(WebViewInstallerArgs?, WebViewInstallerArgs?) Declaration public static bool operator !=(WebViewInstallerArgs? left, WebViewInstallerArgs? right) Parameters Type Name Description WebViewInstallerArgs left WebViewInstallerArgs right Returns Type Description bool"
  },
  "api/PoeShared.Blazor.Wpf.Installer.html": {
    "href": "api/PoeShared.Blazor.Wpf.Installer.html",
    "title": "Namespace PoeShared.Blazor.Wpf.Installer | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Blazor.Wpf.Installer Classes WebViewInstallerArgs Interfaces IWebViewInstaller IWebViewInstallerDisplayer IWebViewInstallerWindow"
  },
  "api/PoeShared.Blazor.Wpf.RefFileInfo.-ctor.html": {
    "href": "api/PoeShared.Blazor.Wpf.RefFileInfo.-ctor.html",
    "title": "Constructor RefFileInfo | EyeAuras Docs",
    "keywords": "Constructor RefFileInfo RefFileInfo(string) Declaration public RefFileInfo(string filePath) Parameters Type Name Description string filePath"
  },
  "api/PoeShared.Blazor.Wpf.RefFileInfo.CreateReadStream.html": {
    "href": "api/PoeShared.Blazor.Wpf.RefFileInfo.CreateReadStream.html",
    "title": "Method CreateReadStream | EyeAuras Docs",
    "keywords": "Method CreateReadStream CreateReadStream() Declaration public Stream CreateReadStream() Returns Type Description Stream Implements IFileInfo.CreateReadStream()"
  },
  "api/PoeShared.Blazor.Wpf.RefFileInfo.Exists.html": {
    "href": "api/PoeShared.Blazor.Wpf.RefFileInfo.Exists.html",
    "title": "Property Exists | EyeAuras Docs",
    "keywords": "Property Exists Exists Declaration public bool Exists { get; } Property Value Type Description bool Implements IFileInfo.Exists"
  },
  "api/PoeShared.Blazor.Wpf.RefFileInfo.IsDirectory.html": {
    "href": "api/PoeShared.Blazor.Wpf.RefFileInfo.IsDirectory.html",
    "title": "Property IsDirectory | EyeAuras Docs",
    "keywords": "Property IsDirectory IsDirectory Declaration public bool IsDirectory { get; } Property Value Type Description bool Implements IFileInfo.IsDirectory"
  },
  "api/PoeShared.Blazor.Wpf.RefFileInfo.LastModified.html": {
    "href": "api/PoeShared.Blazor.Wpf.RefFileInfo.LastModified.html",
    "title": "Property LastModified | EyeAuras Docs",
    "keywords": "Property LastModified LastModified Declaration public DateTimeOffset LastModified { get; } Property Value Type Description DateTimeOffset Implements IFileInfo.LastModified"
  },
  "api/PoeShared.Blazor.Wpf.RefFileInfo.Length.html": {
    "href": "api/PoeShared.Blazor.Wpf.RefFileInfo.Length.html",
    "title": "Property Length | EyeAuras Docs",
    "keywords": "Property Length Length Declaration public long Length { get; } Property Value Type Description long Implements IFileInfo.Length"
  },
  "api/PoeShared.Blazor.Wpf.RefFileInfo.Name.html": {
    "href": "api/PoeShared.Blazor.Wpf.RefFileInfo.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration public string Name { get; } Property Value Type Description string Implements IFileInfo.Name"
  },
  "api/PoeShared.Blazor.Wpf.RefFileInfo.PhysicalPath.html": {
    "href": "api/PoeShared.Blazor.Wpf.RefFileInfo.PhysicalPath.html",
    "title": "Property PhysicalPath | EyeAuras Docs",
    "keywords": "Property PhysicalPath PhysicalPath Declaration public string PhysicalPath { get; } Property Value Type Description string Implements IFileInfo.PhysicalPath"
  },
  "api/PoeShared.Blazor.Wpf.RefFileInfo.html": {
    "href": "api/PoeShared.Blazor.Wpf.RefFileInfo.html",
    "title": "Class RefFileInfo | EyeAuras Docs",
    "keywords": "Class RefFileInfo Inheritance object RefFileInfo Implements IFileInfo Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor.Wpf Assembly: PoeShared.Blazor.Wpf.dll Syntax public sealed class RefFileInfo : IFileInfo Constructors Name Description RefFileInfo(string) Properties Name Description Exists IsDirectory LastModified Length Name PhysicalPath Methods Name Description CreateReadStream() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Blazor.Wpf.Scaffolding.LocalFilesExtensions.ToLocalFileUri.html": {
    "href": "api/PoeShared.Blazor.Wpf.Scaffolding.LocalFilesExtensions.ToLocalFileUri.html",
    "title": "Method ToLocalFileUri | EyeAuras Docs",
    "keywords": "Method ToLocalFileUri ToLocalFileUri(FileSystemInfo) Declaration public static Uri ToLocalFileUri(this FileSystemInfo file) Parameters Type Name Description FileSystemInfo file Returns Type Description Uri"
  },
  "api/PoeShared.Blazor.Wpf.Scaffolding.LocalFilesExtensions.html": {
    "href": "api/PoeShared.Blazor.Wpf.Scaffolding.LocalFilesExtensions.html",
    "title": "Class LocalFilesExtensions | EyeAuras Docs",
    "keywords": "Class LocalFilesExtensions Inheritance object LocalFilesExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Blazor.Wpf.Scaffolding Assembly: PoeShared.Blazor.Wpf.dll Syntax public static class LocalFilesExtensions Methods Name Description ToLocalFileUri(FileSystemInfo)"
  },
  "api/PoeShared.Blazor.Wpf.Scaffolding.html": {
    "href": "api/PoeShared.Blazor.Wpf.Scaffolding.html",
    "title": "Namespace PoeShared.Blazor.Wpf.Scaffolding | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Blazor.Wpf.Scaffolding Classes LocalFilesExtensions"
  },
  "api/PoeShared.Blazor.Wpf.WebViewInstallType.html": {
    "href": "api/PoeShared.Blazor.Wpf.WebViewInstallType.html",
    "title": "Enum WebViewInstallType | EyeAuras Docs",
    "keywords": "Enum WebViewInstallType Namespace: PoeShared.Blazor.Wpf Assembly: PoeShared.Blazor.Wpf.dll Syntax public enum WebViewInstallType Fields Name Description EdgeChromiumBeta EdgeChromiumCanary EdgeChromiumDev NotInstalled WebView2 Extension Methods ObjectExtensions.AddTo<WebViewInstallType, TCollection>(WebViewInstallType, ISourceList<TCollection>) ObjectExtensions.AddTo<WebViewInstallType, TCollection>(WebViewInstallType, ICollection<TCollection>) ObjectExtensions.CloneJson<WebViewInstallType>(WebViewInstallType) ObjectExtensions.CopyPropertiesTo<WebViewInstallType, TTarget>(WebViewInstallType, TTarget) ObjectExtensions.DumpToTextRaw<WebViewInstallType>(WebViewInstallType) ObjectExtensions.DumpToText<WebViewInstallType>(WebViewInstallType) ObjectExtensions.Dump<WebViewInstallType>(WebViewInstallType) ObjectExtensions.GetPropertyAccessor<WebViewInstallType, TValue>(WebViewInstallType, Expression<Func<WebViewInstallType, TValue>>) ObjectExtensions.InsertTo<WebViewInstallType, TCollection>(WebViewInstallType, IList<TCollection>, int) ObjectExtensions.ToJson<WebViewInstallType>(WebViewInstallType) ObjectExtensions.ToStringSafe<WebViewInstallType>(WebViewInstallType) ObjectExtensions.TransferPropertiesTo<WebViewInstallType, TTarget>(WebViewInstallType, TTarget, params string[]) XDocumentExtensions.AddTo<WebViewInstallType>(WebViewInstallType, XContainer)"
  },
  "api/PoeShared.Blazor.Wpf.html": {
    "href": "api/PoeShared.Blazor.Wpf.html",
    "title": "Namespace PoeShared.Blazor.Wpf | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Blazor.Wpf Namespaces PoeShared.Blazor.Wpf.Behaviors PoeShared.Blazor.Wpf.Installer PoeShared.Blazor.Wpf.Scaffolding Classes BlazorContentControl BlazorWebViewEx CachingFileProvider This file provider caches pre-loads all files inside content root which measurably reduces access time on slow systems. Also this fixes a problem with virtualized file system - file watchers which are used by PhysicalFileProvider are not stable InMemoryFileInfo InMemoryFileProvider RefFileInfo Interfaces IBlazorContentControl IWebViewAccessor Enums WebViewInstallType"
  },
  "api/PoeShared.Blazor.html": {
    "href": "api/PoeShared.Blazor.html",
    "title": "Namespace PoeShared.Blazor | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Blazor Namespaces PoeShared.Blazor.Prism PoeShared.Blazor.Scaffolding PoeShared.Blazor.Services PoeShared.Blazor.Wpf Classes BlazorContentPresenter BlazorContentRepository BlazorReactiveComponent BlazorReactiveComponentBase BlazorReactiveComponent<TContext> DisposableReactiveComponent ReactiveComponentBase Interfaces IBlazorContentRepository IReactiveComponent IRefreshableComponent"
  },
  "api/PoeShared.Caching.CachingRegistrations.AddCachingProxyFactory.html": {
    "href": "api/PoeShared.Caching.CachingRegistrations.AddCachingProxyFactory.html",
    "title": "Method AddCachingProxyFactory | EyeAuras Docs",
    "keywords": "Method AddCachingProxyFactory AddCachingProxyFactory(IServiceCollection, IUnityContainer) Declaration public static void AddCachingProxyFactory(this IServiceCollection services, IUnityContainer container) Parameters Type Name Description IServiceCollection services IUnityContainer container"
  },
  "api/PoeShared.Caching.CachingRegistrations.AddCommonService.html": {
    "href": "api/PoeShared.Caching.CachingRegistrations.AddCommonService.html",
    "title": "Method AddCommonService | EyeAuras Docs",
    "keywords": "Method AddCommonService AddCommonService(IServiceCollection, IUnityContainer) Declaration public static void AddCommonService(this IServiceCollection services, IUnityContainer container) Parameters Type Name Description IServiceCollection services IUnityContainer container"
  },
  "api/PoeShared.Caching.CachingRegistrations.RegisterCachingProxyFactory.html": {
    "href": "api/PoeShared.Caching.CachingRegistrations.RegisterCachingProxyFactory.html",
    "title": "Method RegisterCachingProxyFactory | EyeAuras Docs",
    "keywords": "Method RegisterCachingProxyFactory RegisterCachingProxyFactory(IUnityContainer) Declaration public static void RegisterCachingProxyFactory(this IUnityContainer container) Parameters Type Name Description IUnityContainer container"
  },
  "api/PoeShared.Caching.CachingRegistrations.html": {
    "href": "api/PoeShared.Caching.CachingRegistrations.html",
    "title": "Class CachingRegistrations | EyeAuras Docs",
    "keywords": "Class CachingRegistrations Inheritance object CachingRegistrations Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Caching Assembly: PoeShared.dll Syntax public static class CachingRegistrations Methods Name Description AddCachingProxyFactory(IServiceCollection, IUnityContainer) AddCommonService(IServiceCollection, IUnityContainer) RegisterCachingProxyFactory(IUnityContainer)"
  },
  "api/PoeShared.Caching.ICachingProxyFactory-1.html": {
    "href": "api/PoeShared.Caching.ICachingProxyFactory-1.html",
    "title": "Interface ICachingProxyFactory<T> | EyeAuras Docs",
    "keywords": "Interface ICachingProxyFactory<T> Inherited Members IFactory<T>.Create() Namespace: PoeShared.Caching Assembly: PoeShared.dll Syntax public interface ICachingProxyFactory<out T> : IFactory<T> Type Parameters Name Description T Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Caching.ICachingProxyFactory.GetOrCreate.html": {
    "href": "api/PoeShared.Caching.ICachingProxyFactory.GetOrCreate.html",
    "title": "Method GetOrCreate | EyeAuras Docs",
    "keywords": "Method GetOrCreate GetOrCreate<T>() Declaration T GetOrCreate<T>() where T : class Returns Type Description T Type Parameters Name Description T"
  },
  "api/PoeShared.Caching.ICachingProxyFactory.html": {
    "href": "api/PoeShared.Caching.ICachingProxyFactory.html",
    "title": "Interface ICachingProxyFactory | EyeAuras Docs",
    "keywords": "Interface ICachingProxyFactory Namespace: PoeShared.Caching Assembly: PoeShared.dll Syntax public interface ICachingProxyFactory Methods Name Description GetOrCreate<T>() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Caching.ICachingProxyFactoryConfigurator.SetupTimeToLive.html": {
    "href": "api/PoeShared.Caching.ICachingProxyFactoryConfigurator.SetupTimeToLive.html",
    "title": "Method SetupTimeToLive | EyeAuras Docs",
    "keywords": "Method SetupTimeToLive SetupTimeToLive<T>(TimeSpan) Declaration void SetupTimeToLive<T>(TimeSpan timeToLive) where T : class Parameters Type Name Description TimeSpan timeToLive Type Parameters Name Description T"
  },
  "api/PoeShared.Caching.ICachingProxyFactoryConfigurator.html": {
    "href": "api/PoeShared.Caching.ICachingProxyFactoryConfigurator.html",
    "title": "Interface ICachingProxyFactoryConfigurator | EyeAuras Docs",
    "keywords": "Interface ICachingProxyFactoryConfigurator Inherited Members ICachingProxyFactory.GetOrCreate<T>() Namespace: PoeShared.Caching Assembly: PoeShared.dll Syntax public interface ICachingProxyFactoryConfigurator : ICachingProxyFactory Methods Name Description SetupTimeToLive<T>(TimeSpan) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Caching.IMemoryCache-2.CleanupPeriod.html": {
    "href": "api/PoeShared.Caching.IMemoryCache-2.CleanupPeriod.html",
    "title": "Property CleanupPeriod | EyeAuras Docs",
    "keywords": "Property CleanupPeriod CleanupPeriod Time between cleanups. Cache is locked during cleanup period Declaration TimeSpan CleanupPeriod { get; set; } Property Value Type Description TimeSpan"
  },
  "api/PoeShared.Caching.IMemoryCache-2.CleanupTimeToLive.html": {
    "href": "api/PoeShared.Caching.IMemoryCache-2.CleanupTimeToLive.html",
    "title": "Property CleanupTimeToLive | EyeAuras Docs",
    "keywords": "Property CleanupTimeToLive CleanupTimeToLive Items with lifetime > CleanupTimeToLive will be removed during Cleanup Declaration TimeSpan CleanupTimeToLive { get; set; } Property Value Type Description TimeSpan"
  },
  "api/PoeShared.Caching.IMemoryCache-2.ContainsKey.html": {
    "href": "api/PoeShared.Caching.IMemoryCache-2.ContainsKey.html",
    "title": "Method ContainsKey | EyeAuras Docs",
    "keywords": "Method ContainsKey ContainsKey(TKey) Declaration bool ContainsKey(TKey key) Parameters Type Name Description TKey key Returns Type Description bool"
  },
  "api/PoeShared.Caching.IMemoryCache-2.GetOrAdd.html": {
    "href": "api/PoeShared.Caching.IMemoryCache-2.GetOrAdd.html",
    "title": "Method GetOrAdd | EyeAuras Docs",
    "keywords": "Method GetOrAdd GetOrAdd(TKey, Func<TKey, TValue>) Declaration TValue GetOrAdd(TKey key, Func<TKey, TValue> valueFactory) Parameters Type Name Description TKey key Func<TKey, TValue> valueFactory Returns Type Description TValue"
  },
  "api/PoeShared.Caching.IMemoryCache-2.GetOrUpdate.html": {
    "href": "api/PoeShared.Caching.IMemoryCache-2.GetOrUpdate.html",
    "title": "Method GetOrUpdate | EyeAuras Docs",
    "keywords": "Method GetOrUpdate GetOrUpdate(TKey, Func<TKey, TValue, TValue>) Declaration TValue GetOrUpdate(TKey key, Func<TKey, TValue, TValue> updateValue) Parameters Type Name Description TKey key Func<TKey, TValue, TValue> updateValue Returns Type Description TValue"
  },
  "api/PoeShared.Caching.IMemoryCache-2.Keys.html": {
    "href": "api/PoeShared.Caching.IMemoryCache-2.Keys.html",
    "title": "Property Keys | EyeAuras Docs",
    "keywords": "Property Keys Keys Declaration ICollection<TKey> Keys { get; } Property Value Type Description ICollection<TKey>"
  },
  "api/PoeShared.Caching.IMemoryCache-2.TimeToLive.html": {
    "href": "api/PoeShared.Caching.IMemoryCache-2.TimeToLive.html",
    "title": "Property TimeToLive | EyeAuras Docs",
    "keywords": "Property TimeToLive TimeToLive Items is considered valid if it's lifetime is less than TTL, will be replaced with a new one otherwise on next request Declaration TimeSpan TimeToLive { get; set; } Property Value Type Description TimeSpan"
  },
  "api/PoeShared.Caching.IMemoryCache-2.TryGetValue.html": {
    "href": "api/PoeShared.Caching.IMemoryCache-2.TryGetValue.html",
    "title": "Method TryGetValue | EyeAuras Docs",
    "keywords": "Method TryGetValue TryGetValue(TKey, out TValue) Declaration bool TryGetValue(TKey key, out TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description bool"
  },
  "api/PoeShared.Caching.IMemoryCache-2.Values.html": {
    "href": "api/PoeShared.Caching.IMemoryCache-2.Values.html",
    "title": "Property Values | EyeAuras Docs",
    "keywords": "Property Values Values Declaration ICollection<TValue> Values { get; } Property Value Type Description ICollection<TValue>"
  },
  "api/PoeShared.Caching.IMemoryCache-2.html": {
    "href": "api/PoeShared.Caching.IMemoryCache-2.html",
    "title": "Interface IMemoryCache<TKey, TValue> | EyeAuras Docs",
    "keywords": "Interface IMemoryCache<TKey, TValue> Namespace: PoeShared.Caching Assembly: PoeShared.dll Syntax public interface IMemoryCache<TKey, TValue> Type Parameters Name Description TKey TValue Properties Name Description CleanupPeriod Time between cleanups. Cache is locked during cleanup period CleanupTimeToLive Items with lifetime > CleanupTimeToLive will be removed during Cleanup Keys TimeToLive Items is considered valid if it's lifetime is less than TTL, will be replaced with a new one otherwise on next request Values Methods Name Description ContainsKey(TKey) GetOrAdd(TKey, Func<TKey, TValue>) GetOrUpdate(TKey, Func<TKey, TValue, TValue>) TryGetValue(TKey, out TValue) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Caching.html": {
    "href": "api/PoeShared.Caching.html",
    "title": "Namespace PoeShared.Caching | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Caching Classes CachingRegistrations Interfaces ICachingProxyFactory ICachingProxyFactoryConfigurator ICachingProxyFactory<T> IMemoryCache<TKey, TValue>"
  },
  "api/PoeShared.Common.IBusyController.Busy.html": {
    "href": "api/PoeShared.Common.IBusyController.Busy.html",
    "title": "Method Busy | EyeAuras Docs",
    "keywords": "Method Busy Busy() Declaration IDisposable Busy() Returns Type Description IDisposable"
  },
  "api/PoeShared.Common.IBusyController.IsBusy.html": {
    "href": "api/PoeShared.Common.IBusyController.IsBusy.html",
    "title": "Property IsBusy | EyeAuras Docs",
    "keywords": "Property IsBusy IsBusy Declaration bool IsBusy { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Common.IBusyController.html": {
    "href": "api/PoeShared.Common.IBusyController.html",
    "title": "Interface IBusyController | EyeAuras Docs",
    "keywords": "Interface IBusyController Inherited Members INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Common Assembly: PoeShared.dll Syntax public interface IBusyController : INotifyPropertyChanged Properties Name Description IsBusy Methods Name Description Busy() Extension Methods NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Common.ICanBeLoaded.IsLoaded.html": {
    "href": "api/PoeShared.Common.ICanBeLoaded.IsLoaded.html",
    "title": "Property IsLoaded | EyeAuras Docs",
    "keywords": "Property IsLoaded IsLoaded Declaration bool IsLoaded { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.Common.ICanBeLoaded.html": {
    "href": "api/PoeShared.Common.ICanBeLoaded.html",
    "title": "Interface ICanBeLoaded | EyeAuras Docs",
    "keywords": "Interface ICanBeLoaded Namespace: PoeShared.Common Assembly: PoeShared.dll Syntax public interface ICanBeLoaded Properties Name Description IsLoaded Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Common.ICanBeSelected.IsSelected.html": {
    "href": "api/PoeShared.Common.ICanBeSelected.IsSelected.html",
    "title": "Property IsSelected | EyeAuras Docs",
    "keywords": "Property IsSelected IsSelected Declaration bool IsSelected { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.Common.ICanBeSelected.html": {
    "href": "api/PoeShared.Common.ICanBeSelected.html",
    "title": "Interface ICanBeSelected | EyeAuras Docs",
    "keywords": "Interface ICanBeSelected Namespace: PoeShared.Common Assembly: PoeShared.dll Syntax public interface ICanBeSelected : IHasSelected Properties Name Description IsSelected Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Common.ICanSetReadOnly.IsReadOnly.html": {
    "href": "api/PoeShared.Common.ICanSetReadOnly.IsReadOnly.html",
    "title": "Property IsReadOnly | EyeAuras Docs",
    "keywords": "Property IsReadOnly IsReadOnly Declaration bool IsReadOnly { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.Common.ICanSetReadOnly.html": {
    "href": "api/PoeShared.Common.ICanSetReadOnly.html",
    "title": "Interface ICanSetReadOnly | EyeAuras Docs",
    "keywords": "Interface ICanSetReadOnly Namespace: PoeShared.Common Assembly: PoeShared.dll Syntax public interface ICanSetReadOnly : IHasReadOnly Properties Name Description IsReadOnly Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Common.IHasReadOnly.IsReadOnly.html": {
    "href": "api/PoeShared.Common.IHasReadOnly.IsReadOnly.html",
    "title": "Property IsReadOnly | EyeAuras Docs",
    "keywords": "Property IsReadOnly IsReadOnly Declaration bool IsReadOnly { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Common.IHasReadOnly.html": {
    "href": "api/PoeShared.Common.IHasReadOnly.html",
    "title": "Interface IHasReadOnly | EyeAuras Docs",
    "keywords": "Interface IHasReadOnly Namespace: PoeShared.Common Assembly: PoeShared.dll Syntax public interface IHasReadOnly Properties Name Description IsReadOnly Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Common.IHasSelected.IsSelected.html": {
    "href": "api/PoeShared.Common.IHasSelected.IsSelected.html",
    "title": "Property IsSelected | EyeAuras Docs",
    "keywords": "Property IsSelected IsSelected Declaration bool IsSelected { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Common.IHasSelected.html": {
    "href": "api/PoeShared.Common.IHasSelected.html",
    "title": "Interface IHasSelected | EyeAuras Docs",
    "keywords": "Interface IHasSelected Namespace: PoeShared.Common Assembly: PoeShared.dll Syntax public interface IHasSelected Properties Name Description IsSelected Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Common.IPauseController.IsPaused.html": {
    "href": "api/PoeShared.Common.IPauseController.IsPaused.html",
    "title": "Property IsPaused | EyeAuras Docs",
    "keywords": "Property IsPaused IsPaused Declaration bool IsPaused { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Common.IPauseController.Pause.html": {
    "href": "api/PoeShared.Common.IPauseController.Pause.html",
    "title": "Method Pause | EyeAuras Docs",
    "keywords": "Method Pause Pause() Declaration IDisposable Pause() Returns Type Description IDisposable"
  },
  "api/PoeShared.Common.IPauseController.html": {
    "href": "api/PoeShared.Common.IPauseController.html",
    "title": "Interface IPauseController | EyeAuras Docs",
    "keywords": "Interface IPauseController Inherited Members INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Common Assembly: PoeShared.dll Syntax public interface IPauseController : INotifyPropertyChanged Properties Name Description IsPaused Methods Name Description Pause() Extension Methods NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Common.TriState.html": {
    "href": "api/PoeShared.Common.TriState.html",
    "title": "Enum TriState | EyeAuras Docs",
    "keywords": "Enum TriState Namespace: PoeShared.Common Assembly: PoeShared.dll Syntax public enum TriState Fields Name Description No Unknown Yes Extension Methods EnumExtensions.GetUniqueFlags<TriState>(TriState) EnumExtensions.RemoveFlag<TriState>(TriState, TriState) EnumExtensions.RemoveFlag<TriState>(TriState, params TriState[]) ObjectExtensions.AddTo<TriState, TCollection>(TriState, ISourceList<TCollection>) ObjectExtensions.AddTo<TriState, TCollection>(TriState, ICollection<TCollection>) ObjectExtensions.CloneJson<TriState>(TriState) ObjectExtensions.CopyPropertiesTo<TriState, TTarget>(TriState, TTarget) ObjectExtensions.DumpToTextRaw<TriState>(TriState) ObjectExtensions.DumpToText<TriState>(TriState) ObjectExtensions.Dump<TriState>(TriState) ObjectExtensions.GetPropertyAccessor<TriState, TValue>(TriState, Expression<Func<TriState, TValue>>) ObjectExtensions.InsertTo<TriState, TCollection>(TriState, IList<TCollection>, int) ObjectExtensions.ToJson<TriState>(TriState) ObjectExtensions.ToStringSafe<TriState>(TriState) ObjectExtensions.TransferPropertiesTo<TriState, TTarget>(TriState, TTarget, params string[]) XDocumentExtensions.AddTo<TriState>(TriState, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Common.html": {
    "href": "api/PoeShared.Common.html",
    "title": "Namespace PoeShared.Common | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Common Interfaces IBusyController ICanBeLoaded ICanBeSelected ICanSetReadOnly IHasReadOnly IHasSelected IPauseController Enums TriState"
  },
  "api/PoeShared.Communications.IHttpClient.Cookies.html": {
    "href": "api/PoeShared.Communications.IHttpClient.Cookies.html",
    "title": "Property Cookies | EyeAuras Docs",
    "keywords": "Property Cookies Cookies Declaration CookieCollection Cookies { get; set; } Property Value Type Description CookieCollection"
  },
  "api/PoeShared.Communications.IHttpClient.CustomHeaders.html": {
    "href": "api/PoeShared.Communications.IHttpClient.CustomHeaders.html",
    "title": "Property CustomHeaders | EyeAuras Docs",
    "keywords": "Property CustomHeaders CustomHeaders Declaration WebHeaderCollection CustomHeaders { get; set; } Property Value Type Description WebHeaderCollection"
  },
  "api/PoeShared.Communications.IHttpClient.Get.html": {
    "href": "api/PoeShared.Communications.IHttpClient.Get.html",
    "title": "Method Get | EyeAuras Docs",
    "keywords": "Method Get Get(string) Declaration IObservable<string> Get(string uri) Parameters Type Name Description string uri Returns Type Description IObservable<string>"
  },
  "api/PoeShared.Communications.IHttpClient.GetStreamAsync.html": {
    "href": "api/PoeShared.Communications.IHttpClient.GetStreamAsync.html",
    "title": "Method GetStreamAsync | EyeAuras Docs",
    "keywords": "Method GetStreamAsync GetStreamAsync(Uri) Declaration IObservable<Stream> GetStreamAsync(Uri requestUri) Parameters Type Name Description Uri requestUri Returns Type Description IObservable<Stream>"
  },
  "api/PoeShared.Communications.IHttpClient.Post.html": {
    "href": "api/PoeShared.Communications.IHttpClient.Post.html",
    "title": "Method Post | EyeAuras Docs",
    "keywords": "Method Post Post(string, NameValueCollection) Declaration IObservable<string> Post(string uri, NameValueCollection args) Parameters Type Name Description string uri NameValueCollection args Returns Type Description IObservable<string>"
  },
  "api/PoeShared.Communications.IHttpClient.Proxy.html": {
    "href": "api/PoeShared.Communications.IHttpClient.Proxy.html",
    "title": "Property Proxy | EyeAuras Docs",
    "keywords": "Property Proxy Proxy Declaration IWebProxy Proxy { get; set; } Property Value Type Description IWebProxy"
  },
  "api/PoeShared.Communications.IHttpClient.Referer.html": {
    "href": "api/PoeShared.Communications.IHttpClient.Referer.html",
    "title": "Property Referer | EyeAuras Docs",
    "keywords": "Property Referer Referer Declaration string Referer { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.Communications.IHttpClient.Timeout.html": {
    "href": "api/PoeShared.Communications.IHttpClient.Timeout.html",
    "title": "Property Timeout | EyeAuras Docs",
    "keywords": "Property Timeout Timeout Declaration TimeSpan? Timeout { get; set; } Property Value Type Description TimeSpan?"
  },
  "api/PoeShared.Communications.IHttpClient.UserAgent.html": {
    "href": "api/PoeShared.Communications.IHttpClient.UserAgent.html",
    "title": "Property UserAgent | EyeAuras Docs",
    "keywords": "Property UserAgent UserAgent Declaration string UserAgent { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.Communications.IHttpClient.html": {
    "href": "api/PoeShared.Communications.IHttpClient.html",
    "title": "Interface IHttpClient | EyeAuras Docs",
    "keywords": "Interface IHttpClient Namespace: PoeShared.Communications Assembly: PoeShared.Native.dll Syntax public interface IHttpClient Properties Name Description Cookies CustomHeaders Proxy Referer Timeout UserAgent Methods Name Description Get(string) GetStreamAsync(Uri) Post(string, NameValueCollection) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Communications.html": {
    "href": "api/PoeShared.Communications.html",
    "title": "Namespace PoeShared.Communications | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Communications Interfaces IHttpClient"
  },
  "api/PoeShared.Converters.CompressedDataConverter.-ctor.html": {
    "href": "api/PoeShared.Converters.CompressedDataConverter.-ctor.html",
    "title": "Constructor CompressedDataConverter | EyeAuras Docs",
    "keywords": "Constructor CompressedDataConverter CompressedDataConverter() Declaration public CompressedDataConverter()"
  },
  "api/PoeShared.Converters.CompressedDataConverter.CanConvert.html": {
    "href": "api/PoeShared.Converters.CompressedDataConverter.CanConvert.html",
    "title": "Method CanConvert | EyeAuras Docs",
    "keywords": "Method CanConvert CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description bool"
  },
  "api/PoeShared.Converters.CompressedDataConverter.ReadJson.html": {
    "href": "api/PoeShared.Converters.CompressedDataConverter.ReadJson.html",
    "title": "Method ReadJson | EyeAuras Docs",
    "keywords": "Method ReadJson ReadJson(JsonReader, Type, object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description JsonReader reader Type objectType object existingValue JsonSerializer serializer Returns Type Description object"
  },
  "api/PoeShared.Converters.CompressedDataConverter.WriteJson.html": {
    "href": "api/PoeShared.Converters.CompressedDataConverter.WriteJson.html",
    "title": "Method WriteJson | EyeAuras Docs",
    "keywords": "Method WriteJson WriteJson(JsonWriter, object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description JsonWriter writer object value JsonSerializer serializer"
  },
  "api/PoeShared.Converters.CompressedDataConverter.html": {
    "href": "api/PoeShared.Converters.CompressedDataConverter.html",
    "title": "Class CompressedDataConverter | EyeAuras Docs",
    "keywords": "Class CompressedDataConverter Inheritance object CompressedDataConverter Namespace: PoeShared.Converters Assembly: PoeShared.dll Syntax public sealed class CompressedDataConverter : JsonConverter Constructors Name Description CompressedDataConverter() Methods Name Description CanConvert(Type) ReadJson(JsonReader, Type, object, JsonSerializer) WriteJson(JsonWriter, object, JsonSerializer) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Converters.SafeDataConverter.-ctor.html": {
    "href": "api/PoeShared.Converters.SafeDataConverter.-ctor.html",
    "title": "Constructor SafeDataConverter | EyeAuras Docs",
    "keywords": "Constructor SafeDataConverter SafeDataConverter() Declaration public SafeDataConverter()"
  },
  "api/PoeShared.Converters.SafeDataConverter.CanConvert.html": {
    "href": "api/PoeShared.Converters.SafeDataConverter.CanConvert.html",
    "title": "Method CanConvert | EyeAuras Docs",
    "keywords": "Method CanConvert CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description bool"
  },
  "api/PoeShared.Converters.SafeDataConverter.ReadJson.html": {
    "href": "api/PoeShared.Converters.SafeDataConverter.ReadJson.html",
    "title": "Method ReadJson | EyeAuras Docs",
    "keywords": "Method ReadJson ReadJson(JsonReader, Type, object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description JsonReader reader Type objectType object existingValue JsonSerializer serializer Returns Type Description object"
  },
  "api/PoeShared.Converters.SafeDataConverter.WriteJson.html": {
    "href": "api/PoeShared.Converters.SafeDataConverter.WriteJson.html",
    "title": "Method WriteJson | EyeAuras Docs",
    "keywords": "Method WriteJson WriteJson(JsonWriter, object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description JsonWriter writer object value JsonSerializer serializer"
  },
  "api/PoeShared.Converters.SafeDataConverter.html": {
    "href": "api/PoeShared.Converters.SafeDataConverter.html",
    "title": "Class SafeDataConverter | EyeAuras Docs",
    "keywords": "Class SafeDataConverter Uses Windows DPAPI to protect data, key is linked to local machine Inheritance object SafeDataConverter Namespace: PoeShared.Converters Assembly: PoeShared.Native.dll Syntax public sealed class SafeDataConverter : JsonConverter Constructors Name Description SafeDataConverter() Methods Name Description CanConvert(Type) ReadJson(JsonReader, Type, object, JsonSerializer) WriteJson(JsonWriter, object, JsonSerializer) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Converters.html": {
    "href": "api/PoeShared.Converters.html",
    "title": "Namespace PoeShared.Converters | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Converters Classes CompressedDataConverter SafeDataConverter Uses Windows DPAPI to protect data, key is linked to local machine"
  },
  "api/PoeShared.Evaluators.ITextEvaluator.Expression.html": {
    "href": "api/PoeShared.Evaluators.ITextEvaluator.Expression.html",
    "title": "Property Expression | EyeAuras Docs",
    "keywords": "Property Expression Expression Declaration string Expression { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.Evaluators.ITextEvaluator.IsMatch.html": {
    "href": "api/PoeShared.Evaluators.ITextEvaluator.IsMatch.html",
    "title": "Property IsMatch | EyeAuras Docs",
    "keywords": "Property IsMatch IsMatch Declaration bool IsMatch { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Evaluators.ITextEvaluator.Match.html": {
    "href": "api/PoeShared.Evaluators.ITextEvaluator.Match.html",
    "title": "Property Match | EyeAuras Docs",
    "keywords": "Property Match Match Declaration string Match { get; } Property Value Type Description string"
  },
  "api/PoeShared.Evaluators.ITextEvaluator.Text.html": {
    "href": "api/PoeShared.Evaluators.ITextEvaluator.Text.html",
    "title": "Property Text | EyeAuras Docs",
    "keywords": "Property Text Text Declaration string Text { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.Evaluators.ITextEvaluator.html": {
    "href": "api/PoeShared.Evaluators.ITextEvaluator.html",
    "title": "Interface ITextEvaluator | EyeAuras Docs",
    "keywords": "Interface ITextEvaluator Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged IHasError.Error Namespace: PoeShared.Evaluators Assembly: PoeShared.dll Syntax public interface ITextEvaluator : IDisposable, INotifyPropertyChanged, IHasError Properties Name Description Expression IsMatch Match Text Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Evaluators.ITextMatcher.IsMatch.html": {
    "href": "api/PoeShared.Evaluators.ITextMatcher.IsMatch.html",
    "title": "Method IsMatch | EyeAuras Docs",
    "keywords": "Method IsMatch IsMatch(string, string, bool) Declaration bool IsMatch(string needle, string haystack, bool matchCase) Parameters Type Name Description string needle string haystack bool matchCase Returns Type Description bool"
  },
  "api/PoeShared.Evaluators.ITextMatcher.html": {
    "href": "api/PoeShared.Evaluators.ITextMatcher.html",
    "title": "Interface ITextMatcher | EyeAuras Docs",
    "keywords": "Interface ITextMatcher Namespace: PoeShared.Evaluators Assembly: PoeShared.dll Syntax public interface ITextMatcher Methods Name Description IsMatch(string, string, bool) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Evaluators.RegexTextMatcher.-ctor.html": {
    "href": "api/PoeShared.Evaluators.RegexTextMatcher.-ctor.html",
    "title": "Constructor RegexTextMatcher | EyeAuras Docs",
    "keywords": "Constructor RegexTextMatcher RegexTextMatcher() Declaration public RegexTextMatcher()"
  },
  "api/PoeShared.Evaluators.RegexTextMatcher.IsMatch.html": {
    "href": "api/PoeShared.Evaluators.RegexTextMatcher.IsMatch.html",
    "title": "Method IsMatch | EyeAuras Docs",
    "keywords": "Method IsMatch IsMatch(string, string, bool) Declaration public bool IsMatch(string needle, string haystack, bool matchCase) Parameters Type Name Description string needle string haystack bool matchCase Returns Type Description bool Implements ITextMatcher.IsMatch(string, string, bool)"
  },
  "api/PoeShared.Evaluators.RegexTextMatcher.html": {
    "href": "api/PoeShared.Evaluators.RegexTextMatcher.html",
    "title": "Class RegexTextMatcher | EyeAuras Docs",
    "keywords": "Class RegexTextMatcher Inheritance object RegexTextMatcher Implements ITextMatcher Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Evaluators Assembly: PoeShared.dll Syntax public sealed class RegexTextMatcher : ITextMatcher Constructors Name Description RegexTextMatcher() Methods Name Description IsMatch(string, string, bool) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Evaluators.RunglishTextMatcher.-ctor.html": {
    "href": "api/PoeShared.Evaluators.RunglishTextMatcher.-ctor.html",
    "title": "Constructor RunglishTextMatcher | EyeAuras Docs",
    "keywords": "Constructor RunglishTextMatcher RunglishTextMatcher(ITextMatcher) Declaration public RunglishTextMatcher(ITextMatcher matcher) Parameters Type Name Description ITextMatcher matcher"
  },
  "api/PoeShared.Evaluators.RunglishTextMatcher.IsMatch.html": {
    "href": "api/PoeShared.Evaluators.RunglishTextMatcher.IsMatch.html",
    "title": "Method IsMatch | EyeAuras Docs",
    "keywords": "Method IsMatch IsMatch(string, string, bool) Declaration public bool IsMatch(string needle, string haystack, bool matchCase) Parameters Type Name Description string needle string haystack bool matchCase Returns Type Description bool Implements ITextMatcher.IsMatch(string, string, bool)"
  },
  "api/PoeShared.Evaluators.RunglishTextMatcher.html": {
    "href": "api/PoeShared.Evaluators.RunglishTextMatcher.html",
    "title": "Class RunglishTextMatcher | EyeAuras Docs",
    "keywords": "Class RunglishTextMatcher Inheritance object RunglishTextMatcher Implements ITextMatcher Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Evaluators Assembly: PoeShared.dll Syntax public sealed class RunglishTextMatcher : ITextMatcher Constructors Name Description RunglishTextMatcher(ITextMatcher) Methods Name Description IsMatch(string, string, bool) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Evaluators.StrictTextMatcher.-ctor.html": {
    "href": "api/PoeShared.Evaluators.StrictTextMatcher.-ctor.html",
    "title": "Constructor StrictTextMatcher | EyeAuras Docs",
    "keywords": "Constructor StrictTextMatcher StrictTextMatcher() Declaration public StrictTextMatcher()"
  },
  "api/PoeShared.Evaluators.StrictTextMatcher.IsMatch.html": {
    "href": "api/PoeShared.Evaluators.StrictTextMatcher.IsMatch.html",
    "title": "Method IsMatch | EyeAuras Docs",
    "keywords": "Method IsMatch IsMatch(string, string, bool) Declaration public bool IsMatch(string needle, string haystack, bool matchCase) Parameters Type Name Description string needle string haystack bool matchCase Returns Type Description bool Implements ITextMatcher.IsMatch(string, string, bool)"
  },
  "api/PoeShared.Evaluators.StrictTextMatcher.html": {
    "href": "api/PoeShared.Evaluators.StrictTextMatcher.html",
    "title": "Class StrictTextMatcher | EyeAuras Docs",
    "keywords": "Class StrictTextMatcher Inheritance object StrictTextMatcher Implements ITextMatcher Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Evaluators Assembly: PoeShared.dll Syntax public sealed class StrictTextMatcher : ITextMatcher Constructors Name Description StrictTextMatcher() Methods Name Description IsMatch(string, string, bool) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Evaluators.TextEvaluator.-ctor.html": {
    "href": "api/PoeShared.Evaluators.TextEvaluator.-ctor.html",
    "title": "Constructor TextEvaluator | EyeAuras Docs",
    "keywords": "Constructor TextEvaluator TextEvaluator() Declaration public TextEvaluator()"
  },
  "api/PoeShared.Evaluators.TextEvaluator.Error.html": {
    "href": "api/PoeShared.Evaluators.TextEvaluator.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Declaration public string Error { get; } Property Value Type Description string Implements IHasError.Error"
  },
  "api/PoeShared.Evaluators.TextEvaluator.Expression.html": {
    "href": "api/PoeShared.Evaluators.TextEvaluator.Expression.html",
    "title": "Property Expression | EyeAuras Docs",
    "keywords": "Property Expression Expression Declaration public string Expression { get; set; } Property Value Type Description string Implements ITextEvaluator.Expression"
  },
  "api/PoeShared.Evaluators.TextEvaluator.IsMatch.html": {
    "href": "api/PoeShared.Evaluators.TextEvaluator.IsMatch.html",
    "title": "Property IsMatch | EyeAuras Docs",
    "keywords": "Property IsMatch IsMatch Declaration public bool IsMatch { get; } Property Value Type Description bool Implements ITextEvaluator.IsMatch"
  },
  "api/PoeShared.Evaluators.TextEvaluator.Match.html": {
    "href": "api/PoeShared.Evaluators.TextEvaluator.Match.html",
    "title": "Property Match | EyeAuras Docs",
    "keywords": "Property Match Match Declaration public string Match { get; } Property Value Type Description string Implements ITextEvaluator.Match"
  },
  "api/PoeShared.Evaluators.TextEvaluator.StringComparison.html": {
    "href": "api/PoeShared.Evaluators.TextEvaluator.StringComparison.html",
    "title": "Property StringComparison | EyeAuras Docs",
    "keywords": "Property StringComparison StringComparison Declaration public StringComparison StringComparison { get; set; } Property Value Type Description StringComparison"
  },
  "api/PoeShared.Evaluators.TextEvaluator.Text.html": {
    "href": "api/PoeShared.Evaluators.TextEvaluator.Text.html",
    "title": "Property Text | EyeAuras Docs",
    "keywords": "Property Text Text Declaration public string Text { get; set; } Property Value Type Description string Implements ITextEvaluator.Text"
  },
  "api/PoeShared.Evaluators.TextEvaluator.html": {
    "href": "api/PoeShared.Evaluators.TextEvaluator.html",
    "title": "Class TextEvaluator | EyeAuras Docs",
    "keywords": "Class TextEvaluator Inheritance object DisposableReactiveObject TextEvaluator Implements ITextEvaluator IDisposable INotifyPropertyChanged IHasError Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Evaluators Assembly: PoeShared.dll Syntax public sealed class TextEvaluator : DisposableReactiveObject, ITextEvaluator, IDisposable, INotifyPropertyChanged, IHasError Constructors Name Description TextEvaluator() Properties Name Description Error Expression IsMatch Match StringComparison Text Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Evaluators.TextEvaluatorType.html": {
    "href": "api/PoeShared.Evaluators.TextEvaluatorType.html",
    "title": "Enum TextEvaluatorType | EyeAuras Docs",
    "keywords": "Enum TextEvaluatorType Namespace: PoeShared.Evaluators Assembly: PoeShared.dll Syntax public enum TextEvaluatorType Fields Name Description Lambda Regex Text Extension Methods EnumExtensions.GetUniqueFlags<TextEvaluatorType>(TextEvaluatorType) EnumExtensions.RemoveFlag<TextEvaluatorType>(TextEvaluatorType, TextEvaluatorType) EnumExtensions.RemoveFlag<TextEvaluatorType>(TextEvaluatorType, params TextEvaluatorType[]) ObjectExtensions.AddTo<TextEvaluatorType, TCollection>(TextEvaluatorType, ISourceList<TCollection>) ObjectExtensions.AddTo<TextEvaluatorType, TCollection>(TextEvaluatorType, ICollection<TCollection>) ObjectExtensions.CloneJson<TextEvaluatorType>(TextEvaluatorType) ObjectExtensions.CopyPropertiesTo<TextEvaluatorType, TTarget>(TextEvaluatorType, TTarget) ObjectExtensions.DumpToTextRaw<TextEvaluatorType>(TextEvaluatorType) ObjectExtensions.DumpToText<TextEvaluatorType>(TextEvaluatorType) ObjectExtensions.Dump<TextEvaluatorType>(TextEvaluatorType) ObjectExtensions.GetPropertyAccessor<TextEvaluatorType, TValue>(TextEvaluatorType, Expression<Func<TextEvaluatorType, TValue>>) ObjectExtensions.InsertTo<TextEvaluatorType, TCollection>(TextEvaluatorType, IList<TCollection>, int) ObjectExtensions.ToJson<TextEvaluatorType>(TextEvaluatorType) ObjectExtensions.ToStringSafe<TextEvaluatorType>(TextEvaluatorType) ObjectExtensions.TransferPropertiesTo<TextEvaluatorType, TTarget>(TextEvaluatorType, TTarget, params string[]) XDocumentExtensions.AddTo<TextEvaluatorType>(TextEvaluatorType, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Evaluators.TextExpressionEvaluator.-ctor.html": {
    "href": "api/PoeShared.Evaluators.TextExpressionEvaluator.-ctor.html",
    "title": "Constructor TextExpressionEvaluator | EyeAuras Docs",
    "keywords": "Constructor TextExpressionEvaluator TextExpressionEvaluator() Declaration public TextExpressionEvaluator()"
  },
  "api/PoeShared.Evaluators.TextExpressionEvaluator.Error.html": {
    "href": "api/PoeShared.Evaluators.TextExpressionEvaluator.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Declaration public string Error { get; } Property Value Type Description string Implements IHasError.Error"
  },
  "api/PoeShared.Evaluators.TextExpressionEvaluator.Expression.html": {
    "href": "api/PoeShared.Evaluators.TextExpressionEvaluator.Expression.html",
    "title": "Property Expression | EyeAuras Docs",
    "keywords": "Property Expression Expression Declaration public string Expression { get; set; } Property Value Type Description string Implements ITextEvaluator.Expression"
  },
  "api/PoeShared.Evaluators.TextExpressionEvaluator.IsMatch.html": {
    "href": "api/PoeShared.Evaluators.TextExpressionEvaluator.IsMatch.html",
    "title": "Property IsMatch | EyeAuras Docs",
    "keywords": "Property IsMatch IsMatch Declaration public bool IsMatch { get; } Property Value Type Description bool Implements ITextEvaluator.IsMatch"
  },
  "api/PoeShared.Evaluators.TextExpressionEvaluator.Match.html": {
    "href": "api/PoeShared.Evaluators.TextExpressionEvaluator.Match.html",
    "title": "Property Match | EyeAuras Docs",
    "keywords": "Property Match Match Declaration public string Match { get; } Property Value Type Description string Implements ITextEvaluator.Match"
  },
  "api/PoeShared.Evaluators.TextExpressionEvaluator.Text.html": {
    "href": "api/PoeShared.Evaluators.TextExpressionEvaluator.Text.html",
    "title": "Property Text | EyeAuras Docs",
    "keywords": "Property Text Text Declaration public string Text { get; set; } Property Value Type Description string Implements ITextEvaluator.Text"
  },
  "api/PoeShared.Evaluators.TextExpressionEvaluator.html": {
    "href": "api/PoeShared.Evaluators.TextExpressionEvaluator.html",
    "title": "Class TextExpressionEvaluator | EyeAuras Docs",
    "keywords": "Class TextExpressionEvaluator Inheritance object DisposableReactiveObject TextExpressionEvaluator Implements ITextEvaluator IDisposable INotifyPropertyChanged IHasError Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Evaluators Assembly: PoeShared.dll Syntax public sealed class TextExpressionEvaluator : DisposableReactiveObject, ITextEvaluator, IDisposable, INotifyPropertyChanged, IHasError Constructors Name Description TextExpressionEvaluator() Properties Name Description Error Expression IsMatch Match Text Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Evaluators.TextRegexEvaluator.-ctor.html": {
    "href": "api/PoeShared.Evaluators.TextRegexEvaluator.-ctor.html",
    "title": "Constructor TextRegexEvaluator | EyeAuras Docs",
    "keywords": "Constructor TextRegexEvaluator TextRegexEvaluator() Declaration public TextRegexEvaluator()"
  },
  "api/PoeShared.Evaluators.TextRegexEvaluator.Error.html": {
    "href": "api/PoeShared.Evaluators.TextRegexEvaluator.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Declaration public string Error { get; } Property Value Type Description string Implements IHasError.Error"
  },
  "api/PoeShared.Evaluators.TextRegexEvaluator.Expression.html": {
    "href": "api/PoeShared.Evaluators.TextRegexEvaluator.Expression.html",
    "title": "Property Expression | EyeAuras Docs",
    "keywords": "Property Expression Expression Declaration public string Expression { get; set; } Property Value Type Description string Implements ITextEvaluator.Expression"
  },
  "api/PoeShared.Evaluators.TextRegexEvaluator.IgnoreCase.html": {
    "href": "api/PoeShared.Evaluators.TextRegexEvaluator.IgnoreCase.html",
    "title": "Property IgnoreCase | EyeAuras Docs",
    "keywords": "Property IgnoreCase IgnoreCase Declaration public bool IgnoreCase { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.Evaluators.TextRegexEvaluator.IsMatch.html": {
    "href": "api/PoeShared.Evaluators.TextRegexEvaluator.IsMatch.html",
    "title": "Property IsMatch | EyeAuras Docs",
    "keywords": "Property IsMatch IsMatch Declaration public bool IsMatch { get; } Property Value Type Description bool Implements ITextEvaluator.IsMatch"
  },
  "api/PoeShared.Evaluators.TextRegexEvaluator.Match.html": {
    "href": "api/PoeShared.Evaluators.TextRegexEvaluator.Match.html",
    "title": "Property Match | EyeAuras Docs",
    "keywords": "Property Match Match Declaration public string Match { get; } Property Value Type Description string Implements ITextEvaluator.Match"
  },
  "api/PoeShared.Evaluators.TextRegexEvaluator.Regex.html": {
    "href": "api/PoeShared.Evaluators.TextRegexEvaluator.Regex.html",
    "title": "Property Regex | EyeAuras Docs",
    "keywords": "Property Regex Regex Declaration public Regex Regex { get; } Property Value Type Description Regex"
  },
  "api/PoeShared.Evaluators.TextRegexEvaluator.RegexMatch.html": {
    "href": "api/PoeShared.Evaluators.TextRegexEvaluator.RegexMatch.html",
    "title": "Property RegexMatch | EyeAuras Docs",
    "keywords": "Property RegexMatch RegexMatch Declaration public Match RegexMatch { get; } Property Value Type Description Match"
  },
  "api/PoeShared.Evaluators.TextRegexEvaluator.Text.html": {
    "href": "api/PoeShared.Evaluators.TextRegexEvaluator.Text.html",
    "title": "Property Text | EyeAuras Docs",
    "keywords": "Property Text Text Declaration public string Text { get; set; } Property Value Type Description string Implements ITextEvaluator.Text"
  },
  "api/PoeShared.Evaluators.TextRegexEvaluator.html": {
    "href": "api/PoeShared.Evaluators.TextRegexEvaluator.html",
    "title": "Class TextRegexEvaluator | EyeAuras Docs",
    "keywords": "Class TextRegexEvaluator Inheritance object DisposableReactiveObject TextRegexEvaluator Implements ITextEvaluator IDisposable INotifyPropertyChanged IHasError Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Evaluators Assembly: PoeShared.dll Syntax public sealed class TextRegexEvaluator : DisposableReactiveObject, ITextEvaluator, IDisposable, INotifyPropertyChanged, IHasError Constructors Name Description TextRegexEvaluator() Properties Name Description Error Expression IgnoreCase IsMatch Match Regex RegexMatch Text Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Evaluators.html": {
    "href": "api/PoeShared.Evaluators.html",
    "title": "Namespace PoeShared.Evaluators | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Evaluators Classes RegexTextMatcher RunglishTextMatcher StrictTextMatcher TextEvaluator TextExpressionEvaluator TextRegexEvaluator Interfaces ITextEvaluator ITextMatcher Enums TextEvaluatorType"
  },
  "api/PoeShared.Expressions.ExpressionEqualityComparer.-ctor.html": {
    "href": "api/PoeShared.Expressions.ExpressionEqualityComparer.-ctor.html",
    "title": "Constructor ExpressionEqualityComparer | EyeAuras Docs",
    "keywords": "Constructor ExpressionEqualityComparer ExpressionEqualityComparer() Declaration public ExpressionEqualityComparer()"
  },
  "api/PoeShared.Expressions.ExpressionEqualityComparer.Equals.html": {
    "href": "api/PoeShared.Expressions.ExpressionEqualityComparer.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(Expression, Expression) Declaration public bool Equals(Expression a, Expression b) Parameters Type Name Description Expression a Expression b Returns Type Description bool Implements IEqualityComparer<T>.Equals(T, T)"
  },
  "api/PoeShared.Expressions.ExpressionEqualityComparer.GetHashCode.html": {
    "href": "api/PoeShared.Expressions.ExpressionEqualityComparer.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode(Expression) Declaration public int GetHashCode(Expression expression) Parameters Type Name Description Expression expression Returns Type Description int Implements IEqualityComparer<T>.GetHashCode(T)"
  },
  "api/PoeShared.Expressions.ExpressionEqualityComparer.Instance.html": {
    "href": "api/PoeShared.Expressions.ExpressionEqualityComparer.Instance.html",
    "title": "Field Instance | EyeAuras Docs",
    "keywords": "Field Instance Namespace: PoeShared.Expressions Assembly: PoeShared.dll Syntax public static ExpressionEqualityComparer Instance Returns Type Description ExpressionEqualityComparer"
  },
  "api/PoeShared.Expressions.ExpressionEqualityComparer.html": {
    "href": "api/PoeShared.Expressions.ExpressionEqualityComparer.html",
    "title": "Class ExpressionEqualityComparer | EyeAuras Docs",
    "keywords": "Class ExpressionEqualityComparer Inheritance object ExpressionEqualityComparer Implements IEqualityComparer<Expression> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Expressions Assembly: PoeShared.dll Syntax public class ExpressionEqualityComparer : IEqualityComparer<Expression> Constructors Name Description ExpressionEqualityComparer() Fields Name Description Instance Methods Name Description Equals(Expression, Expression) GetHashCode(Expression) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Expressions.html": {
    "href": "api/PoeShared.Expressions.html",
    "title": "Namespace PoeShared.Expressions | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Expressions Classes ExpressionEqualityComparer"
  },
  "api/PoeShared.Guard.ArgumentCondition.html": {
    "href": "api/PoeShared.Guard.ArgumentCondition.html",
    "title": "Method ArgumentCondition | EyeAuras Docs",
    "keywords": "Method ArgumentCondition ArgumentCondition<T>(Expression<Func<T>>, Expression<Func<T, bool>>) Checks if the given value meets the given condition. Declaration public static void ArgumentCondition<T>(Expression<Func<T>> expression, Expression<Func<T, bool>> condition) Parameters Type Name Description Expression<Func<T>> expression Expression<Func<T, bool>> condition Type Parameters Name Description T Examples Only pass single parameters through to this call via expression, e.g. Guard.ArgumentCondition(() => value, v => true) ArgumentCondition<T>(T, string, Expression<Func<T, bool>>) Checks if the given value meets the given condition. Declaration public static void ArgumentCondition<T>(T value, string paramName, Expression<Func<T, bool>> condition) Parameters Type Name Description T value string paramName Expression<Func<T, bool>> condition Type Parameters Name Description T Examples Only pass single parameters through to this call via expression, e.g. Guard.ArgumentCondition(value, \"value\", v => true)"
  },
  "api/PoeShared.Guard.ArgumentHasLength.html": {
    "href": "api/PoeShared.Guard.ArgumentHasLength.html",
    "title": "Method ArgumentHasLength | EyeAuras Docs",
    "keywords": "Method ArgumentHasLength ArgumentHasLength(Expression<Func<string>>, int) Checks if the given string has the expected length Declaration public static void ArgumentHasLength(Expression<Func<string>> expression, int expectedLength) Parameters Type Name Description Expression<Func<string>> expression Property expression. int expectedLength Expected length. ArgumentHasLength(string, string, int) Checks if the given string has the expected length Declaration public static void ArgumentHasLength(string propertyValue, string paramName, int expectedLength) Parameters Type Name Description string propertyValue Property value. string paramName Parameter name. int expectedLength Expected length."
  },
  "api/PoeShared.Guard.ArgumentHasMaxLength.html": {
    "href": "api/PoeShared.Guard.ArgumentHasMaxLength.html",
    "title": "Method ArgumentHasMaxLength | EyeAuras Docs",
    "keywords": "Method ArgumentHasMaxLength ArgumentHasMaxLength(Expression<Func<string>>, int) Checks if the given string has a length which exceeds given max length. Declaration public static void ArgumentHasMaxLength(Expression<Func<string>> expression, int maxLength) Parameters Type Name Description Expression<Func<string>> expression int maxLength ArgumentHasMaxLength(string, string, int) Checks if the given string has a length which exceeds given max length. Declaration public static void ArgumentHasMaxLength(string propertyValue, string paramName, int maxLength) Parameters Type Name Description string propertyValue string paramName int maxLength"
  },
  "api/PoeShared.Guard.ArgumentHasMinLength.html": {
    "href": "api/PoeShared.Guard.ArgumentHasMinLength.html",
    "title": "Method ArgumentHasMinLength | EyeAuras Docs",
    "keywords": "Method ArgumentHasMinLength ArgumentHasMinLength(Expression<Func<string>>, int) Checks if the given string has a length which is at least given min length long. Declaration public static void ArgumentHasMinLength(Expression<Func<string>> expression, int minLength) Parameters Type Name Description Expression<Func<string>> expression int minLength ArgumentHasMinLength(string, string, int) Checks if the given string has a length which is at least given min length long. Declaration public static void ArgumentHasMinLength(string propertyValue, string paramName, int minLength) Parameters Type Name Description string propertyValue string paramName int minLength"
  },
  "api/PoeShared.Guard.ArgumentIsBetween.html": {
    "href": "api/PoeShared.Guard.ArgumentIsBetween.html",
    "title": "Method ArgumentIsBetween | EyeAuras Docs",
    "keywords": "Method ArgumentIsBetween ArgumentIsBetween<T>(Expression<Func<T>>, T, T, bool) Checks if given argument is between given lower value and upper value. Declaration public static void ArgumentIsBetween<T>(Expression<Func<T>> argument, T lowerBound, T upperBound, bool inclusive = false) where T : struct, IComparable<T> Parameters Type Name Description Expression<Func<T>> argument Given argument T lowerBound T upperBound bool inclusive Inclusive lower bound value if true. Type Parameters Name Description T"
  },
  "api/PoeShared.Guard.ArgumentIsFalse.html": {
    "href": "api/PoeShared.Guard.ArgumentIsFalse.html",
    "title": "Method ArgumentIsFalse | EyeAuras Docs",
    "keywords": "Method ArgumentIsFalse ArgumentIsFalse(bool, string) Checks if the given value is false. Declaration public static void ArgumentIsFalse(bool value, string paramName) Parameters Type Name Description bool value string paramName Exceptions Type Condition ArgumentException The value parameter is true. ArgumentIsFalse(Expression<Func<bool>>) Checks if the given expression is false. Declaration public static void ArgumentIsFalse(Expression<Func<bool>> expression) Parameters Type Name Description Expression<Func<bool>> expression Exceptions Type Condition ArgumentException The expression parameter is true."
  },
  "api/PoeShared.Guard.ArgumentIsGreaterOrEqual.html": {
    "href": "api/PoeShared.Guard.ArgumentIsGreaterOrEqual.html",
    "title": "Method ArgumentIsGreaterOrEqual | EyeAuras Docs",
    "keywords": "Method ArgumentIsGreaterOrEqual ArgumentIsGreaterOrEqual<T>(Expression<Func<T>>, T) Checks if given argument is greater or equal to given value. Declaration public static void ArgumentIsGreaterOrEqual<T>(Expression<Func<T>> argument, T givenValue) where T : struct, IComparable<T> Parameters Type Name Description Expression<Func<T>> argument Given argument T givenValue Given value. Type Parameters Name Description T"
  },
  "api/PoeShared.Guard.ArgumentIsGreaterThan.html": {
    "href": "api/PoeShared.Guard.ArgumentIsGreaterThan.html",
    "title": "Method ArgumentIsGreaterThan | EyeAuras Docs",
    "keywords": "Method ArgumentIsGreaterThan ArgumentIsGreaterThan<T>(Expression<Func<T>>, T) Checks if given argument is greater than given value. Declaration public static void ArgumentIsGreaterThan<T>(Expression<Func<T>> expression, T givenValue) where T : struct, IComparable<T> Parameters Type Name Description Expression<Func<T>> expression Given argument T givenValue Given value. Type Parameters Name Description T"
  },
  "api/PoeShared.Guard.ArgumentIsLowerOrEqual.html": {
    "href": "api/PoeShared.Guard.ArgumentIsLowerOrEqual.html",
    "title": "Method ArgumentIsLowerOrEqual | EyeAuras Docs",
    "keywords": "Method ArgumentIsLowerOrEqual ArgumentIsLowerOrEqual<T>(Expression<Func<T>>, T) Checks if given argument is lower or equal to given value. Declaration public static void ArgumentIsLowerOrEqual<T>(Expression<Func<T>> argument, T givenValue) where T : struct, IComparable<T> Parameters Type Name Description Expression<Func<T>> argument Given argument T givenValue Given value. Type Parameters Name Description T"
  },
  "api/PoeShared.Guard.ArgumentIsLowerThan.html": {
    "href": "api/PoeShared.Guard.ArgumentIsLowerThan.html",
    "title": "Method ArgumentIsLowerThan | EyeAuras Docs",
    "keywords": "Method ArgumentIsLowerThan ArgumentIsLowerThan<T>(Expression<Func<T>>, T) Checks if given argument is lower than given value. Declaration public static void ArgumentIsLowerThan<T>(Expression<Func<T>> argument, T givenValue) where T : struct, IComparable<T> Parameters Type Name Description Expression<Func<T>> argument Given argument T givenValue Given value. Type Parameters Name Description T"
  },
  "api/PoeShared.Guard.ArgumentIsNotNegative.html": {
    "href": "api/PoeShared.Guard.ArgumentIsNotNegative.html",
    "title": "Method ArgumentIsNotNegative | EyeAuras Docs",
    "keywords": "Method ArgumentIsNotNegative ArgumentIsNotNegative<T>(Expression<Func<T>>) Verifies the expression is not a negative number and throws an ArgumentOutOfRangeException if it is a negative number. Declaration public static void ArgumentIsNotNegative<T>(Expression<Func<T>> expression) where T : struct, IComparable<T> Parameters Type Name Description Expression<Func<T>> expression An expression containing a single parameter e.g. () => param Type Parameters Name Description T Exceptions Type Condition ArgumentOutOfRangeException The expression parameter is a negative number. ArgumentIsNotNegative<T>(T, string) Checks if argumentValue is not a negative number. Declaration public static void ArgumentIsNotNegative<T>(T argumentValue, string argumentName) where T : struct, IComparable<T> Parameters Type Name Description T argumentValue The value to verify. string argumentName The name of the argumentValue. Type Parameters Name Description T Exceptions Type Condition ArgumentOutOfRangeException The argumentValue parameter is a negative number."
  },
  "api/PoeShared.Guard.ArgumentIsTrue.html": {
    "href": "api/PoeShared.Guard.ArgumentIsTrue.html",
    "title": "Method ArgumentIsTrue | EyeAuras Docs",
    "keywords": "Method ArgumentIsTrue ArgumentIsTrue(bool, string) Checks if the given value is true. Declaration public static void ArgumentIsTrue(bool value, string paramName) Parameters Type Name Description bool value string paramName Exceptions Type Condition ArgumentException The value parameter is false. ArgumentIsTrue(Expression<Func<bool>>) Checks if the given expression is true. Declaration public static void ArgumentIsTrue(Expression<Func<bool>> expression) Parameters Type Name Description Expression<Func<bool>> expression Exceptions Type Condition ArgumentException The expression parameter is false."
  },
  "api/PoeShared.Guard.ArgumentMustBeInterface.html": {
    "href": "api/PoeShared.Guard.ArgumentMustBeInterface.html",
    "title": "Method ArgumentMustBeInterface | EyeAuras Docs",
    "keywords": "Method ArgumentMustBeInterface ArgumentMustBeInterface(Type) Checks if the given type is an interface type. Declaration public static void ArgumentMustBeInterface(Type type) Parameters Type Name Description Type type Exceptions Type Condition ArgumentException The type parameter is not an interface type."
  },
  "api/PoeShared.Guard.ArgumentMustBeOfType.html": {
    "href": "api/PoeShared.Guard.ArgumentMustBeOfType.html",
    "title": "Method ArgumentMustBeOfType | EyeAuras Docs",
    "keywords": "Method ArgumentMustBeOfType ArgumentMustBeOfType<T>(object, string) Declaration public static void ArgumentMustBeOfType<T>(object value, string paramName) Parameters Type Name Description object value string paramName Type Parameters Name Description T"
  },
  "api/PoeShared.Guard.ArgumentMustNotBeInterface.html": {
    "href": "api/PoeShared.Guard.ArgumentMustNotBeInterface.html",
    "title": "Method ArgumentMustNotBeInterface | EyeAuras Docs",
    "keywords": "Method ArgumentMustNotBeInterface ArgumentMustNotBeInterface(Type) Checks if the given type is not an interface type. Declaration public static void ArgumentMustNotBeInterface(Type type) Parameters Type Name Description Type type Exceptions Type Condition ArgumentException The type parameter is an interface type."
  },
  "api/PoeShared.Guard.ArgumentNotNull.html": {
    "href": "api/PoeShared.Guard.ArgumentNotNull.html",
    "title": "Method ArgumentNotNull | EyeAuras Docs",
    "keywords": "Method ArgumentNotNull ArgumentNotNull<T>(Expression<Func<T>>) Checks if the given value is not null. Declaration public static void ArgumentNotNull<T>(Expression<Func<T>> expression) Parameters Type Name Description Expression<Func<T>> expression An expression containing a single string parameter e.g. () => someParam Type Parameters Name Description T Examples Only pass single parameters through to this call via expression, e.g. Guard.ArgumentNotNull(() => someParam) ArgumentNotNull<T>(T, string) Checks if the given value is not null. Declaration public static void ArgumentNotNull<T>(T value, string paramName) Parameters Type Name Description T value string paramName Type Parameters Name Description T Examples Pass the parameter and it's name, e.g. Guard.ArgumentNotNull(someParam, nameof(someParam))"
  },
  "api/PoeShared.Guard.ArgumentNotNullOrEmpty.html": {
    "href": "api/PoeShared.Guard.ArgumentNotNullOrEmpty.html",
    "title": "Method ArgumentNotNullOrEmpty | EyeAuras Docs",
    "keywords": "Method ArgumentNotNullOrEmpty ArgumentNotNullOrEmpty(Expression<Func<IEnumerable>>) Checks if the given string is not null or empty. Declaration public static void ArgumentNotNullOrEmpty(Expression<Func<IEnumerable>> expression) Parameters Type Name Description Expression<Func<IEnumerable>> expression ArgumentNotNullOrEmpty(IEnumerable, string) Checks if the given string is not null or empty. Declaration public static void ArgumentNotNullOrEmpty(IEnumerable enumerable, string paramName) Parameters Type Name Description IEnumerable enumerable string paramName ArgumentNotNullOrEmpty(Expression<Func<string>>) Checks if the given string is not null or empty. Declaration public static void ArgumentNotNullOrEmpty(Expression<Func<string>> expression) Parameters Type Name Description Expression<Func<string>> expression ArgumentNotNullOrEmpty(string, string) Checks if the given string is not null or empty. Declaration public static void ArgumentNotNullOrEmpty(string propertyValue, string paramName) Parameters Type Name Description string propertyValue string paramName"
  },
  "api/PoeShared.Guard.ArgumentNull.html": {
    "href": "api/PoeShared.Guard.ArgumentNull.html",
    "title": "Method ArgumentNull | EyeAuras Docs",
    "keywords": "Method ArgumentNull ArgumentNull<T>(Expression<Func<T>>) Checks if the given value is not null. Declaration public static void ArgumentNull<T>(Expression<Func<T>> expression) Parameters Type Name Description Expression<Func<T>> expression An expression containing a single string parameter e.g. () => someParam Type Parameters Name Description T Examples Only pass single parameters through to this call via expression, e.g. Guard.ArgumentNull(() => someParam) ArgumentNull<T>(T, string) Checks if the given value is not null. Declaration public static void ArgumentNull<T>(T value, string paramName) Parameters Type Name Description T value string paramName Type Parameters Name Description T Examples Pass the parameter and it's name, e.g. Guard.ArgumentNull(someParam, nameof(someParam))"
  },
  "api/PoeShared.Guard.html": {
    "href": "api/PoeShared.Guard.html",
    "title": "Class Guard | EyeAuras Docs",
    "keywords": "Class Guard Inheritance object Guard Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared Assembly: PoeShared.dll Syntax public static class Guard Methods Name Description ArgumentCondition<T>(Expression<Func<T>>, Expression<Func<T, bool>>) Checks if the given value meets the given condition. ArgumentCondition<T>(T, string, Expression<Func<T, bool>>) Checks if the given value meets the given condition. ArgumentHasLength(Expression<Func<string>>, int) Checks if the given string has the expected length ArgumentHasLength(string, string, int) Checks if the given string has the expected length ArgumentHasMaxLength(Expression<Func<string>>, int) Checks if the given string has a length which exceeds given max length. ArgumentHasMaxLength(string, string, int) Checks if the given string has a length which exceeds given max length. ArgumentHasMinLength(Expression<Func<string>>, int) Checks if the given string has a length which is at least given min length long. ArgumentHasMinLength(string, string, int) Checks if the given string has a length which is at least given min length long. ArgumentIsBetween<T>(Expression<Func<T>>, T, T, bool) Checks if given argument is between given lower value and upper value. ArgumentIsFalse(bool, string) Checks if the given value is false. ArgumentIsFalse(Expression<Func<bool>>) Checks if the given expression is false. ArgumentIsGreaterOrEqual<T>(Expression<Func<T>>, T) Checks if given argument is greater or equal to given value. ArgumentIsGreaterThan<T>(Expression<Func<T>>, T) Checks if given argument is greater than given value. ArgumentIsLowerOrEqual<T>(Expression<Func<T>>, T) Checks if given argument is lower or equal to given value. ArgumentIsLowerThan<T>(Expression<Func<T>>, T) Checks if given argument is lower than given value. ArgumentIsNotNegative<T>(Expression<Func<T>>) Verifies the expression is not a negative number and throws an ArgumentOutOfRangeException if it is a negative number. ArgumentIsNotNegative<T>(T, string) Checks if argumentValue is not a negative number. ArgumentIsTrue(bool, string) Checks if the given value is true. ArgumentIsTrue(Expression<Func<bool>>) Checks if the given expression is true. ArgumentMustBeInterface(Type) Checks if the given type is an interface type. ArgumentMustBeOfType<T>(object, string) ArgumentMustNotBeInterface(Type) Checks if the given type is not an interface type. ArgumentNotNullOrEmpty(IEnumerable, string) Checks if the given string is not null or empty. ArgumentNotNullOrEmpty(Expression<Func<IEnumerable>>) Checks if the given string is not null or empty. ArgumentNotNullOrEmpty(Expression<Func<string>>) Checks if the given string is not null or empty. ArgumentNotNullOrEmpty(string, string) Checks if the given string is not null or empty. ArgumentNotNull<T>(Expression<Func<T>>) Checks if the given value is not null. ArgumentNotNull<T>(T, string) Checks if the given value is not null. ArgumentNull<T>(Expression<Func<T>>) Checks if the given value is not null. ArgumentNull<T>(T, string) Checks if the given value is not null."
  },
  "api/PoeShared.Hotkeys.HotkeyMode.html": {
    "href": "api/PoeShared.Hotkeys.HotkeyMode.html",
    "title": "Enum HotkeyMode | EyeAuras Docs",
    "keywords": "Enum HotkeyMode Namespace: PoeShared.Hotkeys Assembly: PoeShared.dll Syntax public enum HotkeyMode Fields Name Description Click Hold Extension Methods EnumExtensions.GetUniqueFlags<HotkeyMode>(HotkeyMode) EnumExtensions.RemoveFlag<HotkeyMode>(HotkeyMode, HotkeyMode) EnumExtensions.RemoveFlag<HotkeyMode>(HotkeyMode, params HotkeyMode[]) ObjectExtensions.AddTo<HotkeyMode, TCollection>(HotkeyMode, ISourceList<TCollection>) ObjectExtensions.AddTo<HotkeyMode, TCollection>(HotkeyMode, ICollection<TCollection>) ObjectExtensions.CloneJson<HotkeyMode>(HotkeyMode) ObjectExtensions.CopyPropertiesTo<HotkeyMode, TTarget>(HotkeyMode, TTarget) ObjectExtensions.DumpToTextRaw<HotkeyMode>(HotkeyMode) ObjectExtensions.DumpToText<HotkeyMode>(HotkeyMode) ObjectExtensions.Dump<HotkeyMode>(HotkeyMode) ObjectExtensions.GetPropertyAccessor<HotkeyMode, TValue>(HotkeyMode, Expression<Func<HotkeyMode, TValue>>) ObjectExtensions.InsertTo<HotkeyMode, TCollection>(HotkeyMode, IList<TCollection>, int) ObjectExtensions.ToJson<HotkeyMode>(HotkeyMode) ObjectExtensions.ToStringSafe<HotkeyMode>(HotkeyMode) ObjectExtensions.TransferPropertiesTo<HotkeyMode, TTarget>(HotkeyMode, TTarget, params string[]) XDocumentExtensions.AddTo<HotkeyMode>(HotkeyMode, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Hotkeys.html": {
    "href": "api/PoeShared.Hotkeys.html",
    "title": "Namespace PoeShared.Hotkeys | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Hotkeys Enums HotkeyMode"
  },
  "api/PoeShared.IClock.Elapsed.html": {
    "href": "api/PoeShared.IClock.Elapsed.html",
    "title": "Property Elapsed | EyeAuras Docs",
    "keywords": "Property Elapsed Elapsed Declaration TimeSpan Elapsed { get; } Property Value Type Description TimeSpan"
  },
  "api/PoeShared.IClock.Now.html": {
    "href": "api/PoeShared.IClock.Now.html",
    "title": "Property Now | EyeAuras Docs",
    "keywords": "Property Now Now Declaration DateTime Now { get; } Property Value Type Description DateTime"
  },
  "api/PoeShared.IClock.UtcNow.html": {
    "href": "api/PoeShared.IClock.UtcNow.html",
    "title": "Property UtcNow | EyeAuras Docs",
    "keywords": "Property UtcNow UtcNow Declaration DateTime UtcNow { get; } Property Value Type Description DateTime"
  },
  "api/PoeShared.IClock.html": {
    "href": "api/PoeShared.IClock.html",
    "title": "Interface IClock | EyeAuras Docs",
    "keywords": "Interface IClock Namespace: PoeShared Assembly: PoeShared.dll Syntax public interface IClock Properties Name Description Elapsed Now UtcNow Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.IO.OSPath.-Clone--.html": {
    "href": "api/PoeShared.IO.OSPath.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public virtual OSPath <Clone>$() Returns Type Description OSPath"
  },
  "api/PoeShared.IO.OSPath.-ctor.html": {
    "href": "api/PoeShared.IO.OSPath.-ctor.html",
    "title": "Constructor OSPath | EyeAuras Docs",
    "keywords": "Constructor OSPath OSPath(string) Declaration public OSPath(string fullPath) Parameters Type Name Description string fullPath OSPath(OSPath) Declaration protected OSPath(OSPath original) Parameters Type Name Description OSPath original"
  },
  "api/PoeShared.IO.OSPath.AsUnixPath.html": {
    "href": "api/PoeShared.IO.OSPath.AsUnixPath.html",
    "title": "Property AsUnixPath | EyeAuras Docs",
    "keywords": "Property AsUnixPath AsUnixPath Declaration public string AsUnixPath { get; } Property Value Type Description string"
  },
  "api/PoeShared.IO.OSPath.AsWindowsPath.html": {
    "href": "api/PoeShared.IO.OSPath.AsWindowsPath.html",
    "title": "Property AsWindowsPath | EyeAuras Docs",
    "keywords": "Property AsWindowsPath AsWindowsPath Declaration public string AsWindowsPath { get; } Property Value Type Description string"
  },
  "api/PoeShared.IO.OSPath.Combine.html": {
    "href": "api/PoeShared.IO.OSPath.Combine.html",
    "title": "Method Combine | EyeAuras Docs",
    "keywords": "Method Combine Combine(string) Declaration public OSPath Combine(string other) Parameters Type Name Description string other Returns Type Description OSPath Combine(OSPath) Declaration public OSPath Combine(OSPath other) Parameters Type Name Description OSPath other Returns Type Description OSPath"
  },
  "api/PoeShared.IO.OSPath.Depth.html": {
    "href": "api/PoeShared.IO.OSPath.Depth.html",
    "title": "Property Depth | EyeAuras Docs",
    "keywords": "Property Depth Depth Declaration public int Depth { get; } Property Value Type Description int"
  },
  "api/PoeShared.IO.OSPath.DirectoryName.html": {
    "href": "api/PoeShared.IO.OSPath.DirectoryName.html",
    "title": "Property DirectoryName | EyeAuras Docs",
    "keywords": "Property DirectoryName DirectoryName Declaration public string DirectoryName { get; } Property Value Type Description string"
  },
  "api/PoeShared.IO.OSPath.EqualityContract.html": {
    "href": "api/PoeShared.IO.OSPath.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected virtual Type EqualityContract { get; } Property Value Type Description Type"
  },
  "api/PoeShared.IO.OSPath.Equals.html": {
    "href": "api/PoeShared.IO.OSPath.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(OSPath) Declaration public virtual bool Equals(OSPath other) Parameters Type Name Description OSPath other Returns Type Description bool Implements IEquatable<T>.Equals(T) Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object)"
  },
  "api/PoeShared.IO.OSPath.Exists.html": {
    "href": "api/PoeShared.IO.OSPath.Exists.html",
    "title": "Property Exists | EyeAuras Docs",
    "keywords": "Property Exists Exists Declaration public bool Exists { get; } Property Value Type Description bool"
  },
  "api/PoeShared.IO.OSPath.FileName.html": {
    "href": "api/PoeShared.IO.OSPath.FileName.html",
    "title": "Property FileName | EyeAuras Docs",
    "keywords": "Property FileName FileName Declaration public string FileName { get; } Property Value Type Description string"
  },
  "api/PoeShared.IO.OSPath.FullPath.html": {
    "href": "api/PoeShared.IO.OSPath.FullPath.html",
    "title": "Property FullPath | EyeAuras Docs",
    "keywords": "Property FullPath FullPath Platform-specific full path Declaration public string FullPath { get; } Property Value Type Description string"
  },
  "api/PoeShared.IO.OSPath.GetHashCode.html": {
    "href": "api/PoeShared.IO.OSPath.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/PoeShared.IO.OSPath.PrintMembers.html": {
    "href": "api/PoeShared.IO.OSPath.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected virtual bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool"
  },
  "api/PoeShared.IO.OSPath.ToString.html": {
    "href": "api/PoeShared.IO.OSPath.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/PoeShared.IO.OSPath.html": {
    "href": "api/PoeShared.IO.OSPath.html",
    "title": "Class OSPath | EyeAuras Docs",
    "keywords": "Class OSPath Platform-specific OS path, will normalize all input paths Inheritance object OSPath Implements IEquatable<OSPath> Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.IO Assembly: PoeShared.dll Syntax public record OSPath : IEquatable<OSPath> Constructors Name Description OSPath(OSPath) OSPath(string) Properties Name Description AsUnixPath AsWindowsPath Depth DirectoryName EqualityContract Exists FileName FullPath Platform-specific full path Methods Name Description Combine(OSPath) Combine(string) Equals(OSPath) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(OSPath?, OSPath?) operator !=(OSPath?, OSPath?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.IO.OSPath.op_Equality.html": {
    "href": "api/PoeShared.IO.OSPath.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(OSPath?, OSPath?) Declaration public static bool operator ==(OSPath? left, OSPath? right) Parameters Type Name Description OSPath left OSPath right Returns Type Description bool"
  },
  "api/PoeShared.IO.OSPath.op_Inequality.html": {
    "href": "api/PoeShared.IO.OSPath.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(OSPath?, OSPath?) Declaration public static bool operator !=(OSPath? left, OSPath? right) Parameters Type Name Description OSPath left OSPath right Returns Type Description bool"
  },
  "api/PoeShared.IO.OSPathConverter.-ctor.html": {
    "href": "api/PoeShared.IO.OSPathConverter.-ctor.html",
    "title": "Constructor OSPathConverter | EyeAuras Docs",
    "keywords": "Constructor OSPathConverter OSPathConverter() Declaration public OSPathConverter()"
  },
  "api/PoeShared.IO.OSPathConverter.CanConvert.html": {
    "href": "api/PoeShared.IO.OSPathConverter.CanConvert.html",
    "title": "Method CanConvert | EyeAuras Docs",
    "keywords": "Method CanConvert CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description bool"
  },
  "api/PoeShared.IO.OSPathConverter.ReadJson.html": {
    "href": "api/PoeShared.IO.OSPathConverter.ReadJson.html",
    "title": "Method ReadJson | EyeAuras Docs",
    "keywords": "Method ReadJson ReadJson(JsonReader, Type, object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description JsonReader reader Type objectType object existingValue JsonSerializer serializer Returns Type Description object"
  },
  "api/PoeShared.IO.OSPathConverter.WriteJson.html": {
    "href": "api/PoeShared.IO.OSPathConverter.WriteJson.html",
    "title": "Method WriteJson | EyeAuras Docs",
    "keywords": "Method WriteJson WriteJson(JsonWriter, object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description JsonWriter writer object value JsonSerializer serializer"
  },
  "api/PoeShared.IO.OSPathConverter.html": {
    "href": "api/PoeShared.IO.OSPathConverter.html",
    "title": "Class OSPathConverter | EyeAuras Docs",
    "keywords": "Class OSPathConverter Inheritance object OSPathConverter Namespace: PoeShared.IO Assembly: PoeShared.dll Syntax public sealed class OSPathConverter : JsonConverter Constructors Name Description OSPathConverter() Methods Name Description CanConvert(Type) ReadJson(JsonReader, Type, object, JsonSerializer) WriteJson(JsonWriter, object, JsonSerializer) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.IO.html": {
    "href": "api/PoeShared.IO.html",
    "title": "Namespace PoeShared.IO | EyeAuras Docs",
    "keywords": "Namespace PoeShared.IO Classes OSPath Platform-specific OS path, will normalize all input paths OSPathConverter"
  },
  "api/PoeShared.IRandomNumberGenerator.GenerateDelay.html": {
    "href": "api/PoeShared.IRandomNumberGenerator.GenerateDelay.html",
    "title": "Method GenerateDelay | EyeAuras Docs",
    "keywords": "Method GenerateDelay GenerateDelay(TimeSpan, TimeSpan) Declaration TimeSpan GenerateDelay(TimeSpan minDelay, TimeSpan maxDelay) Parameters Type Name Description TimeSpan minDelay TimeSpan maxDelay Returns Type Description TimeSpan"
  },
  "api/PoeShared.IRandomNumberGenerator.Next.html": {
    "href": "api/PoeShared.IRandomNumberGenerator.Next.html",
    "title": "Method Next | EyeAuras Docs",
    "keywords": "Method Next Next(int, int) Declaration int Next(int min, int max) Parameters Type Name Description int min int max Returns Type Description int Next() Declaration int Next() Returns Type Description int Next(int) Declaration int Next(int max) Parameters Type Name Description int max Returns Type Description int"
  },
  "api/PoeShared.IRandomNumberGenerator.NextDouble.html": {
    "href": "api/PoeShared.IRandomNumberGenerator.NextDouble.html",
    "title": "Method NextDouble | EyeAuras Docs",
    "keywords": "Method NextDouble NextDouble() Declaration double NextDouble() Returns Type Description double"
  },
  "api/PoeShared.IRandomNumberGenerator.html": {
    "href": "api/PoeShared.IRandomNumberGenerator.html",
    "title": "Interface IRandomNumberGenerator | EyeAuras Docs",
    "keywords": "Interface IRandomNumberGenerator Namespace: PoeShared Assembly: PoeShared.dll Syntax public interface IRandomNumberGenerator Methods Name Description GenerateDelay(TimeSpan, TimeSpan) Next() Next(int) Next(int, int) NextDouble() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.LogExtensions.ErrorIfThrows.html": {
    "href": "api/PoeShared.LogExtensions.ErrorIfThrows.html",
    "title": "Method ErrorIfThrows | EyeAuras Docs",
    "keywords": "Method ErrorIfThrows ErrorIfThrows(IFluentLog, Action, string) Declaration public static void ErrorIfThrows(this IFluentLog This, Action block, string message = null) Parameters Type Name Description IFluentLog This Action block string message ErrorIfThrows(IFluentLog, Func<Task>, string) Declaration public static Task ErrorIfThrows(this IFluentLog This, Func<Task> block, string message = null) Parameters Type Name Description IFluentLog This Func<Task> block string message Returns Type Description Task ErrorIfThrows<T>(IFluentLog, Func<Task<T>>, string) Declaration public static Task<T> ErrorIfThrows<T>(this IFluentLog This, Func<Task<T>> block, string message = null) Parameters Type Name Description IFluentLog This Func<Task<T>> block string message Returns Type Description Task<T> Type Parameters Name Description T"
  },
  "api/PoeShared.LogExtensions.HandleException.html": {
    "href": "api/PoeShared.LogExtensions.HandleException.html",
    "title": "Method HandleException | EyeAuras Docs",
    "keywords": "Method HandleException HandleException(ILog, Exception) Declaration public static void HandleException(this ILog logger, Exception exception) Parameters Type Name Description ILog logger Exception exception HandleException(IFluentLog, Exception) Declaration public static void HandleException(this IFluentLog logger, Exception exception) Parameters Type Name Description IFluentLog logger Exception exception"
  },
  "api/PoeShared.LogExtensions.HandleUiException.html": {
    "href": "api/PoeShared.LogExtensions.HandleUiException.html",
    "title": "Method HandleUiException | EyeAuras Docs",
    "keywords": "Method HandleUiException HandleUiException(ILog, Exception) Declaration public static void HandleUiException(this ILog logger, Exception exception) Parameters Type Name Description ILog logger Exception exception HandleUiException(IFluentLog, Exception) Declaration public static void HandleUiException(this IFluentLog logger, Exception exception) Parameters Type Name Description IFluentLog logger Exception exception"
  },
  "api/PoeShared.LogExtensions.LogIfThrows.html": {
    "href": "api/PoeShared.LogExtensions.LogIfThrows.html",
    "title": "Method LogIfThrows | EyeAuras Docs",
    "keywords": "Method LogIfThrows LogIfThrows(IFluentLog, LogLevel, string, Action) Declaration public static void LogIfThrows(this IFluentLog logger, LogLevel level, string message, Action block) Parameters Type Name Description IFluentLog logger LogLevel level string message Action block LogIfThrows(IFluentLog, LogLevel, string, Func<Task>) Declaration public static Task LogIfThrows(this IFluentLog logger, LogLevel level, string message, Func<Task> block) Parameters Type Name Description IFluentLog logger LogLevel level string message Func<Task> block Returns Type Description Task LogIfThrows<T>(IFluentLog, LogLevel, string, Func<Task<T>>) Declaration public static Task<T> LogIfThrows<T>(this IFluentLog logger, LogLevel level, string message, Func<Task<T>> block) Parameters Type Name Description IFluentLog logger LogLevel level string message Func<Task<T>> block Returns Type Description Task<T> Type Parameters Name Description T"
  },
  "api/PoeShared.LogExtensions.WarnIfThrows.html": {
    "href": "api/PoeShared.LogExtensions.WarnIfThrows.html",
    "title": "Method WarnIfThrows | EyeAuras Docs",
    "keywords": "Method WarnIfThrows WarnIfThrows(IFluentLog, Action, string) Declaration public static void WarnIfThrows(this IFluentLog This, Action block, string message = null) Parameters Type Name Description IFluentLog This Action block string message WarnIfThrows(IFluentLog, Func<Task>, string) Declaration public static Task WarnIfThrows(this IFluentLog This, Func<Task> block, string message = null) Parameters Type Name Description IFluentLog This Func<Task> block string message Returns Type Description Task WarnIfThrows<T>(IFluentLog, Func<Task<T>>, string) Declaration public static Task<T> WarnIfThrows<T>(this IFluentLog This, Func<Task<T>> block, string message = null) Parameters Type Name Description IFluentLog This Func<Task<T>> block string message Returns Type Description Task<T> Type Parameters Name Description T"
  },
  "api/PoeShared.LogExtensions.html": {
    "href": "api/PoeShared.LogExtensions.html",
    "title": "Class LogExtensions | EyeAuras Docs",
    "keywords": "Class LogExtensions Inheritance object LogExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared Assembly: PoeShared.dll Syntax public static class LogExtensions Methods Name Description ErrorIfThrows(IFluentLog, Action, string) ErrorIfThrows(IFluentLog, Func<Task>, string) ErrorIfThrows<T>(IFluentLog, Func<Task<T>>, string) HandleException(IFluentLog, Exception) HandleException(ILog, Exception) HandleUiException(IFluentLog, Exception) HandleUiException(ILog, Exception) LogIfThrows(IFluentLog, LogLevel, string, Action) LogIfThrows(IFluentLog, LogLevel, string, Func<Task>) LogIfThrows<T>(IFluentLog, LogLevel, string, Func<Task<T>>) WarnIfThrows(IFluentLog, Action, string) WarnIfThrows(IFluentLog, Func<Task>, string) WarnIfThrows<T>(IFluentLog, Func<Task<T>>, string)"
  },
  "api/PoeShared.Logging.FluentLogExtensions.AddPrefix.html": {
    "href": "api/PoeShared.Logging.FluentLogExtensions.AddPrefix.html",
    "title": "Method AddPrefix | EyeAuras Docs",
    "keywords": "Method AddPrefix AddPrefix(IFluentLog, Func<string>) Declaration public static void AddPrefix(this IFluentLog log, Func<string> prefixSupplier) Parameters Type Name Description IFluentLog log Func<string> prefixSupplier AddPrefix<T>(IFluentLog, T) Declaration public static void AddPrefix<T>(this IFluentLog log, T prefix) Parameters Type Name Description IFluentLog log T prefix Type Parameters Name Description T"
  },
  "api/PoeShared.Logging.FluentLogExtensions.AddSuffix.html": {
    "href": "api/PoeShared.Logging.FluentLogExtensions.AddSuffix.html",
    "title": "Method AddSuffix | EyeAuras Docs",
    "keywords": "Method AddSuffix AddSuffix(IFluentLog, Func<string>) Declaration public static void AddSuffix(this IFluentLog log, Func<string> suffixSupplier) Parameters Type Name Description IFluentLog log Func<string> suffixSupplier AddSuffix<T>(IFluentLog, T) Declaration public static void AddSuffix<T>(this IFluentLog log, T suffix) Parameters Type Name Description IFluentLog log T suffix Type Parameters Name Description T"
  },
  "api/PoeShared.Logging.FluentLogExtensions.CreateChildCollectionLogWriter.html": {
    "href": "api/PoeShared.Logging.FluentLogExtensions.CreateChildCollectionLogWriter.html",
    "title": "Method CreateChildCollectionLogWriter | EyeAuras Docs",
    "keywords": "Method CreateChildCollectionLogWriter CreateChildCollectionLogWriter(IFluentLog, ISourceList<string>) Declaration public static IFluentLog CreateChildCollectionLogWriter(this IFluentLog log, ISourceList<string> collection) Parameters Type Name Description IFluentLog log ISourceList<string> collection Returns Type Description IFluentLog"
  },
  "api/PoeShared.Logging.FluentLogExtensions.CreateProfiler.html": {
    "href": "api/PoeShared.Logging.FluentLogExtensions.CreateProfiler.html",
    "title": "Method CreateProfiler | EyeAuras Docs",
    "keywords": "Method CreateProfiler CreateProfiler(IFluentLog, string, string) Declaration public static BenchmarkTimer CreateProfiler(this IFluentLog log, string benchmarkName, string propertyName = null) Parameters Type Name Description IFluentLog log string benchmarkName string propertyName Returns Type Description BenchmarkTimer"
  },
  "api/PoeShared.Logging.FluentLogExtensions.DebugIfDebug.html": {
    "href": "api/PoeShared.Logging.FluentLogExtensions.DebugIfDebug.html",
    "title": "Method DebugIfDebug | EyeAuras Docs",
    "keywords": "Method DebugIfDebug DebugIfDebug(IFluentLog, Func<string>) Declaration public static void DebugIfDebug(this IFluentLog log, Func<string> message) Parameters Type Name Description IFluentLog log Func<string> message"
  },
  "api/PoeShared.Logging.FluentLogExtensions.InfoIfDebug.html": {
    "href": "api/PoeShared.Logging.FluentLogExtensions.InfoIfDebug.html",
    "title": "Method InfoIfDebug | EyeAuras Docs",
    "keywords": "Method InfoIfDebug InfoIfDebug(IFluentLog, Func<string>) Declaration public static void InfoIfDebug(this IFluentLog log, Func<string> message) Parameters Type Name Description IFluentLog log Func<string> message"
  },
  "api/PoeShared.Logging.FluentLogExtensions.IsEnabled.html": {
    "href": "api/PoeShared.Logging.FluentLogExtensions.IsEnabled.html",
    "title": "Method IsEnabled | EyeAuras Docs",
    "keywords": "Method IsEnabled IsEnabled(IFluentLog, FluentLogLevel) Declaration public static bool IsEnabled(this IFluentLog log, FluentLogLevel logLevel) Parameters Type Name Description IFluentLog log FluentLogLevel logLevel Returns Type Description bool"
  },
  "api/PoeShared.Logging.FluentLogExtensions.WarnIfDebug.html": {
    "href": "api/PoeShared.Logging.FluentLogExtensions.WarnIfDebug.html",
    "title": "Method WarnIfDebug | EyeAuras Docs",
    "keywords": "Method WarnIfDebug WarnIfDebug(IFluentLog, Func<string>) Declaration public static void WarnIfDebug(this IFluentLog log, Func<string> message) Parameters Type Name Description IFluentLog log Func<string> message"
  },
  "api/PoeShared.Logging.FluentLogExtensions.WithAction.html": {
    "href": "api/PoeShared.Logging.FluentLogExtensions.WithAction.html",
    "title": "Method WithAction | EyeAuras Docs",
    "keywords": "Method WithAction WithAction(IFluentLog, Action<(FluentLogLevel Level, string Message)>) Declaration public static IFluentLog WithAction(this IFluentLog log, Action<(FluentLogLevel Level, string Message)> messageConsumer) Parameters Type Name Description IFluentLog log Action<(FluentLogLevel Level, string Message)> messageConsumer Returns Type Description IFluentLog"
  },
  "api/PoeShared.Logging.FluentLogExtensions.WithPrefix.html": {
    "href": "api/PoeShared.Logging.FluentLogExtensions.WithPrefix.html",
    "title": "Method WithPrefix | EyeAuras Docs",
    "keywords": "Method WithPrefix WithPrefix(IFluentLog, Func<string>) Declaration public static IFluentLog WithPrefix(this IFluentLog log, Func<string> prefixSupplier) Parameters Type Name Description IFluentLog log Func<string> prefixSupplier Returns Type Description IFluentLog WithPrefix<T>(IFluentLog, T) Declaration public static IFluentLog WithPrefix<T>(this IFluentLog log, T prefix) Parameters Type Name Description IFluentLog log T prefix Returns Type Description IFluentLog Type Parameters Name Description T"
  },
  "api/PoeShared.Logging.FluentLogExtensions.WithSuffix.html": {
    "href": "api/PoeShared.Logging.FluentLogExtensions.WithSuffix.html",
    "title": "Method WithSuffix | EyeAuras Docs",
    "keywords": "Method WithSuffix WithSuffix(IFluentLog, Func<string>) Declaration public static IFluentLog WithSuffix(this IFluentLog log, Func<string> suffixSupplier) Parameters Type Name Description IFluentLog log Func<string> suffixSupplier Returns Type Description IFluentLog WithSuffix<T>(IFluentLog, T) Declaration public static IFluentLog WithSuffix<T>(this IFluentLog log, T suffix) Parameters Type Name Description IFluentLog log T suffix Returns Type Description IFluentLog Type Parameters Name Description T"
  },
  "api/PoeShared.Logging.FluentLogExtensions.WithTable.html": {
    "href": "api/PoeShared.Logging.FluentLogExtensions.WithTable.html",
    "title": "Method WithTable | EyeAuras Docs",
    "keywords": "Method WithTable WithTable<T>(IFluentLog, IEnumerable<T>, string) Declaration public static IFluentLog WithTable<T>(this IFluentLog log, IEnumerable<T> items, string separator = \"\\n\\t\") Parameters Type Name Description IFluentLog log IEnumerable<T> items string separator Returns Type Description IFluentLog Type Parameters Name Description T"
  },
  "api/PoeShared.Logging.FluentLogExtensions.Write.html": {
    "href": "api/PoeShared.Logging.FluentLogExtensions.Write.html",
    "title": "Method Write | EyeAuras Docs",
    "keywords": "Method Write Write(IFluentLog, FluentLogLevel, Func<string>) Declaration public static void Write(this IFluentLog log, FluentLogLevel logLevel, Func<string> messageSupplier) Parameters Type Name Description IFluentLog log FluentLogLevel logLevel Func<string> messageSupplier"
  },
  "api/PoeShared.Logging.FluentLogExtensions.html": {
    "href": "api/PoeShared.Logging.FluentLogExtensions.html",
    "title": "Class FluentLogExtensions | EyeAuras Docs",
    "keywords": "Class FluentLogExtensions Inheritance object FluentLogExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Logging Assembly: PoeShared.dll Syntax public static class FluentLogExtensions Methods Name Description AddPrefix(IFluentLog, Func<string>) AddPrefix<T>(IFluentLog, T) AddSuffix(IFluentLog, Func<string>) AddSuffix<T>(IFluentLog, T) CreateChildCollectionLogWriter(IFluentLog, ISourceList<string>) CreateProfiler(IFluentLog, string, string) DebugIfDebug(IFluentLog, Func<string>) InfoIfDebug(IFluentLog, Func<string>) IsEnabled(IFluentLog, FluentLogLevel) WarnIfDebug(IFluentLog, Func<string>) WithAction(IFluentLog, Action<(FluentLogLevel Level, string Message)>) WithPrefix(IFluentLog, Func<string>) WithPrefix<T>(IFluentLog, T) WithSuffix(IFluentLog, Func<string>) WithSuffix<T>(IFluentLog, T) WithTable<T>(IFluentLog, IEnumerable<T>, string) Write(IFluentLog, FluentLogLevel, Func<string>)"
  },
  "api/PoeShared.Logging.FluentLogLevel.html": {
    "href": "api/PoeShared.Logging.FluentLogLevel.html",
    "title": "Enum FluentLogLevel | EyeAuras Docs",
    "keywords": "Enum FluentLogLevel Defines available log levels. Namespace: PoeShared.Logging Assembly: PoeShared.dll Syntax public enum FluentLogLevel Fields Name Description Debug Debug log level. Error Error log level. Info Info log level. Trace Trace log level. Warn Warn log level. Extension Methods Log4NetExtensions.ToLog4NetLevel(FluentLogLevel) EnumExtensions.GetUniqueFlags<FluentLogLevel>(FluentLogLevel) EnumExtensions.RemoveFlag<FluentLogLevel>(FluentLogLevel, FluentLogLevel) EnumExtensions.RemoveFlag<FluentLogLevel>(FluentLogLevel, params FluentLogLevel[]) ObjectExtensions.AddTo<FluentLogLevel, TCollection>(FluentLogLevel, ISourceList<TCollection>) ObjectExtensions.AddTo<FluentLogLevel, TCollection>(FluentLogLevel, ICollection<TCollection>) ObjectExtensions.CloneJson<FluentLogLevel>(FluentLogLevel) ObjectExtensions.CopyPropertiesTo<FluentLogLevel, TTarget>(FluentLogLevel, TTarget) ObjectExtensions.DumpToTextRaw<FluentLogLevel>(FluentLogLevel) ObjectExtensions.DumpToText<FluentLogLevel>(FluentLogLevel) ObjectExtensions.Dump<FluentLogLevel>(FluentLogLevel) ObjectExtensions.GetPropertyAccessor<FluentLogLevel, TValue>(FluentLogLevel, Expression<Func<FluentLogLevel, TValue>>) ObjectExtensions.InsertTo<FluentLogLevel, TCollection>(FluentLogLevel, IList<TCollection>, int) ObjectExtensions.ToJson<FluentLogLevel>(FluentLogLevel) ObjectExtensions.ToStringSafe<FluentLogLevel>(FluentLogLevel) ObjectExtensions.TransferPropertiesTo<FluentLogLevel, TTarget>(FluentLogLevel, TTarget, params string[]) XDocumentExtensions.AddTo<FluentLogLevel>(FluentLogLevel, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Logging.FluentLogSettings.-ctor.html": {
    "href": "api/PoeShared.Logging.FluentLogSettings.-ctor.html",
    "title": "Constructor FluentLogSettings | EyeAuras Docs",
    "keywords": "Constructor FluentLogSettings FluentLogSettings() Declaration public FluentLogSettings()"
  },
  "api/PoeShared.Logging.FluentLogSettings.Instance.html": {
    "href": "api/PoeShared.Logging.FluentLogSettings.Instance.html",
    "title": "Property Instance | EyeAuras Docs",
    "keywords": "Property Instance Instance Declaration public static FluentLogSettings Instance { get; } Property Value Type Description FluentLogSettings"
  },
  "api/PoeShared.Logging.FluentLogSettings.MinLogLevel.html": {
    "href": "api/PoeShared.Logging.FluentLogSettings.MinLogLevel.html",
    "title": "Property MinLogLevel | EyeAuras Docs",
    "keywords": "Property MinLogLevel MinLogLevel Declaration public FluentLogLevel? MinLogLevel { get; set; } Property Value Type Description FluentLogLevel?"
  },
  "api/PoeShared.Logging.FluentLogSettings.html": {
    "href": "api/PoeShared.Logging.FluentLogSettings.html",
    "title": "Class FluentLogSettings | EyeAuras Docs",
    "keywords": "Class FluentLogSettings Inheritance object FluentLogSettings Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Logging Assembly: PoeShared.dll Syntax public sealed class FluentLogSettings Constructors Name Description FluentLogSettings() Properties Name Description Instance MinLogLevel Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Logging.IFluentLog.Debug.html": {
    "href": "api/PoeShared.Logging.IFluentLog.Debug.html",
    "title": "Method Debug | EyeAuras Docs",
    "keywords": "Method Debug Debug(string, Exception) Declaration void Debug(string message, Exception exception) Parameters Type Name Description string message Exception exception Debug(string) Declaration void Debug(string message) Parameters Type Name Description string message Debug(FormattableString) Declaration void Debug(FormattableString message) Parameters Type Name Description FormattableString message Debug(FormattableString, Exception) Declaration void Debug(FormattableString message, Exception exception) Parameters Type Name Description FormattableString message Exception exception Debug(Func<string>) Declaration void Debug(Func<string> message) Parameters Type Name Description Func<string> message Debug(Func<string>, Exception) Declaration void Debug(Func<string> message, Exception exception) Parameters Type Name Description Func<string> message Exception exception"
  },
  "api/PoeShared.Logging.IFluentLog.Error.html": {
    "href": "api/PoeShared.Logging.IFluentLog.Error.html",
    "title": "Method Error | EyeAuras Docs",
    "keywords": "Method Error Error(string) Declaration void Error(string message) Parameters Type Name Description string message Error(string, Exception) Declaration void Error(string message, Exception exception) Parameters Type Name Description string message Exception exception Error(Func<string>) Declaration void Error(Func<string> message) Parameters Type Name Description Func<string> message Error(Func<string>, Exception) Declaration void Error(Func<string> message, Exception exception) Parameters Type Name Description Func<string> message Exception exception Error(FormattableString) Declaration void Error(FormattableString message) Parameters Type Name Description FormattableString message Error(FormattableString, Exception) Declaration void Error(FormattableString message, Exception exception) Parameters Type Name Description FormattableString message Exception exception"
  },
  "api/PoeShared.Logging.IFluentLog.Info.html": {
    "href": "api/PoeShared.Logging.IFluentLog.Info.html",
    "title": "Method Info | EyeAuras Docs",
    "keywords": "Method Info Info(string) Declaration void Info(string message) Parameters Type Name Description string message Info(string, Exception) Declaration void Info(string message, Exception exception) Parameters Type Name Description string message Exception exception Info(Func<string>) Declaration void Info(Func<string> message) Parameters Type Name Description Func<string> message Info(Func<string>, Exception) Declaration void Info(Func<string> message, Exception exception) Parameters Type Name Description Func<string> message Exception exception Info(FormattableString) Declaration void Info(FormattableString message) Parameters Type Name Description FormattableString message Info(FormattableString, Exception) Declaration void Info(FormattableString message, Exception exception) Parameters Type Name Description FormattableString message Exception exception"
  },
  "api/PoeShared.Logging.IFluentLog.IsDebugEnabled.html": {
    "href": "api/PoeShared.Logging.IFluentLog.IsDebugEnabled.html",
    "title": "Property IsDebugEnabled | EyeAuras Docs",
    "keywords": "Property IsDebugEnabled IsDebugEnabled Declaration bool IsDebugEnabled { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Logging.IFluentLog.IsErrorEnabled.html": {
    "href": "api/PoeShared.Logging.IFluentLog.IsErrorEnabled.html",
    "title": "Property IsErrorEnabled | EyeAuras Docs",
    "keywords": "Property IsErrorEnabled IsErrorEnabled Declaration bool IsErrorEnabled { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Logging.IFluentLog.IsInfoEnabled.html": {
    "href": "api/PoeShared.Logging.IFluentLog.IsInfoEnabled.html",
    "title": "Property IsInfoEnabled | EyeAuras Docs",
    "keywords": "Property IsInfoEnabled IsInfoEnabled Declaration bool IsInfoEnabled { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Logging.IFluentLog.IsWarnEnabled.html": {
    "href": "api/PoeShared.Logging.IFluentLog.IsWarnEnabled.html",
    "title": "Property IsWarnEnabled | EyeAuras Docs",
    "keywords": "Property IsWarnEnabled IsWarnEnabled Declaration bool IsWarnEnabled { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Logging.IFluentLog.Metrics.html": {
    "href": "api/PoeShared.Logging.IFluentLog.Metrics.html",
    "title": "Property Metrics | EyeAuras Docs",
    "keywords": "Property Metrics Metrics Declaration IMetrics Metrics { get; } Property Value Type Description IMetrics"
  },
  "api/PoeShared.Logging.IFluentLog.Warn.html": {
    "href": "api/PoeShared.Logging.IFluentLog.Warn.html",
    "title": "Method Warn | EyeAuras Docs",
    "keywords": "Method Warn Warn(string) Declaration void Warn(string message) Parameters Type Name Description string message Warn(string, Exception) Declaration void Warn(string message, Exception exception) Parameters Type Name Description string message Exception exception Warn(Func<string>) Declaration void Warn(Func<string> message) Parameters Type Name Description Func<string> message Warn(Func<string>, Exception) Declaration void Warn(Func<string> message, Exception exception) Parameters Type Name Description Func<string> message Exception exception Warn(FormattableString) Declaration void Warn(FormattableString message) Parameters Type Name Description FormattableString message Warn(FormattableString, Exception) Declaration void Warn(FormattableString message, Exception exception) Parameters Type Name Description FormattableString message Exception exception"
  },
  "api/PoeShared.Logging.IFluentLog.html": {
    "href": "api/PoeShared.Logging.IFluentLog.html",
    "title": "Interface IFluentLog | EyeAuras Docs",
    "keywords": "Interface IFluentLog A fluent interface to build log messages. Namespace: PoeShared.Logging Assembly: PoeShared.dll Syntax public interface IFluentLog Properties Name Description IsDebugEnabled IsErrorEnabled IsInfoEnabled IsWarnEnabled Metrics Methods Name Description Debug(FormattableString) Debug(FormattableString, Exception) Debug(Func<string>) Debug(Func<string>, Exception) Debug(string) Debug(string, Exception) Error(FormattableString) Error(FormattableString, Exception) Error(Func<string>) Error(Func<string>, Exception) Error(string) Error(string, Exception) Info(FormattableString) Info(FormattableString, Exception) Info(Func<string>) Info(Func<string>, Exception) Info(string) Info(string, Exception) Warn(FormattableString) Warn(FormattableString, Exception) Warn(Func<string>) Warn(Func<string>, Exception) Warn(string) Warn(string, Exception) Extension Methods LogExtensions.ErrorIfThrows(IFluentLog, Action, string) LogExtensions.ErrorIfThrows(IFluentLog, Func<Task>, string) LogExtensions.ErrorIfThrows<T>(IFluentLog, Func<Task<T>>, string) LogExtensions.HandleException(IFluentLog, Exception) LogExtensions.HandleUiException(IFluentLog, Exception) LogExtensions.LogIfThrows(IFluentLog, LogLevel, string, Action) LogExtensions.LogIfThrows(IFluentLog, LogLevel, string, Func<Task>) LogExtensions.LogIfThrows<T>(IFluentLog, LogLevel, string, Func<Task<T>>) LogExtensions.WarnIfThrows(IFluentLog, Action, string) LogExtensions.WarnIfThrows(IFluentLog, Func<Task>, string) LogExtensions.WarnIfThrows<T>(IFluentLog, Func<Task<T>>, string) FluentLogExtensions.AddPrefix(IFluentLog, Func<string>) FluentLogExtensions.AddPrefix<T>(IFluentLog, T) FluentLogExtensions.AddSuffix(IFluentLog, Func<string>) FluentLogExtensions.AddSuffix<T>(IFluentLog, T) FluentLogExtensions.CreateChildCollectionLogWriter(IFluentLog, ISourceList<string>) FluentLogExtensions.CreateProfiler(IFluentLog, string, string) FluentLogExtensions.DebugIfDebug(IFluentLog, Func<string>) FluentLogExtensions.InfoIfDebug(IFluentLog, Func<string>) FluentLogExtensions.IsEnabled(IFluentLog, FluentLogLevel) FluentLogExtensions.WarnIfDebug(IFluentLog, Func<string>) FluentLogExtensions.WithAction(IFluentLog, Action<(FluentLogLevel Level, string Message)>) FluentLogExtensions.WithPrefix(IFluentLog, Func<string>) FluentLogExtensions.WithPrefix<T>(IFluentLog, T) FluentLogExtensions.WithSuffix(IFluentLog, Func<string>) FluentLogExtensions.WithSuffix<T>(IFluentLog, T) FluentLogExtensions.WithTable<T>(IFluentLog, IEnumerable<T>, string) FluentLogExtensions.Write(IFluentLog, FluentLogLevel, Func<string>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Logging.Log4NetConfigFile.-ctor.html": {
    "href": "api/PoeShared.Logging.Log4NetConfigFile.-ctor.html",
    "title": "Constructor Log4NetConfigFile | EyeAuras Docs",
    "keywords": "Constructor Log4NetConfigFile Log4NetConfigFile() Declaration public Log4NetConfigFile()"
  },
  "api/PoeShared.Logging.Log4NetConfigFile.Level.html": {
    "href": "api/PoeShared.Logging.Log4NetConfigFile.Level.html",
    "title": "Property Level | EyeAuras Docs",
    "keywords": "Property Level Level Declaration public Level Level { get; set; } Property Value Type Description Level"
  },
  "api/PoeShared.Logging.Log4NetConfigFile.Load.html": {
    "href": "api/PoeShared.Logging.Log4NetConfigFile.Load.html",
    "title": "Method Load | EyeAuras Docs",
    "keywords": "Method Load Load(FileInfo) Declaration public void Load(FileInfo fileInfo) Parameters Type Name Description FileInfo fileInfo"
  },
  "api/PoeShared.Logging.Log4NetConfigFile.LoadXml.html": {
    "href": "api/PoeShared.Logging.Log4NetConfigFile.LoadXml.html",
    "title": "Method LoadXml | EyeAuras Docs",
    "keywords": "Method LoadXml LoadXml(string) Declaration public void LoadXml(string xml) Parameters Type Name Description string xml"
  },
  "api/PoeShared.Logging.Log4NetConfigFile.SaveTo.html": {
    "href": "api/PoeShared.Logging.Log4NetConfigFile.SaveTo.html",
    "title": "Method SaveTo | EyeAuras Docs",
    "keywords": "Method SaveTo SaveTo(FileInfo) Declaration public void SaveTo(FileInfo file) Parameters Type Name Description FileInfo file"
  },
  "api/PoeShared.Logging.Log4NetConfigFile.html": {
    "href": "api/PoeShared.Logging.Log4NetConfigFile.html",
    "title": "Class Log4NetConfigFile | EyeAuras Docs",
    "keywords": "Class Log4NetConfigFile Inheritance object Log4NetConfigFile Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Logging Assembly: PoeShared.dll Syntax public sealed class Log4NetConfigFile Constructors Name Description Log4NetConfigFile() Properties Name Description Level Methods Name Description Load(FileInfo) LoadXml(string) SaveTo(FileInfo) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Logging.Log4NetExtensions.ToFluent.html": {
    "href": "api/PoeShared.Logging.Log4NetExtensions.ToFluent.html",
    "title": "Method ToFluent | EyeAuras Docs",
    "keywords": "Method ToFluent ToFluent(ILog) Declaration public static IFluentLog ToFluent(this ILog logger) Parameters Type Name Description ILog logger Returns Type Description IFluentLog"
  },
  "api/PoeShared.Logging.Log4NetExtensions.ToLog4NetLevel.html": {
    "href": "api/PoeShared.Logging.Log4NetExtensions.ToLog4NetLevel.html",
    "title": "Method ToLog4NetLevel | EyeAuras Docs",
    "keywords": "Method ToLog4NetLevel ToLog4NetLevel(FluentLogLevel) Declaration public static Level ToLog4NetLevel(this FluentLogLevel level) Parameters Type Name Description FluentLogLevel level Returns Type Description Level"
  },
  "api/PoeShared.Logging.Log4NetExtensions.html": {
    "href": "api/PoeShared.Logging.Log4NetExtensions.html",
    "title": "Class Log4NetExtensions | EyeAuras Docs",
    "keywords": "Class Log4NetExtensions Inheritance object Log4NetExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Logging Assembly: PoeShared.dll Syntax public static class Log4NetExtensions Methods Name Description ToFluent(ILog) ToLog4NetLevel(FluentLogLevel)"
  },
  "api/PoeShared.Logging.Log4NetLoggerFactory.-ctor.html": {
    "href": "api/PoeShared.Logging.Log4NetLoggerFactory.-ctor.html",
    "title": "Constructor Log4NetLoggerFactory | EyeAuras Docs",
    "keywords": "Constructor Log4NetLoggerFactory Log4NetLoggerFactory(ILoggerProvider) Declaration public Log4NetLoggerFactory(ILoggerProvider loggerProvider) Parameters Type Name Description ILoggerProvider loggerProvider"
  },
  "api/PoeShared.Logging.Log4NetLoggerFactory.AddProvider.html": {
    "href": "api/PoeShared.Logging.Log4NetLoggerFactory.AddProvider.html",
    "title": "Method AddProvider | EyeAuras Docs",
    "keywords": "Method AddProvider AddProvider(ILoggerProvider) Declaration public void AddProvider(ILoggerProvider provider) Parameters Type Name Description ILoggerProvider provider Implements ILoggerFactory.AddProvider(ILoggerProvider)"
  },
  "api/PoeShared.Logging.Log4NetLoggerFactory.CreateLogger.html": {
    "href": "api/PoeShared.Logging.Log4NetLoggerFactory.CreateLogger.html",
    "title": "Method CreateLogger | EyeAuras Docs",
    "keywords": "Method CreateLogger CreateLogger(string) Declaration public ILogger CreateLogger(string categoryName) Parameters Type Name Description string categoryName Returns Type Description ILogger Implements ILoggerFactory.CreateLogger(string)"
  },
  "api/PoeShared.Logging.Log4NetLoggerFactory.html": {
    "href": "api/PoeShared.Logging.Log4NetLoggerFactory.html",
    "title": "Class Log4NetLoggerFactory | EyeAuras Docs",
    "keywords": "Class Log4NetLoggerFactory Inheritance object DisposableReactiveObject Log4NetLoggerFactory Implements INotifyPropertyChanged ILoggerFactory IDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Logging Assembly: PoeShared.dll Syntax public sealed class Log4NetLoggerFactory : DisposableReactiveObject, INotifyPropertyChanged, ILoggerFactory, IDisposable Constructors Name Description Log4NetLoggerFactory(ILoggerProvider) Methods Name Description AddProvider(ILoggerProvider) CreateLogger(string) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Logging.Log4NetLoggerProvider.-ctor.html": {
    "href": "api/PoeShared.Logging.Log4NetLoggerProvider.-ctor.html",
    "title": "Constructor Log4NetLoggerProvider | EyeAuras Docs",
    "keywords": "Constructor Log4NetLoggerProvider Log4NetLoggerProvider() Declaration public Log4NetLoggerProvider()"
  },
  "api/PoeShared.Logging.Log4NetLoggerProvider.CreateLogger.html": {
    "href": "api/PoeShared.Logging.Log4NetLoggerProvider.CreateLogger.html",
    "title": "Method CreateLogger | EyeAuras Docs",
    "keywords": "Method CreateLogger CreateLogger(string) Declaration public ILogger CreateLogger(string categoryName) Parameters Type Name Description string categoryName Returns Type Description ILogger Implements ILoggerProvider.CreateLogger(string)"
  },
  "api/PoeShared.Logging.Log4NetLoggerProvider.Dispose.html": {
    "href": "api/PoeShared.Logging.Log4NetLoggerProvider.Dispose.html",
    "title": "Method Dispose | EyeAuras Docs",
    "keywords": "Method Dispose Dispose() Declaration public void Dispose() Implements IDisposable.Dispose()"
  },
  "api/PoeShared.Logging.Log4NetLoggerProvider.html": {
    "href": "api/PoeShared.Logging.Log4NetLoggerProvider.html",
    "title": "Class Log4NetLoggerProvider | EyeAuras Docs",
    "keywords": "Class Log4NetLoggerProvider Inheritance object Log4NetLoggerProvider Implements ILoggerProvider IDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Logging Assembly: PoeShared.dll Syntax public sealed class Log4NetLoggerProvider : ILoggerProvider, IDisposable Constructors Name Description Log4NetLoggerProvider() Methods Name Description CreateLogger(string) Dispose() Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Logging.Logger4Log4Net.-ctor.html": {
    "href": "api/PoeShared.Logging.Logger4Log4Net.-ctor.html",
    "title": "Constructor Logger4Log4Net | EyeAuras Docs",
    "keywords": "Constructor Logger4Log4Net Logger4Log4Net(string) Declaration public Logger4Log4Net(string name) Parameters Type Name Description string name"
  },
  "api/PoeShared.Logging.Logger4Log4Net.BeginScope.html": {
    "href": "api/PoeShared.Logging.Logger4Log4Net.BeginScope.html",
    "title": "Method BeginScope | EyeAuras Docs",
    "keywords": "Method BeginScope BeginScope<TState>(TState) Declaration public IDisposable BeginScope<TState>(TState state) Parameters Type Name Description TState state Returns Type Description IDisposable Type Parameters Name Description TState Implements ILogger.BeginScope<TState>(TState)"
  },
  "api/PoeShared.Logging.Logger4Log4Net.IsEnabled.html": {
    "href": "api/PoeShared.Logging.Logger4Log4Net.IsEnabled.html",
    "title": "Method IsEnabled | EyeAuras Docs",
    "keywords": "Method IsEnabled IsEnabled(LogLevel) Declaration public bool IsEnabled(LogLevel logLevel) Parameters Type Name Description LogLevel logLevel Returns Type Description bool Implements ILogger.IsEnabled(LogLevel)"
  },
  "api/PoeShared.Logging.Logger4Log4Net.Log.html": {
    "href": "api/PoeShared.Logging.Logger4Log4Net.Log.html",
    "title": "Method Log | EyeAuras Docs",
    "keywords": "Method Log Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>) Declaration public void Log<TState>(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func<TState, Exception, string> formatter) Parameters Type Name Description LogLevel logLevel EventId eventId TState state Exception exception Func<TState, Exception, string> formatter Type Parameters Name Description TState Implements ILogger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>)"
  },
  "api/PoeShared.Logging.Logger4Log4Net.html": {
    "href": "api/PoeShared.Logging.Logger4Log4Net.html",
    "title": "Class Logger4Log4Net | EyeAuras Docs",
    "keywords": "Class Logger4Log4Net Inheritance object Logger4Log4Net Implements ILogger Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Logging Assembly: PoeShared.dll Syntax public sealed class Logger4Log4Net : ILogger Constructors Name Description Logger4Log4Net(string) Methods Name Description BeginScope<TState>(TState) IsEnabled(LogLevel) Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Logging.ObservableAppender.-ctor.html": {
    "href": "api/PoeShared.Logging.ObservableAppender.-ctor.html",
    "title": "Constructor ObservableAppender | EyeAuras Docs",
    "keywords": "Constructor ObservableAppender ObservableAppender() Declaration public ObservableAppender()"
  },
  "api/PoeShared.Logging.ObservableAppender.Append.html": {
    "href": "api/PoeShared.Logging.ObservableAppender.Append.html",
    "title": "Method Append | EyeAuras Docs",
    "keywords": "Method Append Append(LoggingEvent) Declaration protected override void Append(LoggingEvent loggingEvent) Parameters Type Name Description LoggingEvent loggingEvent"
  },
  "api/PoeShared.Logging.ObservableAppender.Events.html": {
    "href": "api/PoeShared.Logging.ObservableAppender.Events.html",
    "title": "Property Events | EyeAuras Docs",
    "keywords": "Property Events Events Declaration public IObservable<LoggingEvent> Events { get; } Property Value Type Description IObservable<LoggingEvent>"
  },
  "api/PoeShared.Logging.ObservableAppender.html": {
    "href": "api/PoeShared.Logging.ObservableAppender.html",
    "title": "Class ObservableAppender | EyeAuras Docs",
    "keywords": "Class ObservableAppender Inheritance object ObservableAppender Namespace: PoeShared.Logging Assembly: PoeShared.dll Syntax public sealed class ObservableAppender : AppenderSkeleton Constructors Name Description ObservableAppender() Properties Name Description Events Methods Name Description Append(LoggingEvent) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Logging.html": {
    "href": "api/PoeShared.Logging.html",
    "title": "Namespace PoeShared.Logging | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Logging Classes FluentLogExtensions FluentLogSettings Log4NetConfigFile Log4NetExtensions Log4NetLoggerFactory Log4NetLoggerProvider Logger4Log4Net ObservableAppender Interfaces IFluentLog A fluent interface to build log messages. Enums FluentLogLevel Defines available log levels."
  },
  "api/PoeShared.Modularity.IAppArguments.AutostartFlag.html": {
    "href": "api/PoeShared.Modularity.IAppArguments.AutostartFlag.html",
    "title": "Property AutostartFlag | EyeAuras Docs",
    "keywords": "Property AutostartFlag AutostartFlag Declaration string AutostartFlag { get; } Property Value Type Description string"
  },
  "api/PoeShared.Modularity.IAppArguments.CommandLineArguments.html": {
    "href": "api/PoeShared.Modularity.IAppArguments.CommandLineArguments.html",
    "title": "Property CommandLineArguments | EyeAuras Docs",
    "keywords": "Property CommandLineArguments CommandLineArguments Declaration string[] CommandLineArguments { get; } Property Value Type Description string[]"
  },
  "api/PoeShared.Modularity.IAppArguments.IsAdminMode.html": {
    "href": "api/PoeShared.Modularity.IAppArguments.IsAdminMode.html",
    "title": "Property IsAdminMode | EyeAuras Docs",
    "keywords": "Property IsAdminMode IsAdminMode Declaration bool? IsAdminMode { get; } Property Value Type Description bool?"
  },
  "api/PoeShared.Modularity.IAppArguments.IsDebugMode.html": {
    "href": "api/PoeShared.Modularity.IAppArguments.IsDebugMode.html",
    "title": "Property IsDebugMode | EyeAuras Docs",
    "keywords": "Property IsDebugMode IsDebugMode Declaration bool IsDebugMode { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Modularity.IAppArguments.IsElevated.html": {
    "href": "api/PoeShared.Modularity.IAppArguments.IsElevated.html",
    "title": "Property IsElevated | EyeAuras Docs",
    "keywords": "Property IsElevated IsElevated Declaration bool IsElevated { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Modularity.IAppArguments.IsLazyMode.html": {
    "href": "api/PoeShared.Modularity.IAppArguments.IsLazyMode.html",
    "title": "Property IsLazyMode | EyeAuras Docs",
    "keywords": "Property IsLazyMode IsLazyMode Declaration bool IsLazyMode { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Modularity.IAppArguments.IsSafeMode.html": {
    "href": "api/PoeShared.Modularity.IAppArguments.IsSafeMode.html",
    "title": "Property IsSafeMode | EyeAuras Docs",
    "keywords": "Property IsSafeMode IsSafeMode Declaration bool? IsSafeMode { get; } Property Value Type Description bool?"
  },
  "api/PoeShared.Modularity.IAppArguments.Parse.html": {
    "href": "api/PoeShared.Modularity.IAppArguments.Parse.html",
    "title": "Method Parse | EyeAuras Docs",
    "keywords": "Method Parse Parse(string[]) Declaration bool Parse(string[] args) Parameters Type Name Description string[] args Returns Type Description bool"
  },
  "api/PoeShared.Modularity.IAppArguments.PrismModules.html": {
    "href": "api/PoeShared.Modularity.IAppArguments.PrismModules.html",
    "title": "Property PrismModules | EyeAuras Docs",
    "keywords": "Property PrismModules PrismModules Declaration IEnumerable<string> PrismModules { get; } Property Value Type Description IEnumerable<string>"
  },
  "api/PoeShared.Modularity.IAppArguments.Profile.html": {
    "href": "api/PoeShared.Modularity.IAppArguments.Profile.html",
    "title": "Property Profile | EyeAuras Docs",
    "keywords": "Property Profile Profile Declaration string Profile { get; } Property Value Type Description string"
  },
  "api/PoeShared.Modularity.IAppArguments.ShowUpdater.html": {
    "href": "api/PoeShared.Modularity.IAppArguments.ShowUpdater.html",
    "title": "Property ShowUpdater | EyeAuras Docs",
    "keywords": "Property ShowUpdater ShowUpdater Declaration bool ShowUpdater { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Modularity.IAppArguments.StartupArgs.html": {
    "href": "api/PoeShared.Modularity.IAppArguments.StartupArgs.html",
    "title": "Property StartupArgs | EyeAuras Docs",
    "keywords": "Property StartupArgs StartupArgs Declaration string StartupArgs { get; } Property Value Type Description string"
  },
  "api/PoeShared.Modularity.IAppArguments.html": {
    "href": "api/PoeShared.Modularity.IAppArguments.html",
    "title": "Interface IAppArguments | EyeAuras Docs",
    "keywords": "Interface IAppArguments Inherited Members IAppConfig.AppName IAppConfig.AppTitle IAppConfig.Version IAppConfig.AppDataDirectory IAppConfig.AppDomainDirectory IAppConfig.SharedAppDataDirectory IAppConfig.LocalAppDataDirectory IAppConfig.ProcessId IAppConfig.ApplicationExecutableName IAppConfig.ApplicationExecutablePath IAppConfig.EnvironmentLocalAppData IAppConfig.EnvironmentAppData Namespace: PoeShared.Modularity Assembly: PoeShared.dll Syntax public interface IAppArguments : IAppConfig Properties Name Description AutostartFlag CommandLineArguments IsAdminMode IsDebugMode IsElevated IsLazyMode IsSafeMode PrismModules Profile ShowUpdater StartupArgs Methods Name Description Parse(string[]) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.IAppConfig.AppDataDirectory.html": {
    "href": "api/PoeShared.Modularity.IAppConfig.AppDataDirectory.html",
    "title": "Property AppDataDirectory | EyeAuras Docs",
    "keywords": "Property AppDataDirectory AppDataDirectory Declaration string AppDataDirectory { get; } Property Value Type Description string"
  },
  "api/PoeShared.Modularity.IAppConfig.AppDomainDirectory.html": {
    "href": "api/PoeShared.Modularity.IAppConfig.AppDomainDirectory.html",
    "title": "Property AppDomainDirectory | EyeAuras Docs",
    "keywords": "Property AppDomainDirectory AppDomainDirectory Declaration string AppDomainDirectory { get; } Property Value Type Description string"
  },
  "api/PoeShared.Modularity.IAppConfig.AppName.html": {
    "href": "api/PoeShared.Modularity.IAppConfig.AppName.html",
    "title": "Property AppName | EyeAuras Docs",
    "keywords": "Property AppName AppName Declaration string AppName { get; } Property Value Type Description string"
  },
  "api/PoeShared.Modularity.IAppConfig.AppTitle.html": {
    "href": "api/PoeShared.Modularity.IAppConfig.AppTitle.html",
    "title": "Property AppTitle | EyeAuras Docs",
    "keywords": "Property AppTitle AppTitle Declaration string AppTitle { get; } Property Value Type Description string"
  },
  "api/PoeShared.Modularity.IAppConfig.ApplicationExecutableName.html": {
    "href": "api/PoeShared.Modularity.IAppConfig.ApplicationExecutableName.html",
    "title": "Property ApplicationExecutableName | EyeAuras Docs",
    "keywords": "Property ApplicationExecutableName ApplicationExecutableName Declaration string ApplicationExecutableName { get; } Property Value Type Description string"
  },
  "api/PoeShared.Modularity.IAppConfig.ApplicationExecutablePath.html": {
    "href": "api/PoeShared.Modularity.IAppConfig.ApplicationExecutablePath.html",
    "title": "Property ApplicationExecutablePath | EyeAuras Docs",
    "keywords": "Property ApplicationExecutablePath ApplicationExecutablePath Declaration string ApplicationExecutablePath { get; } Property Value Type Description string"
  },
  "api/PoeShared.Modularity.IAppConfig.EnvironmentAppData.html": {
    "href": "api/PoeShared.Modularity.IAppConfig.EnvironmentAppData.html",
    "title": "Property EnvironmentAppData | EyeAuras Docs",
    "keywords": "Property EnvironmentAppData EnvironmentAppData Declaration DirectoryInfo EnvironmentAppData { get; } Property Value Type Description DirectoryInfo"
  },
  "api/PoeShared.Modularity.IAppConfig.EnvironmentLocalAppData.html": {
    "href": "api/PoeShared.Modularity.IAppConfig.EnvironmentLocalAppData.html",
    "title": "Property EnvironmentLocalAppData | EyeAuras Docs",
    "keywords": "Property EnvironmentLocalAppData EnvironmentLocalAppData Declaration DirectoryInfo EnvironmentLocalAppData { get; } Property Value Type Description DirectoryInfo"
  },
  "api/PoeShared.Modularity.IAppConfig.LocalAppDataDirectory.html": {
    "href": "api/PoeShared.Modularity.IAppConfig.LocalAppDataDirectory.html",
    "title": "Property LocalAppDataDirectory | EyeAuras Docs",
    "keywords": "Property LocalAppDataDirectory LocalAppDataDirectory Declaration string LocalAppDataDirectory { get; } Property Value Type Description string"
  },
  "api/PoeShared.Modularity.IAppConfig.ProcessId.html": {
    "href": "api/PoeShared.Modularity.IAppConfig.ProcessId.html",
    "title": "Property ProcessId | EyeAuras Docs",
    "keywords": "Property ProcessId ProcessId Declaration int ProcessId { get; } Property Value Type Description int"
  },
  "api/PoeShared.Modularity.IAppConfig.SharedAppDataDirectory.html": {
    "href": "api/PoeShared.Modularity.IAppConfig.SharedAppDataDirectory.html",
    "title": "Property SharedAppDataDirectory | EyeAuras Docs",
    "keywords": "Property SharedAppDataDirectory SharedAppDataDirectory Declaration string SharedAppDataDirectory { get; } Property Value Type Description string"
  },
  "api/PoeShared.Modularity.IAppConfig.Version.html": {
    "href": "api/PoeShared.Modularity.IAppConfig.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration Version Version { get; } Property Value Type Description Version"
  },
  "api/PoeShared.Modularity.IAppConfig.html": {
    "href": "api/PoeShared.Modularity.IAppConfig.html",
    "title": "Interface IAppConfig | EyeAuras Docs",
    "keywords": "Interface IAppConfig Namespace: PoeShared.Modularity Assembly: PoeShared.dll Syntax public interface IAppConfig Properties Name Description AppDataDirectory AppDomainDirectory AppName AppTitle ApplicationExecutableName ApplicationExecutablePath EnvironmentAppData EnvironmentLocalAppData LocalAppDataDirectory ProcessId SharedAppDataDirectory Version Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.IConfigProvider-1.ActualConfig.html": {
    "href": "api/PoeShared.Modularity.IConfigProvider-1.ActualConfig.html",
    "title": "Property ActualConfig | EyeAuras Docs",
    "keywords": "Property ActualConfig ActualConfig Declaration TConfig ActualConfig { get; } Property Value Type Description TConfig"
  },
  "api/PoeShared.Modularity.IConfigProvider-1.ListenTo.html": {
    "href": "api/PoeShared.Modularity.IConfigProvider-1.ListenTo.html",
    "title": "Method ListenTo | EyeAuras Docs",
    "keywords": "Method ListenTo ListenTo<T>(Expression<Func<TConfig, T>>) Declaration IObservable<T> ListenTo<T>(Expression<Func<TConfig, T>> fieldToMonitor) Parameters Type Name Description Expression<Func<TConfig, T>> fieldToMonitor Returns Type Description IObservable<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Modularity.IConfigProvider-1.Save.html": {
    "href": "api/PoeShared.Modularity.IConfigProvider-1.Save.html",
    "title": "Method Save | EyeAuras Docs",
    "keywords": "Method Save Save(TConfig) Declaration void Save(TConfig config) Parameters Type Name Description TConfig config"
  },
  "api/PoeShared.Modularity.IConfigProvider-1.WhenChanged.html": {
    "href": "api/PoeShared.Modularity.IConfigProvider-1.WhenChanged.html",
    "title": "Property WhenChanged | EyeAuras Docs",
    "keywords": "Property WhenChanged WhenChanged Declaration IObservable<TConfig> WhenChanged { get; } Property Value Type Description IObservable<TConfig>"
  },
  "api/PoeShared.Modularity.IConfigProvider-1.html": {
    "href": "api/PoeShared.Modularity.IConfigProvider-1.html",
    "title": "Interface IConfigProvider<TConfig> | EyeAuras Docs",
    "keywords": "Interface IConfigProvider<TConfig> Namespace: PoeShared.Modularity Assembly: PoeShared.dll Syntax public interface IConfigProvider<TConfig> where TConfig : IPoeEyeConfig Type Parameters Name Description TConfig Properties Name Description ActualConfig WhenChanged Methods Name Description ListenTo<T>(Expression<Func<TConfig, T>>) Save(TConfig) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.IConfigProvider.ConfigHasChanged.html": {
    "href": "api/PoeShared.Modularity.IConfigProvider.ConfigHasChanged.html",
    "title": "Property ConfigHasChanged | EyeAuras Docs",
    "keywords": "Property ConfigHasChanged ConfigHasChanged Declaration IObservable<Unit> ConfigHasChanged { get; } Property Value Type Description IObservable<Unit>"
  },
  "api/PoeShared.Modularity.IConfigProvider.Configs.html": {
    "href": "api/PoeShared.Modularity.IConfigProvider.Configs.html",
    "title": "Property Configs | EyeAuras Docs",
    "keywords": "Property Configs Configs Declaration IObservableCache<IPoeEyeConfig, string> Configs { get; } Property Value Type Description IObservableCache<IPoeEyeConfig, string>"
  },
  "api/PoeShared.Modularity.IConfigProvider.GetActualConfig.html": {
    "href": "api/PoeShared.Modularity.IConfigProvider.GetActualConfig.html",
    "title": "Method GetActualConfig | EyeAuras Docs",
    "keywords": "Method GetActualConfig GetActualConfig<TConfig>() Declaration TConfig GetActualConfig<TConfig>() where TConfig : IPoeEyeConfig, new() Returns Type Description TConfig Type Parameters Name Description TConfig"
  },
  "api/PoeShared.Modularity.IConfigProvider.Save.html": {
    "href": "api/PoeShared.Modularity.IConfigProvider.Save.html",
    "title": "Method Save | EyeAuras Docs",
    "keywords": "Method Save Save() Declaration void Save() Save(IPoeEyeConfig) Declaration void Save(IPoeEyeConfig config) Parameters Type Name Description IPoeEyeConfig config"
  },
  "api/PoeShared.Modularity.IConfigProvider.html": {
    "href": "api/PoeShared.Modularity.IConfigProvider.html",
    "title": "Interface IConfigProvider | EyeAuras Docs",
    "keywords": "Interface IConfigProvider Namespace: PoeShared.Modularity Assembly: PoeShared.dll Syntax public interface IConfigProvider Properties Name Description ConfigHasChanged Configs Methods Name Description GetActualConfig<TConfig>() Save() Save(IPoeEyeConfig) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.IConfigProviderStrategy.HandleConfigSave.html": {
    "href": "api/PoeShared.Modularity.IConfigProviderStrategy.HandleConfigSave.html",
    "title": "Method HandleConfigSave | EyeAuras Docs",
    "keywords": "Method HandleConfigSave HandleConfigSave(FileInfo) Declaration void HandleConfigSave(FileInfo configFile) Parameters Type Name Description FileInfo configFile"
  },
  "api/PoeShared.Modularity.IConfigProviderStrategy.TryHandleConfigLoadException.html": {
    "href": "api/PoeShared.Modularity.IConfigProviderStrategy.TryHandleConfigLoadException.html",
    "title": "Method TryHandleConfigLoadException | EyeAuras Docs",
    "keywords": "Method TryHandleConfigLoadException TryHandleConfigLoadException(FileInfo, out PoeEyeCombinedConfig) Declaration bool TryHandleConfigLoadException(FileInfo configFile, out ConfigProviderFromFile.PoeEyeCombinedConfig replacementConfig) Parameters Type Name Description FileInfo configFile ConfigProviderFromFile.PoeEyeCombinedConfig replacementConfig Returns Type Description bool"
  },
  "api/PoeShared.Modularity.IConfigProviderStrategy.html": {
    "href": "api/PoeShared.Modularity.IConfigProviderStrategy.html",
    "title": "Interface IConfigProviderStrategy | EyeAuras Docs",
    "keywords": "Interface IConfigProviderStrategy Namespace: PoeShared.Modularity Assembly: PoeShared.dll Syntax public interface IConfigProviderStrategy Methods Name Description HandleConfigSave(FileInfo) TryHandleConfigLoadException(FileInfo, out PoeEyeCombinedConfig) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.IConfigSerializer.Compress.html": {
    "href": "api/PoeShared.Modularity.IConfigSerializer.Compress.html",
    "title": "Method Compress | EyeAuras Docs",
    "keywords": "Method Compress Compress(object) Declaration string Compress(object data) Parameters Type Name Description object data Returns Type Description string"
  },
  "api/PoeShared.Modularity.IConfigSerializer.Decompress.html": {
    "href": "api/PoeShared.Modularity.IConfigSerializer.Decompress.html",
    "title": "Method Decompress | EyeAuras Docs",
    "keywords": "Method Decompress Decompress<T>(string) Declaration T Decompress<T>(string compressedData) Parameters Type Name Description string compressedData Returns Type Description T Type Parameters Name Description T"
  },
  "api/PoeShared.Modularity.IConfigSerializer.Deserialize.html": {
    "href": "api/PoeShared.Modularity.IConfigSerializer.Deserialize.html",
    "title": "Method Deserialize | EyeAuras Docs",
    "keywords": "Method Deserialize Deserialize<T>(string) Declaration T Deserialize<T>(string serializedData) Parameters Type Name Description string serializedData Returns Type Description T Type Parameters Name Description T"
  },
  "api/PoeShared.Modularity.IConfigSerializer.DeserializeOrDefault.html": {
    "href": "api/PoeShared.Modularity.IConfigSerializer.DeserializeOrDefault.html",
    "title": "Method DeserializeOrDefault | EyeAuras Docs",
    "keywords": "Method DeserializeOrDefault DeserializeOrDefault<T>(PoeConfigMetadata<T>, Func<PoeConfigMetadata<T>, T>) Declaration T DeserializeOrDefault<T>(PoeConfigMetadata<T> metadata, Func<PoeConfigMetadata<T>, T> defaultItemFactory) where T : IPoeEyeConfig Parameters Type Name Description PoeConfigMetadata<T> metadata Func<PoeConfigMetadata<T>, T> defaultItemFactory Returns Type Description T Type Parameters Name Description T"
  },
  "api/PoeShared.Modularity.IConfigSerializer.DeserializeSingleOrList.html": {
    "href": "api/PoeShared.Modularity.IConfigSerializer.DeserializeSingleOrList.html",
    "title": "Method DeserializeSingleOrList | EyeAuras Docs",
    "keywords": "Method DeserializeSingleOrList DeserializeSingleOrList<T>(string) Declaration T[] DeserializeSingleOrList<T>(string serializedData) Parameters Type Name Description string serializedData Returns Type Description T[] Type Parameters Name Description T"
  },
  "api/PoeShared.Modularity.IConfigSerializer.RegisterConverter.html": {
    "href": "api/PoeShared.Modularity.IConfigSerializer.RegisterConverter.html",
    "title": "Method RegisterConverter | EyeAuras Docs",
    "keywords": "Method RegisterConverter RegisterConverter(JsonConverter) Declaration void RegisterConverter(JsonConverter converter) Parameters Type Name Description JsonConverter converter"
  },
  "api/PoeShared.Modularity.IConfigSerializer.Serialize.html": {
    "href": "api/PoeShared.Modularity.IConfigSerializer.Serialize.html",
    "title": "Method Serialize | EyeAuras Docs",
    "keywords": "Method Serialize Serialize(object) Declaration string Serialize(object data) Parameters Type Name Description object data Returns Type Description string"
  },
  "api/PoeShared.Modularity.IConfigSerializer.html": {
    "href": "api/PoeShared.Modularity.IConfigSerializer.html",
    "title": "Interface IConfigSerializer | EyeAuras Docs",
    "keywords": "Interface IConfigSerializer Namespace: PoeShared.Modularity Assembly: PoeShared.dll Syntax public interface IConfigSerializer Methods Name Description Compress(object) Decompress<T>(string) DeserializeOrDefault<T>(PoeConfigMetadata<T>, Func<PoeConfigMetadata<T>, T>) DeserializeSingleOrList<T>(string) Deserialize<T>(string) RegisterConverter(JsonConverter) Serialize(object) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.IDynamicModule.html": {
    "href": "api/PoeShared.Modularity.IDynamicModule.html",
    "title": "Interface IDynamicModule | EyeAuras Docs",
    "keywords": "Interface IDynamicModule Inherited Members IDisposable.Dispose() Namespace: PoeShared.Modularity Assembly: PoeShared.Native.dll Syntax public interface IDynamicModule : IModule, IDisposable Extension Methods ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.IHasError.Error.html": {
    "href": "api/PoeShared.Modularity.IHasError.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Declaration string Error { get; } Property Value Type Description string"
  },
  "api/PoeShared.Modularity.IHasError.html": {
    "href": "api/PoeShared.Modularity.IHasError.html",
    "title": "Interface IHasError | EyeAuras Docs",
    "keywords": "Interface IHasError Namespace: PoeShared.Modularity Assembly: PoeShared.dll Syntax public interface IHasError Properties Name Description Error Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.IHasValidation.IsValid.html": {
    "href": "api/PoeShared.Modularity.IHasValidation.IsValid.html",
    "title": "Property IsValid | EyeAuras Docs",
    "keywords": "Property IsValid IsValid Declaration bool IsValid { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Modularity.IHasValidation.html": {
    "href": "api/PoeShared.Modularity.IHasValidation.html",
    "title": "Interface IHasValidation | EyeAuras Docs",
    "keywords": "Interface IHasValidation Namespace: PoeShared.Modularity Assembly: PoeShared.dll Syntax public interface IHasValidation Properties Name Description IsValid Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.IHasVersion.Version.html": {
    "href": "api/PoeShared.Modularity.IHasVersion.Version.html",
    "title": "Property Version | EyeAuras Docs",
    "keywords": "Property Version Version Declaration int Version { get; set; } Property Value Type Description int"
  },
  "api/PoeShared.Modularity.IHasVersion.html": {
    "href": "api/PoeShared.Modularity.IHasVersion.html",
    "title": "Interface IHasVersion | EyeAuras Docs",
    "keywords": "Interface IHasVersion Namespace: PoeShared.Modularity Assembly: PoeShared.dll Syntax public interface IHasVersion Properties Name Description Version Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.IPoeConfigMetadataReplacementProvider.Replacements.html": {
    "href": "api/PoeShared.Modularity.IPoeConfigMetadataReplacementProvider.Replacements.html",
    "title": "Property Replacements | EyeAuras Docs",
    "keywords": "Property Replacements Replacements Declaration IEnumerable<MetadataReplacement> Replacements { get; } Property Value Type Description IEnumerable<MetadataReplacement>"
  },
  "api/PoeShared.Modularity.IPoeConfigMetadataReplacementProvider.html": {
    "href": "api/PoeShared.Modularity.IPoeConfigMetadataReplacementProvider.html",
    "title": "Interface IPoeConfigMetadataReplacementProvider | EyeAuras Docs",
    "keywords": "Interface IPoeConfigMetadataReplacementProvider Namespace: PoeShared.Modularity Assembly: PoeShared.dll Syntax public interface IPoeConfigMetadataReplacementProvider Properties Name Description Replacements Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.IPoeConfigMetadataReplacementRepository.Replacements.html": {
    "href": "api/PoeShared.Modularity.IPoeConfigMetadataReplacementRepository.Replacements.html",
    "title": "Property Replacements | EyeAuras Docs",
    "keywords": "Property Replacements Replacements Declaration IReadOnlyObservableCollection<MetadataReplacement> Replacements { get; } Property Value Type Description IReadOnlyObservableCollection<MetadataReplacement>"
  },
  "api/PoeShared.Modularity.IPoeConfigMetadataReplacementRepository.Watch.html": {
    "href": "api/PoeShared.Modularity.IPoeConfigMetadataReplacementRepository.Watch.html",
    "title": "Method Watch | EyeAuras Docs",
    "keywords": "Method Watch Watch(PoeConfigMetadata) Returns a stream of updates for metadata of a specific type Declaration IObservable<PoeConfigMetadata> Watch(PoeConfigMetadata metadata) Parameters Type Name Description PoeConfigMetadata metadata Returns Type Description IObservable<PoeConfigMetadata>"
  },
  "api/PoeShared.Modularity.IPoeConfigMetadataReplacementRepository.WatchForAddedReplacements.html": {
    "href": "api/PoeShared.Modularity.IPoeConfigMetadataReplacementRepository.WatchForAddedReplacements.html",
    "title": "Method WatchForAddedReplacements | EyeAuras Docs",
    "keywords": "Method WatchForAddedReplacements WatchForAddedReplacements(Type) Returns stream of names of types that will be replaced by target type Declaration IObservable<string> WatchForAddedReplacements(Type targetType) Parameters Type Name Description Type targetType Returns Type Description IObservable<string>"
  },
  "api/PoeShared.Modularity.IPoeConfigMetadataReplacementRepository.html": {
    "href": "api/PoeShared.Modularity.IPoeConfigMetadataReplacementRepository.html",
    "title": "Interface IPoeConfigMetadataReplacementRepository | EyeAuras Docs",
    "keywords": "Interface IPoeConfigMetadataReplacementRepository Namespace: PoeShared.Modularity Assembly: PoeShared.dll Syntax public interface IPoeConfigMetadataReplacementRepository Properties Name Description Replacements Methods Name Description Watch(PoeConfigMetadata) Returns a stream of updates for metadata of a specific type WatchForAddedReplacements(Type) Returns stream of names of types that will be replaced by target type Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.IPoeEyeConfig.html": {
    "href": "api/PoeShared.Modularity.IPoeEyeConfig.html",
    "title": "Interface IPoeEyeConfig | EyeAuras Docs",
    "keywords": "Interface IPoeEyeConfig Namespace: PoeShared.Modularity Assembly: PoeShared.dll Syntax public interface IPoeEyeConfig Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.IPoeEyeConfigVersioned.html": {
    "href": "api/PoeShared.Modularity.IPoeEyeConfigVersioned.html",
    "title": "Interface IPoeEyeConfigVersioned | EyeAuras Docs",
    "keywords": "Interface IPoeEyeConfigVersioned Inherited Members IHasVersion.Version Namespace: PoeShared.Modularity Assembly: PoeShared.dll Syntax public interface IPoeEyeConfigVersioned : IPoeEyeConfig, IHasVersion Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.IPoeEyeModule.html": {
    "href": "api/PoeShared.Modularity.IPoeEyeModule.html",
    "title": "Interface IPoeEyeModule | EyeAuras Docs",
    "keywords": "Interface IPoeEyeModule Namespace: PoeShared.Modularity Assembly: PoeShared.Native.dll Syntax [Obsolete(\"This module type should be migrated to PoeEye\")] public interface IPoeEyeModule : IModule Extension Methods ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Modularity.html": {
    "href": "api/PoeShared.Modularity.html",
    "title": "Namespace PoeShared.Modularity | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Modularity Interfaces IAppArguments IAppConfig IConfigProvider IConfigProviderStrategy IConfigProvider<TConfig> IConfigSerializer IDynamicModule IHasError IHasValidation IHasVersion IPoeConfigMetadataReplacementProvider IPoeConfigMetadataReplacementRepository IPoeEyeConfig IPoeEyeConfigVersioned IPoeEyeModule"
  },
  "api/PoeShared.Native.AspectRatioSizeCalculator.-ctor.html": {
    "href": "api/PoeShared.Native.AspectRatioSizeCalculator.-ctor.html",
    "title": "Constructor AspectRatioSizeCalculator | EyeAuras Docs",
    "keywords": "Constructor AspectRatioSizeCalculator AspectRatioSizeCalculator() Declaration public AspectRatioSizeCalculator()"
  },
  "api/PoeShared.Native.AspectRatioSizeCalculator.Calculate.html": {
    "href": "api/PoeShared.Native.AspectRatioSizeCalculator.Calculate.html",
    "title": "Method Calculate | EyeAuras Docs",
    "keywords": "Method Calculate Calculate(double, Rectangle, Rectangle, bool) Declaration public Rectangle Calculate(double desiredAspectRatio, Rectangle currentBounds, Rectangle initialBounds, bool prioritizeHeight = true) Parameters Type Name Description double desiredAspectRatio Rectangle currentBounds Rectangle initialBounds bool prioritizeHeight Returns Type Description Rectangle"
  },
  "api/PoeShared.Native.AspectRatioSizeCalculator.html": {
    "href": "api/PoeShared.Native.AspectRatioSizeCalculator.html",
    "title": "Class AspectRatioSizeCalculator | EyeAuras Docs",
    "keywords": "Class AspectRatioSizeCalculator Inheritance object AspectRatioSizeCalculator Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public sealed class AspectRatioSizeCalculator Constructors Name Description AspectRatioSizeCalculator() Methods Name Description Calculate(double, Rectangle, Rectangle, bool) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.IActivationController.Activate.html": {
    "href": "api/PoeShared.Native.IActivationController.Activate.html",
    "title": "Method Activate | EyeAuras Docs",
    "keywords": "Method Activate Activate() Declaration void Activate()"
  },
  "api/PoeShared.Native.IActivationController.html": {
    "href": "api/PoeShared.Native.IActivationController.html",
    "title": "Interface IActivationController | EyeAuras Docs",
    "keywords": "Interface IActivationController Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public interface IActivationController Methods Name Description Activate() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.IClipboardManager.Clear.html": {
    "href": "api/PoeShared.Native.IClipboardManager.Clear.html",
    "title": "Method Clear | EyeAuras Docs",
    "keywords": "Method Clear Clear() Declaration bool Clear() Returns Type Description bool"
  },
  "api/PoeShared.Native.IClipboardManager.ClipboardRestorationTimeout.html": {
    "href": "api/PoeShared.Native.IClipboardManager.ClipboardRestorationTimeout.html",
    "title": "Property ClipboardRestorationTimeout | EyeAuras Docs",
    "keywords": "Property ClipboardRestorationTimeout ClipboardRestorationTimeout Declaration TimeSpan ClipboardRestorationTimeout { get; } Property Value Type Description TimeSpan"
  },
  "api/PoeShared.Native.IClipboardManager.ClipboardSetRetryCount.html": {
    "href": "api/PoeShared.Native.IClipboardManager.ClipboardSetRetryCount.html",
    "title": "Property ClipboardSetRetryCount | EyeAuras Docs",
    "keywords": "Property ClipboardSetRetryCount ClipboardSetRetryCount Declaration int ClipboardSetRetryCount { get; } Property Value Type Description int"
  },
  "api/PoeShared.Native.IClipboardManager.ContainsFileDropList.html": {
    "href": "api/PoeShared.Native.IClipboardManager.ContainsFileDropList.html",
    "title": "Method ContainsFileDropList | EyeAuras Docs",
    "keywords": "Method ContainsFileDropList ContainsFileDropList() Declaration bool ContainsFileDropList() Returns Type Description bool"
  },
  "api/PoeShared.Native.IClipboardManager.ContainsImage.html": {
    "href": "api/PoeShared.Native.IClipboardManager.ContainsImage.html",
    "title": "Method ContainsImage | EyeAuras Docs",
    "keywords": "Method ContainsImage ContainsImage() Declaration bool ContainsImage() Returns Type Description bool"
  },
  "api/PoeShared.Native.IClipboardManager.ContainsText.html": {
    "href": "api/PoeShared.Native.IClipboardManager.ContainsText.html",
    "title": "Method ContainsText | EyeAuras Docs",
    "keywords": "Method ContainsText ContainsText() Declaration bool ContainsText() Returns Type Description bool"
  },
  "api/PoeShared.Native.IClipboardManager.GetDataObject.html": {
    "href": "api/PoeShared.Native.IClipboardManager.GetDataObject.html",
    "title": "Method GetDataObject | EyeAuras Docs",
    "keywords": "Method GetDataObject GetDataObject() Declaration IDataObject GetDataObject() Returns Type Description IDataObject"
  },
  "api/PoeShared.Native.IClipboardManager.GetFileDropList.html": {
    "href": "api/PoeShared.Native.IClipboardManager.GetFileDropList.html",
    "title": "Method GetFileDropList | EyeAuras Docs",
    "keywords": "Method GetFileDropList GetFileDropList() Declaration IReadOnlyList<string> GetFileDropList() Returns Type Description IReadOnlyList<string>"
  },
  "api/PoeShared.Native.IClipboardManager.GetImage.html": {
    "href": "api/PoeShared.Native.IClipboardManager.GetImage.html",
    "title": "Method GetImage | EyeAuras Docs",
    "keywords": "Method GetImage GetImage() Declaration Image GetImage() Returns Type Description Image"
  },
  "api/PoeShared.Native.IClipboardManager.GetText.html": {
    "href": "api/PoeShared.Native.IClipboardManager.GetText.html",
    "title": "Method GetText | EyeAuras Docs",
    "keywords": "Method GetText GetText() Declaration string GetText() Returns Type Description string"
  },
  "api/PoeShared.Native.IClipboardManager.SetDataObject.html": {
    "href": "api/PoeShared.Native.IClipboardManager.SetDataObject.html",
    "title": "Method SetDataObject | EyeAuras Docs",
    "keywords": "Method SetDataObject SetDataObject(object) Declaration void SetDataObject(object dataObject) Parameters Type Name Description object dataObject"
  },
  "api/PoeShared.Native.IClipboardManager.SetImage.html": {
    "href": "api/PoeShared.Native.IClipboardManager.SetImage.html",
    "title": "Method SetImage | EyeAuras Docs",
    "keywords": "Method SetImage SetImage(Image) Declaration void SetImage(Image image) Parameters Type Name Description Image image"
  },
  "api/PoeShared.Native.IClipboardManager.SetText.html": {
    "href": "api/PoeShared.Native.IClipboardManager.SetText.html",
    "title": "Method SetText | EyeAuras Docs",
    "keywords": "Method SetText SetText(string) Declaration void SetText(string text) Parameters Type Name Description string text"
  },
  "api/PoeShared.Native.IClipboardManager.html": {
    "href": "api/PoeShared.Native.IClipboardManager.html",
    "title": "Interface IClipboardManager | EyeAuras Docs",
    "keywords": "Interface IClipboardManager Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public interface IClipboardManager Properties Name Description ClipboardRestorationTimeout ClipboardSetRetryCount Methods Name Description Clear() ContainsFileDropList() ContainsImage() ContainsText() GetDataObject() GetFileDropList() GetImage() GetText() SetDataObject(object) SetImage(Image) SetText(string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.IForegroundWindowTracker.ForegroundWindow.html": {
    "href": "api/PoeShared.Native.IForegroundWindowTracker.ForegroundWindow.html",
    "title": "Property ForegroundWindow | EyeAuras Docs",
    "keywords": "Property ForegroundWindow ForegroundWindow Declaration IWindowHandle ForegroundWindow { get; } Property Value Type Description IWindowHandle"
  },
  "api/PoeShared.Native.IForegroundWindowTracker.html": {
    "href": "api/PoeShared.Native.IForegroundWindowTracker.html",
    "title": "Interface IForegroundWindowTracker | EyeAuras Docs",
    "keywords": "Interface IForegroundWindowTracker Inherited Members INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public interface IForegroundWindowTracker : INotifyPropertyChanged Properties Name Description ForegroundWindow Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.IKeyboardEventsSource.AppHookIsActive.html": {
    "href": "api/PoeShared.Native.IKeyboardEventsSource.AppHookIsActive.html",
    "title": "Property AppHookIsActive | EyeAuras Docs",
    "keywords": "Property AppHookIsActive AppHookIsActive Declaration bool AppHookIsActive { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Native.IKeyboardEventsSource.RealtimeMode.html": {
    "href": "api/PoeShared.Native.IKeyboardEventsSource.RealtimeMode.html",
    "title": "Property RealtimeMode | EyeAuras Docs",
    "keywords": "Property RealtimeMode RealtimeMode Declaration bool RealtimeMode { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Native.IKeyboardEventsSource.SystemHookIsActive.html": {
    "href": "api/PoeShared.Native.IKeyboardEventsSource.SystemHookIsActive.html",
    "title": "Property SystemHookIsActive | EyeAuras Docs",
    "keywords": "Property SystemHookIsActive SystemHookIsActive Declaration bool SystemHookIsActive { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Native.IKeyboardEventsSource.WhenKeyDown.html": {
    "href": "api/PoeShared.Native.IKeyboardEventsSource.WhenKeyDown.html",
    "title": "Property WhenKeyDown | EyeAuras Docs",
    "keywords": "Property WhenKeyDown WhenKeyDown Declaration IObservable<KeyEventArgsExt> WhenKeyDown { get; } Property Value Type Description IObservable<KeyEventArgsExt>"
  },
  "api/PoeShared.Native.IKeyboardEventsSource.WhenKeyPress.html": {
    "href": "api/PoeShared.Native.IKeyboardEventsSource.WhenKeyPress.html",
    "title": "Property WhenKeyPress | EyeAuras Docs",
    "keywords": "Property WhenKeyPress WhenKeyPress Declaration IObservable<KeyPressEventArgs> WhenKeyPress { get; } Property Value Type Description IObservable<KeyPressEventArgs>"
  },
  "api/PoeShared.Native.IKeyboardEventsSource.WhenKeyRaw.html": {
    "href": "api/PoeShared.Native.IKeyboardEventsSource.WhenKeyRaw.html",
    "title": "Property WhenKeyRaw | EyeAuras Docs",
    "keywords": "Property WhenKeyRaw WhenKeyRaw Declaration IObservable<KeyEventArgsExt> WhenKeyRaw { get; } Property Value Type Description IObservable<KeyEventArgsExt>"
  },
  "api/PoeShared.Native.IKeyboardEventsSource.WhenKeyUp.html": {
    "href": "api/PoeShared.Native.IKeyboardEventsSource.WhenKeyUp.html",
    "title": "Property WhenKeyUp | EyeAuras Docs",
    "keywords": "Property WhenKeyUp WhenKeyUp Declaration IObservable<KeyEventArgsExt> WhenKeyUp { get; } Property Value Type Description IObservable<KeyEventArgsExt>"
  },
  "api/PoeShared.Native.IKeyboardEventsSource.WhenMouseDown.html": {
    "href": "api/PoeShared.Native.IKeyboardEventsSource.WhenMouseDown.html",
    "title": "Property WhenMouseDown | EyeAuras Docs",
    "keywords": "Property WhenMouseDown WhenMouseDown Declaration IObservable<MouseEventExtArgs> WhenMouseDown { get; } Property Value Type Description IObservable<MouseEventExtArgs>"
  },
  "api/PoeShared.Native.IKeyboardEventsSource.WhenMouseMove.html": {
    "href": "api/PoeShared.Native.IKeyboardEventsSource.WhenMouseMove.html",
    "title": "Property WhenMouseMove | EyeAuras Docs",
    "keywords": "Property WhenMouseMove WhenMouseMove Declaration IObservable<MouseEventExtArgs> WhenMouseMove { get; } Property Value Type Description IObservable<MouseEventExtArgs>"
  },
  "api/PoeShared.Native.IKeyboardEventsSource.WhenMouseRaw.html": {
    "href": "api/PoeShared.Native.IKeyboardEventsSource.WhenMouseRaw.html",
    "title": "Property WhenMouseRaw | EyeAuras Docs",
    "keywords": "Property WhenMouseRaw WhenMouseRaw Declaration IObservable<MouseEventExtArgs> WhenMouseRaw { get; } Property Value Type Description IObservable<MouseEventExtArgs>"
  },
  "api/PoeShared.Native.IKeyboardEventsSource.WhenMouseUp.html": {
    "href": "api/PoeShared.Native.IKeyboardEventsSource.WhenMouseUp.html",
    "title": "Property WhenMouseUp | EyeAuras Docs",
    "keywords": "Property WhenMouseUp WhenMouseUp Declaration IObservable<MouseEventExtArgs> WhenMouseUp { get; } Property Value Type Description IObservable<MouseEventExtArgs>"
  },
  "api/PoeShared.Native.IKeyboardEventsSource.WhenMouseWheel.html": {
    "href": "api/PoeShared.Native.IKeyboardEventsSource.WhenMouseWheel.html",
    "title": "Property WhenMouseWheel | EyeAuras Docs",
    "keywords": "Property WhenMouseWheel WhenMouseWheel Declaration IObservable<MouseEventExtArgs> WhenMouseWheel { get; } Property Value Type Description IObservable<MouseEventExtArgs>"
  },
  "api/PoeShared.Native.IKeyboardEventsSource.html": {
    "href": "api/PoeShared.Native.IKeyboardEventsSource.html",
    "title": "Interface IKeyboardEventsSource | EyeAuras Docs",
    "keywords": "Interface IKeyboardEventsSource Inherited Members ISupportsKeyboardFilter.AddKeyboardFilter(IKeyboardEventFilter) ISupportsMouseFilter.AddMouseFilter(IMouseEventFilter) Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public interface IKeyboardEventsSource : ISupportsKeyboardFilter, ISupportsMouseFilter Properties Name Description AppHookIsActive RealtimeMode SystemHookIsActive WhenKeyDown WhenKeyPress WhenKeyRaw WhenKeyUp WhenMouseDown WhenMouseMove WhenMouseRaw WhenMouseUp WhenMouseWheel Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.IOverlayConfig.OverlayBounds.html": {
    "href": "api/PoeShared.Native.IOverlayConfig.OverlayBounds.html",
    "title": "Property OverlayBounds | EyeAuras Docs",
    "keywords": "Property OverlayBounds OverlayBounds Declaration Rectangle OverlayBounds { get; set; } Property Value Type Description Rectangle"
  },
  "api/PoeShared.Native.IOverlayConfig.OverlayOpacity.html": {
    "href": "api/PoeShared.Native.IOverlayConfig.OverlayOpacity.html",
    "title": "Property OverlayOpacity | EyeAuras Docs",
    "keywords": "Property OverlayOpacity OverlayOpacity Declaration float OverlayOpacity { get; set; } Property Value Type Description float"
  },
  "api/PoeShared.Native.IOverlayConfig.html": {
    "href": "api/PoeShared.Native.IOverlayConfig.html",
    "title": "Interface IOverlayConfig | EyeAuras Docs",
    "keywords": "Interface IOverlayConfig Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public interface IOverlayConfig : IPoeEyeConfig Properties Name Description OverlayBounds OverlayOpacity Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.IRegexStringMatcher.AddToBlacklist.html": {
    "href": "api/PoeShared.Native.IRegexStringMatcher.AddToBlacklist.html",
    "title": "Method AddToBlacklist | EyeAuras Docs",
    "keywords": "Method AddToBlacklist AddToBlacklist(string) Declaration IRegexStringMatcher AddToBlacklist(string regexValue) Parameters Type Name Description string regexValue Returns Type Description IRegexStringMatcher"
  },
  "api/PoeShared.Native.IRegexStringMatcher.AddToWhitelist.html": {
    "href": "api/PoeShared.Native.IRegexStringMatcher.AddToWhitelist.html",
    "title": "Method AddToWhitelist | EyeAuras Docs",
    "keywords": "Method AddToWhitelist AddToWhitelist(string) Declaration IRegexStringMatcher AddToWhitelist(string regexValue) Parameters Type Name Description string regexValue Returns Type Description IRegexStringMatcher"
  },
  "api/PoeShared.Native.IRegexStringMatcher.ClearWhitelist.html": {
    "href": "api/PoeShared.Native.IRegexStringMatcher.ClearWhitelist.html",
    "title": "Method ClearWhitelist | EyeAuras Docs",
    "keywords": "Method ClearWhitelist ClearWhitelist() Declaration IRegexStringMatcher ClearWhitelist() Returns Type Description IRegexStringMatcher"
  },
  "api/PoeShared.Native.IRegexStringMatcher.html": {
    "href": "api/PoeShared.Native.IRegexStringMatcher.html",
    "title": "Interface IRegexStringMatcher | EyeAuras Docs",
    "keywords": "Interface IRegexStringMatcher Inherited Members IStringMatcher.IsMatch(string) Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public interface IRegexStringMatcher : IStringMatcher Methods Name Description AddToBlacklist(string) AddToWhitelist(string) ClearWhitelist() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.IStringMatcher.IsMatch.html": {
    "href": "api/PoeShared.Native.IStringMatcher.IsMatch.html",
    "title": "Method IsMatch | EyeAuras Docs",
    "keywords": "Method IsMatch IsMatch(string) Declaration bool IsMatch(string value) Parameters Type Name Description string value Returns Type Description bool"
  },
  "api/PoeShared.Native.IStringMatcher.html": {
    "href": "api/PoeShared.Native.IStringMatcher.html",
    "title": "Interface IStringMatcher | EyeAuras Docs",
    "keywords": "Interface IStringMatcher Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public interface IStringMatcher Methods Name Description IsMatch(string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.IWinEventHookWrapper.WhenWindowEventTriggered.html": {
    "href": "api/PoeShared.Native.IWinEventHookWrapper.WhenWindowEventTriggered.html",
    "title": "Property WhenWindowEventTriggered | EyeAuras Docs",
    "keywords": "Property WhenWindowEventTriggered WhenWindowEventTriggered Declaration IObservable<WinEventHookData> WhenWindowEventTriggered { get; } Property Value Type Description IObservable<WinEventHookData>"
  },
  "api/PoeShared.Native.IWinEventHookWrapper.html": {
    "href": "api/PoeShared.Native.IWinEventHookWrapper.html",
    "title": "Interface IWinEventHookWrapper | EyeAuras Docs",
    "keywords": "Interface IWinEventHookWrapper Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public interface IWinEventHookWrapper Properties Name Description WhenWindowEventTriggered Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.IWindowBoundsTracker.Bounds.html": {
    "href": "api/PoeShared.Native.IWindowBoundsTracker.Bounds.html",
    "title": "Property Bounds | EyeAuras Docs",
    "keywords": "Property Bounds Bounds Declaration Rectangle? Bounds { get; } Property Value Type Description Rectangle?"
  },
  "api/PoeShared.Native.IWindowBoundsTracker.Window.html": {
    "href": "api/PoeShared.Native.IWindowBoundsTracker.Window.html",
    "title": "Property Window | EyeAuras Docs",
    "keywords": "Property Window Window Declaration IWindowHandle Window { get; set; } Property Value Type Description IWindowHandle"
  },
  "api/PoeShared.Native.IWindowBoundsTracker.html": {
    "href": "api/PoeShared.Native.IWindowBoundsTracker.html",
    "title": "Interface IWindowBoundsTracker | EyeAuras Docs",
    "keywords": "Interface IWindowBoundsTracker Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public interface IWindowBoundsTracker : IDisposable, INotifyPropertyChanged Properties Name Description Bounds Window Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.IWindowBoundsTrackerFactory.CreateTracker.html": {
    "href": "api/PoeShared.Native.IWindowBoundsTrackerFactory.CreateTracker.html",
    "title": "Method CreateTracker | EyeAuras Docs",
    "keywords": "Method CreateTracker CreateTracker() Declaration IWindowBoundsTracker CreateTracker() Returns Type Description IWindowBoundsTracker"
  },
  "api/PoeShared.Native.IWindowBoundsTrackerFactory.Track.html": {
    "href": "api/PoeShared.Native.IWindowBoundsTrackerFactory.Track.html",
    "title": "Method Track | EyeAuras Docs",
    "keywords": "Method Track Track(IWindowHandle) Declaration IObservable<Rectangle?> Track(IWindowHandle windowToTrack) Parameters Type Name Description IWindowHandle windowToTrack Returns Type Description IObservable<Rectangle?>"
  },
  "api/PoeShared.Native.IWindowBoundsTrackerFactory.html": {
    "href": "api/PoeShared.Native.IWindowBoundsTrackerFactory.html",
    "title": "Interface IWindowBoundsTrackerFactory | EyeAuras Docs",
    "keywords": "Interface IWindowBoundsTrackerFactory Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public interface IWindowBoundsTrackerFactory Methods Name Description CreateTracker() Track(IWindowHandle) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.IWindowHandle.BorderSize.html": {
    "href": "api/PoeShared.Native.IWindowHandle.BorderSize.html",
    "title": "Property BorderSize | EyeAuras Docs",
    "keywords": "Property BorderSize BorderSize Gets window border size using legacy API Declaration Size BorderSize { get; } Property Value Type Description Size"
  },
  "api/PoeShared.Native.IWindowHandle.Class.html": {
    "href": "api/PoeShared.Native.IWindowHandle.Class.html",
    "title": "Property Class | EyeAuras Docs",
    "keywords": "Property Class Class Gets the class name of the window. Declaration string Class { get; } Property Value Type Description string"
  },
  "api/PoeShared.Native.IWindowHandle.ClientBounds.html": {
    "href": "api/PoeShared.Native.IWindowHandle.ClientBounds.html",
    "title": "Property ClientBounds | EyeAuras Docs",
    "keywords": "Property ClientBounds ClientBounds Gets the dimensions of the client area of the window. Declaration Rectangle ClientBounds { get; } Property Value Type Description Rectangle"
  },
  "api/PoeShared.Native.IWindowHandle.CommandLine.html": {
    "href": "api/PoeShared.Native.IWindowHandle.CommandLine.html",
    "title": "Property CommandLine | EyeAuras Docs",
    "keywords": "Property CommandLine CommandLine Gets the command line of the process that created the window. Declaration string CommandLine { get; } Property Value Type Description string"
  },
  "api/PoeShared.Native.IWindowHandle.CreatedAt.html": {
    "href": "api/PoeShared.Native.IWindowHandle.CreatedAt.html",
    "title": "Property CreatedAt | EyeAuras Docs",
    "keywords": "Property CreatedAt CreatedAt Gets the creation time of the process that created the window. Declaration DateTime CreatedAt { get; } Property Value Type Description DateTime"
  },
  "api/PoeShared.Native.IWindowHandle.DwmWindowBounds.html": {
    "href": "api/PoeShared.Native.IWindowHandle.DwmWindowBounds.html",
    "title": "Property DwmWindowBounds | EyeAuras Docs",
    "keywords": "Property DwmWindowBounds DwmWindowBounds Gets the extended window frame bounds provided by DWM. Declaration Rectangle DwmWindowBounds { get; } Property Value Type Description Rectangle"
  },
  "api/PoeShared.Native.IWindowHandle.DwmWindowBoundsWithinMonitor.html": {
    "href": "api/PoeShared.Native.IWindowHandle.DwmWindowBoundsWithinMonitor.html",
    "title": "Property DwmWindowBoundsWithinMonitor | EyeAuras Docs",
    "keywords": "Property DwmWindowBoundsWithinMonitor DwmWindowBoundsWithinMonitor Gets the DWM window frame bounds within monitor. Declaration Rectangle DwmWindowBoundsWithinMonitor { get; } Property Value Type Description Rectangle"
  },
  "api/PoeShared.Native.IWindowHandle.Icon.html": {
    "href": "api/PoeShared.Native.IWindowHandle.Icon.html",
    "title": "Property Icon | EyeAuras Docs",
    "keywords": "Property Icon Icon Gets the icon of the window. Declaration Icon Icon { get; } Property Value Type Description Icon"
  },
  "api/PoeShared.Native.IWindowHandle.IconBitmap.html": {
    "href": "api/PoeShared.Native.IWindowHandle.IconBitmap.html",
    "title": "Property IconBitmap | EyeAuras Docs",
    "keywords": "Property IconBitmap IconBitmap Gets the icon of the window as a BitmapSource. Declaration BitmapSource IconBitmap { get; } Property Value Type Description BitmapSource"
  },
  "api/PoeShared.Native.IWindowHandle.IsIconic.html": {
    "href": "api/PoeShared.Native.IWindowHandle.IsIconic.html",
    "title": "Property IsIconic | EyeAuras Docs",
    "keywords": "Property IsIconic IsIconic Gets a value indicating whether the window is minimized (iconic). Declaration bool IsIconic { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Native.IWindowHandle.IsVisible.html": {
    "href": "api/PoeShared.Native.IWindowHandle.IsVisible.html",
    "title": "Property IsVisible | EyeAuras Docs",
    "keywords": "Property IsVisible IsVisible Gets a value indicating whether the window is visible. Declaration bool IsVisible { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Native.IWindowHandle.Owner.html": {
    "href": "api/PoeShared.Native.IWindowHandle.Owner.html",
    "title": "Property Owner | EyeAuras Docs",
    "keywords": "Property Owner Owner Gets the owner of the window. Declaration IWindowHandle Owner { get; } Property Value Type Description IWindowHandle"
  },
  "api/PoeShared.Native.IWindowHandle.Parent.html": {
    "href": "api/PoeShared.Native.IWindowHandle.Parent.html",
    "title": "Property Parent | EyeAuras Docs",
    "keywords": "Property Parent Parent Gets the parent of the window. Declaration IWindowHandle Parent { get; } Property Value Type Description IWindowHandle"
  },
  "api/PoeShared.Native.IWindowHandle.ParentProcessId.html": {
    "href": "api/PoeShared.Native.IWindowHandle.ParentProcessId.html",
    "title": "Property ParentProcessId | EyeAuras Docs",
    "keywords": "Property ParentProcessId ParentProcessId Gets the parent process identifier of the process that created the window. Declaration int ParentProcessId { get; } Property Value Type Description int"
  },
  "api/PoeShared.Native.IWindowHandle.ProcessArgs.html": {
    "href": "api/PoeShared.Native.IWindowHandle.ProcessArgs.html",
    "title": "Property ProcessArgs | EyeAuras Docs",
    "keywords": "Property ProcessArgs ProcessArgs Gets the arguments of the process that created the window. Declaration string ProcessArgs { get; } Property Value Type Description string"
  },
  "api/PoeShared.Native.IWindowHandle.ProcessId.html": {
    "href": "api/PoeShared.Native.IWindowHandle.ProcessId.html",
    "title": "Property ProcessId | EyeAuras Docs",
    "keywords": "Property ProcessId ProcessId Gets the process identifier associated with the window. Declaration int ProcessId { get; } Property Value Type Description int"
  },
  "api/PoeShared.Native.IWindowHandle.ProcessName.html": {
    "href": "api/PoeShared.Native.IWindowHandle.ProcessName.html",
    "title": "Property ProcessName | EyeAuras Docs",
    "keywords": "Property ProcessName ProcessName Gets the name of the process that created the window. Declaration string ProcessName { get; } Property Value Type Description string"
  },
  "api/PoeShared.Native.IWindowHandle.ProcessPath.html": {
    "href": "api/PoeShared.Native.IWindowHandle.ProcessPath.html",
    "title": "Property ProcessPath | EyeAuras Docs",
    "keywords": "Property ProcessPath ProcessPath Gets the full path of the executable file of the process that created the window. Declaration string ProcessPath { get; } Property Value Type Description string"
  },
  "api/PoeShared.Native.IWindowHandle.ThreadId.html": {
    "href": "api/PoeShared.Native.IWindowHandle.ThreadId.html",
    "title": "Property ThreadId | EyeAuras Docs",
    "keywords": "Property ThreadId ThreadId Gets the thread identifier that created the window. Declaration int ThreadId { get; } Property Value Type Description int"
  },
  "api/PoeShared.Native.IWindowHandle.Title.html": {
    "href": "api/PoeShared.Native.IWindowHandle.Title.html",
    "title": "Property Title | EyeAuras Docs",
    "keywords": "Property Title Title Gets the title of the window. Declaration string Title { get; } Property Value Type Description string"
  },
  "api/PoeShared.Native.IWindowHandle.WindowBounds.html": {
    "href": "api/PoeShared.Native.IWindowHandle.WindowBounds.html",
    "title": "Property WindowBounds | EyeAuras Docs",
    "keywords": "Property WindowBounds WindowBounds Gets the outer dimensions of the window, including any title bar and border. Declaration Rectangle WindowBounds { get; } Property Value Type Description Rectangle"
  },
  "api/PoeShared.Native.IWindowHandle.WindowStyle.html": {
    "href": "api/PoeShared.Native.IWindowHandle.WindowStyle.html",
    "title": "Property WindowStyle | EyeAuras Docs",
    "keywords": "Property WindowStyle WindowStyle Gets the window styles. Declaration User32.WindowStyles WindowStyle { get; } Property Value Type Description WindowStyles"
  },
  "api/PoeShared.Native.IWindowHandle.WindowStylesEx.html": {
    "href": "api/PoeShared.Native.IWindowHandle.WindowStylesEx.html",
    "title": "Property WindowStylesEx | EyeAuras Docs",
    "keywords": "Property WindowStylesEx WindowStylesEx Gets the extended window styles. Declaration User32.WindowStylesEx WindowStylesEx { get; } Property Value Type Description WindowStylesEx"
  },
  "api/PoeShared.Native.IWindowHandle.ZOrder.html": {
    "href": "api/PoeShared.Native.IWindowHandle.ZOrder.html",
    "title": "Property ZOrder | EyeAuras Docs",
    "keywords": "Property ZOrder ZOrder Gets or sets the z-order of the window. Declaration int ZOrder { get; set; } Property Value Type Description int"
  },
  "api/PoeShared.Native.IWindowHandle.html": {
    "href": "api/PoeShared.Native.IWindowHandle.html",
    "title": "Interface IWindowHandle | EyeAuras Docs",
    "keywords": "Interface IWindowHandle Provides a handle to a window. Inherited Members IWin32Window.Handle IDisposable.Dispose() IEquatable<IWindowHandle>.Equals(IWindowHandle) Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public interface IWindowHandle : IWin32Window, IDisposable, IEquatable<IWindowHandle> Properties Name Description BorderSize Gets window border size using legacy API Class Gets the class name of the window. ClientBounds Gets the dimensions of the client area of the window. CommandLine Gets the command line of the process that created the window. CreatedAt Gets the creation time of the process that created the window. DwmWindowBounds Gets the extended window frame bounds provided by DWM. DwmWindowBoundsWithinMonitor Gets the DWM window frame bounds within monitor. Icon Gets the icon of the window. IconBitmap Gets the icon of the window as a BitmapSource. IsIconic Gets a value indicating whether the window is minimized (iconic). IsVisible Gets a value indicating whether the window is visible. Owner Gets the owner of the window. Parent Gets the parent of the window. ParentProcessId Gets the parent process identifier of the process that created the window. ProcessArgs Gets the arguments of the process that created the window. ProcessId Gets the process identifier associated with the window. ProcessName Gets the name of the process that created the window. ProcessPath Gets the full path of the executable file of the process that created the window. ThreadId Gets the thread identifier that created the window. Title Gets the title of the window. WindowBounds Gets the outer dimensions of the window, including any title bar and border. WindowStyle Gets the window styles. WindowStylesEx Gets the extended window styles. ZOrder Gets or sets the z-order of the window. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) WindowHandleExtensions.IsOwnWindow(IWindowHandle) WindowHandleExtensions.IsVisibleAndValid(IWindowHandle, bool) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.IWindowHandleProvider.GetByWindowHandle.html": {
    "href": "api/PoeShared.Native.IWindowHandleProvider.GetByWindowHandle.html",
    "title": "Method GetByWindowHandle | EyeAuras Docs",
    "keywords": "Method GetByWindowHandle GetByWindowHandle(nint) Declaration IWindowHandle GetByWindowHandle(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description IWindowHandle"
  },
  "api/PoeShared.Native.IWindowHandleProvider.html": {
    "href": "api/PoeShared.Native.IWindowHandleProvider.html",
    "title": "Interface IWindowHandleProvider | EyeAuras Docs",
    "keywords": "Interface IWindowHandleProvider Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public interface IWindowHandleProvider Methods Name Description GetByWindowHandle(nint) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.IWindowTracker.ActiveProcessId.html": {
    "href": "api/PoeShared.Native.IWindowTracker.ActiveProcessId.html",
    "title": "Property ActiveProcessId | EyeAuras Docs",
    "keywords": "Property ActiveProcessId ActiveProcessId Declaration int ActiveProcessId { get; } Property Value Type Description int"
  },
  "api/PoeShared.Native.IWindowTracker.ActiveWindow.html": {
    "href": "api/PoeShared.Native.IWindowTracker.ActiveWindow.html",
    "title": "Property ActiveWindow | EyeAuras Docs",
    "keywords": "Property ActiveWindow ActiveWindow Declaration IWindowHandle ActiveWindow { get; } Property Value Type Description IWindowHandle"
  },
  "api/PoeShared.Native.IWindowTracker.ActiveWindowHandle.html": {
    "href": "api/PoeShared.Native.IWindowTracker.ActiveWindowHandle.html",
    "title": "Property ActiveWindowHandle | EyeAuras Docs",
    "keywords": "Property ActiveWindowHandle ActiveWindowHandle Declaration nint ActiveWindowHandle { get; } Property Value Type Description nint"
  },
  "api/PoeShared.Native.IWindowTracker.ActiveWindowTitle.html": {
    "href": "api/PoeShared.Native.IWindowTracker.ActiveWindowTitle.html",
    "title": "Property ActiveWindowTitle | EyeAuras Docs",
    "keywords": "Property ActiveWindowTitle ActiveWindowTitle Declaration string ActiveWindowTitle { get; } Property Value Type Description string"
  },
  "api/PoeShared.Native.IWindowTracker.ExecutingProcessId.html": {
    "href": "api/PoeShared.Native.IWindowTracker.ExecutingProcessId.html",
    "title": "Property ExecutingProcessId | EyeAuras Docs",
    "keywords": "Property ExecutingProcessId ExecutingProcessId Declaration int ExecutingProcessId { get; } Property Value Type Description int"
  },
  "api/PoeShared.Native.IWindowTracker.IsActive.html": {
    "href": "api/PoeShared.Native.IWindowTracker.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Declaration bool IsActive { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Native.IWindowTracker.MatchingWindow.html": {
    "href": "api/PoeShared.Native.IWindowTracker.MatchingWindow.html",
    "title": "Property MatchingWindow | EyeAuras Docs",
    "keywords": "Property MatchingWindow MatchingWindow Declaration IWindowHandle MatchingWindow { get; } Property Value Type Description IWindowHandle"
  },
  "api/PoeShared.Native.IWindowTracker.MatchingWindowHandle.html": {
    "href": "api/PoeShared.Native.IWindowTracker.MatchingWindowHandle.html",
    "title": "Property MatchingWindowHandle | EyeAuras Docs",
    "keywords": "Property MatchingWindowHandle MatchingWindowHandle Declaration nint MatchingWindowHandle { get; } Property Value Type Description nint"
  },
  "api/PoeShared.Native.IWindowTracker.Name.html": {
    "href": "api/PoeShared.Native.IWindowTracker.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration string Name { get; } Property Value Type Description string"
  },
  "api/PoeShared.Native.IWindowTracker.html": {
    "href": "api/PoeShared.Native.IWindowTracker.html",
    "title": "Interface IWindowTracker | EyeAuras Docs",
    "keywords": "Interface IWindowTracker Inherited Members INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public interface IWindowTracker : INotifyPropertyChanged Properties Name Description ActiveProcessId ActiveWindow ActiveWindowHandle ActiveWindowTitle ExecutingProcessId IsActive MatchingWindow MatchingWindowHandle Name Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.IWindowTrackerMatcher.IsMatch.html": {
    "href": "api/PoeShared.Native.IWindowTrackerMatcher.IsMatch.html",
    "title": "Method IsMatch | EyeAuras Docs",
    "keywords": "Method IsMatch IsMatch(IWindowHandle) Declaration bool IsMatch(IWindowHandle window) Parameters Type Name Description IWindowHandle window Returns Type Description bool"
  },
  "api/PoeShared.Native.IWindowTrackerMatcher.html": {
    "href": "api/PoeShared.Native.IWindowTrackerMatcher.html",
    "title": "Interface IWindowTrackerMatcher | EyeAuras Docs",
    "keywords": "Interface IWindowTrackerMatcher Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public interface IWindowTrackerMatcher Methods Name Description IsMatch(IWindowHandle) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.Native.SafeGdiHandle.-ctor.html": {
    "href": "api/PoeShared.Native.Native.SafeGdiHandle.-ctor.html",
    "title": "Constructor SafeGdiHandle | EyeAuras Docs",
    "keywords": "Constructor SafeGdiHandle SafeGdiHandle(nint) Declaration [SecurityCritical] public SafeGdiHandle(nint preexistingHandle) Parameters Type Name Description nint preexistingHandle"
  },
  "api/PoeShared.Native.Native.SafeGdiHandle.ReleaseHandle.html": {
    "href": "api/PoeShared.Native.Native.SafeGdiHandle.ReleaseHandle.html",
    "title": "Method ReleaseHandle | EyeAuras Docs",
    "keywords": "Method ReleaseHandle ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description bool Overrides SafeHandle.ReleaseHandle()"
  },
  "api/PoeShared.Native.Native.SafeGdiHandle.html": {
    "href": "api/PoeShared.Native.Native.SafeGdiHandle.html",
    "title": "Class SafeGdiHandle | EyeAuras Docs",
    "keywords": "Class SafeGdiHandle Inheritance object CriticalFinalizerObject SafeHandle SafeHandleZeroOrMinusOneIsInvalid SafeGdiHandle Implements IDisposable Inherited Members SafeHandleZeroOrMinusOneIsInvalid.IsInvalid SafeHandle.handle SafeHandle.SetHandle(nint) SafeHandle.DangerousGetHandle() SafeHandle.Close() SafeHandle.Dispose() SafeHandle.Dispose(bool) SafeHandle.SetHandleAsInvalid() SafeHandle.DangerousAddRef(ref bool) SafeHandle.DangerousRelease() SafeHandle.IsClosed object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Native.Native Assembly: PoeShared.Native.dll Syntax public class SafeGdiHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors Name Description SafeGdiHandle(nint) Methods Name Description ReleaseHandle() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.Native.html": {
    "href": "api/PoeShared.Native.Native.html",
    "title": "Namespace PoeShared.Native.Native | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Native.Native Classes SafeGdiHandle"
  },
  "api/PoeShared.Native.OverlayMode.html": {
    "href": "api/PoeShared.Native.OverlayMode.html",
    "title": "Enum OverlayMode | EyeAuras Docs",
    "keywords": "Enum OverlayMode Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public enum OverlayMode Fields Name Description Layered Transparent Extension Methods ObjectExtensions.AddTo<OverlayMode, TCollection>(OverlayMode, ISourceList<TCollection>) ObjectExtensions.AddTo<OverlayMode, TCollection>(OverlayMode, ICollection<TCollection>) ObjectExtensions.CloneJson<OverlayMode>(OverlayMode) ObjectExtensions.CopyPropertiesTo<OverlayMode, TTarget>(OverlayMode, TTarget) ObjectExtensions.DumpToTextRaw<OverlayMode>(OverlayMode) ObjectExtensions.DumpToText<OverlayMode>(OverlayMode) ObjectExtensions.Dump<OverlayMode>(OverlayMode) ObjectExtensions.GetPropertyAccessor<OverlayMode, TValue>(OverlayMode, Expression<Func<OverlayMode, TValue>>) ObjectExtensions.InsertTo<OverlayMode, TCollection>(OverlayMode, IList<TCollection>, int) ObjectExtensions.ToJson<OverlayMode>(OverlayMode) ObjectExtensions.ToStringSafe<OverlayMode>(OverlayMode) ObjectExtensions.TransferPropertiesTo<OverlayMode, TTarget>(OverlayMode, TTarget, params string[]) XDocumentExtensions.AddTo<OverlayMode>(OverlayMode, XContainer)"
  },
  "api/PoeShared.Native.RegexStringMatcher.-ctor.html": {
    "href": "api/PoeShared.Native.RegexStringMatcher.-ctor.html",
    "title": "Constructor RegexStringMatcher | EyeAuras Docs",
    "keywords": "Constructor RegexStringMatcher RegexStringMatcher() Declaration public RegexStringMatcher()"
  },
  "api/PoeShared.Native.RegexStringMatcher.AddToBlacklist.html": {
    "href": "api/PoeShared.Native.RegexStringMatcher.AddToBlacklist.html",
    "title": "Method AddToBlacklist | EyeAuras Docs",
    "keywords": "Method AddToBlacklist AddToBlacklist(string) Declaration public IRegexStringMatcher AddToBlacklist(string regexValue) Parameters Type Name Description string regexValue Returns Type Description IRegexStringMatcher Implements IRegexStringMatcher.AddToBlacklist(string)"
  },
  "api/PoeShared.Native.RegexStringMatcher.AddToWhitelist.html": {
    "href": "api/PoeShared.Native.RegexStringMatcher.AddToWhitelist.html",
    "title": "Method AddToWhitelist | EyeAuras Docs",
    "keywords": "Method AddToWhitelist AddToWhitelist(string) Declaration public IRegexStringMatcher AddToWhitelist(string regexValue) Parameters Type Name Description string regexValue Returns Type Description IRegexStringMatcher Implements IRegexStringMatcher.AddToWhitelist(string)"
  },
  "api/PoeShared.Native.RegexStringMatcher.ClearWhitelist.html": {
    "href": "api/PoeShared.Native.RegexStringMatcher.ClearWhitelist.html",
    "title": "Method ClearWhitelist | EyeAuras Docs",
    "keywords": "Method ClearWhitelist ClearWhitelist() Declaration public IRegexStringMatcher ClearWhitelist() Returns Type Description IRegexStringMatcher Implements IRegexStringMatcher.ClearWhitelist()"
  },
  "api/PoeShared.Native.RegexStringMatcher.IsMatch.html": {
    "href": "api/PoeShared.Native.RegexStringMatcher.IsMatch.html",
    "title": "Method IsMatch | EyeAuras Docs",
    "keywords": "Method IsMatch IsMatch(string) Declaration public bool IsMatch(string value) Parameters Type Name Description string value Returns Type Description bool Implements IStringMatcher.IsMatch(string)"
  },
  "api/PoeShared.Native.RegexStringMatcher.WithLazyWhitelistItem.html": {
    "href": "api/PoeShared.Native.RegexStringMatcher.WithLazyWhitelistItem.html",
    "title": "Method WithLazyWhitelistItem | EyeAuras Docs",
    "keywords": "Method WithLazyWhitelistItem WithLazyWhitelistItem(Func<string>) Declaration public RegexStringMatcher WithLazyWhitelistItem(Func<string> regexValue) Parameters Type Name Description Func<string> regexValue Returns Type Description RegexStringMatcher"
  },
  "api/PoeShared.Native.RegexStringMatcher.html": {
    "href": "api/PoeShared.Native.RegexStringMatcher.html",
    "title": "Class RegexStringMatcher | EyeAuras Docs",
    "keywords": "Class RegexStringMatcher Inheritance object RegexStringMatcher Implements IRegexStringMatcher IStringMatcher Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public sealed class RegexStringMatcher : IRegexStringMatcher, IStringMatcher Constructors Name Description RegexStringMatcher() Methods Name Description AddToBlacklist(string) AddToWhitelist(string) ClearWhitelist() IsMatch(string) WithLazyWhitelistItem(Func<string>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.ResourceReader.ReadResourceAsString.html": {
    "href": "api/PoeShared.Native.ResourceReader.ReadResourceAsString.html",
    "title": "Method ReadResourceAsString | EyeAuras Docs",
    "keywords": "Method ReadResourceAsString ReadResourceAsString(string) Declaration public static string ReadResourceAsString(string path) Parameters Type Name Description string path Returns Type Description string ReadResourceAsString(Assembly, string) Declaration public static string ReadResourceAsString(Assembly assembly, string path) Parameters Type Name Description Assembly assembly string path Returns Type Description string"
  },
  "api/PoeShared.Native.ResourceReader.TryToLoadResourceByName.html": {
    "href": "api/PoeShared.Native.ResourceReader.TryToLoadResourceByName.html",
    "title": "Method TryToLoadResourceByName | EyeAuras Docs",
    "keywords": "Method TryToLoadResourceByName TryToLoadResourceByName(Assembly, string, out byte[]) Declaration public static bool TryToLoadResourceByName(Assembly assembly, string name, out byte[] resourceData) Parameters Type Name Description Assembly assembly string name byte[] resourceData Returns Type Description bool"
  },
  "api/PoeShared.Native.ResourceReader.TryToLoadResourcesByName.html": {
    "href": "api/PoeShared.Native.ResourceReader.TryToLoadResourcesByName.html",
    "title": "Method TryToLoadResourcesByName | EyeAuras Docs",
    "keywords": "Method TryToLoadResourcesByName TryToLoadResourcesByName(Assembly, Regex) Declaration public static IEnumerable<byte[]> TryToLoadResourcesByName(Assembly assembly, Regex pattern) Parameters Type Name Description Assembly assembly Regex pattern Returns Type Description IEnumerable<byte[]>"
  },
  "api/PoeShared.Native.ResourceReader.html": {
    "href": "api/PoeShared.Native.ResourceReader.html",
    "title": "Class ResourceReader | EyeAuras Docs",
    "keywords": "Class ResourceReader Inheritance object ResourceReader Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public static class ResourceReader Methods Name Description ReadResourceAsString(Assembly, string) ReadResourceAsString(string) TryToLoadResourceByName(Assembly, string, out byte[]) TryToLoadResourcesByName(Assembly, Regex)"
  },
  "api/PoeShared.Native.SafeGCHandle.-ctor.html": {
    "href": "api/PoeShared.Native.SafeGCHandle.-ctor.html",
    "title": "Constructor SafeGCHandle | EyeAuras Docs",
    "keywords": "Constructor SafeGCHandle SafeGCHandle(GCHandle) Declaration public SafeGCHandle(GCHandle gcHandle) Parameters Type Name Description GCHandle gcHandle"
  },
  "api/PoeShared.Native.SafeGCHandle.Dispose.html": {
    "href": "api/PoeShared.Native.SafeGCHandle.Dispose.html",
    "title": "Method Dispose | EyeAuras Docs",
    "keywords": "Method Dispose Dispose() Declaration public void Dispose() Implements IDisposable.Dispose()"
  },
  "api/PoeShared.Native.SafeGCHandle.ToStructure.html": {
    "href": "api/PoeShared.Native.SafeGCHandle.ToStructure.html",
    "title": "Method ToStructure | EyeAuras Docs",
    "keywords": "Method ToStructure ToStructure<T>() Declaration public T ToStructure<T>() Returns Type Description T Type Parameters Name Description T"
  },
  "api/PoeShared.Native.SafeGCHandle.html": {
    "href": "api/PoeShared.Native.SafeGCHandle.html",
    "title": "Class SafeGCHandle | EyeAuras Docs",
    "keywords": "Class SafeGCHandle Inheritance object SafeGCHandle Implements IDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public sealed class SafeGCHandle : IDisposable Constructors Name Description SafeGCHandle(GCHandle) Methods Name Description Dispose() ToStructure<T>() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.Scaffolding.BitmapExtensions.ToStream.html": {
    "href": "api/PoeShared.Native.Scaffolding.BitmapExtensions.ToStream.html",
    "title": "Method ToStream | EyeAuras Docs",
    "keywords": "Method ToStream ToStream(Bitmap, ImageFormat) Declaration public static Stream ToStream(this Bitmap bitmap, ImageFormat imageFormat) Parameters Type Name Description Bitmap bitmap ImageFormat imageFormat Returns Type Description Stream"
  },
  "api/PoeShared.Native.Scaffolding.BitmapExtensions.html": {
    "href": "api/PoeShared.Native.Scaffolding.BitmapExtensions.html",
    "title": "Class BitmapExtensions | EyeAuras Docs",
    "keywords": "Class BitmapExtensions Inheritance object BitmapExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Native.Scaffolding Assembly: PoeShared.Native.dll Syntax public static class BitmapExtensions Methods Name Description ToStream(Bitmap, ImageFormat)"
  },
  "api/PoeShared.Native.Scaffolding.UnityContainerExtensions.RegisterWindowTracker.html": {
    "href": "api/PoeShared.Native.Scaffolding.UnityContainerExtensions.RegisterWindowTracker.html",
    "title": "Method RegisterWindowTracker | EyeAuras Docs",
    "keywords": "Method RegisterWindowTracker RegisterWindowTracker<T>(IUnityContainer, string) Declaration public static IUnityContainer RegisterWindowTracker<T>(this IUnityContainer instance, string dependencyName) where T : IWindowTrackerMatcher Parameters Type Name Description IUnityContainer instance string dependencyName Returns Type Description IUnityContainer Type Parameters Name Description T"
  },
  "api/PoeShared.Native.Scaffolding.UnityContainerExtensions.html": {
    "href": "api/PoeShared.Native.Scaffolding.UnityContainerExtensions.html",
    "title": "Class UnityContainerExtensions | EyeAuras Docs",
    "keywords": "Class UnityContainerExtensions Inheritance object UnityContainerExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Native.Scaffolding Assembly: PoeShared.Native.dll Syntax public static class UnityContainerExtensions Methods Name Description RegisterWindowTracker<T>(IUnityContainer, string)"
  },
  "api/PoeShared.Native.Scaffolding.html": {
    "href": "api/PoeShared.Native.Scaffolding.html",
    "title": "Namespace PoeShared.Native.Scaffolding | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Native.Scaffolding Classes BitmapExtensions UnityContainerExtensions"
  },
  "api/PoeShared.Native.UnsafeNative.-ctor.html": {
    "href": "api/PoeShared.Native.UnsafeNative.-ctor.html",
    "title": "Constructor UnsafeNative | EyeAuras Docs",
    "keywords": "Constructor UnsafeNative UnsafeNative() Declaration public UnsafeNative()"
  },
  "api/PoeShared.Native.UnsafeNative.ActivateKeyboardLayout.html": {
    "href": "api/PoeShared.Native.UnsafeNative.ActivateKeyboardLayout.html",
    "title": "Method ActivateKeyboardLayout | EyeAuras Docs",
    "keywords": "Method ActivateKeyboardLayout ActivateKeyboardLayout(nint, KeyboardLayoutFlags) Declaration public static extern nint ActivateKeyboardLayout(nint hkl, UnsafeNative.KeyboardLayoutFlags flags) Parameters Type Name Description nint hkl UnsafeNative.KeyboardLayoutFlags flags Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.ActivateWindow.html": {
    "href": "api/PoeShared.Native.UnsafeNative.ActivateWindow.html",
    "title": "Method ActivateWindow | EyeAuras Docs",
    "keywords": "Method ActivateWindow ActivateWindow(nint) Declaration public static void ActivateWindow(nint window) Parameters Type Name Description nint window ActivateWindow(IWindowHandle) Declaration public static void ActivateWindow(IWindowHandle window) Parameters Type Name Description IWindowHandle window ActivateWindow(IWindowHandle, TimeSpan, IFluentLog) Declaration public static void ActivateWindow(IWindowHandle window, TimeSpan timeout, IFluentLog log) Parameters Type Name Description IWindowHandle window TimeSpan timeout IFluentLog log ActivateWindow(IWindowHandle, TimeSpan) Declaration public static void ActivateWindow(IWindowHandle window, TimeSpan timeout) Parameters Type Name Description IWindowHandle window TimeSpan timeout"
  },
  "api/PoeShared.Native.UnsafeNative.AllocationType.html": {
    "href": "api/PoeShared.Native.UnsafeNative.AllocationType.html",
    "title": "Enum UnsafeNative.AllocationType | EyeAuras Docs",
    "keywords": "Enum UnsafeNative.AllocationType Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax [Flags] public enum UnsafeNative.AllocationType : uint Fields Name Description COMMIT LARGE_PAGES PHYSICAL RESERVE RESET TOP_DOWN WRITE_WATCH Extension Methods ObjectExtensions.AddTo<UnsafeNative.AllocationType, TCollection>(UnsafeNative.AllocationType, ISourceList<TCollection>) ObjectExtensions.AddTo<UnsafeNative.AllocationType, TCollection>(UnsafeNative.AllocationType, ICollection<TCollection>) ObjectExtensions.CloneJson<UnsafeNative.AllocationType>(UnsafeNative.AllocationType) ObjectExtensions.CopyPropertiesTo<UnsafeNative.AllocationType, TTarget>(UnsafeNative.AllocationType, TTarget) ObjectExtensions.DumpToTextRaw<UnsafeNative.AllocationType>(UnsafeNative.AllocationType) ObjectExtensions.DumpToText<UnsafeNative.AllocationType>(UnsafeNative.AllocationType) ObjectExtensions.Dump<UnsafeNative.AllocationType>(UnsafeNative.AllocationType) ObjectExtensions.GetPropertyAccessor<UnsafeNative.AllocationType, TValue>(UnsafeNative.AllocationType, Expression<Func<UnsafeNative.AllocationType, TValue>>) ObjectExtensions.InsertTo<UnsafeNative.AllocationType, TCollection>(UnsafeNative.AllocationType, IList<TCollection>, int) ObjectExtensions.ToJson<UnsafeNative.AllocationType>(UnsafeNative.AllocationType) ObjectExtensions.ToStringSafe<UnsafeNative.AllocationType>(UnsafeNative.AllocationType) ObjectExtensions.TransferPropertiesTo<UnsafeNative.AllocationType, TTarget>(UnsafeNative.AllocationType, TTarget, params string[]) XDocumentExtensions.AddTo<UnsafeNative.AllocationType>(UnsafeNative.AllocationType, XContainer)"
  },
  "api/PoeShared.Native.UnsafeNative.AllowSetForegroundWindow.html": {
    "href": "api/PoeShared.Native.UnsafeNative.AllowSetForegroundWindow.html",
    "title": "Method AllowSetForegroundWindow | EyeAuras Docs",
    "keywords": "Method AllowSetForegroundWindow AllowSetForegroundWindow() Declaration public static void AllowSetForegroundWindow()"
  },
  "api/PoeShared.Native.UnsafeNative.ClassLong.html": {
    "href": "api/PoeShared.Native.UnsafeNative.ClassLong.html",
    "title": "Enum UnsafeNative.ClassLong | EyeAuras Docs",
    "keywords": "Enum UnsafeNative.ClassLong Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public enum UnsafeNative.ClassLong Fields Name Description Icon IconSmall Extension Methods ObjectExtensions.AddTo<UnsafeNative.ClassLong, TCollection>(UnsafeNative.ClassLong, ISourceList<TCollection>) ObjectExtensions.AddTo<UnsafeNative.ClassLong, TCollection>(UnsafeNative.ClassLong, ICollection<TCollection>) ObjectExtensions.CloneJson<UnsafeNative.ClassLong>(UnsafeNative.ClassLong) ObjectExtensions.CopyPropertiesTo<UnsafeNative.ClassLong, TTarget>(UnsafeNative.ClassLong, TTarget) ObjectExtensions.DumpToTextRaw<UnsafeNative.ClassLong>(UnsafeNative.ClassLong) ObjectExtensions.DumpToText<UnsafeNative.ClassLong>(UnsafeNative.ClassLong) ObjectExtensions.Dump<UnsafeNative.ClassLong>(UnsafeNative.ClassLong) ObjectExtensions.GetPropertyAccessor<UnsafeNative.ClassLong, TValue>(UnsafeNative.ClassLong, Expression<Func<UnsafeNative.ClassLong, TValue>>) ObjectExtensions.InsertTo<UnsafeNative.ClassLong, TCollection>(UnsafeNative.ClassLong, IList<TCollection>, int) ObjectExtensions.ToJson<UnsafeNative.ClassLong>(UnsafeNative.ClassLong) ObjectExtensions.ToStringSafe<UnsafeNative.ClassLong>(UnsafeNative.ClassLong) ObjectExtensions.TransferPropertiesTo<UnsafeNative.ClassLong, TTarget>(UnsafeNative.ClassLong, TTarget, params string[]) XDocumentExtensions.AddTo<UnsafeNative.ClassLong>(UnsafeNative.ClassLong, XContainer)"
  },
  "api/PoeShared.Native.UnsafeNative.CommandLineToArgvW.html": {
    "href": "api/PoeShared.Native.UnsafeNative.CommandLineToArgvW.html",
    "title": "Method CommandLineToArgvW | EyeAuras Docs",
    "keywords": "Method CommandLineToArgvW CommandLineToArgvW(string) Declaration public static string[] CommandLineToArgvW(string cmdLine) Parameters Type Name Description string cmdLine Returns Type Description string[]"
  },
  "api/PoeShared.Native.UnsafeNative.CreateHardLink.html": {
    "href": "api/PoeShared.Native.UnsafeNative.CreateHardLink.html",
    "title": "Method CreateHardLink | EyeAuras Docs",
    "keywords": "Method CreateHardLink CreateHardLink(string, string) Declaration public static void CreateHardLink(string lpFileName, string lpExistingFileName) Parameters Type Name Description string lpFileName string lpExistingFileName"
  },
  "api/PoeShared.Native.UnsafeNative.DwmGetWindowAttribute.html": {
    "href": "api/PoeShared.Native.UnsafeNative.DwmGetWindowAttribute.html",
    "title": "Method DwmGetWindowAttribute | EyeAuras Docs",
    "keywords": "Method DwmGetWindowAttribute DwmGetWindowAttribute(nint, DWMWINDOWATTRIBUTE) Declaration public static bool DwmGetWindowAttribute(nint hwnd, DwmApi.DWMWINDOWATTRIBUTE flags) Parameters Type Name Description nint hwnd DWMWINDOWATTRIBUTE flags Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.DwmGetWindowFrameBounds.html": {
    "href": "api/PoeShared.Native.UnsafeNative.DwmGetWindowFrameBounds.html",
    "title": "Method DwmGetWindowFrameBounds | EyeAuras Docs",
    "keywords": "Method DwmGetWindowFrameBounds DwmGetWindowFrameBounds(nint) Declaration public static Rectangle DwmGetWindowFrameBounds(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description Rectangle"
  },
  "api/PoeShared.Native.UnsafeNative.DwmGetWindowFrameBoundsWithinMonitor.html": {
    "href": "api/PoeShared.Native.UnsafeNative.DwmGetWindowFrameBoundsWithinMonitor.html",
    "title": "Method DwmGetWindowFrameBoundsWithinMonitor | EyeAuras Docs",
    "keywords": "Method DwmGetWindowFrameBoundsWithinMonitor DwmGetWindowFrameBoundsWithinMonitor(nint) Declaration public static Rectangle DwmGetWindowFrameBoundsWithinMonitor(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description Rectangle"
  },
  "api/PoeShared.Native.UnsafeNative.DwmIsCompositionEnabled.html": {
    "href": "api/PoeShared.Native.UnsafeNative.DwmIsCompositionEnabled.html",
    "title": "Method DwmIsCompositionEnabled | EyeAuras Docs",
    "keywords": "Method DwmIsCompositionEnabled DwmIsCompositionEnabled() Declaration public static extern bool DwmIsCompositionEnabled() Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.EnableWindow.html": {
    "href": "api/PoeShared.Native.UnsafeNative.EnableWindow.html",
    "title": "Method EnableWindow | EyeAuras Docs",
    "keywords": "Method EnableWindow EnableWindow(nint, bool) Enables or disables mouse and keyboard input to the specified window or control. When input is disabled, the window does not receive input such as mouse clicks and key presses. When input is enabled, the window receives all input. Declaration public static extern bool EnableWindow(nint hWnd, bool isEnabled) Parameters Type Name Description nint hWnd A handle to the window to be enabled or disabled. bool isEnabled If the window was previously disabled, the return value is nonzero. If the window was not previously disabled, the return value is zero. Returns Type Description bool If the window was previously disabled, returns true. If the window was not previously disabled, returns false"
  },
  "api/PoeShared.Native.UnsafeNative.FreeType.html": {
    "href": "api/PoeShared.Native.UnsafeNative.FreeType.html",
    "title": "Enum UnsafeNative.FreeType | EyeAuras Docs",
    "keywords": "Enum UnsafeNative.FreeType Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax [Flags] public enum UnsafeNative.FreeType Fields Name Description DECOMMIT RELEASE Extension Methods ObjectExtensions.AddTo<UnsafeNative.FreeType, TCollection>(UnsafeNative.FreeType, ISourceList<TCollection>) ObjectExtensions.AddTo<UnsafeNative.FreeType, TCollection>(UnsafeNative.FreeType, ICollection<TCollection>) ObjectExtensions.CloneJson<UnsafeNative.FreeType>(UnsafeNative.FreeType) ObjectExtensions.CopyPropertiesTo<UnsafeNative.FreeType, TTarget>(UnsafeNative.FreeType, TTarget) ObjectExtensions.DumpToTextRaw<UnsafeNative.FreeType>(UnsafeNative.FreeType) ObjectExtensions.DumpToText<UnsafeNative.FreeType>(UnsafeNative.FreeType) ObjectExtensions.Dump<UnsafeNative.FreeType>(UnsafeNative.FreeType) ObjectExtensions.GetPropertyAccessor<UnsafeNative.FreeType, TValue>(UnsafeNative.FreeType, Expression<Func<UnsafeNative.FreeType, TValue>>) ObjectExtensions.InsertTo<UnsafeNative.FreeType, TCollection>(UnsafeNative.FreeType, IList<TCollection>, int) ObjectExtensions.ToJson<UnsafeNative.FreeType>(UnsafeNative.FreeType) ObjectExtensions.ToStringSafe<UnsafeNative.FreeType>(UnsafeNative.FreeType) ObjectExtensions.TransferPropertiesTo<UnsafeNative.FreeType, TTarget>(UnsafeNative.FreeType, TTarget, params string[]) XDocumentExtensions.AddTo<UnsafeNative.FreeType>(UnsafeNative.FreeType, XContainer)"
  },
  "api/PoeShared.Native.UnsafeNative.GetActiveKeyboardLayoutName.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetActiveKeyboardLayoutName.html",
    "title": "Method GetActiveKeyboardLayoutName | EyeAuras Docs",
    "keywords": "Method GetActiveKeyboardLayoutName GetActiveKeyboardLayoutName() Declaration public static string GetActiveKeyboardLayoutName() Returns Type Description string"
  },
  "api/PoeShared.Native.UnsafeNative.GetClassLong.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetClassLong.html",
    "title": "Method GetClassLong | EyeAuras Docs",
    "keywords": "Method GetClassLong GetClassLong(nint, ClassLong) Declaration public static nint GetClassLong(nint hWnd, UnsafeNative.ClassLong i) Parameters Type Name Description nint hWnd UnsafeNative.ClassLong i Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.GetClientRect.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetClientRect.html",
    "title": "Method GetClientRect | EyeAuras Docs",
    "keywords": "Method GetClientRect GetClientRect(nint) Declaration public static Rectangle GetClientRect(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description Rectangle"
  },
  "api/PoeShared.Native.UnsafeNative.GetCommandLine.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetCommandLine.html",
    "title": "Method GetCommandLine | EyeAuras Docs",
    "keywords": "Method GetCommandLine GetCommandLine(int) Reads command line of a target process This is refactored version of code from https://github.com/VbScrub/ProcessCommandLineDemo Declaration public static string GetCommandLine(int processId) Parameters Type Name Description int processId Returns Type Description string Exceptions Type Condition InvalidOperationException PInvoke.Win32Exception"
  },
  "api/PoeShared.Native.UnsafeNative.GetCpuIdDelegate.-ctor.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetCpuIdDelegate.-ctor.html",
    "title": "Constructor GetCpuIdDelegate | EyeAuras Docs",
    "keywords": "Constructor GetCpuIdDelegate GetCpuIdDelegate(object, nint) Declaration public GetCpuIdDelegate(object @object, nint method) Parameters Type Name Description object object nint method"
  },
  "api/PoeShared.Native.UnsafeNative.GetCpuIdDelegate.BeginInvoke.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetCpuIdDelegate.BeginInvoke.html",
    "title": "Method BeginInvoke | EyeAuras Docs",
    "keywords": "Method BeginInvoke BeginInvoke(uint, byte[], AsyncCallback, object) Declaration public virtual IAsyncResult BeginInvoke(uint level, byte[] buffer, AsyncCallback callback, object @object) Parameters Type Name Description uint level byte[] buffer AsyncCallback callback object object Returns Type Description IAsyncResult"
  },
  "api/PoeShared.Native.UnsafeNative.GetCpuIdDelegate.EndInvoke.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetCpuIdDelegate.EndInvoke.html",
    "title": "Method EndInvoke | EyeAuras Docs",
    "keywords": "Method EndInvoke EndInvoke(IAsyncResult) Declaration public virtual int EndInvoke(IAsyncResult result) Parameters Type Name Description IAsyncResult result Returns Type Description int"
  },
  "api/PoeShared.Native.UnsafeNative.GetCpuIdDelegate.Invoke.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetCpuIdDelegate.Invoke.html",
    "title": "Method Invoke | EyeAuras Docs",
    "keywords": "Method Invoke Invoke(uint, byte[]) Declaration public virtual int Invoke(uint level, byte[] buffer) Parameters Type Name Description uint level byte[] buffer Returns Type Description int"
  },
  "api/PoeShared.Native.UnsafeNative.GetCpuIdDelegate.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetCpuIdDelegate.html",
    "title": "Delegate UnsafeNative.GetCpuIdDelegate | EyeAuras Docs",
    "keywords": "Delegate UnsafeNative.GetCpuIdDelegate After first call with 0, max level is returned in EAX Level = 0..EAX, Buffer = 16+ bytes Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public delegate int UnsafeNative.GetCpuIdDelegate(uint level, byte[] buffer) Parameters Type Name Description uint level byte[] buffer Returns Type Description int Constructors Name Description GetCpuIdDelegate(object, nint) Methods Name Description BeginInvoke(uint, byte[], AsyncCallback, object) EndInvoke(IAsyncResult) Invoke(uint, byte[]) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.UnsafeNative.GetCurrentModifierKeys.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetCurrentModifierKeys.html",
    "title": "Method GetCurrentModifierKeys | EyeAuras Docs",
    "keywords": "Method GetCurrentModifierKeys GetCurrentModifierKeys() Declaration public static ModifierKeys GetCurrentModifierKeys() Returns Type Description ModifierKeys"
  },
  "api/PoeShared.Native.UnsafeNative.GetCurrentObject.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetCurrentObject.html",
    "title": "Method GetCurrentObject | EyeAuras Docs",
    "keywords": "Method GetCurrentObject GetCurrentObject(nint, ushort) Declaration public static extern nint GetCurrentObject(nint hdc, ushort objectType) Parameters Type Name Description nint hdc ushort objectType Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.GetDesktopDpi.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetDesktopDpi.html",
    "title": "Method GetDesktopDpi | EyeAuras Docs",
    "keywords": "Method GetDesktopDpi GetDesktopDpi() Declaration public static PointF GetDesktopDpi() Returns Type Description PointF GetDesktopDpi(nint) Declaration public static PointF GetDesktopDpi(nint hDesktop) Parameters Type Name Description nint hDesktop Returns Type Description PointF"
  },
  "api/PoeShared.Native.UnsafeNative.GetDesktopDpiFromPoint.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetDesktopDpiFromPoint.html",
    "title": "Method GetDesktopDpiFromPoint | EyeAuras Docs",
    "keywords": "Method GetDesktopDpiFromPoint GetDesktopDpiFromPoint(Point) Declaration public static PointF GetDesktopDpiFromPoint(Point location) Parameters Type Name Description Point location Returns Type Description PointF"
  },
  "api/PoeShared.Native.UnsafeNative.GetDesktopDpiFromWindow.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetDesktopDpiFromWindow.html",
    "title": "Method GetDesktopDpiFromWindow | EyeAuras Docs",
    "keywords": "Method GetDesktopDpiFromWindow GetDesktopDpiFromWindow(Window) Declaration public static PointF GetDesktopDpiFromWindow(Window window) Parameters Type Name Description Window window Returns Type Description PointF"
  },
  "api/PoeShared.Native.UnsafeNative.GetDesktopImageViaCopyFromScreen.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetDesktopImageViaCopyFromScreen.html",
    "title": "Method GetDesktopImageViaCopyFromScreen | EyeAuras Docs",
    "keywords": "Method GetDesktopImageViaCopyFromScreen GetDesktopImageViaCopyFromScreen(Rectangle) Declaration public static Bitmap GetDesktopImageViaCopyFromScreen(Rectangle region) Parameters Type Name Description Rectangle region Returns Type Description Bitmap"
  },
  "api/PoeShared.Native.UnsafeNative.GetDesktopMonitorInfo.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetDesktopMonitorInfo.html",
    "title": "Method GetDesktopMonitorInfo | EyeAuras Docs",
    "keywords": "Method GetDesktopMonitorInfo GetDesktopMonitorInfo() Declaration public static string GetDesktopMonitorInfo() Returns Type Description string"
  },
  "api/PoeShared.Native.UnsafeNative.GetDesktopWindow.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetDesktopWindow.html",
    "title": "Method GetDesktopWindow | EyeAuras Docs",
    "keywords": "Method GetDesktopWindow GetDesktopWindow() Declaration public static nint GetDesktopWindow() Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.GetDisplayScaleFactor.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetDisplayScaleFactor.html",
    "title": "Method GetDisplayScaleFactor | EyeAuras Docs",
    "keywords": "Method GetDisplayScaleFactor GetDisplayScaleFactor(nint) Declaration public static float GetDisplayScaleFactor(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description float"
  },
  "api/PoeShared.Native.UnsafeNative.GetForegroundWindow.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetForegroundWindow.html",
    "title": "Method GetForegroundWindow | EyeAuras Docs",
    "keywords": "Method GetForegroundWindow GetForegroundWindow() Declaration public static nint GetForegroundWindow() Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.GetKeyNameText.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetKeyNameText.html",
    "title": "Method GetKeyNameText | EyeAuras Docs",
    "keywords": "Method GetKeyNameText GetKeyNameText(int, StringBuilder, int) Declaration public static extern int GetKeyNameText(int lParam, StringBuilder str, int size) Parameters Type Name Description int lParam StringBuilder str int size Returns Type Description int"
  },
  "api/PoeShared.Native.UnsafeNative.GetKeyboardLayout.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetKeyboardLayout.html",
    "title": "Method GetKeyboardLayout | EyeAuras Docs",
    "keywords": "Method GetKeyboardLayout GetKeyboardLayout(uint) Declaration public static extern nint GetKeyboardLayout(uint idThread) Parameters Type Name Description uint idThread Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.GetKeyboardLayoutList.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetKeyboardLayoutList.html",
    "title": "Method GetKeyboardLayoutList | EyeAuras Docs",
    "keywords": "Method GetKeyboardLayoutList GetKeyboardLayoutList() Retrieves the input locale identifiers (formerly called keyboard layout handles) corresponding to the current set of input locales in the system. Declaration public static uint[] GetKeyboardLayoutList() Returns Type Description uint[]"
  },
  "api/PoeShared.Native.UnsafeNative.GetKeyboardLayoutName.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetKeyboardLayoutName.html",
    "title": "Method GetKeyboardLayoutName | EyeAuras Docs",
    "keywords": "Method GetKeyboardLayoutName GetKeyboardLayoutName(nint) Declaration public static string GetKeyboardLayoutName(nint hkl) Parameters Type Name Description nint hkl Returns Type Description string"
  },
  "api/PoeShared.Native.UnsafeNative.GetMenu.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetMenu.html",
    "title": "Method GetMenu | EyeAuras Docs",
    "keywords": "Method GetMenu GetMenu(nint) Declaration public static extern nint GetMenu(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.GetMonitorBounds.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetMonitorBounds.html",
    "title": "Method GetMonitorBounds | EyeAuras Docs",
    "keywords": "Method GetMonitorBounds GetMonitorBounds(Window) Declaration public static Rect GetMonitorBounds(Window window) Parameters Type Name Description Window window Returns Type Description Rect GetMonitorBounds(Rectangle) Declaration public static Rectangle GetMonitorBounds(Rectangle rect) Parameters Type Name Description Rectangle rect Returns Type Description Rectangle GetMonitorBounds(nint) Declaration public static Rect GetMonitorBounds(nint windowHandle) Parameters Type Name Description nint windowHandle Returns Type Description Rect"
  },
  "api/PoeShared.Native.UnsafeNative.GetMonitorFromRect.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetMonitorFromRect.html",
    "title": "Method GetMonitorFromRect | EyeAuras Docs",
    "keywords": "Method GetMonitorFromRect GetMonitorFromRect(Rectangle) Declaration public nint GetMonitorFromRect(Rectangle rect) Parameters Type Name Description Rectangle rect Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.GetMonitorInfo.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetMonitorInfo.html",
    "title": "Method GetMonitorInfo | EyeAuras Docs",
    "keywords": "Method GetMonitorInfo GetMonitorInfo(Window) Declaration public static string GetMonitorInfo(Window window) Parameters Type Name Description Window window Returns Type Description string GetMonitorInfo(nint) Declaration public static string GetMonitorInfo(nint windowHandle) Parameters Type Name Description nint windowHandle Returns Type Description string"
  },
  "api/PoeShared.Native.UnsafeNative.GetParent.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetParent.html",
    "title": "Method GetParent | EyeAuras Docs",
    "keywords": "Method GetParent GetParent(nint) Declaration public static extern nint GetParent(nint hWnd) Parameters Type Name Description nint hWnd Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.GetParentProcessId.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetParentProcessId.html",
    "title": "Method GetParentProcessId | EyeAuras Docs",
    "keywords": "Method GetParentProcessId GetParentProcessId(int) Declaration public static int GetParentProcessId(int processId) Parameters Type Name Description int processId Returns Type Description int"
  },
  "api/PoeShared.Native.UnsafeNative.GetPositionAtTheCenter.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetPositionAtTheCenter.html",
    "title": "Method GetPositionAtTheCenter | EyeAuras Docs",
    "keywords": "Method GetPositionAtTheCenter GetPositionAtTheCenter(Rect, Size) Declaration public static Point GetPositionAtTheCenter(Rect monitorBounds, Size windowSize) Parameters Type Name Description Rect monitorBounds Size windowSize Returns Type Description Point GetPositionAtTheCenter(Window) Declaration public static Point GetPositionAtTheCenter(Window window) Parameters Type Name Description Window window Returns Type Description Point"
  },
  "api/PoeShared.Native.UnsafeNative.GetProcAddressOrThrow.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetProcAddressOrThrow.html",
    "title": "Method GetProcAddressOrThrow | EyeAuras Docs",
    "keywords": "Method GetProcAddressOrThrow GetProcAddressOrThrow<T>(SafeLibraryHandle, string) Declaration public static T GetProcAddressOrThrow<T>(Kernel32.SafeLibraryHandle dllHandle, string procName) where T : class Parameters Type Name Description SafeLibraryHandle dllHandle string procName Returns Type Description T Type Parameters Name Description T"
  },
  "api/PoeShared.Native.UnsafeNative.GetProcessIdByWindowHandle.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetProcessIdByWindowHandle.html",
    "title": "Method GetProcessIdByWindowHandle | EyeAuras Docs",
    "keywords": "Method GetProcessIdByWindowHandle GetProcessIdByWindowHandle(nint) Declaration public static int GetProcessIdByWindowHandle(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description int"
  },
  "api/PoeShared.Native.UnsafeNative.GetProcessTimes.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetProcessTimes.html",
    "title": "Method GetProcessTimes | EyeAuras Docs",
    "keywords": "Method GetProcessTimes GetProcessTimes(int, out DateTime, out DateTime, out DateTime, out DateTime) Declaration public static void GetProcessTimes(int processId, out DateTime creationTime, out DateTime exitTime, out DateTime kernelTime, out DateTime userTime) Parameters Type Name Description int processId DateTime creationTime DateTime exitTime DateTime kernelTime DateTime userTime"
  },
  "api/PoeShared.Native.UnsafeNative.GetScreen.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetScreen.html",
    "title": "Method GetScreen | EyeAuras Docs",
    "keywords": "Method GetScreen GetScreen(Window) Declaration public Screen GetScreen(Window window) Parameters Type Name Description Window window Returns Type Description Screen"
  },
  "api/PoeShared.Native.UnsafeNative.GetSystemDpi.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetSystemDpi.html",
    "title": "Method GetSystemDpi | EyeAuras Docs",
    "keywords": "Method GetSystemDpi GetSystemDpi() Declaration public static PointF GetSystemDpi() Returns Type Description PointF"
  },
  "api/PoeShared.Native.UnsafeNative.GetTopmostHwnd.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetTopmostHwnd.html",
    "title": "Method GetTopmostHwnd | EyeAuras Docs",
    "keywords": "Method GetTopmostHwnd GetTopmostHwnd(nint[]) Declaration public static nint GetTopmostHwnd(nint[] handles) Parameters Type Name Description nint[] handles Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.GetWindowBorders.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetWindowBorders.html",
    "title": "Method GetWindowBorders | EyeAuras Docs",
    "keywords": "Method GetWindowBorders GetWindowBorders(nint) Declaration public static Rectangle GetWindowBorders(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description Rectangle"
  },
  "api/PoeShared.Native.UnsafeNative.GetWindowClass.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetWindowClass.html",
    "title": "Method GetWindowClass | EyeAuras Docs",
    "keywords": "Method GetWindowClass GetWindowClass(nint) Declaration public static string GetWindowClass(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description string"
  },
  "api/PoeShared.Native.UnsafeNative.GetWindowImageViaCopyFromScreen.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetWindowImageViaCopyFromScreen.html",
    "title": "Method GetWindowImageViaCopyFromScreen | EyeAuras Docs",
    "keywords": "Method GetWindowImageViaCopyFromScreen GetWindowImageViaCopyFromScreen(nint, Rectangle) Declaration public static Bitmap GetWindowImageViaCopyFromScreen(nint hwnd, Rectangle region) Parameters Type Name Description nint hwnd Rectangle region Returns Type Description Bitmap"
  },
  "api/PoeShared.Native.UnsafeNative.GetWindowImageViaDeviceContext.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetWindowImageViaDeviceContext.html",
    "title": "Method GetWindowImageViaDeviceContext | EyeAuras Docs",
    "keywords": "Method GetWindowImageViaDeviceContext GetWindowImageViaDeviceContext(nint) Declaration public static Bitmap GetWindowImageViaDeviceContext(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description Bitmap"
  },
  "api/PoeShared.Native.UnsafeNative.GetWindowImageViaPrintWindow.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetWindowImageViaPrintWindow.html",
    "title": "Method GetWindowImageViaPrintWindow | EyeAuras Docs",
    "keywords": "Method GetWindowImageViaPrintWindow GetWindowImageViaPrintWindow(nint) Declaration public static Bitmap GetWindowImageViaPrintWindow(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description Bitmap GetWindowImageViaPrintWindow(nint, Rectangle) Declaration public static Bitmap GetWindowImageViaPrintWindow(nint hwnd, Rectangle region) Parameters Type Name Description nint hwnd Rectangle region Returns Type Description Bitmap"
  },
  "api/PoeShared.Native.UnsafeNative.GetWindowRect.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetWindowRect.html",
    "title": "Method GetWindowRect | EyeAuras Docs",
    "keywords": "Method GetWindowRect GetWindowRect(nint) Declaration public static Rectangle GetWindowRect(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description Rectangle"
  },
  "api/PoeShared.Native.UnsafeNative.GetWindowThreadProcessId.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetWindowThreadProcessId.html",
    "title": "Method GetWindowThreadProcessId | EyeAuras Docs",
    "keywords": "Method GetWindowThreadProcessId GetWindowThreadProcessId(nint, nint) Declaration public static extern int GetWindowThreadProcessId(nint hWnd, nint pProcessId) Parameters Type Name Description nint hWnd nint pProcessId Returns Type Description int"
  },
  "api/PoeShared.Native.UnsafeNative.GetWindowTitle.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetWindowTitle.html",
    "title": "Method GetWindowTitle | EyeAuras Docs",
    "keywords": "Method GetWindowTitle GetWindowTitle(nint) Declaration public static string GetWindowTitle(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description string"
  },
  "api/PoeShared.Native.UnsafeNative.GetZOrder.html": {
    "href": "api/PoeShared.Native.UnsafeNative.GetZOrder.html",
    "title": "Method GetZOrder | EyeAuras Docs",
    "keywords": "Method GetZOrder GetZOrder(params nint[]) Gets the z-order for one or more windows atomically with respect to each other. In Windows, smaller z-order is higher. If the window is not top level, the z order is returned as -1. Declaration public static int[] GetZOrder(params nint[] hWnds) Parameters Type Name Description nint[] hWnds Returns Type Description int[]"
  },
  "api/PoeShared.Native.UnsafeNative.HideSystemMenu.html": {
    "href": "api/PoeShared.Native.UnsafeNative.HideSystemMenu.html",
    "title": "Method HideSystemMenu | EyeAuras Docs",
    "keywords": "Method HideSystemMenu HideSystemMenu(nint) Declaration public static void HideSystemMenu(nint hwnd) Parameters Type Name Description nint hwnd"
  },
  "api/PoeShared.Native.UnsafeNative.HideWindow.html": {
    "href": "api/PoeShared.Native.UnsafeNative.HideWindow.html",
    "title": "Method HideWindow | EyeAuras Docs",
    "keywords": "Method HideWindow HideWindow(Window) Declaration public static void HideWindow(Window mainWindow) Parameters Type Name Description Window mainWindow HideWindow(nint) Declaration public static bool HideWindow(nint handle) Parameters Type Name Description nint handle Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.IsDWMEnabled.html": {
    "href": "api/PoeShared.Native.UnsafeNative.IsDWMEnabled.html",
    "title": "Method IsDWMEnabled | EyeAuras Docs",
    "keywords": "Method IsDWMEnabled IsDWMEnabled() Declaration public static bool IsDWMEnabled() Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.IsElevated.html": {
    "href": "api/PoeShared.Native.UnsafeNative.IsElevated.html",
    "title": "Method IsElevated | EyeAuras Docs",
    "keywords": "Method IsElevated IsElevated() Declaration public static bool IsElevated() Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.IsOutOfBounds.html": {
    "href": "api/PoeShared.Native.UnsafeNative.IsOutOfBounds.html",
    "title": "Method IsOutOfBounds | EyeAuras Docs",
    "keywords": "Method IsOutOfBounds IsOutOfBounds(Point, Size) Declaration public static bool IsOutOfBounds(Point point, Size bounds) Parameters Type Name Description Point point Size bounds Returns Type Description bool IsOutOfBounds(Rect, Rect) Declaration public static bool IsOutOfBounds(Rect frame, Rect bounds) Parameters Type Name Description Rect frame Rect bounds Returns Type Description bool IsOutOfBounds(Rectangle, Rectangle) Declaration public static bool IsOutOfBounds(Rectangle frame, Rectangle bounds) Parameters Type Name Description Rectangle frame Rectangle bounds Returns Type Description bool IsOutOfBounds(Point, Rect) Declaration public static bool IsOutOfBounds(Point point, Rect bounds) Parameters Type Name Description Point point Rect bounds Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.IsTopLevel.html": {
    "href": "api/PoeShared.Native.UnsafeNative.IsTopLevel.html",
    "title": "Method IsTopLevel | EyeAuras Docs",
    "keywords": "Method IsTopLevel IsTopLevel(nint) Checks whether a window is a top-level window (has no owner nor parent window). Declaration public static bool IsTopLevel(nint hwnd) Parameters Type Name Description nint hwnd Handle to the window to check. Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.IsWindows10OrGreater.html": {
    "href": "api/PoeShared.Native.UnsafeNative.IsWindows10OrGreater.html",
    "title": "Method IsWindows10OrGreater | EyeAuras Docs",
    "keywords": "Method IsWindows10OrGreater IsWindows10OrGreater(int) Declaration public static bool IsWindows10OrGreater(int build = -1) Parameters Type Name Description int build Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.IsWindows7.html": {
    "href": "api/PoeShared.Native.UnsafeNative.IsWindows7.html",
    "title": "Method IsWindows7 | EyeAuras Docs",
    "keywords": "Method IsWindows7 IsWindows7() Declaration public static bool IsWindows7() Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.IsWindows7OrGreater.html": {
    "href": "api/PoeShared.Native.UnsafeNative.IsWindows7OrGreater.html",
    "title": "Method IsWindows7OrGreater | EyeAuras Docs",
    "keywords": "Method IsWindows7OrGreater IsWindows7OrGreater() Declaration public static bool IsWindows7OrGreater() Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.IsWindows8.html": {
    "href": "api/PoeShared.Native.UnsafeNative.IsWindows8.html",
    "title": "Method IsWindows8 | EyeAuras Docs",
    "keywords": "Method IsWindows8 IsWindows8() Declaration public static bool IsWindows8() Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.IsWindows8OrGreater.html": {
    "href": "api/PoeShared.Native.UnsafeNative.IsWindows8OrGreater.html",
    "title": "Method IsWindows8OrGreater | EyeAuras Docs",
    "keywords": "Method IsWindows8OrGreater IsWindows8OrGreater() Declaration public static bool IsWindows8OrGreater() Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.IsWindowsVista.html": {
    "href": "api/PoeShared.Native.UnsafeNative.IsWindowsVista.html",
    "title": "Method IsWindowsVista | EyeAuras Docs",
    "keywords": "Method IsWindowsVista IsWindowsVista() Declaration public static bool IsWindowsVista() Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.IsWindowsVistaOrGreater.html": {
    "href": "api/PoeShared.Native.UnsafeNative.IsWindowsVistaOrGreater.html",
    "title": "Method IsWindowsVistaOrGreater | EyeAuras Docs",
    "keywords": "Method IsWindowsVistaOrGreater IsWindowsVistaOrGreater() Declaration public static bool IsWindowsVistaOrGreater() Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.IsWindowsXP.html": {
    "href": "api/PoeShared.Native.UnsafeNative.IsWindowsXP.html",
    "title": "Method IsWindowsXP | EyeAuras Docs",
    "keywords": "Method IsWindowsXP IsWindowsXP() Declaration public static bool IsWindowsXP() Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.IsWindowsXPOrGreater.html": {
    "href": "api/PoeShared.Native.UnsafeNative.IsWindowsXPOrGreater.html",
    "title": "Method IsWindowsXPOrGreater | EyeAuras Docs",
    "keywords": "Method IsWindowsXPOrGreater IsWindowsXPOrGreater() Declaration public static bool IsWindowsXPOrGreater() Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.IsZoomed.html": {
    "href": "api/PoeShared.Native.UnsafeNative.IsZoomed.html",
    "title": "Method IsZoomed | EyeAuras Docs",
    "keywords": "Method IsZoomed IsZoomed(nint) Determines whether a window is maximized. Declaration public static extern bool IsZoomed(nint hWnd) Parameters Type Name Description nint hWnd Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.KeyboardLayoutFlags.html": {
    "href": "api/PoeShared.Native.UnsafeNative.KeyboardLayoutFlags.html",
    "title": "Enum UnsafeNative.KeyboardLayoutFlags | EyeAuras Docs",
    "keywords": "Enum UnsafeNative.KeyboardLayoutFlags Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax [Flags] public enum UnsafeNative.KeyboardLayoutFlags : uint Fields Name Description KLF_ACTIVATE KLF_NONE KLF_SETFORPROCESS Extension Methods ObjectExtensions.AddTo<UnsafeNative.KeyboardLayoutFlags, TCollection>(UnsafeNative.KeyboardLayoutFlags, ISourceList<TCollection>) ObjectExtensions.AddTo<UnsafeNative.KeyboardLayoutFlags, TCollection>(UnsafeNative.KeyboardLayoutFlags, ICollection<TCollection>) ObjectExtensions.CloneJson<UnsafeNative.KeyboardLayoutFlags>(UnsafeNative.KeyboardLayoutFlags) ObjectExtensions.CopyPropertiesTo<UnsafeNative.KeyboardLayoutFlags, TTarget>(UnsafeNative.KeyboardLayoutFlags, TTarget) ObjectExtensions.DumpToTextRaw<UnsafeNative.KeyboardLayoutFlags>(UnsafeNative.KeyboardLayoutFlags) ObjectExtensions.DumpToText<UnsafeNative.KeyboardLayoutFlags>(UnsafeNative.KeyboardLayoutFlags) ObjectExtensions.Dump<UnsafeNative.KeyboardLayoutFlags>(UnsafeNative.KeyboardLayoutFlags) ObjectExtensions.GetPropertyAccessor<UnsafeNative.KeyboardLayoutFlags, TValue>(UnsafeNative.KeyboardLayoutFlags, Expression<Func<UnsafeNative.KeyboardLayoutFlags, TValue>>) ObjectExtensions.InsertTo<UnsafeNative.KeyboardLayoutFlags, TCollection>(UnsafeNative.KeyboardLayoutFlags, IList<TCollection>, int) ObjectExtensions.ToJson<UnsafeNative.KeyboardLayoutFlags>(UnsafeNative.KeyboardLayoutFlags) ObjectExtensions.ToStringSafe<UnsafeNative.KeyboardLayoutFlags>(UnsafeNative.KeyboardLayoutFlags) ObjectExtensions.TransferPropertiesTo<UnsafeNative.KeyboardLayoutFlags, TTarget>(UnsafeNative.KeyboardLayoutFlags, TTarget, params string[]) XDocumentExtensions.AddTo<UnsafeNative.KeyboardLayoutFlags>(UnsafeNative.KeyboardLayoutFlags, XContainer)"
  },
  "api/PoeShared.Native.UnsafeNative.LegacyMaximizedWindowFix.html": {
    "href": "api/PoeShared.Native.UnsafeNative.LegacyMaximizedWindowFix.html",
    "title": "Method LegacyMaximizedWindowFix | EyeAuras Docs",
    "keywords": "Method LegacyMaximizedWindowFix LegacyMaximizedWindowFix(nint, Rectangle) Declaration public static Rectangle LegacyMaximizedWindowFix(nint handle, Rectangle windowRect) Parameters Type Name Description nint handle Rectangle windowRect Returns Type Description Rectangle"
  },
  "api/PoeShared.Native.UnsafeNative.LoadKeyboardLayout.html": {
    "href": "api/PoeShared.Native.UnsafeNative.LoadKeyboardLayout.html",
    "title": "Method LoadKeyboardLayout | EyeAuras Docs",
    "keywords": "Method LoadKeyboardLayout LoadKeyboardLayout(StringBuilder, KeyboardLayoutFlags) Declaration public static extern uint LoadKeyboardLayout(StringBuilder pwszKLID, UnsafeNative.KeyboardLayoutFlags flags) Parameters Type Name Description StringBuilder pwszKLID UnsafeNative.KeyboardLayoutFlags flags Returns Type Description uint"
  },
  "api/PoeShared.Native.UnsafeNative.MakeLParam.html": {
    "href": "api/PoeShared.Native.UnsafeNative.MakeLParam.html",
    "title": "Method MakeLParam | EyeAuras Docs",
    "keywords": "Method MakeLParam MakeLParam(int, int) Declaration public static nint MakeLParam(int loWord, int hiWord) Parameters Type Name Description int loWord int hiWord Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.MemoryProtection.html": {
    "href": "api/PoeShared.Native.UnsafeNative.MemoryProtection.html",
    "title": "Enum UnsafeNative.MemoryProtection | EyeAuras Docs",
    "keywords": "Enum UnsafeNative.MemoryProtection Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax [Flags] public enum UnsafeNative.MemoryProtection : uint Fields Name Description EXECUTE EXECUTE_READ EXECUTE_READWRITE EXECUTE_WRITECOPY GUARD_Modifierflag NOACCESS NOCACHE_Modifierflag READONLY READWRITE WRITECOMBINE_Modifierflag WRITECOPY Extension Methods ObjectExtensions.AddTo<UnsafeNative.MemoryProtection, TCollection>(UnsafeNative.MemoryProtection, ISourceList<TCollection>) ObjectExtensions.AddTo<UnsafeNative.MemoryProtection, TCollection>(UnsafeNative.MemoryProtection, ICollection<TCollection>) ObjectExtensions.CloneJson<UnsafeNative.MemoryProtection>(UnsafeNative.MemoryProtection) ObjectExtensions.CopyPropertiesTo<UnsafeNative.MemoryProtection, TTarget>(UnsafeNative.MemoryProtection, TTarget) ObjectExtensions.DumpToTextRaw<UnsafeNative.MemoryProtection>(UnsafeNative.MemoryProtection) ObjectExtensions.DumpToText<UnsafeNative.MemoryProtection>(UnsafeNative.MemoryProtection) ObjectExtensions.Dump<UnsafeNative.MemoryProtection>(UnsafeNative.MemoryProtection) ObjectExtensions.GetPropertyAccessor<UnsafeNative.MemoryProtection, TValue>(UnsafeNative.MemoryProtection, Expression<Func<UnsafeNative.MemoryProtection, TValue>>) ObjectExtensions.InsertTo<UnsafeNative.MemoryProtection, TCollection>(UnsafeNative.MemoryProtection, IList<TCollection>, int) ObjectExtensions.ToJson<UnsafeNative.MemoryProtection>(UnsafeNative.MemoryProtection) ObjectExtensions.ToStringSafe<UnsafeNative.MemoryProtection>(UnsafeNative.MemoryProtection) ObjectExtensions.TransferPropertiesTo<UnsafeNative.MemoryProtection, TTarget>(UnsafeNative.MemoryProtection, TTarget, params string[]) XDocumentExtensions.AddTo<UnsafeNative.MemoryProtection>(UnsafeNative.MemoryProtection, XContainer)"
  },
  "api/PoeShared.Native.UnsafeNative.QueryFullProcessImageName.html": {
    "href": "api/PoeShared.Native.UnsafeNative.QueryFullProcessImageName.html",
    "title": "Method QueryFullProcessImageName | EyeAuras Docs",
    "keywords": "Method QueryFullProcessImageName QueryFullProcessImageName(int) Declaration public static string QueryFullProcessImageName(int processId) Parameters Type Name Description int processId Returns Type Description string"
  },
  "api/PoeShared.Native.UnsafeNative.ResolveParentForDialogWindow.html": {
    "href": "api/PoeShared.Native.UnsafeNative.ResolveParentForDialogWindow.html",
    "title": "Method ResolveParentForDialogWindow | EyeAuras Docs",
    "keywords": "Method ResolveParentForDialogWindow ResolveParentForDialogWindow() Resolves the best parent window for Open/Save File, BrowseFolder and other dialogs Takes into consideration which thread/dispatcher is currently active Declaration public static nint ResolveParentForDialogWindow() Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.RetrieveWindowRectangle.html": {
    "href": "api/PoeShared.Native.UnsafeNative.RetrieveWindowRectangle.html",
    "title": "Method RetrieveWindowRectangle | EyeAuras Docs",
    "keywords": "Method RetrieveWindowRectangle RetrieveWindowRectangle(nint) Declaration public static Rectangle RetrieveWindowRectangle(nint handle) Parameters Type Name Description nint handle Returns Type Description Rectangle"
  },
  "api/PoeShared.Native.UnsafeNative.SetFocus.html": {
    "href": "api/PoeShared.Native.UnsafeNative.SetFocus.html",
    "title": "Method SetFocus | EyeAuras Docs",
    "keywords": "Method SetFocus SetFocus(IFluentLog, nint) Declaration public static bool SetFocus(IFluentLog log, nint windowHandle) Parameters Type Name Description IFluentLog log nint windowHandle Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.SetForegroundWindow.html": {
    "href": "api/PoeShared.Native.UnsafeNative.SetForegroundWindow.html",
    "title": "Method SetForegroundWindow | EyeAuras Docs",
    "keywords": "Method SetForegroundWindow SetForegroundWindow(nint) Declaration public static bool SetForegroundWindow(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description bool SetForegroundWindow(IWindowHandle) Declaration public static bool SetForegroundWindow(IWindowHandle hwnd) Parameters Type Name Description IWindowHandle hwnd Returns Type Description bool SetForegroundWindow(IFluentLog, IWindowHandle, UnsafeWindowActivationMethod) Declaration public static bool SetForegroundWindow(IFluentLog log, IWindowHandle hwnd, UnsafeWindowActivationMethod activationMethod) Parameters Type Name Description IFluentLog log IWindowHandle hwnd UnsafeWindowActivationMethod activationMethod Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.SetForegroundWindowWithAttachInput.html": {
    "href": "api/PoeShared.Native.UnsafeNative.SetForegroundWindowWithAttachInput.html",
    "title": "Method SetForegroundWindowWithAttachInput | EyeAuras Docs",
    "keywords": "Method SetForegroundWindowWithAttachInput SetForegroundWindowWithAttachInput(IFluentLog, IWindowHandle) Declaration public static bool SetForegroundWindowWithAttachInput(IFluentLog log, IWindowHandle hwnd) Parameters Type Name Description IFluentLog log IWindowHandle hwnd Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.SetForegroundWindowWithSendInputHack.html": {
    "href": "api/PoeShared.Native.UnsafeNative.SetForegroundWindowWithSendInputHack.html",
    "title": "Method SetForegroundWindowWithSendInputHack | EyeAuras Docs",
    "keywords": "Method SetForegroundWindowWithSendInputHack SetForegroundWindowWithSendInputHack(IFluentLog, IWindowHandle) Declaration public static bool SetForegroundWindowWithSendInputHack(IFluentLog log, IWindowHandle hwnd) Parameters Type Name Description IFluentLog log IWindowHandle hwnd Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.SetParent.html": {
    "href": "api/PoeShared.Native.UnsafeNative.SetParent.html",
    "title": "Method SetParent | EyeAuras Docs",
    "keywords": "Method SetParent SetParent(nint, nint) Declaration public static nint SetParent(nint hWnd, nint parent) Parameters Type Name Description nint hWnd nint parent Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.SetParentToMessageOnly.html": {
    "href": "api/PoeShared.Native.UnsafeNative.SetParentToMessageOnly.html",
    "title": "Method SetParentToMessageOnly | EyeAuras Docs",
    "keywords": "Method SetParentToMessageOnly SetParentToMessageOnly(nint) Declaration public static nint SetParentToMessageOnly(nint hWnd) Parameters Type Name Description nint hWnd Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.SetWindowExActivate.html": {
    "href": "api/PoeShared.Native.UnsafeNative.SetWindowExActivate.html",
    "title": "Method SetWindowExActivate | EyeAuras Docs",
    "keywords": "Method SetWindowExActivate SetWindowExActivate(nint) Declaration public static bool SetWindowExActivate(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.SetWindowExLayered.html": {
    "href": "api/PoeShared.Native.UnsafeNative.SetWindowExLayered.html",
    "title": "Method SetWindowExLayered | EyeAuras Docs",
    "keywords": "Method SetWindowExLayered SetWindowExLayered(nint) Declaration public static bool SetWindowExLayered(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.SetWindowExNoActivate.html": {
    "href": "api/PoeShared.Native.UnsafeNative.SetWindowExNoActivate.html",
    "title": "Method SetWindowExNoActivate | EyeAuras Docs",
    "keywords": "Method SetWindowExNoActivate SetWindowExNoActivate(nint) Declaration public static bool SetWindowExNoActivate(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.SetWindowExTransparent.html": {
    "href": "api/PoeShared.Native.UnsafeNative.SetWindowExTransparent.html",
    "title": "Method SetWindowExTransparent | EyeAuras Docs",
    "keywords": "Method SetWindowExTransparent SetWindowExTransparent(nint) Declaration public static bool SetWindowExTransparent(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.SetWindowLong.html": {
    "href": "api/PoeShared.Native.UnsafeNative.SetWindowLong.html",
    "title": "Method SetWindowLong | EyeAuras Docs",
    "keywords": "Method SetWindowLong SetWindowLong(nint, Func<SetWindowLongFlags, SetWindowLongFlags>) Declaration public static bool SetWindowLong(nint hwnd, Func<User32.SetWindowLongFlags, User32.SetWindowLongFlags> flagsChanger) Parameters Type Name Description nint hwnd Func<User32.SetWindowLongFlags, User32.SetWindowLongFlags> flagsChanger Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.SetWindowRect.html": {
    "href": "api/PoeShared.Native.UnsafeNative.SetWindowRect.html",
    "title": "Method SetWindowRect | EyeAuras Docs",
    "keywords": "Method SetWindowRect SetWindowRect(nint, Rectangle) Declaration public static bool SetWindowRect(nint hwnd, Rectangle rect) Parameters Type Name Description nint hwnd Rectangle rect Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.SetWindowRgn.html": {
    "href": "api/PoeShared.Native.UnsafeNative.SetWindowRgn.html",
    "title": "Method SetWindowRgn | EyeAuras Docs",
    "keywords": "Method SetWindowRgn SetWindowRgn(nint, Rectangle) Declaration public static bool SetWindowRgn(nint hwnd, Rectangle rect) Parameters Type Name Description nint hwnd Rectangle rect Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.ShowInactiveTopmost.html": {
    "href": "api/PoeShared.Native.UnsafeNative.ShowInactiveTopmost.html",
    "title": "Method ShowInactiveTopmost | EyeAuras Docs",
    "keywords": "Method ShowInactiveTopmost ShowInactiveTopmost(nint) Declaration public static void ShowInactiveTopmost(nint handle) Parameters Type Name Description nint handle ShowInactiveTopmost(nint, Rectangle) Declaration public static void ShowInactiveTopmost(nint handle, Rectangle windowBounds) Parameters Type Name Description nint handle Rectangle windowBounds"
  },
  "api/PoeShared.Native.UnsafeNative.ShowSystemMenu.html": {
    "href": "api/PoeShared.Native.UnsafeNative.ShowSystemMenu.html",
    "title": "Method ShowSystemMenu | EyeAuras Docs",
    "keywords": "Method ShowSystemMenu ShowSystemMenu(nint) Declaration public static void ShowSystemMenu(nint hwnd) Parameters Type Name Description nint hwnd"
  },
  "api/PoeShared.Native.UnsafeNative.ShowTopmost.html": {
    "href": "api/PoeShared.Native.UnsafeNative.ShowTopmost.html",
    "title": "Method ShowTopmost | EyeAuras Docs",
    "keywords": "Method ShowTopmost ShowTopmost(nint) Declaration public static void ShowTopmost(nint handle) Parameters Type Name Description nint handle"
  },
  "api/PoeShared.Native.UnsafeNative.ShowWindow.html": {
    "href": "api/PoeShared.Native.UnsafeNative.ShowWindow.html",
    "title": "Method ShowWindow | EyeAuras Docs",
    "keywords": "Method ShowWindow ShowWindow(Window) Declaration public static void ShowWindow(Window window) Parameters Type Name Description Window window ShowWindow(nint) Declaration public static bool ShowWindow(nint handle) Parameters Type Name Description nint handle Returns Type Description bool ShowWindow(nint, WindowShowStyle) Declaration public static bool ShowWindow(nint handle, User32.WindowShowStyle showStyle) Parameters Type Name Description nint handle WindowShowStyle showStyle Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.TryGetDwmWindowFrameBounds.html": {
    "href": "api/PoeShared.Native.UnsafeNative.TryGetDwmWindowFrameBounds.html",
    "title": "Method TryGetDwmWindowFrameBounds | EyeAuras Docs",
    "keywords": "Method TryGetDwmWindowFrameBounds TryGetDwmWindowFrameBounds(nint, out Rectangle) Declaration public static bool TryGetDwmWindowFrameBounds(nint hwnd, out Rectangle bounds) Parameters Type Name Description nint hwnd Rectangle bounds Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.TryGetWindowBorderSize.html": {
    "href": "api/PoeShared.Native.UnsafeNative.TryGetWindowBorderSize.html",
    "title": "Method TryGetWindowBorderSize | EyeAuras Docs",
    "keywords": "Method TryGetWindowBorderSize TryGetWindowBorderSize(nint, out Size) Declaration public static bool TryGetWindowBorderSize(nint handle, out Size size) Parameters Type Name Description nint handle Size size Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.VirtualAlloc.html": {
    "href": "api/PoeShared.Native.UnsafeNative.VirtualAlloc.html",
    "title": "Method VirtualAlloc | EyeAuras Docs",
    "keywords": "Method VirtualAlloc VirtualAlloc(nint, uint, AllocationType, MemoryProtection) Declaration public static extern nint VirtualAlloc(nint lpAddress, uint dwSize, UnsafeNative.AllocationType flAllocationType, UnsafeNative.MemoryProtection flProtect) Parameters Type Name Description nint lpAddress uint dwSize UnsafeNative.AllocationType flAllocationType UnsafeNative.MemoryProtection flProtect Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.VirtualFree.html": {
    "href": "api/PoeShared.Native.UnsafeNative.VirtualFree.html",
    "title": "Method VirtualFree | EyeAuras Docs",
    "keywords": "Method VirtualFree VirtualFree(nint, uint, FreeType) Declaration public static extern bool VirtualFree(nint lpAddress, uint dwSize, UnsafeNative.FreeType dwFreeType) Parameters Type Name Description nint lpAddress uint dwSize UnsafeNative.FreeType dwFreeType Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.WINDOWPOS.cx.html": {
    "href": "api/PoeShared.Native.UnsafeNative.WINDOWPOS.cx.html",
    "title": "Field cx | EyeAuras Docs",
    "keywords": "Field cx Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public int cx Returns Type Description int"
  },
  "api/PoeShared.Native.UnsafeNative.WINDOWPOS.cy.html": {
    "href": "api/PoeShared.Native.UnsafeNative.WINDOWPOS.cy.html",
    "title": "Field cy | EyeAuras Docs",
    "keywords": "Field cy Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public int cy Returns Type Description int"
  },
  "api/PoeShared.Native.UnsafeNative.WINDOWPOS.flags.html": {
    "href": "api/PoeShared.Native.UnsafeNative.WINDOWPOS.flags.html",
    "title": "Field flags | EyeAuras Docs",
    "keywords": "Field flags Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public readonly User32.SetWindowPosFlags flags Returns Type Description SetWindowPosFlags"
  },
  "api/PoeShared.Native.UnsafeNative.WINDOWPOS.html": {
    "href": "api/PoeShared.Native.UnsafeNative.WINDOWPOS.html",
    "title": "Struct UnsafeNative.WINDOWPOS | EyeAuras Docs",
    "keywords": "Struct UnsafeNative.WINDOWPOS Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public struct UnsafeNative.WINDOWPOS Fields Name Description cx cy flags hwnd hwndInsertAfter x y Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/PoeShared.Native.UnsafeNative.WINDOWPOS.hwnd.html": {
    "href": "api/PoeShared.Native.UnsafeNative.WINDOWPOS.hwnd.html",
    "title": "Field hwnd | EyeAuras Docs",
    "keywords": "Field hwnd Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public readonly nint hwnd Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.WINDOWPOS.hwndInsertAfter.html": {
    "href": "api/PoeShared.Native.UnsafeNative.WINDOWPOS.hwndInsertAfter.html",
    "title": "Field hwndInsertAfter | EyeAuras Docs",
    "keywords": "Field hwndInsertAfter Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public readonly nint hwndInsertAfter Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.WINDOWPOS.x.html": {
    "href": "api/PoeShared.Native.UnsafeNative.WINDOWPOS.x.html",
    "title": "Field x | EyeAuras Docs",
    "keywords": "Field x Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public int x Returns Type Description int"
  },
  "api/PoeShared.Native.UnsafeNative.WINDOWPOS.y.html": {
    "href": "api/PoeShared.Native.UnsafeNative.WINDOWPOS.y.html",
    "title": "Field y | EyeAuras Docs",
    "keywords": "Field y Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public int y Returns Type Description int"
  },
  "api/PoeShared.Native.UnsafeNative.WindowActivationMethod.html": {
    "href": "api/PoeShared.Native.UnsafeNative.WindowActivationMethod.html",
    "title": "Property WindowActivationMethod | EyeAuras Docs",
    "keywords": "Property WindowActivationMethod WindowActivationMethod Specifies the method which will be used when calling ActivateWindow Declaration public static UnsafeWindowActivationMethod WindowActivationMethod { get; set; } Property Value Type Description UnsafeWindowActivationMethod"
  },
  "api/PoeShared.Native.UnsafeNative.WindowFromPoint.html": {
    "href": "api/PoeShared.Native.UnsafeNative.WindowFromPoint.html",
    "title": "Method WindowFromPoint | EyeAuras Docs",
    "keywords": "Method WindowFromPoint WindowFromPoint(Point) Declaration public static nint WindowFromPoint(Point point) Parameters Type Name Description Point point Returns Type Description nint"
  },
  "api/PoeShared.Native.UnsafeNative.WindowIsVisible.html": {
    "href": "api/PoeShared.Native.UnsafeNative.WindowIsVisible.html",
    "title": "Method WindowIsVisible | EyeAuras Docs",
    "keywords": "Method WindowIsVisible WindowIsVisible(nint) Declaration public static bool WindowIsVisible(nint hwnd) Parameters Type Name Description nint hwnd Returns Type Description bool"
  },
  "api/PoeShared.Native.UnsafeNative.WmMouseParam.html": {
    "href": "api/PoeShared.Native.UnsafeNative.WmMouseParam.html",
    "title": "Enum UnsafeNative.WmMouseParam | EyeAuras Docs",
    "keywords": "Enum UnsafeNative.WmMouseParam Indicates whether various virtual keys are down. This parameter can be one or more of the following values. https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-lbuttonup Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax [Flags] public enum UnsafeNative.WmMouseParam Fields Name Description MK_CONTROL MK_LBUTTON MK_MBUTTON MK_RBUTTON MK_SHIFT MK_XBUTTON1 MK_XBUTTON2 NONE Extension Methods ObjectExtensions.AddTo<UnsafeNative.WmMouseParam, TCollection>(UnsafeNative.WmMouseParam, ISourceList<TCollection>) ObjectExtensions.AddTo<UnsafeNative.WmMouseParam, TCollection>(UnsafeNative.WmMouseParam, ICollection<TCollection>) ObjectExtensions.CloneJson<UnsafeNative.WmMouseParam>(UnsafeNative.WmMouseParam) ObjectExtensions.CopyPropertiesTo<UnsafeNative.WmMouseParam, TTarget>(UnsafeNative.WmMouseParam, TTarget) ObjectExtensions.DumpToTextRaw<UnsafeNative.WmMouseParam>(UnsafeNative.WmMouseParam) ObjectExtensions.DumpToText<UnsafeNative.WmMouseParam>(UnsafeNative.WmMouseParam) ObjectExtensions.Dump<UnsafeNative.WmMouseParam>(UnsafeNative.WmMouseParam) ObjectExtensions.GetPropertyAccessor<UnsafeNative.WmMouseParam, TValue>(UnsafeNative.WmMouseParam, Expression<Func<UnsafeNative.WmMouseParam, TValue>>) ObjectExtensions.InsertTo<UnsafeNative.WmMouseParam, TCollection>(UnsafeNative.WmMouseParam, IList<TCollection>, int) ObjectExtensions.ToJson<UnsafeNative.WmMouseParam>(UnsafeNative.WmMouseParam) ObjectExtensions.ToStringSafe<UnsafeNative.WmMouseParam>(UnsafeNative.WmMouseParam) ObjectExtensions.TransferPropertiesTo<UnsafeNative.WmMouseParam, TTarget>(UnsafeNative.WmMouseParam, TTarget, params string[]) XDocumentExtensions.AddTo<UnsafeNative.WmMouseParam>(UnsafeNative.WmMouseParam, XContainer)"
  },
  "api/PoeShared.Native.UnsafeNative.html": {
    "href": "api/PoeShared.Native.UnsafeNative.html",
    "title": "Class UnsafeNative | EyeAuras Docs",
    "keywords": "Class UnsafeNative Inheritance object UnsafeNative Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public class UnsafeNative Constructors Name Description UnsafeNative() Properties Name Description WindowActivationMethod Specifies the method which will be used when calling ActivateWindow Methods Name Description ActivateKeyboardLayout(nint, KeyboardLayoutFlags) ActivateWindow(IWindowHandle) ActivateWindow(IWindowHandle, TimeSpan) ActivateWindow(IWindowHandle, TimeSpan, IFluentLog) ActivateWindow(nint) AllowSetForegroundWindow() CommandLineToArgvW(string) CreateHardLink(string, string) DwmGetWindowAttribute(nint, DWMWINDOWATTRIBUTE) DwmGetWindowFrameBounds(nint) DwmGetWindowFrameBoundsWithinMonitor(nint) DwmIsCompositionEnabled() EnableWindow(nint, bool) Enables or disables mouse and keyboard input to the specified window or control. When input is disabled, the window does not receive input such as mouse clicks and key presses. When input is enabled, the window receives all input. GetActiveKeyboardLayoutName() GetClassLong(nint, ClassLong) GetClientRect(nint) GetCommandLine(int) Reads command line of a target process This is refactored version of code from https://github.com/VbScrub/ProcessCommandLineDemo GetCurrentModifierKeys() GetCurrentObject(nint, ushort) GetDesktopDpi() GetDesktopDpi(nint) GetDesktopDpiFromPoint(Point) GetDesktopDpiFromWindow(Window) GetDesktopImageViaCopyFromScreen(Rectangle) GetDesktopMonitorInfo() GetDesktopWindow() GetDisplayScaleFactor(nint) GetForegroundWindow() GetKeyNameText(int, StringBuilder, int) GetKeyboardLayout(uint) GetKeyboardLayoutList() Retrieves the input locale identifiers (formerly called keyboard layout handles) corresponding to the current set of input locales in the system. GetKeyboardLayoutName(nint) GetMenu(nint) GetMonitorBounds(Rectangle) GetMonitorBounds(nint) GetMonitorBounds(Window) GetMonitorFromRect(Rectangle) GetMonitorInfo(nint) GetMonitorInfo(Window) GetParent(nint) GetParentProcessId(int) GetPositionAtTheCenter(Rect, Size) GetPositionAtTheCenter(Window) GetProcAddressOrThrow<T>(SafeLibraryHandle, string) GetProcessIdByWindowHandle(nint) GetProcessTimes(int, out DateTime, out DateTime, out DateTime, out DateTime) GetScreen(Window) GetSystemDpi() GetTopmostHwnd(nint[]) GetWindowBorders(nint) GetWindowClass(nint) GetWindowImageViaCopyFromScreen(nint, Rectangle) GetWindowImageViaDeviceContext(nint) GetWindowImageViaPrintWindow(nint) GetWindowImageViaPrintWindow(nint, Rectangle) GetWindowRect(nint) GetWindowThreadProcessId(nint, nint) GetWindowTitle(nint) GetZOrder(params nint[]) Gets the z-order for one or more windows atomically with respect to each other. In Windows, smaller z-order is higher. If the window is not top level, the z order is returned as -1. HideSystemMenu(nint) HideWindow(nint) HideWindow(Window) IsDWMEnabled() IsElevated() IsOutOfBounds(Rectangle, Rectangle) IsOutOfBounds(Point, Rect) IsOutOfBounds(Point, Size) IsOutOfBounds(Rect, Rect) IsTopLevel(nint) Checks whether a window is a top-level window (has no owner nor parent window). IsWindows10OrGreater(int) IsWindows7() IsWindows7OrGreater() IsWindows8() IsWindows8OrGreater() IsWindowsVista() IsWindowsVistaOrGreater() IsWindowsXP() IsWindowsXPOrGreater() IsZoomed(nint) Determines whether a window is maximized. LegacyMaximizedWindowFix(nint, Rectangle) LoadKeyboardLayout(StringBuilder, KeyboardLayoutFlags) MakeLParam(int, int) QueryFullProcessImageName(int) ResolveParentForDialogWindow() Resolves the best parent window for Open/Save File, BrowseFolder and other dialogs Takes into consideration which thread/dispatcher is currently active RetrieveWindowRectangle(nint) SetFocus(IFluentLog, nint) SetForegroundWindow(IFluentLog, IWindowHandle, UnsafeWindowActivationMethod) SetForegroundWindow(IWindowHandle) SetForegroundWindow(nint) SetForegroundWindowWithAttachInput(IFluentLog, IWindowHandle) SetForegroundWindowWithSendInputHack(IFluentLog, IWindowHandle) SetParent(nint, nint) SetParentToMessageOnly(nint) SetWindowExActivate(nint) SetWindowExLayered(nint) SetWindowExNoActivate(nint) SetWindowExTransparent(nint) SetWindowLong(nint, Func<SetWindowLongFlags, SetWindowLongFlags>) SetWindowRect(nint, Rectangle) SetWindowRgn(nint, Rectangle) ShowInactiveTopmost(nint) ShowInactiveTopmost(nint, Rectangle) ShowSystemMenu(nint) ShowTopmost(nint) ShowWindow(nint) ShowWindow(nint, WindowShowStyle) ShowWindow(Window) TryGetDwmWindowFrameBounds(nint, out Rectangle) TryGetWindowBorderSize(nint, out Size) VirtualAlloc(nint, uint, AllocationType, MemoryProtection) VirtualFree(nint, uint, FreeType) WindowFromPoint(Point) WindowIsVisible(nint) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.UnsafeWindowActivationMethod.html": {
    "href": "api/PoeShared.Native.UnsafeWindowActivationMethod.html",
    "title": "Enum UnsafeWindowActivationMethod | EyeAuras Docs",
    "keywords": "Enum UnsafeWindowActivationMethod Describes window activation technique. There are a lot of nuances in window activation and there are multiple methods, none of which are ideal. https://devblogs.microsoft.com/oldnewthing/?p=94745 https://github.com/microsoft/PowerToys/pull/1282 Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public enum UnsafeWindowActivationMethod Fields Name Description AttachThreadInput Uses AttachThreadInput to attach to input queue of target window (by Redmond Chen) A bad solution would be to use the AttachThreadInput function to connect the test automation tool’s input queue to the input queue of the target window. This is a bad solution because it means that if the target window has stopped responding, then the test automation will also stop responding. And it’s bad for a test to stop responding. The purpose of the test is to monitor the main application reliably, not to get into the same jail. Auto Select best activation method automatically SendInput Sends empty input message to target window to make sure that it is fully ready for activation Extension Methods ObjectExtensions.AddTo<UnsafeWindowActivationMethod, TCollection>(UnsafeWindowActivationMethod, ISourceList<TCollection>) ObjectExtensions.AddTo<UnsafeWindowActivationMethod, TCollection>(UnsafeWindowActivationMethod, ICollection<TCollection>) ObjectExtensions.CloneJson<UnsafeWindowActivationMethod>(UnsafeWindowActivationMethod) ObjectExtensions.CopyPropertiesTo<UnsafeWindowActivationMethod, TTarget>(UnsafeWindowActivationMethod, TTarget) ObjectExtensions.DumpToTextRaw<UnsafeWindowActivationMethod>(UnsafeWindowActivationMethod) ObjectExtensions.DumpToText<UnsafeWindowActivationMethod>(UnsafeWindowActivationMethod) ObjectExtensions.Dump<UnsafeWindowActivationMethod>(UnsafeWindowActivationMethod) ObjectExtensions.GetPropertyAccessor<UnsafeWindowActivationMethod, TValue>(UnsafeWindowActivationMethod, Expression<Func<UnsafeWindowActivationMethod, TValue>>) ObjectExtensions.InsertTo<UnsafeWindowActivationMethod, TCollection>(UnsafeWindowActivationMethod, IList<TCollection>, int) ObjectExtensions.ToJson<UnsafeWindowActivationMethod>(UnsafeWindowActivationMethod) ObjectExtensions.ToStringSafe<UnsafeWindowActivationMethod>(UnsafeWindowActivationMethod) ObjectExtensions.TransferPropertiesTo<UnsafeWindowActivationMethod, TTarget>(UnsafeWindowActivationMethod, TTarget, params string[]) XDocumentExtensions.AddTo<UnsafeWindowActivationMethod>(UnsafeWindowActivationMethod, XContainer)"
  },
  "api/PoeShared.Native.WinEventHookArguments.EventMax.html": {
    "href": "api/PoeShared.Native.WinEventHookArguments.EventMax.html",
    "title": "Property EventMax | EyeAuras Docs",
    "keywords": "Property EventMax EventMax Declaration public User32.WindowsEventHookType EventMax { readonly get; init; } Property Value Type Description WindowsEventHookType"
  },
  "api/PoeShared.Native.WinEventHookArguments.EventMin.html": {
    "href": "api/PoeShared.Native.WinEventHookArguments.EventMin.html",
    "title": "Property EventMin | EyeAuras Docs",
    "keywords": "Property EventMin EventMin Declaration public User32.WindowsEventHookType EventMin { readonly get; init; } Property Value Type Description WindowsEventHookType"
  },
  "api/PoeShared.Native.WinEventHookArguments.Flags.html": {
    "href": "api/PoeShared.Native.WinEventHookArguments.Flags.html",
    "title": "Property Flags | EyeAuras Docs",
    "keywords": "Property Flags Flags Declaration public User32.WindowsEventHookFlags Flags { readonly get; init; } Property Value Type Description WindowsEventHookFlags"
  },
  "api/PoeShared.Native.WinEventHookArguments.ProcessId.html": {
    "href": "api/PoeShared.Native.WinEventHookArguments.ProcessId.html",
    "title": "Property ProcessId | EyeAuras Docs",
    "keywords": "Property ProcessId ProcessId Declaration public int ProcessId { readonly get; init; } Property Value Type Description int"
  },
  "api/PoeShared.Native.WinEventHookArguments.ThreadId.html": {
    "href": "api/PoeShared.Native.WinEventHookArguments.ThreadId.html",
    "title": "Property ThreadId | EyeAuras Docs",
    "keywords": "Property ThreadId ThreadId Declaration public int ThreadId { readonly get; init; } Property Value Type Description int"
  },
  "api/PoeShared.Native.WinEventHookArguments.ToString.html": {
    "href": "api/PoeShared.Native.WinEventHookArguments.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/PoeShared.Native.WinEventHookArguments.html": {
    "href": "api/PoeShared.Native.WinEventHookArguments.html",
    "title": "Struct WinEventHookArguments | EyeAuras Docs",
    "keywords": "Struct WinEventHookArguments Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public struct WinEventHookArguments Properties Name Description EventMax EventMin Flags ProcessId ThreadId Methods Name Description ToString() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/PoeShared.Native.WinEventHookData.-Clone--.html": {
    "href": "api/PoeShared.Native.WinEventHookData.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public WinEventHookData <Clone>$() Returns Type Description WinEventHookData"
  },
  "api/PoeShared.Native.WinEventHookData.-ctor.html": {
    "href": "api/PoeShared.Native.WinEventHookData.-ctor.html",
    "title": "Constructor WinEventHookData | EyeAuras Docs",
    "keywords": "Constructor WinEventHookData WinEventHookData() Declaration public WinEventHookData()"
  },
  "api/PoeShared.Native.WinEventHookData.ChildId.html": {
    "href": "api/PoeShared.Native.WinEventHookData.ChildId.html",
    "title": "Property ChildId | EyeAuras Docs",
    "keywords": "Property ChildId ChildId Declaration public int ChildId { get; init; } Property Value Type Description int"
  },
  "api/PoeShared.Native.WinEventHookData.Equals.html": {
    "href": "api/PoeShared.Native.WinEventHookData.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(WinEventHookData?) Declaration public bool Equals(WinEventHookData? other) Parameters Type Name Description WinEventHookData other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/PoeShared.Native.WinEventHookData.EventId.html": {
    "href": "api/PoeShared.Native.WinEventHookData.EventId.html",
    "title": "Property EventId | EyeAuras Docs",
    "keywords": "Property EventId EventId Declaration public User32.WindowsEventHookType EventId { get; init; } Property Value Type Description WindowsEventHookType"
  },
  "api/PoeShared.Native.WinEventHookData.EventThreadId.html": {
    "href": "api/PoeShared.Native.WinEventHookData.EventThreadId.html",
    "title": "Property EventThreadId | EyeAuras Docs",
    "keywords": "Property EventThreadId EventThreadId Declaration public int EventThreadId { get; init; } Property Value Type Description int"
  },
  "api/PoeShared.Native.WinEventHookData.EventTimeInMs.html": {
    "href": "api/PoeShared.Native.WinEventHookData.EventTimeInMs.html",
    "title": "Property EventTimeInMs | EyeAuras Docs",
    "keywords": "Property EventTimeInMs EventTimeInMs Declaration public uint EventTimeInMs { get; init; } Property Value Type Description uint"
  },
  "api/PoeShared.Native.WinEventHookData.GetHashCode.html": {
    "href": "api/PoeShared.Native.WinEventHookData.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/PoeShared.Native.WinEventHookData.ObjectId.html": {
    "href": "api/PoeShared.Native.WinEventHookData.ObjectId.html",
    "title": "Property ObjectId | EyeAuras Docs",
    "keywords": "Property ObjectId ObjectId Declaration public int ObjectId { get; init; } Property Value Type Description int"
  },
  "api/PoeShared.Native.WinEventHookData.ToString.html": {
    "href": "api/PoeShared.Native.WinEventHookData.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/PoeShared.Native.WinEventHookData.WinEventHookHandle.html": {
    "href": "api/PoeShared.Native.WinEventHookData.WinEventHookHandle.html",
    "title": "Property WinEventHookHandle | EyeAuras Docs",
    "keywords": "Property WinEventHookHandle WinEventHookHandle Declaration public nint WinEventHookHandle { get; init; } Property Value Type Description nint"
  },
  "api/PoeShared.Native.WinEventHookData.WindowHandle.html": {
    "href": "api/PoeShared.Native.WinEventHookData.WindowHandle.html",
    "title": "Property WindowHandle | EyeAuras Docs",
    "keywords": "Property WindowHandle WindowHandle Declaration public nint WindowHandle { get; init; } Property Value Type Description nint"
  },
  "api/PoeShared.Native.WinEventHookData.html": {
    "href": "api/PoeShared.Native.WinEventHookData.html",
    "title": "Class WinEventHookData | EyeAuras Docs",
    "keywords": "Class WinEventHookData Inheritance object WinEventHookData Implements IEquatable<WinEventHookData> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public sealed record WinEventHookData : IEquatable<WinEventHookData> Constructors Name Description WinEventHookData() Properties Name Description ChildId EventId EventThreadId EventTimeInMs ObjectId WinEventHookHandle WindowHandle Methods Name Description Equals(WinEventHookData?) Equals(object?) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(WinEventHookData?, WinEventHookData?) operator !=(WinEventHookData?, WinEventHookData?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.WinEventHookData.op_Equality.html": {
    "href": "api/PoeShared.Native.WinEventHookData.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(WinEventHookData?, WinEventHookData?) Declaration public static bool operator ==(WinEventHookData? left, WinEventHookData? right) Parameters Type Name Description WinEventHookData left WinEventHookData right Returns Type Description bool"
  },
  "api/PoeShared.Native.WinEventHookData.op_Inequality.html": {
    "href": "api/PoeShared.Native.WinEventHookData.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(WinEventHookData?, WinEventHookData?) Declaration public static bool operator !=(WinEventHookData? left, WinEventHookData? right) Parameters Type Name Description WinEventHookData left WinEventHookData right Returns Type Description bool"
  },
  "api/PoeShared.Native.WinEventHookWrapper.-ctor.html": {
    "href": "api/PoeShared.Native.WinEventHookWrapper.-ctor.html",
    "title": "Constructor WinEventHookWrapper | EyeAuras Docs",
    "keywords": "Constructor WinEventHookWrapper WinEventHookWrapper(WinEventHookArguments, IScheduler) Declaration public WinEventHookWrapper(WinEventHookArguments hookArgs, IScheduler bgScheduler) Parameters Type Name Description WinEventHookArguments hookArgs IScheduler bgScheduler"
  },
  "api/PoeShared.Native.WinEventHookWrapper.WhenWindowEventTriggered.html": {
    "href": "api/PoeShared.Native.WinEventHookWrapper.WhenWindowEventTriggered.html",
    "title": "Property WhenWindowEventTriggered | EyeAuras Docs",
    "keywords": "Property WhenWindowEventTriggered WhenWindowEventTriggered Declaration public IObservable<WinEventHookData> WhenWindowEventTriggered { get; } Property Value Type Description IObservable<WinEventHookData> Implements IWinEventHookWrapper.WhenWindowEventTriggered"
  },
  "api/PoeShared.Native.WinEventHookWrapper.html": {
    "href": "api/PoeShared.Native.WinEventHookWrapper.html",
    "title": "Class WinEventHookWrapper | EyeAuras Docs",
    "keywords": "Class WinEventHookWrapper Inheritance object DisposableReactiveObject WinEventHookWrapper Implements IDisposable INotifyPropertyChanged IWinEventHookWrapper Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public sealed class WinEventHookWrapper : DisposableReactiveObject, IDisposable, INotifyPropertyChanged, IWinEventHookWrapper Constructors Name Description WinEventHookWrapper(WinEventHookArguments, IScheduler) Properties Name Description WhenWindowEventTriggered Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.WindowTracker.-ctor.html": {
    "href": "api/PoeShared.Native.WindowTracker.-ctor.html",
    "title": "Constructor WindowTracker | EyeAuras Docs",
    "keywords": "Constructor WindowTracker WindowTracker(IForegroundWindowTracker, IWindowTrackerMatcher) Declaration public WindowTracker(IForegroundWindowTracker foregroundWindowTracker, IWindowTrackerMatcher windowMatcher) Parameters Type Name Description IForegroundWindowTracker foregroundWindowTracker IWindowTrackerMatcher windowMatcher"
  },
  "api/PoeShared.Native.WindowTracker.ActiveProcessId.html": {
    "href": "api/PoeShared.Native.WindowTracker.ActiveProcessId.html",
    "title": "Property ActiveProcessId | EyeAuras Docs",
    "keywords": "Property ActiveProcessId ActiveProcessId Declaration public int ActiveProcessId { get; } Property Value Type Description int Implements IWindowTracker.ActiveProcessId"
  },
  "api/PoeShared.Native.WindowTracker.ActiveWindow.html": {
    "href": "api/PoeShared.Native.WindowTracker.ActiveWindow.html",
    "title": "Property ActiveWindow | EyeAuras Docs",
    "keywords": "Property ActiveWindow ActiveWindow Declaration public IWindowHandle ActiveWindow { get; } Property Value Type Description IWindowHandle Implements IWindowTracker.ActiveWindow"
  },
  "api/PoeShared.Native.WindowTracker.ActiveWindowHandle.html": {
    "href": "api/PoeShared.Native.WindowTracker.ActiveWindowHandle.html",
    "title": "Property ActiveWindowHandle | EyeAuras Docs",
    "keywords": "Property ActiveWindowHandle ActiveWindowHandle Declaration public nint ActiveWindowHandle { get; } Property Value Type Description nint Implements IWindowTracker.ActiveWindowHandle"
  },
  "api/PoeShared.Native.WindowTracker.ActiveWindowTitle.html": {
    "href": "api/PoeShared.Native.WindowTracker.ActiveWindowTitle.html",
    "title": "Property ActiveWindowTitle | EyeAuras Docs",
    "keywords": "Property ActiveWindowTitle ActiveWindowTitle Declaration public string ActiveWindowTitle { get; } Property Value Type Description string Implements IWindowTracker.ActiveWindowTitle"
  },
  "api/PoeShared.Native.WindowTracker.ExecutingProcessId.html": {
    "href": "api/PoeShared.Native.WindowTracker.ExecutingProcessId.html",
    "title": "Property ExecutingProcessId | EyeAuras Docs",
    "keywords": "Property ExecutingProcessId ExecutingProcessId Declaration public int ExecutingProcessId { get; } Property Value Type Description int Implements IWindowTracker.ExecutingProcessId"
  },
  "api/PoeShared.Native.WindowTracker.FormatToString.html": {
    "href": "api/PoeShared.Native.WindowTracker.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides DisposableReactiveObject.FormatToString(ToStringBuilder)"
  },
  "api/PoeShared.Native.WindowTracker.IsActive.html": {
    "href": "api/PoeShared.Native.WindowTracker.IsActive.html",
    "title": "Property IsActive | EyeAuras Docs",
    "keywords": "Property IsActive IsActive Declaration public bool IsActive { get; } Property Value Type Description bool Implements IWindowTracker.IsActive"
  },
  "api/PoeShared.Native.WindowTracker.MatchingWindow.html": {
    "href": "api/PoeShared.Native.WindowTracker.MatchingWindow.html",
    "title": "Property MatchingWindow | EyeAuras Docs",
    "keywords": "Property MatchingWindow MatchingWindow Declaration public IWindowHandle MatchingWindow { get; } Property Value Type Description IWindowHandle Implements IWindowTracker.MatchingWindow"
  },
  "api/PoeShared.Native.WindowTracker.MatchingWindowHandle.html": {
    "href": "api/PoeShared.Native.WindowTracker.MatchingWindowHandle.html",
    "title": "Property MatchingWindowHandle | EyeAuras Docs",
    "keywords": "Property MatchingWindowHandle MatchingWindowHandle Declaration public nint MatchingWindowHandle { get; } Property Value Type Description nint Implements IWindowTracker.MatchingWindowHandle"
  },
  "api/PoeShared.Native.WindowTracker.Name.html": {
    "href": "api/PoeShared.Native.WindowTracker.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration public string Name { get; set; } Property Value Type Description string Implements IWindowTracker.Name"
  },
  "api/PoeShared.Native.WindowTracker.html": {
    "href": "api/PoeShared.Native.WindowTracker.html",
    "title": "Class WindowTracker | EyeAuras Docs",
    "keywords": "Class WindowTracker Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger WindowTracker Implements IDisposable IWindowTracker INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public class WindowTracker : DisposableReactiveObjectWithLogger, IDisposable, IWindowTracker, INotifyPropertyChanged Constructors Name Description WindowTracker(IForegroundWindowTracker, IWindowTrackerMatcher) Properties Name Description ActiveProcessId ActiveWindow ActiveWindowHandle ActiveWindowTitle ExecutingProcessId IsActive MatchingWindow MatchingWindowHandle Name Methods Name Description FormatToString(ToStringBuilder) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.WorkerThread.-ctor.html": {
    "href": "api/PoeShared.Native.WorkerThread.-ctor.html",
    "title": "Constructor WorkerThread | EyeAuras Docs",
    "keywords": "Constructor WorkerThread WorkerThread(string, Action<CancellationTokenSource>) Declaration public WorkerThread(string threadName, Action<CancellationTokenSource> action) Parameters Type Name Description string threadName Action<CancellationTokenSource> action"
  },
  "api/PoeShared.Native.WorkerThread.html": {
    "href": "api/PoeShared.Native.WorkerThread.html",
    "title": "Class WorkerThread | EyeAuras Docs",
    "keywords": "Class WorkerThread Inheritance object DisposableReactiveObject WorkerThread Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Native Assembly: PoeShared.Native.dll Syntax public class WorkerThread : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Constructors Name Description WorkerThread(string, Action<CancellationTokenSource>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Native.html": {
    "href": "api/PoeShared.Native.html",
    "title": "Namespace PoeShared.Native | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Native Namespaces PoeShared.Native.Native PoeShared.Native.Scaffolding Classes AspectRatioSizeCalculator RegexStringMatcher ResourceReader SafeGCHandle UnsafeNative WinEventHookData WinEventHookWrapper WindowTracker WorkerThread Structs UnsafeNative.WINDOWPOS WinEventHookArguments Interfaces IActivationController IClipboardManager IForegroundWindowTracker IKeyboardEventsSource IOverlayConfig IRegexStringMatcher IStringMatcher IWinEventHookWrapper IWindowBoundsTracker IWindowBoundsTrackerFactory IWindowHandle Provides a handle to a window. IWindowHandleProvider IWindowTracker IWindowTrackerMatcher Enums OverlayMode UnsafeNative.AllocationType UnsafeNative.ClassLong UnsafeNative.FreeType UnsafeNative.KeyboardLayoutFlags UnsafeNative.MemoryProtection UnsafeNative.WmMouseParam Indicates whether various virtual keys are down. This parameter can be one or more of the following values. https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-lbuttonup UnsafeWindowActivationMethod Describes window activation technique. There are a lot of nuances in window activation and there are multiple methods, none of which are ideal. https://devblogs.microsoft.com/oldnewthing/?p=94745 https://github.com/microsoft/PowerToys/pull/1282 Delegates UnsafeNative.GetCpuIdDelegate After first call with 0, max level is returned in EAX Level = 0..EAX, Buffer = 16+ bytes"
  },
  "api/PoeShared.Prism.IConverter-2.Convert.html": {
    "href": "api/PoeShared.Prism.IConverter-2.Convert.html",
    "title": "Method Convert | EyeAuras Docs",
    "keywords": "Method Convert Convert(TSource) Converts the given value of type TSource into an object of type TTarget. Declaration TTarget Convert(TSource value) Parameters Type Name Description TSource value The source value to be converted. Returns Type Description TTarget"
  },
  "api/PoeShared.Prism.IConverter-2.html": {
    "href": "api/PoeShared.Prism.IConverter-2.html",
    "title": "Interface IConverter<TSource, TTarget> | EyeAuras Docs",
    "keywords": "Interface IConverter<TSource, TTarget> Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public interface IConverter<in TSource, out TTarget> : IConverter Type Parameters Name Description TSource TTarget Methods Name Description Convert(TSource) Converts the given value of type TSource into an object of type TTarget. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Prism.IConverter.html": {
    "href": "api/PoeShared.Prism.IConverter.html",
    "title": "Interface IConverter | EyeAuras Docs",
    "keywords": "Interface IConverter Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public interface IConverter Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Prism.IFactory-1.Create.html": {
    "href": "api/PoeShared.Prism.IFactory-1.Create.html",
    "title": "Method Create | EyeAuras Docs",
    "keywords": "Method Create Create() Declaration TOut Create() Returns Type Description TOut"
  },
  "api/PoeShared.Prism.IFactory-1.html": {
    "href": "api/PoeShared.Prism.IFactory-1.html",
    "title": "Interface IFactory<TOut> | EyeAuras Docs",
    "keywords": "Interface IFactory<TOut> Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public interface IFactory<out TOut> Type Parameters Name Description TOut Methods Name Description Create() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Prism.IFactory-2.Create.html": {
    "href": "api/PoeShared.Prism.IFactory-2.Create.html",
    "title": "Method Create | EyeAuras Docs",
    "keywords": "Method Create Create(TIn1) Declaration TOut Create(TIn1 param1) Parameters Type Name Description TIn1 param1 Returns Type Description TOut"
  },
  "api/PoeShared.Prism.IFactory-2.html": {
    "href": "api/PoeShared.Prism.IFactory-2.html",
    "title": "Interface IFactory<TOut, TIn1> | EyeAuras Docs",
    "keywords": "Interface IFactory<TOut, TIn1> Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public interface IFactory<out TOut, in TIn1> Type Parameters Name Description TOut TIn1 Methods Name Description Create(TIn1) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Prism.IFactory-3.Create.html": {
    "href": "api/PoeShared.Prism.IFactory-3.Create.html",
    "title": "Method Create | EyeAuras Docs",
    "keywords": "Method Create Create(TIn1, TIn2) Declaration TOut Create(TIn1 param1, TIn2 param2) Parameters Type Name Description TIn1 param1 TIn2 param2 Returns Type Description TOut"
  },
  "api/PoeShared.Prism.IFactory-3.html": {
    "href": "api/PoeShared.Prism.IFactory-3.html",
    "title": "Interface IFactory<TOut, TIn1, TIn2> | EyeAuras Docs",
    "keywords": "Interface IFactory<TOut, TIn1, TIn2> Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public interface IFactory<out TOut, in TIn1, in TIn2> Type Parameters Name Description TOut TIn1 TIn2 Methods Name Description Create(TIn1, TIn2) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Prism.IFactory-4.Create.html": {
    "href": "api/PoeShared.Prism.IFactory-4.Create.html",
    "title": "Method Create | EyeAuras Docs",
    "keywords": "Method Create Create(TIn1, TIn2, TIn3) Declaration TOut Create(TIn1 param1, TIn2 param2, TIn3 param3) Parameters Type Name Description TIn1 param1 TIn2 param2 TIn3 param3 Returns Type Description TOut"
  },
  "api/PoeShared.Prism.IFactory-4.html": {
    "href": "api/PoeShared.Prism.IFactory-4.html",
    "title": "Interface IFactory<TOut, TIn1, TIn2, TIn3> | EyeAuras Docs",
    "keywords": "Interface IFactory<TOut, TIn1, TIn2, TIn3> Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public interface IFactory<out TOut, in TIn1, in TIn2, in TIn3> Type Parameters Name Description TOut TIn1 TIn2 TIn3 Methods Name Description Create(TIn1, TIn2, TIn3) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Prism.IFactory-5.Create.html": {
    "href": "api/PoeShared.Prism.IFactory-5.Create.html",
    "title": "Method Create | EyeAuras Docs",
    "keywords": "Method Create Create(TIn1, TIn2, TIn3, TIn4) Declaration TOut Create(TIn1 param1, TIn2 param2, TIn3 param3, TIn4 param4) Parameters Type Name Description TIn1 param1 TIn2 param2 TIn3 param3 TIn4 param4 Returns Type Description TOut"
  },
  "api/PoeShared.Prism.IFactory-5.html": {
    "href": "api/PoeShared.Prism.IFactory-5.html",
    "title": "Interface IFactory<TOut, TIn1, TIn2, TIn3, TIn4> | EyeAuras Docs",
    "keywords": "Interface IFactory<TOut, TIn1, TIn2, TIn3, TIn4> Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public interface IFactory<out TOut, in TIn1, in TIn2, in TIn3, in TIn4> Type Parameters Name Description TOut TIn1 TIn2 TIn3 TIn4 Methods Name Description Create(TIn1, TIn2, TIn3, TIn4) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Prism.IFactory-6.Create.html": {
    "href": "api/PoeShared.Prism.IFactory-6.Create.html",
    "title": "Method Create | EyeAuras Docs",
    "keywords": "Method Create Create(TIn1, TIn2, TIn3, TIn4, TIn5) Declaration TOut Create(TIn1 param1, TIn2 param2, TIn3 param3, TIn4 param4, TIn5 param5) Parameters Type Name Description TIn1 param1 TIn2 param2 TIn3 param3 TIn4 param4 TIn5 param5 Returns Type Description TOut"
  },
  "api/PoeShared.Prism.IFactory-6.html": {
    "href": "api/PoeShared.Prism.IFactory-6.html",
    "title": "Interface IFactory<TOut, TIn1, TIn2, TIn3, TIn4, TIn5> | EyeAuras Docs",
    "keywords": "Interface IFactory<TOut, TIn1, TIn2, TIn3, TIn4, TIn5> Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public interface IFactory<out TOut, in TIn1, in TIn2, in TIn3, in TIn4, in TIn5> Type Parameters Name Description TOut TIn1 TIn2 TIn3 TIn4 TIn5 Methods Name Description Create(TIn1, TIn2, TIn3, TIn4, TIn5) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Prism.INamedFactory-1.Create.html": {
    "href": "api/PoeShared.Prism.INamedFactory-1.Create.html",
    "title": "Method Create | EyeAuras Docs",
    "keywords": "Method Create Create(string) Declaration TOut Create(string name) Parameters Type Name Description string name Returns Type Description TOut"
  },
  "api/PoeShared.Prism.INamedFactory-1.html": {
    "href": "api/PoeShared.Prism.INamedFactory-1.html",
    "title": "Interface INamedFactory<TOut> | EyeAuras Docs",
    "keywords": "Interface INamedFactory<TOut> Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public interface INamedFactory<out TOut> Type Parameters Name Description TOut Methods Name Description Create(string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Prism.INamedFactory-2.Create.html": {
    "href": "api/PoeShared.Prism.INamedFactory-2.Create.html",
    "title": "Method Create | EyeAuras Docs",
    "keywords": "Method Create Create(string, TIn1) Declaration TOut Create(string name, TIn1 param1) Parameters Type Name Description string name TIn1 param1 Returns Type Description TOut"
  },
  "api/PoeShared.Prism.INamedFactory-2.html": {
    "href": "api/PoeShared.Prism.INamedFactory-2.html",
    "title": "Interface INamedFactory<TOut, TIn1> | EyeAuras Docs",
    "keywords": "Interface INamedFactory<TOut, TIn1> Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public interface INamedFactory<out TOut, in TIn1> Type Parameters Name Description TOut TIn1 Methods Name Description Create(string, TIn1) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Prism.INamedFactory-3.Create.html": {
    "href": "api/PoeShared.Prism.INamedFactory-3.Create.html",
    "title": "Method Create | EyeAuras Docs",
    "keywords": "Method Create Create(string, TIn1, TIn2) Declaration TOut Create(string name, TIn1 param1, TIn2 param2) Parameters Type Name Description string name TIn1 param1 TIn2 param2 Returns Type Description TOut"
  },
  "api/PoeShared.Prism.INamedFactory-3.html": {
    "href": "api/PoeShared.Prism.INamedFactory-3.html",
    "title": "Interface INamedFactory<TOut, TIn1, TIn2> | EyeAuras Docs",
    "keywords": "Interface INamedFactory<TOut, TIn1, TIn2> Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public interface INamedFactory<out TOut, in TIn1, in TIn2> Type Parameters Name Description TOut TIn1 TIn2 Methods Name Description Create(string, TIn1, TIn2) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Prism.INamedFactory-4.Create.html": {
    "href": "api/PoeShared.Prism.INamedFactory-4.Create.html",
    "title": "Method Create | EyeAuras Docs",
    "keywords": "Method Create Create(string, TIn1, TIn2, TIn3) Declaration TOut Create(string name, TIn1 param1, TIn2 param2, TIn3 param3) Parameters Type Name Description string name TIn1 param1 TIn2 param2 TIn3 param3 Returns Type Description TOut"
  },
  "api/PoeShared.Prism.INamedFactory-4.html": {
    "href": "api/PoeShared.Prism.INamedFactory-4.html",
    "title": "Interface INamedFactory<TOut, TIn1, TIn2, TIn3> | EyeAuras Docs",
    "keywords": "Interface INamedFactory<TOut, TIn1, TIn2, TIn3> Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public interface INamedFactory<out TOut, in TIn1, in TIn2, in TIn3> Type Parameters Name Description TOut TIn1 TIn2 TIn3 Methods Name Description Create(string, TIn1, TIn2, TIn3) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Prism.LambdaFactory-1.-ctor.html": {
    "href": "api/PoeShared.Prism.LambdaFactory-1.-ctor.html",
    "title": "Constructor LambdaFactory | EyeAuras Docs",
    "keywords": "Constructor LambdaFactory LambdaFactory(Func<TOut>) Declaration public LambdaFactory(Func<TOut> factoryFunc) Parameters Type Name Description Func<TOut> factoryFunc"
  },
  "api/PoeShared.Prism.LambdaFactory-1.Create.html": {
    "href": "api/PoeShared.Prism.LambdaFactory-1.Create.html",
    "title": "Method Create | EyeAuras Docs",
    "keywords": "Method Create Create() Declaration public TOut Create() Returns Type Description TOut Implements IFactory<TOut>.Create()"
  },
  "api/PoeShared.Prism.LambdaFactory-1.html": {
    "href": "api/PoeShared.Prism.LambdaFactory-1.html",
    "title": "Class LambdaFactory<TOut> | EyeAuras Docs",
    "keywords": "Class LambdaFactory<TOut> Inheritance object LambdaFactory<TOut> Implements ICachingProxyFactory<TOut> IFactory<TOut> Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public sealed class LambdaFactory<TOut> : ICachingProxyFactory<TOut>, IFactory<TOut> Type Parameters Name Description TOut Constructors Name Description LambdaFactory(Func<TOut>) Methods Name Description Create() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Prism.WellKnownDispatchers.UI.html": {
    "href": "api/PoeShared.Prism.WellKnownDispatchers.UI.html",
    "title": "Field UI | EyeAuras Docs",
    "keywords": "Field UI Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public const string UI = \"UiDispatcher\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownDispatchers.UIOverlay.html": {
    "href": "api/PoeShared.Prism.WellKnownDispatchers.UIOverlay.html",
    "title": "Field UIOverlay | EyeAuras Docs",
    "keywords": "Field UIOverlay Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public const string UIOverlay = \"UiOverlayDispatcher\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownDispatchers.html": {
    "href": "api/PoeShared.Prism.WellKnownDispatchers.html",
    "title": "Class WellKnownDispatchers | EyeAuras Docs",
    "keywords": "Class WellKnownDispatchers Inheritance object WellKnownDispatchers Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public static class WellKnownDispatchers Fields Name Description UI UIOverlay"
  },
  "api/PoeShared.Prism.WellKnownOverlays.AllWindowsLayeredOverlay.html": {
    "href": "api/PoeShared.Prism.WellKnownOverlays.AllWindowsLayeredOverlay.html",
    "title": "Field AllWindowsLayeredOverlay | EyeAuras Docs",
    "keywords": "Field AllWindowsLayeredOverlay Namespace: PoeShared.Prism Assembly: PoeShared.Native.dll Syntax public const string AllWindowsLayeredOverlay = \"AllWindowsLayeredOverlay\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownOverlays.PathOfExileOverlay.html": {
    "href": "api/PoeShared.Prism.WellKnownOverlays.PathOfExileOverlay.html",
    "title": "Field PathOfExileOverlay | EyeAuras Docs",
    "keywords": "Field PathOfExileOverlay Namespace: PoeShared.Prism Assembly: PoeShared.Native.dll Syntax public const string PathOfExileOverlay = \"PathOfExileOverlay\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownOverlays.html": {
    "href": "api/PoeShared.Prism.WellKnownOverlays.html",
    "title": "Class WellKnownOverlays | EyeAuras Docs",
    "keywords": "Class WellKnownOverlays Inheritance object WellKnownOverlays Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Prism Assembly: PoeShared.Native.dll Syntax public static class WellKnownOverlays Fields Name Description AllWindowsLayeredOverlay PathOfExileOverlay"
  },
  "api/PoeShared.Prism.WellKnownSchedulers.Background.html": {
    "href": "api/PoeShared.Prism.WellKnownSchedulers.Background.html",
    "title": "Field Background | EyeAuras Docs",
    "keywords": "Field Background Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public const string Background = \"BackgroundScheduler\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownSchedulers.InputHook.html": {
    "href": "api/PoeShared.Prism.WellKnownSchedulers.InputHook.html",
    "title": "Field InputHook | EyeAuras Docs",
    "keywords": "Field InputHook Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public const string InputHook = \"Input\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownSchedulers.RedirectToUI.html": {
    "href": "api/PoeShared.Prism.WellKnownSchedulers.RedirectToUI.html",
    "title": "Field RedirectToUI | EyeAuras Docs",
    "keywords": "Field RedirectToUI Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public const string RedirectToUI = \"UISchedulerIfNotOnUIThread\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownSchedulers.SendInput.html": {
    "href": "api/PoeShared.Prism.WellKnownSchedulers.SendInput.html",
    "title": "Field SendInput | EyeAuras Docs",
    "keywords": "Field SendInput Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public const string SendInput = \"SendInput\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownSchedulers.SharedThread.html": {
    "href": "api/PoeShared.Prism.WellKnownSchedulers.SharedThread.html",
    "title": "Field SharedThread | EyeAuras Docs",
    "keywords": "Field SharedThread Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public const string SharedThread = \"SharedThread\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownSchedulers.UI.html": {
    "href": "api/PoeShared.Prism.WellKnownSchedulers.UI.html",
    "title": "Field UI | EyeAuras Docs",
    "keywords": "Field UI Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public const string UI = \"UiScheduler\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownSchedulers.UIIdle.html": {
    "href": "api/PoeShared.Prism.WellKnownSchedulers.UIIdle.html",
    "title": "Field UIIdle | EyeAuras Docs",
    "keywords": "Field UIIdle Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public const string UIIdle = \"UiIdleScheduler\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownSchedulers.UIOverlay.html": {
    "href": "api/PoeShared.Prism.WellKnownSchedulers.UIOverlay.html",
    "title": "Field UIOverlay | EyeAuras Docs",
    "keywords": "Field UIOverlay Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public const string UIOverlay = \"UiOverlayDispatcher\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownSchedulers.html": {
    "href": "api/PoeShared.Prism.WellKnownSchedulers.html",
    "title": "Class WellKnownSchedulers | EyeAuras Docs",
    "keywords": "Class WellKnownSchedulers Inheritance object WellKnownSchedulers Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Prism Assembly: PoeShared.dll Syntax public static class WellKnownSchedulers Fields Name Description Background InputHook RedirectToUI SendInput SharedThread UI UIIdle UIOverlay"
  },
  "api/PoeShared.Prism.WellKnownWindows.AllWindows.html": {
    "href": "api/PoeShared.Prism.WellKnownWindows.AllWindows.html",
    "title": "Field AllWindows | EyeAuras Docs",
    "keywords": "Field AllWindows Namespace: PoeShared.Prism Assembly: PoeShared.Native.dll Syntax public const string AllWindows = \"AllWindows\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownWindows.MainWindow.html": {
    "href": "api/PoeShared.Prism.WellKnownWindows.MainWindow.html",
    "title": "Field MainWindow | EyeAuras Docs",
    "keywords": "Field MainWindow Namespace: PoeShared.Prism Assembly: PoeShared.Native.dll Syntax public const string MainWindow = \"Main\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownWindows.OverlayWindow.html": {
    "href": "api/PoeShared.Prism.WellKnownWindows.OverlayWindow.html",
    "title": "Field OverlayWindow | EyeAuras Docs",
    "keywords": "Field OverlayWindow Namespace: PoeShared.Prism Assembly: PoeShared.Native.dll Syntax public const string OverlayWindow = \"OverlayWindow\" Returns Type Description string"
  },
  "api/PoeShared.Prism.WellKnownWindows.html": {
    "href": "api/PoeShared.Prism.WellKnownWindows.html",
    "title": "Class WellKnownWindows | EyeAuras Docs",
    "keywords": "Class WellKnownWindows Inheritance object WellKnownWindows Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Prism Assembly: PoeShared.Native.dll Syntax public static class WellKnownWindows Fields Name Description AllWindows MainWindow OverlayWindow"
  },
  "api/PoeShared.Prism.html": {
    "href": "api/PoeShared.Prism.html",
    "title": "Namespace PoeShared.Prism | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Prism Classes LambdaFactory<TOut> WellKnownDispatchers WellKnownOverlays WellKnownSchedulers WellKnownWindows Interfaces IConverter IConverter<TSource, TTarget> IFactory<TOut> IFactory<TOut, TIn1> IFactory<TOut, TIn1, TIn2> IFactory<TOut, TIn1, TIn2, TIn3> IFactory<TOut, TIn1, TIn2, TIn3, TIn4> IFactory<TOut, TIn1, TIn2, TIn3, TIn4, TIn5> INamedFactory<TOut> INamedFactory<TOut, TIn1> INamedFactory<TOut, TIn1, TIn2> INamedFactory<TOut, TIn1, TIn2, TIn3>"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.-ctor.html",
    "title": "Constructor AnnotatedBoolean | EyeAuras Docs",
    "keywords": "Constructor AnnotatedBoolean AnnotatedBoolean(bool, string) Declaration public AnnotatedBoolean(bool value, string annotation) Parameters Type Name Description bool value string annotation AnnotatedBoolean(bool, Func<bool, string>) Declaration public AnnotatedBoolean(bool value, Func<bool, string> annotationSupplier) Parameters Type Name Description bool value Func<bool, string> annotationSupplier"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.Annotation.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.Annotation.html",
    "title": "Property Annotation | EyeAuras Docs",
    "keywords": "Property Annotation Annotation Declaration public string Annotation { get; } Property Value Type Description string"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.Equals.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(AnnotatedBoolean) Declaration public bool Equals(AnnotatedBoolean other) Parameters Type Name Description AnnotatedBoolean other Returns Type Description bool Implements IEquatable<T>.Equals(T) Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.GetHashCode.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode()"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.GetTypeCode.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.GetTypeCode.html",
    "title": "Method GetTypeCode | EyeAuras Docs",
    "keywords": "Method GetTypeCode GetTypeCode() Declaration public TypeCode GetTypeCode() Returns Type Description TypeCode Implements IConvertible.GetTypeCode()"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToBoolean.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToBoolean.html",
    "title": "Method ToBoolean | EyeAuras Docs",
    "keywords": "Method ToBoolean ToBoolean(IFormatProvider) Declaration public bool ToBoolean(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description bool Implements IConvertible.ToBoolean(IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToByte.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToByte.html",
    "title": "Method ToByte | EyeAuras Docs",
    "keywords": "Method ToByte ToByte(IFormatProvider) Declaration public byte ToByte(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description byte Implements IConvertible.ToByte(IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToChar.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToChar.html",
    "title": "Method ToChar | EyeAuras Docs",
    "keywords": "Method ToChar ToChar(IFormatProvider) Declaration public char ToChar(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description char Implements IConvertible.ToChar(IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToDateTime.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToDateTime.html",
    "title": "Method ToDateTime | EyeAuras Docs",
    "keywords": "Method ToDateTime ToDateTime(IFormatProvider) Declaration public DateTime ToDateTime(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description DateTime Implements IConvertible.ToDateTime(IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToDecimal.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToDecimal.html",
    "title": "Method ToDecimal | EyeAuras Docs",
    "keywords": "Method ToDecimal ToDecimal(IFormatProvider) Declaration public decimal ToDecimal(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description decimal Implements IConvertible.ToDecimal(IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToDouble.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToDouble.html",
    "title": "Method ToDouble | EyeAuras Docs",
    "keywords": "Method ToDouble ToDouble(IFormatProvider) Declaration public double ToDouble(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description double Implements IConvertible.ToDouble(IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToInt16.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToInt16.html",
    "title": "Method ToInt16 | EyeAuras Docs",
    "keywords": "Method ToInt16 ToInt16(IFormatProvider) Declaration public short ToInt16(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description short Implements IConvertible.ToInt16(IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToInt32.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToInt32.html",
    "title": "Method ToInt32 | EyeAuras Docs",
    "keywords": "Method ToInt32 ToInt32(IFormatProvider) Declaration public int ToInt32(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description int Implements IConvertible.ToInt32(IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToInt64.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToInt64.html",
    "title": "Method ToInt64 | EyeAuras Docs",
    "keywords": "Method ToInt64 ToInt64(IFormatProvider) Declaration public long ToInt64(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description long Implements IConvertible.ToInt64(IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToSByte.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToSByte.html",
    "title": "Method ToSByte | EyeAuras Docs",
    "keywords": "Method ToSByte ToSByte(IFormatProvider) Declaration public sbyte ToSByte(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description sbyte Implements IConvertible.ToSByte(IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToSingle.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToSingle.html",
    "title": "Method ToSingle | EyeAuras Docs",
    "keywords": "Method ToSingle ToSingle(IFormatProvider) Declaration public float ToSingle(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description float Implements IConvertible.ToSingle(IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToString.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString(IFormatProvider) Declaration public string ToString(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description string Implements IConvertible.ToString(IFormatProvider) ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToType.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToType.html",
    "title": "Method ToType | EyeAuras Docs",
    "keywords": "Method ToType ToType(Type, IFormatProvider) Declaration public object ToType(Type conversionType, IFormatProvider provider) Parameters Type Name Description Type conversionType IFormatProvider provider Returns Type Description object Implements IConvertible.ToType(Type, IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToUInt16.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToUInt16.html",
    "title": "Method ToUInt16 | EyeAuras Docs",
    "keywords": "Method ToUInt16 ToUInt16(IFormatProvider) Declaration public ushort ToUInt16(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description ushort Implements IConvertible.ToUInt16(IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToUInt32.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToUInt32.html",
    "title": "Method ToUInt32 | EyeAuras Docs",
    "keywords": "Method ToUInt32 ToUInt32(IFormatProvider) Declaration public uint ToUInt32(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description uint Implements IConvertible.ToUInt32(IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.ToUInt64.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.ToUInt64.html",
    "title": "Method ToUInt64 | EyeAuras Docs",
    "keywords": "Method ToUInt64 ToUInt64(IFormatProvider) Declaration public ulong ToUInt64(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description ulong Implements IConvertible.ToUInt64(IFormatProvider)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.Value.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration public bool Value { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.html",
    "title": "Struct AnnotatedBoolean | EyeAuras Docs",
    "keywords": "Struct AnnotatedBoolean Implements IConvertible IEquatable<AnnotatedBoolean> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public readonly struct AnnotatedBoolean : IConvertible, IEquatable<AnnotatedBoolean> Constructors Name Description AnnotatedBoolean(bool, Func<bool, string>) AnnotatedBoolean(bool, string) Properties Name Description Annotation Value Methods Name Description Equals(AnnotatedBoolean) Equals(object) GetHashCode() GetTypeCode() ToBoolean(IFormatProvider) ToByte(IFormatProvider) ToChar(IFormatProvider) ToDateTime(IFormatProvider) ToDecimal(IFormatProvider) ToDouble(IFormatProvider) ToInt16(IFormatProvider) ToInt32(IFormatProvider) ToInt64(IFormatProvider) ToSByte(IFormatProvider) ToSingle(IFormatProvider) ToString() ToString(IFormatProvider) ToType(Type, IFormatProvider) ToUInt16(IFormatProvider) ToUInt32(IFormatProvider) ToUInt64(IFormatProvider) Operators Name Description operator &(AnnotatedBoolean, AnnotatedBoolean) operator |(AnnotatedBoolean, AnnotatedBoolean) operator ==(AnnotatedBoolean, AnnotatedBoolean) operator false(AnnotatedBoolean) operator !=(AnnotatedBoolean, AnnotatedBoolean) operator true(AnnotatedBoolean) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.op_BitwiseAnd.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.op_BitwiseAnd.html",
    "title": "Operator operator & | EyeAuras Docs",
    "keywords": "Operator operator & operator &(AnnotatedBoolean, AnnotatedBoolean) Declaration public static AnnotatedBoolean operator &(AnnotatedBoolean a, AnnotatedBoolean b) Parameters Type Name Description AnnotatedBoolean a AnnotatedBoolean b Returns Type Description AnnotatedBoolean"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.op_BitwiseOr.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.op_BitwiseOr.html",
    "title": "Operator operator | | EyeAuras Docs",
    "keywords": "Operator operator | operator |(AnnotatedBoolean, AnnotatedBoolean) Declaration public static AnnotatedBoolean operator |(AnnotatedBoolean a, AnnotatedBoolean b) Parameters Type Name Description AnnotatedBoolean a AnnotatedBoolean b Returns Type Description AnnotatedBoolean"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.op_Equality.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(AnnotatedBoolean, AnnotatedBoolean) Declaration public static bool operator ==(AnnotatedBoolean left, AnnotatedBoolean right) Parameters Type Name Description AnnotatedBoolean left AnnotatedBoolean right Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.op_False.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.op_False.html",
    "title": "Operator operator false | EyeAuras Docs",
    "keywords": "Operator operator false operator false(AnnotatedBoolean) Declaration public static bool operator false(AnnotatedBoolean x) Parameters Type Name Description AnnotatedBoolean x Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.op_Inequality.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(AnnotatedBoolean, AnnotatedBoolean) Declaration public static bool operator !=(AnnotatedBoolean left, AnnotatedBoolean right) Parameters Type Name Description AnnotatedBoolean left AnnotatedBoolean right Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.AnnotatedBoolean.op_True.html": {
    "href": "api/PoeShared.Scaffolding.AnnotatedBoolean.op_True.html",
    "title": "Operator operator true | EyeAuras Docs",
    "keywords": "Operator operator true operator true(AnnotatedBoolean) Declaration public static bool operator true(AnnotatedBoolean x) Parameters Type Name Description AnnotatedBoolean x Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.AssemblyExtensions.ReadResourceAsString.html": {
    "href": "api/PoeShared.Scaffolding.AssemblyExtensions.ReadResourceAsString.html",
    "title": "Method ReadResourceAsString | EyeAuras Docs",
    "keywords": "Method ReadResourceAsString ReadResourceAsString(Assembly, string) Declaration public static string ReadResourceAsString(this Assembly assembly, string path) Parameters Type Name Description Assembly assembly string path Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.AssemblyExtensions.html": {
    "href": "api/PoeShared.Scaffolding.AssemblyExtensions.html",
    "title": "Class AssemblyExtensions | EyeAuras Docs",
    "keywords": "Class AssemblyExtensions Inheritance object AssemblyExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class AssemblyExtensions Methods Name Description ReadResourceAsString(Assembly, string)"
  },
  "api/PoeShared.Scaffolding.BenchmarkTimer.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.BenchmarkTimer.-ctor.html",
    "title": "Constructor BenchmarkTimer | EyeAuras Docs",
    "keywords": "Constructor BenchmarkTimer BenchmarkTimer(string, ILog, string) Declaration public BenchmarkTimer(string benchmarkName, ILog logger, string propertyName = null) Parameters Type Name Description string benchmarkName ILog logger string propertyName BenchmarkTimer(string, IFluentLog, string) Declaration public BenchmarkTimer(string benchmarkName, IFluentLog logger = null, string propertyName = null) Parameters Type Name Description string benchmarkName IFluentLog logger string propertyName BenchmarkTimer(IFluentLog, string) Declaration public BenchmarkTimer(IFluentLog logger = null, string propertyName = null) Parameters Type Name Description IFluentLog logger string propertyName"
  },
  "api/PoeShared.Scaffolding.BenchmarkTimer.Elapsed.html": {
    "href": "api/PoeShared.Scaffolding.BenchmarkTimer.Elapsed.html",
    "title": "Property Elapsed | EyeAuras Docs",
    "keywords": "Property Elapsed Elapsed Declaration public TimeSpan Elapsed { get; } Property Value Type Description TimeSpan"
  },
  "api/PoeShared.Scaffolding.BenchmarkTimer.IsEnabled.html": {
    "href": "api/PoeShared.Scaffolding.BenchmarkTimer.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Declaration public bool IsEnabled { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Scaffolding.BenchmarkTimer.ResetStep.html": {
    "href": "api/PoeShared.Scaffolding.BenchmarkTimer.ResetStep.html",
    "title": "Method ResetStep | EyeAuras Docs",
    "keywords": "Method ResetStep ResetStep() Declaration public BenchmarkTimer ResetStep() Returns Type Description BenchmarkTimer"
  },
  "api/PoeShared.Scaffolding.BenchmarkTimer.Step.html": {
    "href": "api/PoeShared.Scaffolding.BenchmarkTimer.Step.html",
    "title": "Method Step | EyeAuras Docs",
    "keywords": "Method Step Step(Func<string>) Declaration public BenchmarkTimer Step(Func<string> messageFactory) Parameters Type Name Description Func<string> messageFactory Returns Type Description BenchmarkTimer Step(string) Declaration public BenchmarkTimer Step(string message) Parameters Type Name Description string message Returns Type Description BenchmarkTimer"
  },
  "api/PoeShared.Scaffolding.BenchmarkTimer.WithCondition.html": {
    "href": "api/PoeShared.Scaffolding.BenchmarkTimer.WithCondition.html",
    "title": "Method WithCondition | EyeAuras Docs",
    "keywords": "Method WithCondition WithCondition(Func<bool>) Declaration public BenchmarkTimer WithCondition(Func<bool> predicate) Parameters Type Name Description Func<bool> predicate Returns Type Description BenchmarkTimer"
  },
  "api/PoeShared.Scaffolding.BenchmarkTimer.WithLogLevel.html": {
    "href": "api/PoeShared.Scaffolding.BenchmarkTimer.WithLogLevel.html",
    "title": "Method WithLogLevel | EyeAuras Docs",
    "keywords": "Method WithLogLevel WithLogLevel(FluentLogLevel) Declaration public BenchmarkTimer WithLogLevel(FluentLogLevel newLogLevel) Parameters Type Name Description FluentLogLevel newLogLevel Returns Type Description BenchmarkTimer"
  },
  "api/PoeShared.Scaffolding.BenchmarkTimer.WithLoggingEachStep.html": {
    "href": "api/PoeShared.Scaffolding.BenchmarkTimer.WithLoggingEachStep.html",
    "title": "Method WithLoggingEachStep | EyeAuras Docs",
    "keywords": "Method WithLoggingEachStep WithLoggingEachStep() Declaration public BenchmarkTimer WithLoggingEachStep() Returns Type Description BenchmarkTimer"
  },
  "api/PoeShared.Scaffolding.BenchmarkTimer.WithLoggingOnDisposal.html": {
    "href": "api/PoeShared.Scaffolding.BenchmarkTimer.WithLoggingOnDisposal.html",
    "title": "Method WithLoggingOnDisposal | EyeAuras Docs",
    "keywords": "Method WithLoggingOnDisposal WithLoggingOnDisposal() Declaration public BenchmarkTimer WithLoggingOnDisposal() Returns Type Description BenchmarkTimer"
  },
  "api/PoeShared.Scaffolding.BenchmarkTimer.WithMinElapsedThreshold.html": {
    "href": "api/PoeShared.Scaffolding.BenchmarkTimer.WithMinElapsedThreshold.html",
    "title": "Method WithMinElapsedThreshold | EyeAuras Docs",
    "keywords": "Method WithMinElapsedThreshold WithMinElapsedThreshold(TimeSpan) Declaration public BenchmarkTimer WithMinElapsedThreshold(TimeSpan minElapsedThreshold) Parameters Type Name Description TimeSpan minElapsedThreshold Returns Type Description BenchmarkTimer"
  },
  "api/PoeShared.Scaffolding.BenchmarkTimer.WithoutLoggingEachStep.html": {
    "href": "api/PoeShared.Scaffolding.BenchmarkTimer.WithoutLoggingEachStep.html",
    "title": "Method WithoutLoggingEachStep | EyeAuras Docs",
    "keywords": "Method WithoutLoggingEachStep WithoutLoggingEachStep() Declaration public BenchmarkTimer WithoutLoggingEachStep() Returns Type Description BenchmarkTimer"
  },
  "api/PoeShared.Scaffolding.BenchmarkTimer.WithoutLoggingOnDisposal.html": {
    "href": "api/PoeShared.Scaffolding.BenchmarkTimer.WithoutLoggingOnDisposal.html",
    "title": "Method WithoutLoggingOnDisposal | EyeAuras Docs",
    "keywords": "Method WithoutLoggingOnDisposal WithoutLoggingOnDisposal() Declaration public BenchmarkTimer WithoutLoggingOnDisposal() Returns Type Description BenchmarkTimer"
  },
  "api/PoeShared.Scaffolding.BenchmarkTimer.html": {
    "href": "api/PoeShared.Scaffolding.BenchmarkTimer.html",
    "title": "Class BenchmarkTimer | EyeAuras Docs",
    "keywords": "Class BenchmarkTimer Inheritance object DisposableReactiveObject BenchmarkTimer Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class BenchmarkTimer : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Constructors Name Description BenchmarkTimer(IFluentLog, string) BenchmarkTimer(string, IFluentLog, string) BenchmarkTimer(string, ILog, string) Properties Name Description Elapsed IsEnabled Methods Name Description ResetStep() Step(Func<string>) Step(string) WithCondition(Func<bool>) WithLogLevel(FluentLogLevel) WithLoggingEachStep() WithLoggingOnDisposal() WithMinElapsedThreshold(TimeSpan) WithoutLoggingEachStep() WithoutLoggingOnDisposal() Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.BinaryExtensions.GetBits.html": {
    "href": "api/PoeShared.Scaffolding.BinaryExtensions.GetBits.html",
    "title": "Method GetBits | EyeAuras Docs",
    "keywords": "Method GetBits GetBits(byte, byte, byte) Declaration public static byte GetBits(this byte value, byte start, byte length) Parameters Type Name Description byte value byte start byte length Returns Type Description byte GetBits(int, byte, byte) Declaration public static int GetBits(this int value, byte start, byte length) Parameters Type Name Description int value byte start byte length Returns Type Description int GetBits(uint, byte, byte) Declaration public static uint GetBits(this uint value, byte start, byte length) Parameters Type Name Description uint value byte start byte length Returns Type Description uint GetBits(ulong, byte, byte) Declaration public static ulong GetBits(this ulong value, byte start, byte length) Parameters Type Name Description ulong value byte start byte length Returns Type Description ulong"
  },
  "api/PoeShared.Scaffolding.BinaryExtensions.html": {
    "href": "api/PoeShared.Scaffolding.BinaryExtensions.html",
    "title": "Class BinaryExtensions | EyeAuras Docs",
    "keywords": "Class BinaryExtensions Inheritance object BinaryExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class BinaryExtensions Methods Name Description GetBits(byte, byte, byte) GetBits(int, byte, byte) GetBits(uint, byte, byte) GetBits(ulong, byte, byte)"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.AsObservableList.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.AsObservableList.html",
    "title": "Method AsObservableList | EyeAuras Docs",
    "keywords": "Method AsObservableList AsObservableList<T, TKey>(IObservableCache<T, TKey>) Declaration public static IObservableList<T> AsObservableList<T, TKey>(this IObservableCache<T, TKey> cache) Parameters Type Name Description IObservableCache<T, TKey> cache Returns Type Description IObservableList<T> Type Parameters Name Description T TKey"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.AsSourceListEx.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.AsSourceListEx.html",
    "title": "Method AsSourceListEx | EyeAuras Docs",
    "keywords": "Method AsSourceListEx AsSourceListEx<T>(IEnumerable<T>) Declaration public static ISourceListEx<T> AsSourceListEx<T>(this IEnumerable<T> items) Parameters Type Name Description IEnumerable<T> items Returns Type Description ISourceListEx<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.AutoRefreshObservableSynchronized.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.AutoRefreshObservableSynchronized.html",
    "title": "Method AutoRefreshObservableSynchronized | EyeAuras Docs",
    "keywords": "Method AutoRefreshObservableSynchronized AutoRefreshObservableSynchronized<TObject, TKey, TAny>(IObservable<IChangeSet<TObject, TKey>>, Func<TObject, IObservable<TAny>>, TimeSpan?, IScheduler) Automatically refresh downstream operator. The refresh is triggered when the observable receives a notification. Declaration public static IObservable<IChangeSet<TObject, TKey>> AutoRefreshObservableSynchronized<TObject, TKey, TAny>(this IObservable<IChangeSet<TObject, TKey>> source, Func<TObject, IObservable<TAny>> reevaluator, TimeSpan? changeSetBuffer = null, IScheduler scheduler = null) where TKey : notnull Parameters Type Name Description IObservable<IChangeSet<TObject, TKey>> source The source observable change set. Func<TObject, IObservable<TAny>> reevaluator An observable which acts on items within the collection and produces a value when the item should be refreshed. TimeSpan? changeSetBuffer Batch up changes by specifying the buffer. This greatly increases performance when many elements require a refresh. IScheduler scheduler The scheduler. Returns Type Description IObservable<IChangeSet<TObject, TKey>> An observable change set with additional refresh changes. Type Parameters Name Description TObject The object of the change set. TKey The key of the change set. TAny The type of evaluation."
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.AutoRefreshOnObservableSynchronized.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.AutoRefreshOnObservableSynchronized.html",
    "title": "Method AutoRefreshOnObservableSynchronized | EyeAuras Docs",
    "keywords": "Method AutoRefreshOnObservableSynchronized AutoRefreshOnObservableSynchronized<TObject, TAny>(IObservable<IChangeSet<TObject>>, Func<TObject, IObservable<TAny>>, TimeSpan?, IScheduler) Automatically refresh downstream operator. The refresh is triggered when the observable receives a notification. Declaration public static IObservable<IChangeSet<TObject>> AutoRefreshOnObservableSynchronized<TObject, TAny>(this IObservable<IChangeSet<TObject>> source, Func<TObject, IObservable<TAny>> reevaluator, TimeSpan? changeSetBuffer = null, IScheduler scheduler = null) Parameters Type Name Description IObservable<IChangeSet<TObject>> source The source observable change set. Func<TObject, IObservable<TAny>> reevaluator An observable which acts on items within the collection and produces a value when the item should be refreshed. TimeSpan? changeSetBuffer Batch up changes by specifying the buffer. This greatly increases performance when many elements require a refresh. IScheduler scheduler The scheduler. Returns Type Description IObservable<IChangeSet<TObject>> An observable change set with additional refresh changes. Type Parameters Name Description TObject The type of object. TAny A ignored type used for specifying what to auto refresh on. AutoRefreshOnObservableSynchronized<TObject, TKey, TAny>(IObservable<IChangeSet<TObject, TKey>>, Func<TObject, IObservable<TAny>>, TimeSpan?, IScheduler) Automatically refresh downstream operator. The refresh is triggered when the observable receives a notification. Declaration public static IObservable<IChangeSet<TObject, TKey>> AutoRefreshOnObservableSynchronized<TObject, TKey, TAny>(this IObservable<IChangeSet<TObject, TKey>> source, Func<TObject, IObservable<TAny>> reevaluator, TimeSpan? changeSetBuffer = null, IScheduler scheduler = null) where TKey : notnull Parameters Type Name Description IObservable<IChangeSet<TObject, TKey>> source The source observable change set. Func<TObject, IObservable<TAny>> reevaluator An observable which acts on items within the collection and produces a value when the item should be refreshed. TimeSpan? changeSetBuffer Batch up changes by specifying the buffer. This greatly increases performance when many elements require a refresh. IScheduler scheduler The scheduler. Returns Type Description IObservable<IChangeSet<TObject, TKey>> An observable change set with additional refresh changes. Type Parameters Name Description TObject The object of the change set. TKey The key of the change set. TAny The type of evaluation."
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.BindToCollection.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.BindToCollection.html",
    "title": "Method BindToCollection | EyeAuras Docs",
    "keywords": "Method BindToCollection BindToCollection<TKey, TValue>(IObservable<IChangeSet<TValue, TKey>>, out IReadOnlyObservableCollection<TValue>) Declaration public static IObservable<IChangeSet<TValue>> BindToCollection<TKey, TValue>(this IObservable<IChangeSet<TValue, TKey>> source, out IReadOnlyObservableCollection<TValue> collection) Parameters Type Name Description IObservable<IChangeSet<TValue, TKey>> source IReadOnlyObservableCollection<TValue> collection Returns Type Description IObservable<IChangeSet<TValue>> Type Parameters Name Description TKey TValue BindToCollection<T>(IObservable<IChangeSet<T>>, out IReadOnlyObservableCollection<T>) Declaration public static IObservable<IChangeSet<T>> BindToCollection<T>(this IObservable<IChangeSet<T>> source, out IReadOnlyObservableCollection<T> collection) Parameters Type Name Description IObservable<IChangeSet<T>> source IReadOnlyObservableCollection<T> collection Returns Type Description IObservable<IChangeSet<T>> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.BindToCollectionSynchronized.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.BindToCollectionSynchronized.html",
    "title": "Method BindToCollectionSynchronized | EyeAuras Docs",
    "keywords": "Method BindToCollectionSynchronized BindToCollectionSynchronized<T>(IObservable<IChangeSet<T>>, out IReadOnlyObservableCollection<T>) Declaration public static IObservable<IChangeSet<T>> BindToCollectionSynchronized<T>(this IObservable<IChangeSet<T>> source, out IReadOnlyObservableCollection<T> collection) Parameters Type Name Description IObservable<IChangeSet<T>> source IReadOnlyObservableCollection<T> collection Returns Type Description IObservable<IChangeSet<T>> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.ChangeKeyDynamically.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.ChangeKeyDynamically.html",
    "title": "Method ChangeKeyDynamically | EyeAuras Docs",
    "keywords": "Method ChangeKeyDynamically ChangeKeyDynamically<TObject, TSourceKey, TDestinationKey>(IObservable<IChangeSet<TObject, TSourceKey>>, Expression<Func<TObject, TDestinationKey>>, out IObservableCache<TObject, TDestinationKey>) Declaration public static IDisposable ChangeKeyDynamically<TObject, TSourceKey, TDestinationKey>(this IObservable<IChangeSet<TObject, TSourceKey>> source, Expression<Func<TObject, TDestinationKey>> keySelectorExpression, out IObservableCache<TObject, TDestinationKey> cacheWithChangedKey) where TObject : INotifyPropertyChanged where TSourceKey : notnull where TDestinationKey : notnull Parameters Type Name Description IObservable<IChangeSet<TObject, TSourceKey>> source Expression<Func<TObject, TDestinationKey>> keySelectorExpression IObservableCache<TObject, TDestinationKey> cacheWithChangedKey Returns Type Description IDisposable Type Parameters Name Description TObject TSourceKey TDestinationKey"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.ComputeIfAbsent.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.ComputeIfAbsent.html",
    "title": "Method ComputeIfAbsent | EyeAuras Docs",
    "keywords": "Method ComputeIfAbsent ComputeIfAbsent<T, TKey>(ISourceCache<T, TKey>, TKey, Func<TKey, T>) Declaration public static Optional<T> ComputeIfAbsent<T, TKey>(this ISourceCache<T, TKey> source, TKey key, Func<TKey, T> factory) Parameters Type Name Description ISourceCache<T, TKey> source TKey key Func<TKey, T> factory Returns Type Description Optional<T> Type Parameters Name Description T TKey"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.Concat.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.Concat.html",
    "title": "Method Concat | EyeAuras Docs",
    "keywords": "Method Concat Concat<T>(ISourceList<T>, params T[]) Declaration public static ISourceList<T> Concat<T>(this ISourceList<T> list, params T[] items) Parameters Type Name Description ISourceList<T> list T[] items Returns Type Description ISourceList<T> Type Parameters Name Description T Concat<T>(ISourceList<T>, params ISourceList<T>[]) Declaration public static ISourceList<T> Concat<T>(this ISourceList<T> list, params ISourceList<T>[] lists) Parameters Type Name Description ISourceList<T> list ISourceList<T>[] lists Returns Type Description ISourceList<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.Connect.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.Connect.html",
    "title": "Method Connect | EyeAuras Docs",
    "keywords": "Method Connect Connect<T>(IReadOnlyObservableCollection<T>) Declaration public static IObservable<IChangeSet<T>> Connect<T>(this IReadOnlyObservableCollection<T> source) Parameters Type Name Description IReadOnlyObservableCollection<T> source Returns Type Description IObservable<IChangeSet<T>> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.CountIf.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.CountIf.html",
    "title": "Method CountIf | EyeAuras Docs",
    "keywords": "Method CountIf CountIf<T>(IObservable<IChangeSet<T>>) Declaration public static IObservable<int> CountIf<T>(this IObservable<IChangeSet<T>> source) Parameters Type Name Description IObservable<IChangeSet<T>> source Returns Type Description IObservable<int> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.EditDiff.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.EditDiff.html",
    "title": "Method EditDiff | EyeAuras Docs",
    "keywords": "Method EditDiff EditDiff<T, TKey>(ISourceCache<T, TKey>, T) Declaration public static void EditDiff<T, TKey>(this ISourceCache<T, TKey> source, T item) Parameters Type Name Description ISourceCache<T, TKey> source T item Type Parameters Name Description T TKey EditDiff<T, TKey>(ISourceCache<T, TKey>, IEnumerable<T>) Declaration public static void EditDiff<T, TKey>(this ISourceCache<T, TKey> source, IEnumerable<T> items) Parameters Type Name Description ISourceCache<T, TKey> source IEnumerable<T> items Type Parameters Name Description T TKey"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.EditGet.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.EditGet.html",
    "title": "Method EditGet | EyeAuras Docs",
    "keywords": "Method EditGet EditGet<TItem, T>(ISourceList<TItem>, Func<IExtendedList<TItem>, T>) Declaration public static T EditGet<TItem, T>(this ISourceList<TItem> source, Func<IExtendedList<TItem>, T> supplier) Parameters Type Name Description ISourceList<TItem> source Func<IExtendedList<TItem>, T> supplier Returns Type Description T Type Parameters Name Description TItem T"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.Flatten.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.Flatten.html",
    "title": "Method Flatten | EyeAuras Docs",
    "keywords": "Method Flatten Flatten<TObject>(IObservable<IChangeSet<TObject>>, Func<TObject, IObservable<IChangeSet<TObject>>>) Declaration [Obsolete(\"Contains some bug, do not use with further testing\")] public static IObservable<IChangeSet<TObject>> Flatten<TObject>(this IObservable<IChangeSet<TObject>> source, Func<TObject, IObservable<IChangeSet<TObject>>> childrenAccessor) Parameters Type Name Description IObservable<IChangeSet<TObject>> source Func<TObject, IObservable<IChangeSet<TObject>>> childrenAccessor Returns Type Description IObservable<IChangeSet<TObject>> Type Parameters Name Description TObject"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.GetOrAdd.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.GetOrAdd.html",
    "title": "Method GetOrAdd | EyeAuras Docs",
    "keywords": "Method GetOrAdd GetOrAdd<T, TKey>(ISourceCache<T, TKey>, TKey, Func<TKey, T>) Declaration public static T GetOrAdd<T, TKey>(this ISourceCache<T, TKey> instance, TKey key, Func<TKey, T> factoryFunc) Parameters Type Name Description ISourceCache<T, TKey> instance TKey key Func<TKey, T> factoryFunc Returns Type Description T Type Parameters Name Description T TKey"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.GetOrDefault.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.GetOrDefault.html",
    "title": "Method GetOrDefault | EyeAuras Docs",
    "keywords": "Method GetOrDefault GetOrDefault<T, TKey>(IObservableCache<T, TKey>, TKey) Declaration public static T GetOrDefault<T, TKey>(this IObservableCache<T, TKey> instance, TKey key) Parameters Type Name Description IObservableCache<T, TKey> instance TKey key Returns Type Description T Type Parameters Name Description T TKey"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.MoveItemDown.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.MoveItemDown.html",
    "title": "Method MoveItemDown | EyeAuras Docs",
    "keywords": "Method MoveItemDown MoveItemDown<T>(ISourceList<T>, T) Declaration public static void MoveItemDown<T>(this ISourceList<T> collection, T item) Parameters Type Name Description ISourceList<T> collection T item Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.MoveItemToBottom.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.MoveItemToBottom.html",
    "title": "Method MoveItemToBottom | EyeAuras Docs",
    "keywords": "Method MoveItemToBottom MoveItemToBottom<T>(ISourceList<T>, T) Declaration public static void MoveItemToBottom<T>(this ISourceList<T> collection, T item) Parameters Type Name Description ISourceList<T> collection T item Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.MoveItemToTop.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.MoveItemToTop.html",
    "title": "Method MoveItemToTop | EyeAuras Docs",
    "keywords": "Method MoveItemToTop MoveItemToTop<T>(ISourceList<T>, T) Declaration public static void MoveItemToTop<T>(this ISourceList<T> collection, T item) Parameters Type Name Description ISourceList<T> collection T item Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.MoveItemUp.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.MoveItemUp.html",
    "title": "Method MoveItemUp | EyeAuras Docs",
    "keywords": "Method MoveItemUp MoveItemUp<T>(ISourceList<T>, T) Declaration public static void MoveItemUp<T>(this ISourceList<T> collection, T item) Parameters Type Name Description ISourceList<T> collection T item Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.PopulateFrom.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.PopulateFrom.html",
    "title": "Method PopulateFrom | EyeAuras Docs",
    "keywords": "Method PopulateFrom PopulateFrom<T, TKey, T1>(ISourceCache<T, TKey>, params ISourceList<T1>[]) Declaration public static IDisposable PopulateFrom<T, TKey, T1>(this ISourceCache<T, TKey> instance, params ISourceList<T1>[] lists) where T1 : T Parameters Type Name Description ISourceCache<T, TKey> instance ISourceList<T1>[] lists Returns Type Description IDisposable Type Parameters Name Description T TKey T1 PopulateFrom<T, TKey, T1, T2>(ISourceCache<T, TKey>, IObservableList<T1>, IObservableList<T2>) Declaration public static IDisposable PopulateFrom<T, TKey, T1, T2>(this ISourceCache<T, TKey> instance, IObservableList<T1> list1, IObservableList<T2> list2) where T1 : T where T2 : T Parameters Type Name Description ISourceCache<T, TKey> instance IObservableList<T1> list1 IObservableList<T2> list2 Returns Type Description IDisposable Type Parameters Name Description T TKey T1 T2 PopulateFrom<T, TKey, T1, T2, T3>(ISourceCache<T, TKey>, IObservableList<T1>, IObservableList<T2>, IObservableList<T3>) Declaration public static IDisposable PopulateFrom<T, TKey, T1, T2, T3>(this ISourceCache<T, TKey> instance, IObservableList<T1> list1, IObservableList<T2> list2, IObservableList<T3> list3) where T1 : T where T2 : T where T3 : T Parameters Type Name Description ISourceCache<T, TKey> instance IObservableList<T1> list1 IObservableList<T2> list2 IObservableList<T3> list3 Returns Type Description IDisposable Type Parameters Name Description T TKey T1 T2 T3 PopulateFrom<T, TKey, T1, T2, T3, T4>(ISourceCache<T, TKey>, IObservableList<T1>, IObservableList<T2>, IObservableList<T3>, IObservableList<T4>) Declaration public static IDisposable PopulateFrom<T, TKey, T1, T2, T3, T4>(this ISourceCache<T, TKey> instance, IObservableList<T1> list1, IObservableList<T2> list2, IObservableList<T3> list3, IObservableList<T4> list4) where T1 : T where T2 : T where T3 : T where T4 : T Parameters Type Name Description ISourceCache<T, TKey> instance IObservableList<T1> list1 IObservableList<T2> list2 IObservableList<T3> list3 IObservableList<T4> list4 Returns Type Description IDisposable Type Parameters Name Description T TKey T1 T2 T3 T4 PopulateFrom<T, TKey, T1, T2, T3, T4, T5>(ISourceCache<T, TKey>, IObservableList<T1>, IObservableList<T2>, IObservableList<T3>, IObservableList<T4>, IObservableList<T5>) Declaration public static IDisposable PopulateFrom<T, TKey, T1, T2, T3, T4, T5>(this ISourceCache<T, TKey> instance, IObservableList<T1> list1, IObservableList<T2> list2, IObservableList<T3> list3, IObservableList<T4> list4, IObservableList<T5> list5) where T1 : T where T2 : T where T3 : T where T4 : T where T5 : T Parameters Type Name Description ISourceCache<T, TKey> instance IObservableList<T1> list1 IObservableList<T2> list2 IObservableList<T3> list3 IObservableList<T4> list4 IObservableList<T5> list5 Returns Type Description IDisposable Type Parameters Name Description T TKey T1 T2 T3 T4 T5 PopulateFrom<T, TKey, T1, T2, T3, T4, T5, T6>(ISourceCache<T, TKey>, IObservableList<T1>, IObservableList<T2>, IObservableList<T3>, IObservableList<T4>, IObservableList<T5>, IObservableList<T6>) Declaration public static IDisposable PopulateFrom<T, TKey, T1, T2, T3, T4, T5, T6>(this ISourceCache<T, TKey> instance, IObservableList<T1> list1, IObservableList<T2> list2, IObservableList<T3> list3, IObservableList<T4> list4, IObservableList<T5> list5, IObservableList<T6> list6) where T1 : T where T2 : T where T3 : T where T4 : T where T5 : T where T6 : T Parameters Type Name Description ISourceCache<T, TKey> instance IObservableList<T1> list1 IObservableList<T2> list2 IObservableList<T3> list3 IObservableList<T4> list4 IObservableList<T5> list5 IObservableList<T6> list6 Returns Type Description IDisposable Type Parameters Name Description T TKey T1 T2 T3 T4 T5 T6"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.SwitchCollectionIf.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.SwitchCollectionIf.html",
    "title": "Method SwitchCollectionIf | EyeAuras Docs",
    "keywords": "Method SwitchCollectionIf SwitchCollectionIf<TIn, TOut, TKey>(IObservable<TIn>, Predicate<TIn>, Func<TIn, IObservableCache<TOut, TKey>>, Func<TIn, IObservableCache<TOut, TKey>>) Declaration public static IObservable<IChangeSet<TOut, TKey>> SwitchCollectionIf<TIn, TOut, TKey>(this IObservable<TIn> observable, Predicate<TIn> condition, Func<TIn, IObservableCache<TOut, TKey>> trueSelector, Func<TIn, IObservableCache<TOut, TKey>> falseSelector) Parameters Type Name Description IObservable<TIn> observable Predicate<TIn> condition Func<TIn, IObservableCache<TOut, TKey>> trueSelector Func<TIn, IObservableCache<TOut, TKey>> falseSelector Returns Type Description IObservable<IChangeSet<TOut, TKey>> Type Parameters Name Description TIn TOut TKey SwitchCollectionIf<TIn, TOut>(IObservable<TIn>, Predicate<TIn>, Func<TIn, IObservableList<TOut>>, Func<TIn, IObservableList<TOut>>) Declaration public static IObservable<IChangeSet<TOut>> SwitchCollectionIf<TIn, TOut>(this IObservable<TIn> observable, Predicate<TIn> condition, Func<TIn, IObservableList<TOut>> trueSelector, Func<TIn, IObservableList<TOut>> falseSelector) Parameters Type Name Description IObservable<TIn> observable Predicate<TIn> condition Func<TIn, IObservableList<TOut>> trueSelector Func<TIn, IObservableList<TOut>> falseSelector Returns Type Description IObservable<IChangeSet<TOut>> Type Parameters Name Description TIn TOut SwitchCollectionIf<TIn, TOut>(IObservable<TIn>, Predicate<TIn>, Func<TIn, IObservableList<TOut>>) Declaration public static IObservable<IChangeSet<TOut>> SwitchCollectionIf<TIn, TOut>(this IObservable<TIn> observable, Predicate<TIn> condition, Func<TIn, IObservableList<TOut>> trueSelector) Parameters Type Name Description IObservable<TIn> observable Predicate<TIn> condition Func<TIn, IObservableList<TOut>> trueSelector Returns Type Description IObservable<IChangeSet<TOut>> Type Parameters Name Description TIn TOut SwitchCollectionIf<TIn, TOut, TKey>(IObservable<TIn>, Predicate<TIn>, Func<TIn, IObservableCache<TOut, TKey>>) Declaration public static IObservable<IChangeSet<TOut, TKey>> SwitchCollectionIf<TIn, TOut, TKey>(this IObservable<TIn> observable, Predicate<TIn> condition, Func<TIn, IObservableCache<TOut, TKey>> trueSelector) Parameters Type Name Description IObservable<TIn> observable Predicate<TIn> condition Func<TIn, IObservableCache<TOut, TKey>> trueSelector Returns Type Description IObservable<IChangeSet<TOut, TKey>> Type Parameters Name Description TIn TOut TKey"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.SwitchCollectionIfNotDefault.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.SwitchCollectionIfNotDefault.html",
    "title": "Method SwitchCollectionIfNotDefault | EyeAuras Docs",
    "keywords": "Method SwitchCollectionIfNotDefault SwitchCollectionIfNotDefault<TIn, TOut, TKey>(IObservable<TIn>, Func<TIn, IObservableCache<TOut, TKey>>) Declaration public static IObservable<IChangeSet<TOut, TKey>> SwitchCollectionIfNotDefault<TIn, TOut, TKey>(this IObservable<TIn> observable, Func<TIn, IObservableCache<TOut, TKey>> trueSelector) Parameters Type Name Description IObservable<TIn> observable Func<TIn, IObservableCache<TOut, TKey>> trueSelector Returns Type Description IObservable<IChangeSet<TOut, TKey>> Type Parameters Name Description TIn TOut TKey SwitchCollectionIfNotDefault<TIn, TOut>(IObservable<TIn>, Func<TIn, IObservableList<TOut>>) Declaration public static IObservable<IChangeSet<TOut>> SwitchCollectionIfNotDefault<TIn, TOut>(this IObservable<TIn> observable, Func<TIn, IObservableList<TOut>> trueSelector) Parameters Type Name Description IObservable<TIn> observable Func<TIn, IObservableList<TOut>> trueSelector Returns Type Description IObservable<IChangeSet<TOut>> Type Parameters Name Description TIn TOut"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.ToNotifyCollectionChanged.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.ToNotifyCollectionChanged.html",
    "title": "Method ToNotifyCollectionChanged | EyeAuras Docs",
    "keywords": "Method ToNotifyCollectionChanged ToNotifyCollectionChanged<T>(IObservable<IChangeSet<T>>) Declaration public static IObservable<NotifyCollectionChangedEventArgs> ToNotifyCollectionChanged<T>(this IObservable<IChangeSet<T>> source) Parameters Type Name Description IObservable<IChangeSet<T>> source Returns Type Description IObservable<NotifyCollectionChangedEventArgs> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.ToObservableChangeSet.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.ToObservableChangeSet.html",
    "title": "Method ToObservableChangeSet | EyeAuras Docs",
    "keywords": "Method ToObservableChangeSet ToObservableChangeSet<T>(IObservableList<T>) Declaration public static IObservable<IChangeSet<T>> ToObservableChangeSet<T>(this IObservableList<T> source) Parameters Type Name Description IObservableList<T> source Returns Type Description IObservable<IChangeSet<T>> Type Parameters Name Description T ToObservableChangeSet<T, TKey>(IObservableCache<T, TKey>) Declaration public static IObservable<IChangeSet<T, TKey>> ToObservableChangeSet<T, TKey>(this IObservableCache<T, TKey> source) Parameters Type Name Description IObservableCache<T, TKey> source Returns Type Description IObservable<IChangeSet<T, TKey>> Type Parameters Name Description T TKey ToObservableChangeSet<T>(IReadOnlyObservableCollection<T>) Declaration public static IObservable<IChangeSet<T>> ToObservableChangeSet<T>(this IReadOnlyObservableCollection<T> source) Parameters Type Name Description IReadOnlyObservableCollection<T> source Returns Type Description IObservable<IChangeSet<T>> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.ToSourceCacheEx.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.ToSourceCacheEx.html",
    "title": "Method ToSourceCacheEx | EyeAuras Docs",
    "keywords": "Method ToSourceCacheEx ToSourceCacheEx<T, TKey>(ISourceCache<T, TKey>) Declaration public static ISourceCacheEx<T, TKey> ToSourceCacheEx<T, TKey>(this ISourceCache<T, TKey> source) Parameters Type Name Description ISourceCache<T, TKey> source Returns Type Description ISourceCacheEx<T, TKey> Type Parameters Name Description T TKey"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.ToSourceList.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.ToSourceList.html",
    "title": "Method ToSourceList | EyeAuras Docs",
    "keywords": "Method ToSourceList ToSourceList<T>(IObservable<IChangeSet<T>>) Declaration public static ISourceList<T> ToSourceList<T>(this IObservable<IChangeSet<T>> source) Parameters Type Name Description IObservable<IChangeSet<T>> source Returns Type Description ISourceList<T> Type Parameters Name Description T ToSourceList<T>(IEnumerable<T>) Declaration public static ISourceList<T> ToSourceList<T>(this IEnumerable<T> items) Parameters Type Name Description IEnumerable<T> items Returns Type Description ISourceList<T> Type Parameters Name Description T ToSourceList<T>(IEnumerable<ISourceList<T>>) Declaration [Obsolete(\"DynamicCombiner and ReferenceCountTracker contain a bug that could be reproduced by Edit()ing a list and replacing an item there\")] public static ISourceList<T> ToSourceList<T>(this IEnumerable<ISourceList<T>> lists) Parameters Type Name Description IEnumerable<ISourceList<T>> lists Returns Type Description ISourceList<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.ToSourceListEx.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.ToSourceListEx.html",
    "title": "Method ToSourceListEx | EyeAuras Docs",
    "keywords": "Method ToSourceListEx ToSourceListEx<T>(IObservable<IChangeSet<T>>) Declaration public static ISourceListEx<T> ToSourceListEx<T>(this IObservable<IChangeSet<T>> source) Parameters Type Name Description IObservable<IChangeSet<T>> source Returns Type Description ISourceListEx<T> Type Parameters Name Description T ToSourceListEx<T, TKey>(IObservableCache<T, TKey>) Declaration public static ISourceListEx<T> ToSourceListEx<T, TKey>(this IObservableCache<T, TKey> cache) Parameters Type Name Description IObservableCache<T, TKey> cache Returns Type Description ISourceListEx<T> Type Parameters Name Description T TKey"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.TransformWithInlineUpdate.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.TransformWithInlineUpdate.html",
    "title": "Method TransformWithInlineUpdate | EyeAuras Docs",
    "keywords": "Method TransformWithInlineUpdate TransformWithInlineUpdate<TObject, TKey, TDestination>(IObservable<IChangeSet<TObject, TKey>>, Func<TObject, TDestination>, Action<TDestination, TObject>) Declaration public static IObservable<IChangeSet<TDestination, TKey>> TransformWithInlineUpdate<TObject, TKey, TDestination>(this IObservable<IChangeSet<TObject, TKey>> source, Func<TObject, TDestination> transformFactory, Action<TDestination, TObject> updateAction = null) Parameters Type Name Description IObservable<IChangeSet<TObject, TKey>> source Func<TObject, TDestination> transformFactory Action<TDestination, TObject> updateAction Returns Type Description IObservable<IChangeSet<TDestination, TKey>> Type Parameters Name Description TObject TKey TDestination"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.TryGetValue.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.TryGetValue.html",
    "title": "Method TryGetValue | EyeAuras Docs",
    "keywords": "Method TryGetValue TryGetValue<T, TKey, TResult>(IObservableCache<T, TKey>, TKey, out TResult, Func<T, TResult>) Declaration public static bool TryGetValue<T, TKey, TResult>(this IObservableCache<T, TKey> instance, TKey key, out TResult value, Func<T, TResult> converter) Parameters Type Name Description IObservableCache<T, TKey> instance TKey key TResult value Func<T, TResult> converter Returns Type Description bool Type Parameters Name Description T TKey TResult TryGetValue<T, TKey>(IObservableCache<T, TKey>, TKey, out T) Declaration public static bool TryGetValue<T, TKey>(this IObservableCache<T, TKey> instance, TKey key, out T value) Parameters Type Name Description IObservableCache<T, TKey> instance TKey key T value Returns Type Description bool Type Parameters Name Description T TKey"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.TryRemove.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.TryRemove.html",
    "title": "Method TryRemove | EyeAuras Docs",
    "keywords": "Method TryRemove TryRemove<T, TKey>(ISourceCache<T, TKey>, TKey, out T) Declaration public static bool TryRemove<T, TKey>(this ISourceCache<T, TKey> instance, TKey key, out T value) Parameters Type Name Description ISourceCache<T, TKey> instance TKey key T value Returns Type Description bool Type Parameters Name Description T TKey"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.WatchCurrentValue.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.WatchCurrentValue.html",
    "title": "Method WatchCurrentValue | EyeAuras Docs",
    "keywords": "Method WatchCurrentValue WatchCurrentValue<T, TKey>(IObservable<Change<T, TKey>>) Declaration public static IObservable<T> WatchCurrentValue<T, TKey>(this IObservable<Change<T, TKey>> events) Parameters Type Name Description IObservable<Change<T, TKey>> events Returns Type Description IObservable<T> Type Parameters Name Description T TKey WatchCurrentValue<T, TKey>(IObservable<IChangeSet<T, TKey>>, TKey) Declaration public static IObservable<T> WatchCurrentValue<T, TKey>(this IObservable<IChangeSet<T, TKey>> events, TKey key) Parameters Type Name Description IObservable<IChangeSet<T, TKey>> events TKey key Returns Type Description IObservable<T> Type Parameters Name Description T TKey WatchCurrentValue<T, TKey>(IObservableCache<T, TKey>, TKey) Declaration public static IObservable<T> WatchCurrentValue<T, TKey>(this IObservableCache<T, TKey> cache, TKey key) Parameters Type Name Description IObservableCache<T, TKey> cache TKey key Returns Type Description IObservable<T> Type Parameters Name Description T TKey"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.WhenNestedPropertyChanged.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.WhenNestedPropertyChanged.html",
    "title": "Method WhenNestedPropertyChanged | EyeAuras Docs",
    "keywords": "Method WhenNestedPropertyChanged WhenNestedPropertyChanged<TObject>(IObservable<IChangeSet<TObject>>, params string[]) Watches each item in the collection and notifies when any of them has changed Declaration public static IObservable<EventPattern<PropertyChangedEventArgs>> WhenNestedPropertyChanged<TObject>(this IObservable<IChangeSet<TObject>> source, params string[] propertiesToMonitor) where TObject : INotifyPropertyChanged Parameters Type Name Description IObservable<IChangeSet<TObject>> source The source. string[] propertiesToMonitor specify properties to Monitor, or omit to monitor all property changes Returns Type Description IObservable<EventPattern<PropertyChangedEventArgs>> Type Parameters Name Description TObject The type of the object. Exceptions Type Condition ArgumentNullException"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.WithLogging.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.WithLogging.html",
    "title": "Method WithLogging | EyeAuras Docs",
    "keywords": "Method WithLogging WithLogging<T>(IObservable<IChangeSet<T>>, string, IFluentLog, FluentLogLevel) Declaration public static IObservable<IChangeSet<T>> WithLogging<T>(this IObservable<IChangeSet<T>> source, string name = null, IFluentLog logger = null, FluentLogLevel logLevel = FluentLogLevel.Trace) Parameters Type Name Description IObservable<IChangeSet<T>> source string name IFluentLog logger FluentLogLevel logLevel Returns Type Description IObservable<IChangeSet<T>> Type Parameters Name Description T WithLogging<T, TKey>(IObservable<IChangeSet<T, TKey>>, string, IFluentLog, FluentLogLevel) Declaration public static IObservable<IChangeSet<T, TKey>> WithLogging<T, TKey>(this IObservable<IChangeSet<T, TKey>> source, string name = null, IFluentLog logger = null, FluentLogLevel logLevel = FluentLogLevel.Trace) Parameters Type Name Description IObservable<IChangeSet<T, TKey>> source string name IFluentLog logger FluentLogLevel logLevel Returns Type Description IObservable<IChangeSet<T, TKey>> Type Parameters Name Description T TKey"
  },
  "api/PoeShared.Scaffolding.ChangeSetExtensions.html": {
    "href": "api/PoeShared.Scaffolding.ChangeSetExtensions.html",
    "title": "Class ChangeSetExtensions | EyeAuras Docs",
    "keywords": "Class ChangeSetExtensions Inheritance object ChangeSetExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class ChangeSetExtensions Methods Name Description AsObservableList<T, TKey>(IObservableCache<T, TKey>) AsSourceListEx<T>(IEnumerable<T>) AutoRefreshObservableSynchronized<TObject, TKey, TAny>(IObservable<IChangeSet<TObject, TKey>>, Func<TObject, IObservable<TAny>>, TimeSpan?, IScheduler) Automatically refresh downstream operator. The refresh is triggered when the observable receives a notification. AutoRefreshOnObservableSynchronized<TObject, TAny>(IObservable<IChangeSet<TObject>>, Func<TObject, IObservable<TAny>>, TimeSpan?, IScheduler) Automatically refresh downstream operator. The refresh is triggered when the observable receives a notification. AutoRefreshOnObservableSynchronized<TObject, TKey, TAny>(IObservable<IChangeSet<TObject, TKey>>, Func<TObject, IObservable<TAny>>, TimeSpan?, IScheduler) Automatically refresh downstream operator. The refresh is triggered when the observable receives a notification. BindToCollectionSynchronized<T>(IObservable<IChangeSet<T>>, out IReadOnlyObservableCollection<T>) BindToCollection<T>(IObservable<IChangeSet<T>>, out IReadOnlyObservableCollection<T>) BindToCollection<TKey, TValue>(IObservable<IChangeSet<TValue, TKey>>, out IReadOnlyObservableCollection<TValue>) ChangeKeyDynamically<TObject, TSourceKey, TDestinationKey>(IObservable<IChangeSet<TObject, TSourceKey>>, Expression<Func<TObject, TDestinationKey>>, out IObservableCache<TObject, TDestinationKey>) ComputeIfAbsent<T, TKey>(ISourceCache<T, TKey>, TKey, Func<TKey, T>) Concat<T>(ISourceList<T>, params ISourceList<T>[]) Concat<T>(ISourceList<T>, params T[]) Connect<T>(IReadOnlyObservableCollection<T>) CountIf<T>(IObservable<IChangeSet<T>>) EditDiff<T, TKey>(ISourceCache<T, TKey>, IEnumerable<T>) EditDiff<T, TKey>(ISourceCache<T, TKey>, T) EditGet<TItem, T>(ISourceList<TItem>, Func<IExtendedList<TItem>, T>) Flatten<TObject>(IObservable<IChangeSet<TObject>>, Func<TObject, IObservable<IChangeSet<TObject>>>) GetOrAdd<T, TKey>(ISourceCache<T, TKey>, TKey, Func<TKey, T>) GetOrDefault<T, TKey>(IObservableCache<T, TKey>, TKey) MoveItemDown<T>(ISourceList<T>, T) MoveItemToBottom<T>(ISourceList<T>, T) MoveItemToTop<T>(ISourceList<T>, T) MoveItemUp<T>(ISourceList<T>, T) PopulateFrom<T, TKey, T1>(ISourceCache<T, TKey>, params ISourceList<T1>[]) PopulateFrom<T, TKey, T1, T2>(ISourceCache<T, TKey>, IObservableList<T1>, IObservableList<T2>) PopulateFrom<T, TKey, T1, T2, T3>(ISourceCache<T, TKey>, IObservableList<T1>, IObservableList<T2>, IObservableList<T3>) PopulateFrom<T, TKey, T1, T2, T3, T4>(ISourceCache<T, TKey>, IObservableList<T1>, IObservableList<T2>, IObservableList<T3>, IObservableList<T4>) PopulateFrom<T, TKey, T1, T2, T3, T4, T5>(ISourceCache<T, TKey>, IObservableList<T1>, IObservableList<T2>, IObservableList<T3>, IObservableList<T4>, IObservableList<T5>) PopulateFrom<T, TKey, T1, T2, T3, T4, T5, T6>(ISourceCache<T, TKey>, IObservableList<T1>, IObservableList<T2>, IObservableList<T3>, IObservableList<T4>, IObservableList<T5>, IObservableList<T6>) SwitchCollectionIfNotDefault<TIn, TOut>(IObservable<TIn>, Func<TIn, IObservableList<TOut>>) SwitchCollectionIfNotDefault<TIn, TOut, TKey>(IObservable<TIn>, Func<TIn, IObservableCache<TOut, TKey>>) SwitchCollectionIf<TIn, TOut>(IObservable<TIn>, Predicate<TIn>, Func<TIn, IObservableList<TOut>>) SwitchCollectionIf<TIn, TOut>(IObservable<TIn>, Predicate<TIn>, Func<TIn, IObservableList<TOut>>, Func<TIn, IObservableList<TOut>>) SwitchCollectionIf<TIn, TOut, TKey>(IObservable<TIn>, Predicate<TIn>, Func<TIn, IObservableCache<TOut, TKey>>) SwitchCollectionIf<TIn, TOut, TKey>(IObservable<TIn>, Predicate<TIn>, Func<TIn, IObservableCache<TOut, TKey>>, Func<TIn, IObservableCache<TOut, TKey>>) ToNotifyCollectionChanged<T>(IObservable<IChangeSet<T>>) ToObservableChangeSet<T>(IObservableList<T>) ToObservableChangeSet<T>(IReadOnlyObservableCollection<T>) ToObservableChangeSet<T, TKey>(IObservableCache<T, TKey>) ToSourceCacheEx<T, TKey>(ISourceCache<T, TKey>) ToSourceListEx<T>(IObservable<IChangeSet<T>>) ToSourceListEx<T, TKey>(IObservableCache<T, TKey>) ToSourceList<T>(IEnumerable<ISourceList<T>>) ToSourceList<T>(IEnumerable<T>) ToSourceList<T>(IObservable<IChangeSet<T>>) TransformWithInlineUpdate<TObject, TKey, TDestination>(IObservable<IChangeSet<TObject, TKey>>, Func<TObject, TDestination>, Action<TDestination, TObject>) TryGetValue<T, TKey>(IObservableCache<T, TKey>, TKey, out T) TryGetValue<T, TKey, TResult>(IObservableCache<T, TKey>, TKey, out TResult, Func<T, TResult>) TryRemove<T, TKey>(ISourceCache<T, TKey>, TKey, out T) WatchCurrentValue<T, TKey>(IObservableCache<T, TKey>, TKey) WatchCurrentValue<T, TKey>(IObservable<Change<T, TKey>>) WatchCurrentValue<T, TKey>(IObservable<IChangeSet<T, TKey>>, TKey) WhenNestedPropertyChanged<TObject>(IObservable<IChangeSet<TObject>>, params string[]) Watches each item in the collection and notifies when any of them has changed WithLogging<T>(IObservable<IChangeSet<T>>, string, IFluentLog, FluentLogLevel) WithLogging<T, TKey>(IObservable<IChangeSet<T, TKey>>, string, IFluentLog, FluentLogLevel)"
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.-ctor.html",
    "title": "Constructor CircularBuffer | EyeAuras Docs",
    "keywords": "Constructor CircularBuffer CircularBuffer(int) Declaration public CircularBuffer(int capacity) Parameters Type Name Description int capacity CircularBuffer(T[]) Declaration public CircularBuffer(T[] items) Parameters Type Name Description T[] items CircularBuffer(int, T[]) Initializes a new instance of the CircularBuffer<T> class. Declaration public CircularBuffer(int capacity, T[] items) Parameters Type Name Description int capacity Buffer capacity. Must be positive. T[] items Items to fill buffer with. Items length must be less than capacity. Suggestion: use Skip(x).Take(y).ToArray() to build this argument from any enumerable."
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.Back.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.Back.html",
    "title": "Method Back | EyeAuras Docs",
    "keywords": "Method Back Back() Element at the back of the buffer - this[Size - 1]. Declaration public T Back() Returns Type Description T The value of the element of type T at the back of the buffer."
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.Capacity.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.Capacity.html",
    "title": "Property Capacity | EyeAuras Docs",
    "keywords": "Property Capacity Capacity Maximum capacity of the buffer. Elements pushed into the buffer after maximum capacity is reached (IsFull = true), will remove an element. Declaration public int Capacity { get; } Property Value Type Description int"
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.ClearFill.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.ClearFill.html",
    "title": "Method ClearFill | EyeAuras Docs",
    "keywords": "Method ClearFill ClearFill() Fills an array with Declaration public void ClearFill()"
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.CopyTo.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.CopyTo.html",
    "title": "Method CopyTo | EyeAuras Docs",
    "keywords": "Method CopyTo CopyTo(T[]) Declaration public void CopyTo(T[] output) Parameters Type Name Description T[] output"
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.Count.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public int Count { get; } Property Value Type Description int Implements IReadOnlyCollection<T>.Count"
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.Front.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.Front.html",
    "title": "Method Front | EyeAuras Docs",
    "keywords": "Method Front Front() Element at the front of the buffer - this[0]. Declaration public T Front() Returns Type Description T The value of the element of type T at the front of the buffer."
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.GetEnumerator.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.GetEnumerator.html",
    "title": "Method GetEnumerator | EyeAuras Docs",
    "keywords": "Method GetEnumerator GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator<T> Implements IEnumerable<T>.GetEnumerator()"
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.IsEmpty.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.IsEmpty.html",
    "title": "Property IsEmpty | EyeAuras Docs",
    "keywords": "Property IsEmpty IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.IsFull.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.IsFull.html",
    "title": "Property IsFull | EyeAuras Docs",
    "keywords": "Property IsFull IsFull Declaration public bool IsFull { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.Item.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.Item.html",
    "title": "Property this | EyeAuras Docs",
    "keywords": "Property this this[int] Declaration public T this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description T Implements IReadOnlyList<T>.this[int]"
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.PopBack.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.PopBack.html",
    "title": "Method PopBack | EyeAuras Docs",
    "keywords": "Method PopBack PopBack() Removes the element at the back of the buffer. Decreasing the Buffer size by 1. Declaration public T PopBack() Returns Type Description T"
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.PopFront.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.PopFront.html",
    "title": "Method PopFront | EyeAuras Docs",
    "keywords": "Method PopFront PopFront() Removes the element at the front of the buffer. Decreasing the Buffer size by 1. Declaration public void PopFront()"
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.PushBack.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.PushBack.html",
    "title": "Method PushBack | EyeAuras Docs",
    "keywords": "Method PushBack PushBack(T) Pushes a new element to the back of the buffer. Back()/this[Size-1] will now return this element. When the buffer is full, the element at Front()/this[0] will be popped to allow for this new element to fit. Declaration public void PushBack(T item) Parameters Type Name Description T item Item to push to the back of the buffer"
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.PushFront.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.PushFront.html",
    "title": "Method PushFront | EyeAuras Docs",
    "keywords": "Method PushFront PushFront(T) Pushes a new element to the front of the buffer. Front()/this[0] will now return this element. When the buffer is full, the element at Back()/this[Size-1] will be popped to allow for this new element to fit. Declaration public void PushFront(T item) Parameters Type Name Description T item Item to push to the front of the buffer"
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.Size.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.Size.html",
    "title": "Property Size | EyeAuras Docs",
    "keywords": "Property Size Size Current buffer size (the number of elements that the buffer has). Declaration public int Size { get; } Property Value Type Description int"
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.ToArray.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.ToArray.html",
    "title": "Method ToArray | EyeAuras Docs",
    "keywords": "Method ToArray ToArray() Copies the buffer contents to an array, according to the logical contents of the buffer (i.e. independent of the internal order/contents) Declaration public T[] ToArray() Returns Type Description T[] A new array with a copy of the buffer contents."
  },
  "api/PoeShared.Scaffolding.CircularBuffer-1.html": {
    "href": "api/PoeShared.Scaffolding.CircularBuffer-1.html",
    "title": "Class CircularBuffer<T> | EyeAuras Docs",
    "keywords": "Class CircularBuffer<T> Circular buffer. When writing to a full buffer: PushBack -> removes this[0] / Front() PushFront -> removes this[Size-1] / Back() this implementation is inspired by http://www.boost.org/doc/libs/1_53_0/libs/circular_buffer/doc/circular_buffer.html because I liked their interface. Inheritance object CircularBuffer<T> Implements IReadOnlyList<T> IReadOnlyCollection<T> IEnumerable<T> IEnumerable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public class CircularBuffer<T> : IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors Name Description CircularBuffer(int) CircularBuffer(int, T[]) Initializes a new instance of the CircularBuffer<T> class. CircularBuffer(T[]) Properties Name Description Capacity Maximum capacity of the buffer. Elements pushed into the buffer after maximum capacity is reached (IsFull = true), will remove an element. Count IsEmpty IsFull this[int] Size Current buffer size (the number of elements that the buffer has). Methods Name Description Back() Element at the back of the buffer - this[Size - 1]. ClearFill() Fills an array with CopyTo(T[]) Front() Element at the front of the buffer - this[0]. GetEnumerator() PopBack() Removes the element at the back of the buffer. Decreasing the Buffer size by 1. PopFront() Removes the element at the front of the buffer. Decreasing the Buffer size by 1. PushBack(T) Pushes a new element to the back of the buffer. Back()/this[Size-1] will now return this element. When the buffer is full, the element at Front()/this[0] will be popped to allow for this new element to fit. PushFront(T) Pushes a new element to the front of the buffer. Front()/this[0] will now return this element. When the buffer is full, the element at Back()/this[Size-1] will be popped to allow for this new element to fit. ToArray() Copies the buffer contents to an array, according to the logical contents of the buffer (i.e. independent of the internal order/contents) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ChangeSetExtensions.AsSourceListEx<T>(IEnumerable<T>) ChangeSetExtensions.ToSourceList<T>(IEnumerable<T>) EnumerableExtensions.EmptyIfNull<T>(IEnumerable<T>) EnumerableExtensions.ForEachAsync<T>(IEnumerable<T>, Func<T, Task>) EnumerableExtensions.ForEach<T>(IEnumerable<T>, Action<T>) EnumerableExtensions.Intersperse<T>(IEnumerable<T>, Func<T, T>) EnumerableExtensions.Intersperse<T>(IEnumerable<T>, T) EnumerableExtensions.IsEmpty<T>(IEnumerable<T>) EnumerableExtensions.IsUnique<T>(IEnumerable<T>) EnumerableExtensions.PickRandom<T>(IEnumerable<T>) EnumerableExtensions.Randomize<T>(IEnumerable<T>) EnumerableExtensions.SelectSafe<T, TResult>(IEnumerable<T>, Func<T, TResult>) EnumerableExtensions.SelectSafe<T, TResult>(IEnumerable<T>, Func<T, TResult>, Action<T, Exception>) EnumerableExtensions.ToDictionaryWithReplacement<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>) EnumerableExtensions.ToDictionaryWithThrow<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>) EnumerableExtensions.ToDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>, Func<(TKey key, TValue existingValue, TValue newValue), TValue>) EnumerableExtensions.ToObservableCollection<T>(IEnumerable<T>) EnumerableExtensions.ToReadOnlyObservableCollection<T>(IEnumerable<T>) EnumerableExtensions.ToVariations<T>(IEnumerable<T>) ObjectExtensions.DumpToNamedTable<T>(IEnumerable<T>, string, int, string) ObjectExtensions.DumpToNamedTable<T>(IEnumerable<T>, string, string) ObjectExtensions.DumpToString<T>(IEnumerable<T>) ObjectExtensions.DumpToTable<T>(IEnumerable<T>, int) ObjectExtensions.DumpToTable<T>(IEnumerable<T>, string) ObjectExtensions.DumpToTable<T>(IEnumerable<T>, string, string, int?) ObjectExtensions.ToStringTable<T>(IEnumerable<T>, string) EnumerableExtensions.Subrange<T>(IReadOnlyList<T>, int, int) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.-ctor.html",
    "title": "Constructor CircularSourceList | EyeAuras Docs",
    "keywords": "Constructor CircularSourceList CircularSourceList(int) Declaration public CircularSourceList(int capacity) Parameters Type Name Description int capacity"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.Add.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.Add.html",
    "title": "Method Add | EyeAuras Docs",
    "keywords": "Method Add Add(T) Declaration public void Add(T item) Parameters Type Name Description T item Implements ICollection<T>.Add(T)"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.Clear.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.Clear.html",
    "title": "Method Clear | EyeAuras Docs",
    "keywords": "Method Clear Clear() Declaration public void Clear() Implements ICollection<T>.Clear()"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.Collection.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.Collection.html",
    "title": "Property Collection | EyeAuras Docs",
    "keywords": "Property Collection Collection Declaration public IReadOnlyObservableCollection<T> Collection { get; } Property Value Type Description IReadOnlyObservableCollection<T> Implements IObservableListEx<T>.Collection"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.Connect.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.Connect.html",
    "title": "Method Connect | EyeAuras Docs",
    "keywords": "Method Connect Connect(Func<T, bool>) Declaration public IObservable<IChangeSet<T>> Connect(Func<T, bool> predicate = null) Parameters Type Name Description Func<T, bool> predicate Returns Type Description IObservable<IChangeSet<T>>"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.Contains.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.Contains.html",
    "title": "Method Contains | EyeAuras Docs",
    "keywords": "Method Contains Contains(T) Declaration public bool Contains(T item) Parameters Type Name Description T item Returns Type Description bool Implements ICollection<T>.Contains(T)"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.CopyTo.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.CopyTo.html",
    "title": "Method CopyTo | EyeAuras Docs",
    "keywords": "Method CopyTo CopyTo(T[], int) Declaration public void CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array int arrayIndex Implements ICollection<T>.CopyTo(T[], int)"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.Count.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public int Count { get; } Property Value Type Description int Implements ICollection<T>.Count"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.CountChanged.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.CountChanged.html",
    "title": "Property CountChanged | EyeAuras Docs",
    "keywords": "Property CountChanged CountChanged Declaration public IObservable<int> CountChanged { get; } Property Value Type Description IObservable<int>"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.GetEnumerator.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.GetEnumerator.html",
    "title": "Method GetEnumerator | EyeAuras Docs",
    "keywords": "Method GetEnumerator GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator<T> Implements IEnumerable<T>.GetEnumerator()"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.IsReadOnly.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.IsReadOnly.html",
    "title": "Property IsReadOnly | EyeAuras Docs",
    "keywords": "Property IsReadOnly IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool Implements ICollection<T>.IsReadOnly"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.Items.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.Items.html",
    "title": "Property Items | EyeAuras Docs",
    "keywords": "Property Items Items Declaration public IEnumerable<T> Items { get; } Property Value Type Description IEnumerable<T>"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.Preview.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.Preview.html",
    "title": "Method Preview | EyeAuras Docs",
    "keywords": "Method Preview Preview(Func<T, bool>) Declaration public IObservable<IChangeSet<T>> Preview(Func<T, bool> predicate = null) Parameters Type Name Description Func<T, bool> predicate Returns Type Description IObservable<IChangeSet<T>>"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.Remove.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.Remove.html",
    "title": "Method Remove | EyeAuras Docs",
    "keywords": "Method Remove Remove(T) Declaration public bool Remove(T item) Parameters Type Name Description T item Returns Type Description bool Implements ICollection<T>.Remove(T)"
  },
  "api/PoeShared.Scaffolding.CircularSourceList-1.html": {
    "href": "api/PoeShared.Scaffolding.CircularSourceList-1.html",
    "title": "Class CircularSourceList<T> | EyeAuras Docs",
    "keywords": "Class CircularSourceList<T> Not thread safe ! There is a bug in ChangeAwareList(?) that leads to ArgumentOutOfRange in some cases Inheritance object DisposableReactiveObject CircularSourceList<T> Implements INotifyPropertyChanged IObservableListEx<T> IObservableList<T> IDisposable ICollection<T> IEnumerable<T> IEnumerable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class CircularSourceList<T> : DisposableReactiveObject, INotifyPropertyChanged, IObservableListEx<T>, IObservableList<T>, IDisposable, ICollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors Name Description CircularSourceList(int) Properties Name Description Collection Count CountChanged IsReadOnly Items Methods Name Description Add(T) Clear() Connect(Func<T, bool>) Contains(T) CopyTo(T[], int) GetEnumerator() Preview(Func<T, bool>) Remove(T) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.CliExtensions.ListenAndLogAsync.html": {
    "href": "api/PoeShared.Scaffolding.CliExtensions.ListenAndLogAsync.html",
    "title": "Method ListenAndLogAsync | EyeAuras Docs",
    "keywords": "Method ListenAndLogAsync ListenAndLogAsync(Command, CancellationToken) Declaration public static IAsyncEnumerable<CommandEvent> ListenAndLogAsync(this Command command, CancellationToken cancellationToken = default) Parameters Type Name Description Command command CancellationToken cancellationToken Returns Type Description IAsyncEnumerable<CommandEvent>"
  },
  "api/PoeShared.Scaffolding.CliExtensions.ListenAndLogAsyncErroneous.html": {
    "href": "api/PoeShared.Scaffolding.CliExtensions.ListenAndLogAsyncErroneous.html",
    "title": "Method ListenAndLogAsyncErroneous | EyeAuras Docs",
    "keywords": "Method ListenAndLogAsyncErroneous ListenAndLogAsyncErroneous(Command, CancellationToken) There is a problem with CliWrap ListenAsync - it does not correctly process cancellation and throws unobserved exception upon GC It happens because SemaphoreSlim used by Channel is already disposed(due to cancellation) when the process completes Declaration public static IAsyncEnumerable<CommandEvent> ListenAndLogAsyncErroneous(this Command command, CancellationToken cancellationToken = default) Parameters Type Name Description Command command CancellationToken cancellationToken Returns Type Description IAsyncEnumerable<CommandEvent>"
  },
  "api/PoeShared.Scaffolding.CliExtensions.html": {
    "href": "api/PoeShared.Scaffolding.CliExtensions.html",
    "title": "Class CliExtensions | EyeAuras Docs",
    "keywords": "Class CliExtensions Inheritance object CliExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class CliExtensions Methods Name Description ListenAndLogAsync(Command, CancellationToken) ListenAndLogAsyncErroneous(Command, CancellationToken) There is a problem with CliWrap ListenAsync - it does not correctly process cancellation and throws unobserved exception upon GC It happens because SemaphoreSlim used by Channel is already disposed(due to cancellation) when the process completes"
  },
  "api/PoeShared.Scaffolding.CloseableReactiveObject.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.CloseableReactiveObject.-ctor.html",
    "title": "Constructor CloseableReactiveObject | EyeAuras Docs",
    "keywords": "Constructor CloseableReactiveObject CloseableReactiveObject() Declaration protected CloseableReactiveObject()"
  },
  "api/PoeShared.Scaffolding.CloseableReactiveObject.CloseController.html": {
    "href": "api/PoeShared.Scaffolding.CloseableReactiveObject.CloseController.html",
    "title": "Property CloseController | EyeAuras Docs",
    "keywords": "Property CloseController CloseController Declaration public ICloseController CloseController { get; set; } Property Value Type Description ICloseController Implements ICloseable.CloseController"
  },
  "api/PoeShared.Scaffolding.CloseableReactiveObject.html": {
    "href": "api/PoeShared.Scaffolding.CloseableReactiveObject.html",
    "title": "Class CloseableReactiveObject | EyeAuras Docs",
    "keywords": "Class CloseableReactiveObject Inheritance object DisposableReactiveObject CloseableReactiveObject Implements IDisposable ICloseable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public abstract class CloseableReactiveObject : DisposableReactiveObject, IDisposable, ICloseable, INotifyPropertyChanged Constructors Name Description CloseableReactiveObject() Properties Name Description CloseController Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ComparableExtensions.IsBetween.html": {
    "href": "api/PoeShared.Scaffolding.ComparableExtensions.IsBetween.html",
    "title": "Method IsBetween | EyeAuras Docs",
    "keywords": "Method IsBetween IsBetween<T>(T, T, T, bool) Declaration public static bool IsBetween<T>(this T value, T lower, T upper, bool inclusive) where T : IComparable<T> Parameters Type Name Description T value T lower T upper bool inclusive Returns Type Description bool Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ComparableExtensions.IsGreaterOrEqual.html": {
    "href": "api/PoeShared.Scaffolding.ComparableExtensions.IsGreaterOrEqual.html",
    "title": "Method IsGreaterOrEqual | EyeAuras Docs",
    "keywords": "Method IsGreaterOrEqual IsGreaterOrEqual<T>(T, T) Declaration public static bool IsGreaterOrEqual<T>(this T value, T other) where T : IComparable<T> Parameters Type Name Description T value T other Returns Type Description bool Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ComparableExtensions.IsGreaterThan.html": {
    "href": "api/PoeShared.Scaffolding.ComparableExtensions.IsGreaterThan.html",
    "title": "Method IsGreaterThan | EyeAuras Docs",
    "keywords": "Method IsGreaterThan IsGreaterThan<T>(T, T) Declaration public static bool IsGreaterThan<T>(this T value, T other) where T : IComparable<T> Parameters Type Name Description T value T other Returns Type Description bool Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ComparableExtensions.IsLessThan.html": {
    "href": "api/PoeShared.Scaffolding.ComparableExtensions.IsLessThan.html",
    "title": "Method IsLessThan | EyeAuras Docs",
    "keywords": "Method IsLessThan IsLessThan<T>(T, T) Declaration public static bool IsLessThan<T>(this T value, T other) where T : IComparable<T> Parameters Type Name Description T value T other Returns Type Description bool Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ComparableExtensions.IsLessThanOrEqual.html": {
    "href": "api/PoeShared.Scaffolding.ComparableExtensions.IsLessThanOrEqual.html",
    "title": "Method IsLessThanOrEqual | EyeAuras Docs",
    "keywords": "Method IsLessThanOrEqual IsLessThanOrEqual<T>(T, T) Declaration public static bool IsLessThanOrEqual<T>(this T value, T other) where T : IComparable<T> Parameters Type Name Description T value T other Returns Type Description bool Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ComparableExtensions.html": {
    "href": "api/PoeShared.Scaffolding.ComparableExtensions.html",
    "title": "Class ComparableExtensions | EyeAuras Docs",
    "keywords": "Class ComparableExtensions Inheritance object ComparableExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class ComparableExtensions Methods Name Description IsBetween<T>(T, T, T, bool) IsGreaterOrEqual<T>(T, T) IsGreaterThan<T>(T, T) IsLessThanOrEqual<T>(T, T) IsLessThan<T>(T, T)"
  },
  "api/PoeShared.Scaffolding.ComplexProgressTracker.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.ComplexProgressTracker.-ctor.html",
    "title": "Constructor ComplexProgressTracker | EyeAuras Docs",
    "keywords": "Constructor ComplexProgressTracker ComplexProgressTracker() Declaration public ComplexProgressTracker()"
  },
  "api/PoeShared.Scaffolding.ComplexProgressTracker.ProgressPercent.html": {
    "href": "api/PoeShared.Scaffolding.ComplexProgressTracker.ProgressPercent.html",
    "title": "Property ProgressPercent | EyeAuras Docs",
    "keywords": "Property ProgressPercent ProgressPercent Declaration public int ProgressPercent { get; } Property Value Type Description int"
  },
  "api/PoeShared.Scaffolding.ComplexProgressTracker.Update.html": {
    "href": "api/PoeShared.Scaffolding.ComplexProgressTracker.Update.html",
    "title": "Method Update | EyeAuras Docs",
    "keywords": "Method Update Update(int, string) Declaration public void Update(int progressPercent, string taskName) Parameters Type Name Description int progressPercent string taskName"
  },
  "api/PoeShared.Scaffolding.ComplexProgressTracker.html": {
    "href": "api/PoeShared.Scaffolding.ComplexProgressTracker.html",
    "title": "Class ComplexProgressTracker | EyeAuras Docs",
    "keywords": "Class ComplexProgressTracker Inheritance object DisposableReactiveObject ComplexProgressTracker Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class ComplexProgressTracker : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Constructors Name Description ComplexProgressTracker() Properties Name Description ProgressPercent Methods Name Description Update(int, string) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ConfigurableReactiveObjectWithProperties-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.ConfigurableReactiveObjectWithProperties-1.-ctor.html",
    "title": "Constructor ConfigurableReactiveObjectWithProperties | EyeAuras Docs",
    "keywords": "Constructor ConfigurableReactiveObjectWithProperties ConfigurableReactiveObjectWithProperties(TProperties) Declaration protected ConfigurableReactiveObjectWithProperties(TProperties properties) Parameters Type Name Description TProperties properties"
  },
  "api/PoeShared.Scaffolding.ConfigurableReactiveObjectWithProperties-1.Properties.html": {
    "href": "api/PoeShared.Scaffolding.ConfigurableReactiveObjectWithProperties-1.Properties.html",
    "title": "Property Properties | EyeAuras Docs",
    "keywords": "Property Properties Properties Declaration public TProperties Properties { get; } Property Value Type Description TProperties Implements IConfigurableReactiveObject<TProperties>.Properties"
  },
  "api/PoeShared.Scaffolding.ConfigurableReactiveObjectWithProperties-1.VisitSave.html": {
    "href": "api/PoeShared.Scaffolding.ConfigurableReactiveObjectWithProperties-1.VisitSave.html",
    "title": "Method VisitSave | EyeAuras Docs",
    "keywords": "Method VisitSave VisitSave(TProperties) Declaration protected abstract void VisitSave(TProperties target) Parameters Type Name Description TProperties target"
  },
  "api/PoeShared.Scaffolding.ConfigurableReactiveObjectWithProperties-1.html": {
    "href": "api/PoeShared.Scaffolding.ConfigurableReactiveObjectWithProperties-1.html",
    "title": "Class ConfigurableReactiveObjectWithProperties<TProperties> | EyeAuras Docs",
    "keywords": "Class ConfigurableReactiveObjectWithProperties<TProperties> Inheritance object DisposableReactiveObject ReactiveObjectWithProperties<TProperties> ConfigurableReactiveObjectWithProperties<TProperties> Implements IConfigurableReactiveObject<TProperties> IDisposable INotifyPropertyChanged Inherited Members ReactiveObjectWithProperties<TProperties>.InitialProperties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public abstract class ConfigurableReactiveObjectWithProperties<TProperties> : ReactiveObjectWithProperties<TProperties>, IConfigurableReactiveObject<TProperties>, IDisposable, INotifyPropertyChanged where TProperties : IPoeEyeConfigVersioned, IHasValidation, new() Type Parameters Name Description TProperties Constructors Name Description ConfigurableReactiveObjectWithProperties(TProperties) Properties Name Description Properties Methods Name Description VisitSave(TProperties) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.DateTimeUtils.ConvertFromUnixTimestamp.html": {
    "href": "api/PoeShared.Scaffolding.DateTimeUtils.ConvertFromUnixTimestamp.html",
    "title": "Method ConvertFromUnixTimestamp | EyeAuras Docs",
    "keywords": "Method ConvertFromUnixTimestamp ConvertFromUnixTimestamp(double) Declaration public static DateTime ConvertFromUnixTimestamp(double timestamp) Parameters Type Name Description double timestamp Returns Type Description DateTime"
  },
  "api/PoeShared.Scaffolding.DateTimeUtils.ConvertToUnixTimestamp.html": {
    "href": "api/PoeShared.Scaffolding.DateTimeUtils.ConvertToUnixTimestamp.html",
    "title": "Method ConvertToUnixTimestamp | EyeAuras Docs",
    "keywords": "Method ConvertToUnixTimestamp ConvertToUnixTimestamp(DateTime) Declaration public static double ConvertToUnixTimestamp(DateTime date) Parameters Type Name Description DateTime date Returns Type Description double"
  },
  "api/PoeShared.Scaffolding.DateTimeUtils.html": {
    "href": "api/PoeShared.Scaffolding.DateTimeUtils.html",
    "title": "Class DateTimeUtils | EyeAuras Docs",
    "keywords": "Class DateTimeUtils Inheritance object DateTimeUtils Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class DateTimeUtils Methods Name Description ConvertFromUnixTimestamp(double) ConvertToUnixTimestamp(DateTime)"
  },
  "api/PoeShared.Scaffolding.DictionaryExtensions.Add.html": {
    "href": "api/PoeShared.Scaffolding.DictionaryExtensions.Add.html",
    "title": "Method Add | EyeAuras Docs",
    "keywords": "Method Add Add<TKey, TValue>(IDictionary<TKey, TValue>, KeyValuePair<TKey, TValue>) Declaration public static void Add<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, KeyValuePair<TKey, TValue> item) Parameters Type Name Description IDictionary<TKey, TValue> dictionary KeyValuePair<TKey, TValue> item Type Parameters Name Description TKey TValue"
  },
  "api/PoeShared.Scaffolding.DictionaryExtensions.AddOrUpdate.html": {
    "href": "api/PoeShared.Scaffolding.DictionaryExtensions.AddOrUpdate.html",
    "title": "Method AddOrUpdate | EyeAuras Docs",
    "keywords": "Method AddOrUpdate AddOrUpdate<TKey, TValue>(IDictionary<TKey, TValue>, TKey, Func<TValue>) Declaration public static TValue AddOrUpdate<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key, Func<TValue> newValueFactory) Parameters Type Name Description IDictionary<TKey, TValue> dictionary TKey key Func<TValue> newValueFactory Returns Type Description TValue Type Parameters Name Description TKey TValue AddOrUpdate<TKey, TValue>(IDictionary<TKey, TValue>, TKey, Func<TValue>, Func<TKey, TValue, TValue>) Declaration public static TValue AddOrUpdate<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key, Func<TValue> newValueFactory, Func<TKey, TValue, TValue> updateValueFactory) Parameters Type Name Description IDictionary<TKey, TValue> dictionary TKey key Func<TValue> newValueFactory Func<TKey, TValue, TValue> updateValueFactory Returns Type Description TValue Type Parameters Name Description TKey TValue"
  },
  "api/PoeShared.Scaffolding.DictionaryExtensions.GetOrAdd.html": {
    "href": "api/PoeShared.Scaffolding.DictionaryExtensions.GetOrAdd.html",
    "title": "Method GetOrAdd | EyeAuras Docs",
    "keywords": "Method GetOrAdd GetOrAdd<TKey, TValue>(IDictionary<TKey, TValue>, TKey, Func<TKey, TValue>) Declaration public static TValue GetOrAdd<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key, Func<TKey, TValue> valueFactory) Parameters Type Name Description IDictionary<TKey, TValue> dictionary TKey key Func<TKey, TValue> valueFactory Returns Type Description TValue Type Parameters Name Description TKey TValue"
  },
  "api/PoeShared.Scaffolding.DictionaryExtensions.GetOrDefault.html": {
    "href": "api/PoeShared.Scaffolding.DictionaryExtensions.GetOrDefault.html",
    "title": "Method GetOrDefault | EyeAuras Docs",
    "keywords": "Method GetOrDefault GetOrDefault<TKey, TValue>(IDictionary<TKey, TValue>, TKey) Declaration public static TValue GetOrDefault<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key) Parameters Type Name Description IDictionary<TKey, TValue> dictionary TKey key Returns Type Description TValue Type Parameters Name Description TKey TValue"
  },
  "api/PoeShared.Scaffolding.DictionaryExtensions.TryGetValue.html": {
    "href": "api/PoeShared.Scaffolding.DictionaryExtensions.TryGetValue.html",
    "title": "Method TryGetValue | EyeAuras Docs",
    "keywords": "Method TryGetValue TryGetValue<TKey, TValue>(Indexer<TKey, TValue>, TKey, out TValue) Declaration public static bool TryGetValue<TKey, TValue>(this BiMap<TKey, TValue>.Indexer<TKey, TValue> dictionaryIndexer, TKey key, out TValue value) Parameters Type Name Description Indexer<TKey, TValue> dictionaryIndexer TKey key TValue value Returns Type Description bool Type Parameters Name Description TKey TValue"
  },
  "api/PoeShared.Scaffolding.DictionaryExtensions.TryRemove.html": {
    "href": "api/PoeShared.Scaffolding.DictionaryExtensions.TryRemove.html",
    "title": "Method TryRemove | EyeAuras Docs",
    "keywords": "Method TryRemove TryRemove<TKey, TValue>(IDictionary<TKey, TValue>, TKey, out TValue) Declaration public static bool TryRemove<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key, out TValue value) Parameters Type Name Description IDictionary<TKey, TValue> dictionary TKey key TValue value Returns Type Description bool Type Parameters Name Description TKey TValue"
  },
  "api/PoeShared.Scaffolding.DictionaryExtensions.html": {
    "href": "api/PoeShared.Scaffolding.DictionaryExtensions.html",
    "title": "Class DictionaryExtensions | EyeAuras Docs",
    "keywords": "Class DictionaryExtensions Inheritance object DictionaryExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class DictionaryExtensions Methods Name Description AddOrUpdate<TKey, TValue>(IDictionary<TKey, TValue>, TKey, Func<TValue>) AddOrUpdate<TKey, TValue>(IDictionary<TKey, TValue>, TKey, Func<TValue>, Func<TKey, TValue, TValue>) Add<TKey, TValue>(IDictionary<TKey, TValue>, KeyValuePair<TKey, TValue>) GetOrAdd<TKey, TValue>(IDictionary<TKey, TValue>, TKey, Func<TKey, TValue>) GetOrDefault<TKey, TValue>(IDictionary<TKey, TValue>, TKey) TryGetValue<TKey, TValue>(Indexer<TKey, TValue>, TKey, out TValue) TryRemove<TKey, TValue>(IDictionary<TKey, TValue>, TKey, out TValue)"
  },
  "api/PoeShared.Scaffolding.DirectoryInfoExtensions.GetFilesSafe.html": {
    "href": "api/PoeShared.Scaffolding.DirectoryInfoExtensions.GetFilesSafe.html",
    "title": "Method GetFilesSafe | EyeAuras Docs",
    "keywords": "Method GetFilesSafe GetFilesSafe(DirectoryInfo, string, SearchOption) Recursively retrieves files from the specified directory and its subdirectories matching a given search pattern. This method will skip any inaccessible directories due to permission issues and continue with the next accessible directory. Declaration public static IReadOnlyList<FileInfo> GetFilesSafe(this DirectoryInfo directory, string searchPattern, SearchOption searchOption = SearchOption.TopDirectoryOnly) Parameters Type Name Description DirectoryInfo directory The directory from which to start the search. string searchPattern The search string to match against the names of files in the directory. SearchOption searchOption Returns Type Description IReadOnlyList<FileInfo> A list of FileInfo objects representing the files found that match the search pattern."
  },
  "api/PoeShared.Scaffolding.DirectoryInfoExtensions.IsDirOrSubDir.html": {
    "href": "api/PoeShared.Scaffolding.DirectoryInfoExtensions.IsDirOrSubDir.html",
    "title": "Method IsDirOrSubDir | EyeAuras Docs",
    "keywords": "Method IsDirOrSubDir IsDirOrSubDir(DirectoryInfo, DirectoryInfo) Checks if a given path is a directory or a subdirectory of another. Declaration public static bool IsDirOrSubDir(this DirectoryInfo parentDir, DirectoryInfo candidatePath) Parameters Type Name Description DirectoryInfo parentDir Parent directory path. DirectoryInfo candidatePath Potential subdirectory path. Returns Type Description bool Boolean value indicating whether the candidate is a subdirectory of parentDir, or is the same as parentDir. Examples IsDirOrSubDir(\"C:\\\\temp\", \"C:\\\\\"); //Returns true"
  },
  "api/PoeShared.Scaffolding.DirectoryInfoExtensions.IsParentOf.html": {
    "href": "api/PoeShared.Scaffolding.DirectoryInfoExtensions.IsParentOf.html",
    "title": "Method IsParentOf | EyeAuras Docs",
    "keywords": "Method IsParentOf IsParentOf(DirectoryInfo, DirectoryInfo) Checks if a given path is a parent directory of another. Declaration public static bool IsParentOf(this DirectoryInfo parentDir, DirectoryInfo candidatePath) Parameters Type Name Description DirectoryInfo parentDir Potential parent directory path. DirectoryInfo candidatePath Potential child directory path. Returns Type Description bool Boolean value indicating whether the candidatePath is a child of parentDir. Examples IsParentDir(\"C:\\\\temp\\\\file\", \"C:\\\\temp\"); //Returns true"
  },
  "api/PoeShared.Scaffolding.DirectoryInfoExtensions.IsSubDir.html": {
    "href": "api/PoeShared.Scaffolding.DirectoryInfoExtensions.IsSubDir.html",
    "title": "Method IsSubDir | EyeAuras Docs",
    "keywords": "Method IsSubDir IsSubDir(DirectoryInfo, DirectoryInfo) Determines if a given path is a subdirectory of another path. Declaration public static bool IsSubDir(this DirectoryInfo parentDir, DirectoryInfo candidatePath) Parameters Type Name Description DirectoryInfo parentDir The parent directory path. DirectoryInfo candidatePath The path to test for subdirectory status. Returns Type Description bool A boolean representing whether the path is a subdirectory of the parent directory. Examples IsSubDir(\"C:\\\\Program Files\\\\Common Files\", \"C:\\\\Program Files\"); //Returns true"
  },
  "api/PoeShared.Scaffolding.DirectoryInfoExtensions.html": {
    "href": "api/PoeShared.Scaffolding.DirectoryInfoExtensions.html",
    "title": "Class DirectoryInfoExtensions | EyeAuras Docs",
    "keywords": "Class DirectoryInfoExtensions Inheritance object DirectoryInfoExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class DirectoryInfoExtensions Methods Name Description GetFilesSafe(DirectoryInfo, string, SearchOption) Recursively retrieves files from the specified directory and its subdirectories matching a given search pattern. This method will skip any inaccessible directories due to permission issues and continue with the next accessible directory. IsDirOrSubDir(DirectoryInfo, DirectoryInfo) Checks if a given path is a directory or a subdirectory of another. IsParentOf(DirectoryInfo, DirectoryInfo) Checks if a given path is a parent directory of another. IsSubDir(DirectoryInfo, DirectoryInfo) Determines if a given path is a subdirectory of another path."
  },
  "api/PoeShared.Scaffolding.DisposableExtensions.Add.html": {
    "href": "api/PoeShared.Scaffolding.DisposableExtensions.Add.html",
    "title": "Method Add | EyeAuras Docs",
    "keywords": "Method Add Add<T>(T, Action) Adds an IDisposable which encapsulates an action to an ICollection of IDisposable. Declaration public static T Add<T>(this T instance, Action action) where T : ICollection<IDisposable> Parameters Type Name Description T instance The ICollection<IDisposable> to which the item will be added. Action action The action to encapsulate in an IDisposable using Disposable.Create. Returns Type Description T The modified collection with the added IDisposable. Type Parameters Name Description T The type of the collection, which must be an ICollection<IDisposable>. Add<T, TItem>(T, Func<TItem>) Adds an IDisposable object to an ICollection of IDisposable, and registers a dispose action for it. Declaration public static T Add<T, TItem>(this T instance, Func<TItem> accessor) where T : ICollection<IDisposable> where TItem : IDisposable Parameters Type Name Description T instance The ICollection<IDisposable> to which the item will be added. Func<TItem> accessor A function that returns the item to add to the collection. Returns Type Description T The modified collection with the added item. Type Parameters Name Description T The type of the collection, which must be an ICollection<IDisposable>. TItem The type of the item to add, which must derive from IDisposable. Add<T, TItem>(T, Func<IEnumerable<TItem>>) Adds a set of IDisposable objects to an ICollection of IDisposable, and registers a dispose action for them. Declaration public static T Add<T, TItem>(this T instance, Func<IEnumerable<TItem>> itemsAccessor) where T : ICollection<IDisposable> where TItem : IDisposable Parameters Type Name Description T instance The ICollection<IDisposable> to which to add the items. Func<IEnumerable<TItem>> itemsAccessor A function that returns an IEnumerable of items to add to the collection. Returns Type Description T The modified collection with the added items. Type Parameters Name Description T The type of the collection, which must be an ICollection<IDisposable>. TItem The type of the items to add, which must derive from IDisposable."
  },
  "api/PoeShared.Scaffolding.DisposableExtensions.AssignTo.html": {
    "href": "api/PoeShared.Scaffolding.DisposableExtensions.AssignTo.html",
    "title": "Method AssignTo | EyeAuras Docs",
    "keywords": "Method AssignTo AssignTo<T>(T, SerialDisposable) Assigns an IDisposable instance to a SerialDisposable. Declaration public static T AssignTo<T>(this T instance, SerialDisposable anchor) where T : IDisposable Parameters Type Name Description T instance The IDisposable instance to be assigned. SerialDisposable anchor The SerialDisposable to which the instance will be assigned. Returns Type Description T The original IDisposable instance after assignment. Type Parameters Name Description T The type of the object to assign, which must derive from IDisposable. Exceptions Type Condition ArgumentNullException Thrown when the anchor is null."
  },
  "api/PoeShared.Scaffolding.DisposableExtensions.ToCompositeDisposable.html": {
    "href": "api/PoeShared.Scaffolding.DisposableExtensions.ToCompositeDisposable.html",
    "title": "Method ToCompositeDisposable | EyeAuras Docs",
    "keywords": "Method ToCompositeDisposable ToCompositeDisposable(IEnumerable<IDisposable>) Converts an IEnumerable of IDisposable into a CompositeDisposable. Declaration public static CompositeDisposable ToCompositeDisposable(this IEnumerable<IDisposable> disposables) Parameters Type Name Description IEnumerable<IDisposable> disposables IEnumerable of IDisposable that will be added to the CompositeDisposable. Returns Type Description CompositeDisposable A new CompositeDisposable instance containing all disposables from the input collection."
  },
  "api/PoeShared.Scaffolding.DisposableExtensions.ToObservable.html": {
    "href": "api/PoeShared.Scaffolding.DisposableExtensions.ToObservable.html",
    "title": "Method ToObservable | EyeAuras Docs",
    "keywords": "Method ToObservable ToObservable(IDisposable) Converts an IDisposable object into an IObservable of type Unit. Declaration public static IObservable<Unit> ToObservable(this IDisposable disposable) Parameters Type Name Description IDisposable disposable The IDisposable object to convert. Returns Type Description IObservable<Unit> An IObservable of type Unit with the IDisposable encapsulated."
  },
  "api/PoeShared.Scaffolding.DisposableExtensions.html": {
    "href": "api/PoeShared.Scaffolding.DisposableExtensions.html",
    "title": "Class DisposableExtensions | EyeAuras Docs",
    "keywords": "Class DisposableExtensions Inheritance object DisposableExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class DisposableExtensions Methods Name Description Add<T>(T, Action) Adds an IDisposable which encapsulates an action to an ICollection of IDisposable. Add<T, TItem>(T, Func<IEnumerable<TItem>>) Adds a set of IDisposable objects to an ICollection of IDisposable, and registers a dispose action for them. Add<T, TItem>(T, Func<TItem>) Adds an IDisposable object to an ICollection of IDisposable, and registers a dispose action for it. AssignTo<T>(T, SerialDisposable) Assigns an IDisposable instance to a SerialDisposable. ToCompositeDisposable(IEnumerable<IDisposable>) Converts an IEnumerable of IDisposable into a CompositeDisposable. ToObservable(IDisposable) Converts an IDisposable object into an IObservable of type Unit."
  },
  "api/PoeShared.Scaffolding.DisposableReactiveRecord.-Clone--.html": {
    "href": "api/PoeShared.Scaffolding.DisposableReactiveRecord.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public override abstract DisposableReactiveRecord <Clone>$() Returns Type Description DisposableReactiveRecord Overrides ReactiveRecord.<Clone>$()"
  },
  "api/PoeShared.Scaffolding.DisposableReactiveRecord.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.DisposableReactiveRecord.-ctor.html",
    "title": "Constructor DisposableReactiveRecord | EyeAuras Docs",
    "keywords": "Constructor DisposableReactiveRecord DisposableReactiveRecord(DisposableReactiveRecord) Declaration protected DisposableReactiveRecord(DisposableReactiveRecord original) Parameters Type Name Description DisposableReactiveRecord original DisposableReactiveRecord() Declaration protected DisposableReactiveRecord()"
  },
  "api/PoeShared.Scaffolding.DisposableReactiveRecord.Anchors.html": {
    "href": "api/PoeShared.Scaffolding.DisposableReactiveRecord.Anchors.html",
    "title": "Property Anchors | EyeAuras Docs",
    "keywords": "Property Anchors Anchors Declaration public CompositeDisposable Anchors { get; } Property Value Type Description CompositeDisposable"
  },
  "api/PoeShared.Scaffolding.DisposableReactiveRecord.Dispose.html": {
    "href": "api/PoeShared.Scaffolding.DisposableReactiveRecord.Dispose.html",
    "title": "Method Dispose | EyeAuras Docs",
    "keywords": "Method Dispose Dispose() Declaration public virtual void Dispose() Implements IDisposable.Dispose()"
  },
  "api/PoeShared.Scaffolding.DisposableReactiveRecord.EqualityContract.html": {
    "href": "api/PoeShared.Scaffolding.DisposableReactiveRecord.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected override Type EqualityContract { get; } Property Value Type Description Type Overrides ReactiveRecord.EqualityContract"
  },
  "api/PoeShared.Scaffolding.DisposableReactiveRecord.Equals.html": {
    "href": "api/PoeShared.Scaffolding.DisposableReactiveRecord.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ReactiveRecord.Equals(object?) Equals(ReactiveRecord?) Declaration public override sealed bool Equals(ReactiveRecord? other) Parameters Type Name Description ReactiveRecord other Returns Type Description bool Overrides ReactiveRecord.Equals(ReactiveRecord?) Equals(DisposableReactiveRecord?) Declaration public virtual bool Equals(DisposableReactiveRecord? other) Parameters Type Name Description DisposableReactiveRecord other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/PoeShared.Scaffolding.DisposableReactiveRecord.GetHashCode.html": {
    "href": "api/PoeShared.Scaffolding.DisposableReactiveRecord.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ReactiveRecord.GetHashCode()"
  },
  "api/PoeShared.Scaffolding.DisposableReactiveRecord.PrintMembers.html": {
    "href": "api/PoeShared.Scaffolding.DisposableReactiveRecord.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected override bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool Overrides ReactiveRecord.PrintMembers(StringBuilder)"
  },
  "api/PoeShared.Scaffolding.DisposableReactiveRecord.ToString.html": {
    "href": "api/PoeShared.Scaffolding.DisposableReactiveRecord.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides ReactiveRecord.ToString()"
  },
  "api/PoeShared.Scaffolding.DisposableReactiveRecord.html": {
    "href": "api/PoeShared.Scaffolding.DisposableReactiveRecord.html",
    "title": "Class DisposableReactiveRecord | EyeAuras Docs",
    "keywords": "Class DisposableReactiveRecord Inheritance object ReactiveRecord DisposableReactiveRecord Implements INotifyPropertyChanged IEquatable<ReactiveRecord> IDisposable IEquatable<DisposableReactiveRecord> Inherited Members ReactiveRecord.RaisePropertyChanged(string) ReactiveRecord.RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) ReactiveRecord.RaiseAndSet<TRet>(ref TRet, TRet, string) ReactiveRecord.PropertyChanged object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public abstract record DisposableReactiveRecord : ReactiveRecord, INotifyPropertyChanged, IEquatable<ReactiveRecord>, IDisposable, IEquatable<DisposableReactiveRecord> Constructors Name Description DisposableReactiveRecord() DisposableReactiveRecord(DisposableReactiveRecord) Properties Name Description Anchors EqualityContract Methods Name Description Dispose() Equals(DisposableReactiveRecord?) Equals(ReactiveRecord?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) ToString() <Clone>$() Operators Name Description operator ==(DisposableReactiveRecord?, DisposableReactiveRecord?) operator !=(DisposableReactiveRecord?, DisposableReactiveRecord?) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.DisposableReactiveRecord.op_Equality.html": {
    "href": "api/PoeShared.Scaffolding.DisposableReactiveRecord.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(DisposableReactiveRecord?, DisposableReactiveRecord?) Declaration public static bool operator ==(DisposableReactiveRecord? left, DisposableReactiveRecord? right) Parameters Type Name Description DisposableReactiveRecord left DisposableReactiveRecord right Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.DisposableReactiveRecord.op_Inequality.html": {
    "href": "api/PoeShared.Scaffolding.DisposableReactiveRecord.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(DisposableReactiveRecord?, DisposableReactiveRecord?) Declaration public static bool operator !=(DisposableReactiveRecord? left, DisposableReactiveRecord? right) Parameters Type Name Description DisposableReactiveRecord left DisposableReactiveRecord right Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.EnumExtensions.GetUniqueFlags.html": {
    "href": "api/PoeShared.Scaffolding.EnumExtensions.GetUniqueFlags.html",
    "title": "Method GetUniqueFlags | EyeAuras Docs",
    "keywords": "Method GetUniqueFlags GetUniqueFlags<T>(T) Declaration public static IEnumerable<T> GetUniqueFlags<T>(this T flags) where T : Enum Parameters Type Name Description T flags Returns Type Description IEnumerable<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumExtensions.RemoveFlag.html": {
    "href": "api/PoeShared.Scaffolding.EnumExtensions.RemoveFlag.html",
    "title": "Method RemoveFlag | EyeAuras Docs",
    "keywords": "Method RemoveFlag RemoveFlag<T>(T, params T[]) Declaration public static T RemoveFlag<T>(this T flag, params T[] flagsToRemove) where T : Enum Parameters Type Name Description T flag T[] flagsToRemove Returns Type Description T Type Parameters Name Description T RemoveFlag<T>(T, T) Declaration public static T RemoveFlag<T>(this T flag, T flagToRemove) where T : Enum Parameters Type Name Description T flag T flagToRemove Returns Type Description T Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumExtensions.html": {
    "href": "api/PoeShared.Scaffolding.EnumExtensions.html",
    "title": "Class EnumExtensions | EyeAuras Docs",
    "keywords": "Class EnumExtensions Inheritance object EnumExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class EnumExtensions Methods Name Description GetUniqueFlags<T>(T) RemoveFlag<T>(T, T) RemoveFlag<T>(T, params T[])"
  },
  "api/PoeShared.Scaffolding.EnumerableComparer-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableComparer-1.-ctor.html",
    "title": "Constructor EnumerableComparer | EyeAuras Docs",
    "keywords": "Constructor EnumerableComparer EnumerableComparer() Initializes a new instance of the EnumerableComparer<T> class using the default comparer for {T}. Declaration public EnumerableComparer() EnumerableComparer(IComparer<T>) Initializes a new instance of the EnumerableComparer<T> class using the specified comparer for {T}. Declaration public EnumerableComparer(IComparer<T> elementComparer) Parameters Type Name Description IComparer<T> elementComparer Comparer for comparing each pair of items from the sequences."
  },
  "api/PoeShared.Scaffolding.EnumerableComparer-1.Compare.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableComparer-1.Compare.html",
    "title": "Method Compare | EyeAuras Docs",
    "keywords": "Method Compare Compare(IEnumerable<T>, IEnumerable<T>) Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other. Declaration public int Compare(IEnumerable<T> x, IEnumerable<T> y) Parameters Type Name Description IEnumerable<T> x First sequence. IEnumerable<T> y Second sequence. Returns Type Description int A signed integer that indicates the relative values of x and y, as shown in the following table.Value Meaning Less than zerox is less than y.Zerox equals y.Greater than zerox is greater than y. Implements IComparer<T>.Compare(T, T)"
  },
  "api/PoeShared.Scaffolding.EnumerableComparer-1.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableComparer-1.html",
    "title": "Class EnumerableComparer<T> | EyeAuras Docs",
    "keywords": "Class EnumerableComparer<T> Compares two sequences. Inheritance object EnumerableComparer<T> Implements IComparer<IEnumerable<T>> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public class EnumerableComparer<T> : IComparer<IEnumerable<T>> Type Parameters Name Description T Type of item in the sequences. Remarks Compares elements from the two input sequences in turn. If we run out of list before finding unequal elements, then the shorter list is deemed to be the lesser list. Constructors Name Description EnumerableComparer() Initializes a new instance of the EnumerableComparer<T> class using the default comparer for {T}. EnumerableComparer(IComparer<T>) Initializes a new instance of the EnumerableComparer<T> class using the specified comparer for {T}. Methods Name Description Compare(IEnumerable<T>, IEnumerable<T>) Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.DisposeAll.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.DisposeAll.html",
    "title": "Method DisposeAll | EyeAuras Docs",
    "keywords": "Method DisposeAll DisposeAll<T>(IEnumerable<T>, Action<T, Exception>) Declaration public static void DisposeAll<T>(this IEnumerable<T> enumerable, Action<T, Exception> onError = null) where T : IDisposable Parameters Type Name Description IEnumerable<T> enumerable Action<T, Exception> onError Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.EmptyIfNull.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.EmptyIfNull.html",
    "title": "Method EmptyIfNull | EyeAuras Docs",
    "keywords": "Method EmptyIfNull EmptyIfNull<T>(T[]) Declaration public static T[] EmptyIfNull<T>(this T[] array) Parameters Type Name Description T[] array Returns Type Description T[] Type Parameters Name Description T EmptyIfNull<T>(IEnumerable<T>) Declaration public static IEnumerable<T> EmptyIfNull<T>(this IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable<T> enumerable Returns Type Description IEnumerable<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.ForEach.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.ForEach.html",
    "title": "Method ForEach | EyeAuras Docs",
    "keywords": "Method ForEach ForEach<T>(IEnumerable<T>, Action<T>) Declaration public static IEnumerable<T> ForEach<T>(this IEnumerable<T> enumerable, Action<T> action) Parameters Type Name Description IEnumerable<T> enumerable Action<T> action Returns Type Description IEnumerable<T> Type Parameters Name Description T ForEach<T>(T[], Action<T>) Declaration public static T[] ForEach<T>(this T[] enumerable, Action<T> action) Parameters Type Name Description T[] enumerable Action<T> action Returns Type Description T[] Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.ForEachAsync.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.ForEachAsync.html",
    "title": "Method ForEachAsync | EyeAuras Docs",
    "keywords": "Method ForEachAsync ForEachAsync<T>(IEnumerable<T>, Func<T, Task>) Declaration public static Task ForEachAsync<T>(this IEnumerable<T> enumerable, Func<T, Task> action) Parameters Type Name Description IEnumerable<T> enumerable Func<T, Task> action Returns Type Description Task Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.Intersperse.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.Intersperse.html",
    "title": "Method Intersperse | EyeAuras Docs",
    "keywords": "Method Intersperse Intersperse<T>(IEnumerable<T>, Func<T, T>) Inserts a specified separator between each element of a sequence, if the sequence has more than one item. Declaration public static IEnumerable<T> Intersperse<T>(this IEnumerable<T> items, Func<T, T> separatorFactory) Parameters Type Name Description IEnumerable<T> items The sequence into which the separator will be interspersed. Func<T, T> separatorFactory The element factory which will be used to intersperse in between the elements of the sequence. Returns Type Description IEnumerable<T> A sequence that contains the elements of the input sequence with the separator interspersed between each element. Type Parameters Name Description T The type of the elements of the input sequence. Remarks If the sequence is empty or contains only one element, the returned sequence will be equivalent to the input sequence. Intersperse<T>(IEnumerable<T>, T) Inserts a specified separator between each element of a sequence, if the sequence has more than one item. Declaration public static IEnumerable<T> Intersperse<T>(this IEnumerable<T> items, T separator) Parameters Type Name Description IEnumerable<T> items The sequence into which the separator will be interspersed. T separator The element to intersperse in between the elements of the sequence. Returns Type Description IEnumerable<T> A sequence that contains the elements of the input sequence with the separator interspersed between each element. Type Parameters Name Description T The type of the elements of the input sequence. Remarks If the sequence is empty or contains only one element, the returned sequence will be equivalent to the input sequence."
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.IsEmpty.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.IsEmpty.html",
    "title": "Method IsEmpty | EyeAuras Docs",
    "keywords": "Method IsEmpty IsEmpty<T>(IEnumerable<T>) Declaration public static bool IsEmpty<T>(this IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable<T> enumerable Returns Type Description bool Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.IsUnique.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.IsUnique.html",
    "title": "Method IsUnique | EyeAuras Docs",
    "keywords": "Method IsUnique IsUnique<T>(IEnumerable<T>) Declaration public static bool IsUnique<T>(this IEnumerable<T> list) Parameters Type Name Description IEnumerable<T> list Returns Type Description bool Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.PickRandom.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.PickRandom.html",
    "title": "Method PickRandom | EyeAuras Docs",
    "keywords": "Method PickRandom PickRandom<T>(IEnumerable<T>) Declaration public static T PickRandom<T>(this IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable<T> enumerable Returns Type Description T Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.Randomize.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.Randomize.html",
    "title": "Method Randomize | EyeAuras Docs",
    "keywords": "Method Randomize Randomize<T>(IEnumerable<T>) Declaration public static IEnumerable<T> Randomize<T>(this IEnumerable<T> source) Parameters Type Name Description IEnumerable<T> source Returns Type Description IEnumerable<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.SelectSafe.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.SelectSafe.html",
    "title": "Method SelectSafe | EyeAuras Docs",
    "keywords": "Method SelectSafe SelectSafe<T, TResult>(IEnumerable<T>, Func<T, TResult>, Action<T, Exception>) Declaration public static IEnumerable<TResult> SelectSafe<T, TResult>(this IEnumerable<T> source, Func<T, TResult> selector, Action<T, Exception> errorConsumer) Parameters Type Name Description IEnumerable<T> source Func<T, TResult> selector Action<T, Exception> errorConsumer Returns Type Description IEnumerable<TResult> Type Parameters Name Description T TResult SelectSafe<T, TResult>(IEnumerable<T>, Func<T, TResult>) Declaration public static IEnumerable<TResult> SelectSafe<T, TResult>(this IEnumerable<T> source, Func<T, TResult> selector) Parameters Type Name Description IEnumerable<T> source Func<T, TResult> selector Returns Type Description IEnumerable<TResult> Type Parameters Name Description T TResult"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.Subrange.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.Subrange.html",
    "title": "Method Subrange | EyeAuras Docs",
    "keywords": "Method Subrange Subrange<T>(IReadOnlyList<T>, int, int) Declaration public static IEnumerable<T> Subrange<T>(this IReadOnlyList<T> enumerable, int startIdx, int count) Parameters Type Name Description IReadOnlyList<T> enumerable int startIdx int count Returns Type Description IEnumerable<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.ToDictionary.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.ToDictionary.html",
    "title": "Method ToDictionary | EyeAuras Docs",
    "keywords": "Method ToDictionary ToDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>, Func<(TKey key, TValue existingValue, TValue newValue), TValue>) Declaration public static IDictionary<TKey, TValue> ToDictionary<T, TKey, TValue>(this IEnumerable<T> enumerable, Func<T, TKey> keyExtractor, Func<T, TValue> valueExtractor, Func<(TKey key, TValue existingValue, TValue newValue), TValue> conflictSolver) Parameters Type Name Description IEnumerable<T> enumerable Func<T, TKey> keyExtractor Func<T, TValue> valueExtractor Func<(TKey key, TValue existingValue, TValue newValue), TValue> conflictSolver Returns Type Description IDictionary<TKey, TValue> Type Parameters Name Description T TKey TValue"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.ToDictionaryWithReplacement.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.ToDictionaryWithReplacement.html",
    "title": "Method ToDictionaryWithReplacement | EyeAuras Docs",
    "keywords": "Method ToDictionaryWithReplacement ToDictionaryWithReplacement<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>) Declaration public static IDictionary<TKey, TValue> ToDictionaryWithReplacement<T, TKey, TValue>(this IEnumerable<T> enumerable, Func<T, TKey> keyExtractor, Func<T, TValue> valueExtractor) Parameters Type Name Description IEnumerable<T> enumerable Func<T, TKey> keyExtractor Func<T, TValue> valueExtractor Returns Type Description IDictionary<TKey, TValue> Type Parameters Name Description T TKey TValue"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.ToDictionaryWithThrow.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.ToDictionaryWithThrow.html",
    "title": "Method ToDictionaryWithThrow | EyeAuras Docs",
    "keywords": "Method ToDictionaryWithThrow ToDictionaryWithThrow<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>) Declaration public static IDictionary<TKey, TValue> ToDictionaryWithThrow<T, TKey, TValue>(this IEnumerable<T> enumerable, Func<T, TKey> keyExtractor, Func<T, TValue> valueExtractor) Parameters Type Name Description IEnumerable<T> enumerable Func<T, TKey> keyExtractor Func<T, TValue> valueExtractor Returns Type Description IDictionary<TKey, TValue> Type Parameters Name Description T TKey TValue"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.ToObservableCollection.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.ToObservableCollection.html",
    "title": "Method ToObservableCollection | EyeAuras Docs",
    "keywords": "Method ToObservableCollection ToObservableCollection<T>(IEnumerable<T>) Declaration public static ObservableCollection<T> ToObservableCollection<T>(this IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable<T> enumerable Returns Type Description ObservableCollection<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.ToPermutations.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.ToPermutations.html",
    "title": "Method ToPermutations | EyeAuras Docs",
    "keywords": "Method ToPermutations ToPermutations<T>(IList<T>) Declaration public static IList<IList<T>> ToPermutations<T>(this IList<T> source) Parameters Type Name Description IList<T> source Returns Type Description IList<IList<T>> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.ToReadOnlyObservableCollection.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.ToReadOnlyObservableCollection.html",
    "title": "Method ToReadOnlyObservableCollection | EyeAuras Docs",
    "keywords": "Method ToReadOnlyObservableCollection ToReadOnlyObservableCollection<T>(IEnumerable<T>) Declaration public static ReadOnlyObservableCollection<T> ToReadOnlyObservableCollection<T>(this IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable<T> enumerable Returns Type Description ReadOnlyObservableCollection<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.ToVariations.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.ToVariations.html",
    "title": "Method ToVariations | EyeAuras Docs",
    "keywords": "Method ToVariations ToVariations<T>(IEnumerable<T>) Declaration public static IEnumerable<IEnumerable<T>> ToVariations<T>(this IEnumerable<T> source) Parameters Type Name Description IEnumerable<T> source Returns Type Description IEnumerable<IEnumerable<T>> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.Transpose.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.Transpose.html",
    "title": "Method Transpose | EyeAuras Docs",
    "keywords": "Method Transpose Transpose<T>(IEnumerable<IEnumerable<T>>) Declaration public static IEnumerable<IEnumerable<T>> Transpose<T>(this IEnumerable<IEnumerable<T>> source) Parameters Type Name Description IEnumerable<IEnumerable<T>> source Returns Type Description IEnumerable<IEnumerable<T>> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumerableExtensions.html": {
    "href": "api/PoeShared.Scaffolding.EnumerableExtensions.html",
    "title": "Class EnumerableExtensions | EyeAuras Docs",
    "keywords": "Class EnumerableExtensions Inheritance object EnumerableExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class EnumerableExtensions Methods Name Description DisposeAll<T>(IEnumerable<T>, Action<T, Exception>) EmptyIfNull<T>(IEnumerable<T>) EmptyIfNull<T>(T[]) ForEachAsync<T>(IEnumerable<T>, Func<T, Task>) ForEach<T>(IEnumerable<T>, Action<T>) ForEach<T>(T[], Action<T>) Intersperse<T>(IEnumerable<T>, Func<T, T>) Inserts a specified separator between each element of a sequence, if the sequence has more than one item. Intersperse<T>(IEnumerable<T>, T) Inserts a specified separator between each element of a sequence, if the sequence has more than one item. IsEmpty<T>(IEnumerable<T>) IsUnique<T>(IEnumerable<T>) PickRandom<T>(IEnumerable<T>) Randomize<T>(IEnumerable<T>) SelectSafe<T, TResult>(IEnumerable<T>, Func<T, TResult>) SelectSafe<T, TResult>(IEnumerable<T>, Func<T, TResult>, Action<T, Exception>) Subrange<T>(IReadOnlyList<T>, int, int) ToDictionaryWithReplacement<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>) ToDictionaryWithThrow<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>) ToDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>, Func<(TKey key, TValue existingValue, TValue newValue), TValue>) ToObservableCollection<T>(IEnumerable<T>) ToPermutations<T>(IList<T>) ToReadOnlyObservableCollection<T>(IEnumerable<T>) ToVariations<T>(IEnumerable<T>) Transpose<T>(IEnumerable<IEnumerable<T>>)"
  },
  "api/PoeShared.Scaffolding.EnumeratorExtensions.ToList.html": {
    "href": "api/PoeShared.Scaffolding.EnumeratorExtensions.ToList.html",
    "title": "Method ToList | EyeAuras Docs",
    "keywords": "Method ToList ToList<T>(IEnumerator<T>) Declaration public static IReadOnlyList<T> ToList<T>(this IEnumerator<T> enumerator) Parameters Type Name Description IEnumerator<T> enumerator Returns Type Description IReadOnlyList<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.EnumeratorExtensions.html": {
    "href": "api/PoeShared.Scaffolding.EnumeratorExtensions.html",
    "title": "Class EnumeratorExtensions | EyeAuras Docs",
    "keywords": "Class EnumeratorExtensions Inheritance object EnumeratorExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class EnumeratorExtensions Methods Name Description ToList<T>(IEnumerator<T>)"
  },
  "api/PoeShared.Scaffolding.ExceptionExtensions.ToExceptionOrDefault.html": {
    "href": "api/PoeShared.Scaffolding.ExceptionExtensions.ToExceptionOrDefault.html",
    "title": "Method ToExceptionOrDefault | EyeAuras Docs",
    "keywords": "Method ToExceptionOrDefault ToExceptionOrDefault(Exception[]) Declaration public static Exception ToExceptionOrDefault(this Exception[] exceptions) Parameters Type Name Description Exception[] exceptions Returns Type Description Exception"
  },
  "api/PoeShared.Scaffolding.ExceptionExtensions.html": {
    "href": "api/PoeShared.Scaffolding.ExceptionExtensions.html",
    "title": "Class ExceptionExtensions | EyeAuras Docs",
    "keywords": "Class ExceptionExtensions Inheritance object ExceptionExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class ExceptionExtensions Methods Name Description ToExceptionOrDefault(Exception[])"
  },
  "api/PoeShared.Scaffolding.Fallback-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.Fallback-1.-ctor.html",
    "title": "Constructor Fallback | EyeAuras Docs",
    "keywords": "Constructor Fallback Fallback(Predicate<T>) Declaration public Fallback(Predicate<T> fallbackCondition) Parameters Type Name Description Predicate<T> fallbackCondition Fallback(Func<T, T, bool>) Declaration public Fallback(Func<T, T, bool> fallbackCondition) Parameters Type Name Description Func<T, T, bool> fallbackCondition Fallback() Declaration public Fallback()"
  },
  "api/PoeShared.Scaffolding.Fallback-1.ActualValue.html": {
    "href": "api/PoeShared.Scaffolding.Fallback-1.ActualValue.html",
    "title": "Property ActualValue | EyeAuras Docs",
    "keywords": "Property ActualValue ActualValue Declaration public T ActualValue { get; set; } Property Value Type Description T"
  },
  "api/PoeShared.Scaffolding.Fallback-1.DefaultValue.html": {
    "href": "api/PoeShared.Scaffolding.Fallback-1.DefaultValue.html",
    "title": "Property DefaultValue | EyeAuras Docs",
    "keywords": "Property DefaultValue DefaultValue Declaration public T DefaultValue { get; set; } Property Value Type Description T"
  },
  "api/PoeShared.Scaffolding.Fallback-1.FormatToString.html": {
    "href": "api/PoeShared.Scaffolding.Fallback-1.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides DisposableReactiveObject.FormatToString(ToStringBuilder)"
  },
  "api/PoeShared.Scaffolding.Fallback-1.HasActualValue.html": {
    "href": "api/PoeShared.Scaffolding.Fallback-1.HasActualValue.html",
    "title": "Property HasActualValue | EyeAuras Docs",
    "keywords": "Property HasActualValue HasActualValue Declaration public bool HasActualValue { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Scaffolding.Fallback-1.ResetValue.html": {
    "href": "api/PoeShared.Scaffolding.Fallback-1.ResetValue.html",
    "title": "Method ResetValue | EyeAuras Docs",
    "keywords": "Method ResetValue ResetValue() Declaration public Fallback<T> ResetValue() Returns Type Description Fallback<T>"
  },
  "api/PoeShared.Scaffolding.Fallback-1.SetDefaultValue.html": {
    "href": "api/PoeShared.Scaffolding.Fallback-1.SetDefaultValue.html",
    "title": "Method SetDefaultValue | EyeAuras Docs",
    "keywords": "Method SetDefaultValue SetDefaultValue(T) Declaration public Fallback<T> SetDefaultValue(T value) Parameters Type Name Description T value Returns Type Description Fallback<T>"
  },
  "api/PoeShared.Scaffolding.Fallback-1.SetValue.html": {
    "href": "api/PoeShared.Scaffolding.Fallback-1.SetValue.html",
    "title": "Method SetValue | EyeAuras Docs",
    "keywords": "Method SetValue SetValue(T) Declaration public Fallback<T> SetValue(T value) Parameters Type Name Description T value Returns Type Description Fallback<T>"
  },
  "api/PoeShared.Scaffolding.Fallback-1.Value.html": {
    "href": "api/PoeShared.Scaffolding.Fallback-1.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration public T Value { get; set; } Property Value Type Description T"
  },
  "api/PoeShared.Scaffolding.Fallback-1.html": {
    "href": "api/PoeShared.Scaffolding.Fallback-1.html",
    "title": "Class Fallback<T> | EyeAuras Docs",
    "keywords": "Class Fallback<T> Inheritance object DisposableReactiveObject Fallback<T> Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class Fallback<T> : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Type Parameters Name Description T Constructors Name Description Fallback() Fallback(Func<T, T, bool>) Fallback(Predicate<T>) Properties Name Description ActualValue DefaultValue HasActualValue Value Methods Name Description FormatToString(ToStringBuilder) ResetValue() SetDefaultValue(T) SetValue(T) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.FileInfoExtensions.GetDriveLetter.html": {
    "href": "api/PoeShared.Scaffolding.FileInfoExtensions.GetDriveLetter.html",
    "title": "Method GetDriveLetter | EyeAuras Docs",
    "keywords": "Method GetDriveLetter GetDriveLetter(FileSystemInfo) Gets the drive letter from a given FileSystemInfo object. Declaration public static string GetDriveLetter(this FileSystemInfo file) Parameters Type Name Description FileSystemInfo file The FileSystemInfo object to extract the drive letter from. Returns Type Description string The drive letter of the file system object. Returns null if the path is not rooted. Exceptions Type Condition ArgumentNullException Thrown if the input file system object is null. ArgumentException Thrown if the file system object does not have a rooted path."
  },
  "api/PoeShared.Scaffolding.FileInfoExtensions.html": {
    "href": "api/PoeShared.Scaffolding.FileInfoExtensions.html",
    "title": "Class FileInfoExtensions | EyeAuras Docs",
    "keywords": "Class FileInfoExtensions Inheritance object FileInfoExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class FileInfoExtensions Methods Name Description GetDriveLetter(FileSystemInfo) Gets the drive letter from a given FileSystemInfo object."
  },
  "api/PoeShared.Scaffolding.FileUtils.CopyDirectory.html": {
    "href": "api/PoeShared.Scaffolding.FileUtils.CopyDirectory.html",
    "title": "Method CopyDirectory | EyeAuras Docs",
    "keywords": "Method CopyDirectory CopyDirectory(DirectoryInfo, DirectoryInfo) Declaration public static void CopyDirectory(DirectoryInfo sourcePath, DirectoryInfo targetPath) Parameters Type Name Description DirectoryInfo sourcePath DirectoryInfo targetPath CopyDirectory(DirectoryInfo, DirectoryInfo, Predicate<FileInfo>) Declaration public static void CopyDirectory(DirectoryInfo sourceDir, DirectoryInfo targetDir, Predicate<FileInfo> fileFilter) Parameters Type Name Description DirectoryInfo sourceDir DirectoryInfo targetDir Predicate<FileInfo> fileFilter"
  },
  "api/PoeShared.Scaffolding.FileUtils.CopyFile.html": {
    "href": "api/PoeShared.Scaffolding.FileUtils.CopyFile.html",
    "title": "Method CopyFile | EyeAuras Docs",
    "keywords": "Method CopyFile CopyFile(string, string, bool, int) Copies a file from a source path to a destination path. This method uses low-level file streams instead of File.Copy (which uses Kernel32.CopyFileEx internally) to make it more compatible with file system virtualization methods which often(at least 2 of them) forget to hook them Declaration public static FileInfo CopyFile(string sourcePath, string destinationPath, bool overwrite, int bufferSize = 524288) Parameters Type Name Description string sourcePath The path of the source file to be copied. string destinationPath The path to where the file should be copied. bool overwrite A boolean value indicating whether an existing file at the destination path should be overwritten. If set to false and a file exists, an exception will be thrown. int bufferSize Buffer size, most SSDs prefer larger buffer(512KB+) Returns Type Description FileInfo Exceptions Type Condition IOException Thrown when the destination file already exists and overwrite parameter is set to false, or any other IO error occurs."
  },
  "api/PoeShared.Scaffolding.FileUtils.CopyFileToTemp.html": {
    "href": "api/PoeShared.Scaffolding.FileUtils.CopyFileToTemp.html",
    "title": "Method CopyFileToTemp | EyeAuras Docs",
    "keywords": "Method CopyFileToTemp CopyFileToTemp(FileInfo) Creates a temporary copy of the specified file and returns a FileStream for it. The temporary file will be deleted upon closing the returned FileStream. Declaration public static FileInfo CopyFileToTemp(FileInfo sourceFile) Parameters Type Name Description FileInfo sourceFile Source file to be copied. Returns Type Description FileInfo A FileStream that provides access to the temporary copy of the file. The file is opened in read-write mode with read-write sharing and is set to be deleted upon closing the stream. Remarks The method ensures the temporary file has a unique name by appending the original file name to a system-generated temporary file name. Exceptions Type Condition IOException Thrown when the file copy operation fails."
  },
  "api/PoeShared.Scaffolding.FileUtils.RemoveDirectoryIfEmpty.html": {
    "href": "api/PoeShared.Scaffolding.FileUtils.RemoveDirectoryIfEmpty.html",
    "title": "Method RemoveDirectoryIfEmpty | EyeAuras Docs",
    "keywords": "Method RemoveDirectoryIfEmpty RemoveDirectoryIfEmpty(DirectoryInfo) Declaration public static void RemoveDirectoryIfEmpty(this DirectoryInfo directory) Parameters Type Name Description DirectoryInfo directory"
  },
  "api/PoeShared.Scaffolding.FileUtils.RemoveFilesInDirectory.html": {
    "href": "api/PoeShared.Scaffolding.FileUtils.RemoveFilesInDirectory.html",
    "title": "Method RemoveFilesInDirectory | EyeAuras Docs",
    "keywords": "Method RemoveFilesInDirectory RemoveFilesInDirectory(DirectoryInfo) Declaration public static void RemoveFilesInDirectory(this DirectoryInfo directory) Parameters Type Name Description DirectoryInfo directory"
  },
  "api/PoeShared.Scaffolding.FileUtils.Seek.html": {
    "href": "api/PoeShared.Scaffolding.FileUtils.Seek.html",
    "title": "Method Seek | EyeAuras Docs",
    "keywords": "Method Seek Seek(Stream, byte[]) Declaration public static long Seek(Stream stream, byte[] needle) Parameters Type Name Description Stream stream byte[] needle Returns Type Description long"
  },
  "api/PoeShared.Scaffolding.FileUtils.html": {
    "href": "api/PoeShared.Scaffolding.FileUtils.html",
    "title": "Class FileUtils | EyeAuras Docs",
    "keywords": "Class FileUtils Inheritance object FileUtils Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class FileUtils Methods Name Description CopyDirectory(DirectoryInfo, DirectoryInfo) CopyDirectory(DirectoryInfo, DirectoryInfo, Predicate<FileInfo>) CopyFile(string, string, bool, int) Copies a file from a source path to a destination path. This method uses low-level file streams instead of File.Copy (which uses Kernel32.CopyFileEx internally) to make it more compatible with file system virtualization methods which often(at least 2 of them) forget to hook them CopyFileToTemp(FileInfo) Creates a temporary copy of the specified file and returns a FileStream for it. The temporary file will be deleted upon closing the returned FileStream. RemoveDirectoryIfEmpty(DirectoryInfo) RemoveFilesInDirectory(DirectoryInfo) Seek(Stream, byte[])"
  },
  "api/PoeShared.Scaffolding.GeometryExtensions.PickRegion.html": {
    "href": "api/PoeShared.Scaffolding.GeometryExtensions.PickRegion.html",
    "title": "Method PickRegion | EyeAuras Docs",
    "keywords": "Method PickRegion PickRegion(Rectangle, Rectangle) Adjusts the given bounds to fit inside the specified region. If the width or height of the region is non-positive, it represents how much of the bounds' width or height to remove, respectively. If the region's x or y is set, it represents the offset inside the bounds. Declaration public static Rectangle PickRegion(this Rectangle bounds, Rectangle region) Parameters Type Name Description Rectangle bounds The original bounds that need to be adjusted. Rectangle region The region inside which the bounds need to fit. Returns Type Description Rectangle The adjusted bounds that fit inside the specified region."
  },
  "api/PoeShared.Scaffolding.GeometryExtensions.Transform.html": {
    "href": "api/PoeShared.Scaffolding.GeometryExtensions.Transform.html",
    "title": "Method Transform | EyeAuras Docs",
    "keywords": "Method Transform Transform(Rectangle, Matrix3x2) Declaration public static Rectangle Transform(this Rectangle bounds, Matrix3x2 transformationMatrix) Parameters Type Name Description Rectangle bounds Matrix3x2 transformationMatrix Returns Type Description Rectangle"
  },
  "api/PoeShared.Scaffolding.GeometryExtensions.html": {
    "href": "api/PoeShared.Scaffolding.GeometryExtensions.html",
    "title": "Class GeometryExtensions | EyeAuras Docs",
    "keywords": "Class GeometryExtensions Inheritance object GeometryExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.Native.dll Syntax public static class GeometryExtensions Methods Name Description PickRegion(Rectangle, Rectangle) Adjusts the given bounds to fit inside the specified region. If the width or height of the region is non-positive, it represents how much of the bounds' width or height to remove, respectively. If the region's x or y is set, it represents the offset inside the bounds. Transform(Rectangle, Matrix3x2)"
  },
  "api/PoeShared.Scaffolding.GlobalIdProvider.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.GlobalIdProvider.-ctor.html",
    "title": "Constructor GlobalIdProvider | EyeAuras Docs",
    "keywords": "Constructor GlobalIdProvider GlobalIdProvider() Declaration public GlobalIdProvider()"
  },
  "api/PoeShared.Scaffolding.GlobalIdProvider.Next.html": {
    "href": "api/PoeShared.Scaffolding.GlobalIdProvider.Next.html",
    "title": "Method Next | EyeAuras Docs",
    "keywords": "Method Next Next(string) Declaration public string Next(string prefix = null) Parameters Type Name Description string prefix Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.GlobalIdProvider.html": {
    "href": "api/PoeShared.Scaffolding.GlobalIdProvider.html",
    "title": "Class GlobalIdProvider | EyeAuras Docs",
    "keywords": "Class GlobalIdProvider Inheritance object GlobalIdProvider Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class GlobalIdProvider Constructors Name Description GlobalIdProvider() Methods Name Description Next(string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.-ctor.html",
    "title": "Constructor HierarchicalSourceCache | EyeAuras Docs",
    "keywords": "Constructor HierarchicalSourceCache HierarchicalSourceCache(Func<TObject, TKey>) Declaration public HierarchicalSourceCache(Func<TObject, TKey> keyExtractor) Parameters Type Name Description Func<TObject, TKey> keyExtractor"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Connect.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Connect.html",
    "title": "Method Connect | EyeAuras Docs",
    "keywords": "Method Connect Connect(Func<TObject, bool>, bool) Declaration public IObservable<IChangeSet<TObject, TKey>> Connect(Func<TObject, bool> predicate = null, bool suppressEmptyChangeSets = true) Parameters Type Name Description Func<TObject, bool> predicate bool suppressEmptyChangeSets Returns Type Description IObservable<IChangeSet<TObject, TKey>>"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Count.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public int Count { get; } Property Value Type Description int"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.CountChanged.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.CountChanged.html",
    "title": "Property CountChanged | EyeAuras Docs",
    "keywords": "Property CountChanged CountChanged Declaration public IObservable<int> CountChanged { get; } Property Value Type Description IObservable<int>"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Edit.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Edit.html",
    "title": "Method Edit | EyeAuras Docs",
    "keywords": "Method Edit Edit(Action<ISourceUpdater<TObject, TKey>>) Declaration public void Edit(Action<ISourceUpdater<TObject, TKey>> updateAction) Parameters Type Name Description Action<ISourceUpdater<TObject, TKey>> updateAction"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Effective.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Effective.html",
    "title": "Property Effective | EyeAuras Docs",
    "keywords": "Property Effective Effective Declaration public IObservableCache<TObject, TKey> Effective { get; } Property Value Type Description IObservableCache<TObject, TKey>"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Items.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Items.html",
    "title": "Property Items | EyeAuras Docs",
    "keywords": "Property Items Items Declaration public IEnumerable<TObject> Items { get; } Property Value Type Description IEnumerable<TObject>"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.KeySelector.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.KeySelector.html",
    "title": "Property KeySelector | EyeAuras Docs",
    "keywords": "Property KeySelector KeySelector Declaration public Func<TObject, TKey> KeySelector { get; } Property Value Type Description Func<TObject, TKey>"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.KeyValues.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.KeyValues.html",
    "title": "Property KeyValues | EyeAuras Docs",
    "keywords": "Property KeyValues KeyValues Declaration public IEnumerable<KeyValuePair<TKey, TObject>> KeyValues { get; } Property Value Type Description IEnumerable<KeyValuePair<TKey, TObject>>"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Keys.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Keys.html",
    "title": "Property Keys | EyeAuras Docs",
    "keywords": "Property Keys Keys Declaration public IEnumerable<TKey> Keys { get; } Property Value Type Description IEnumerable<TKey>"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.LocalCache.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.LocalCache.html",
    "title": "Property LocalCache | EyeAuras Docs",
    "keywords": "Property LocalCache LocalCache Declaration public ISourceCache<TObject, TKey> LocalCache { get; } Property Value Type Description ISourceCache<TObject, TKey> Implements IHierarchicalSourceCache<TObject, TKey>.LocalCache"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Lookup.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Lookup.html",
    "title": "Method Lookup | EyeAuras Docs",
    "keywords": "Method Lookup Lookup(TKey) Declaration public Optional<TObject> Lookup(TKey key) Parameters Type Name Description TKey key Returns Type Description Optional<TObject>"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Parent.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Parent.html",
    "title": "Property Parent | EyeAuras Docs",
    "keywords": "Property Parent Parent Declaration public IHierarchicalSourceCache<TObject, TKey> Parent { get; set; } Property Value Type Description IHierarchicalSourceCache<TObject, TKey> Implements IHierarchicalSourceCache<TObject, TKey>.Parent"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Preview.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Preview.html",
    "title": "Method Preview | EyeAuras Docs",
    "keywords": "Method Preview Preview(Func<TObject, bool>) Declaration public IObservable<IChangeSet<TObject, TKey>> Preview(Func<TObject, bool> predicate = null) Parameters Type Name Description Func<TObject, bool> predicate Returns Type Description IObservable<IChangeSet<TObject, TKey>>"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Watch.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.Watch.html",
    "title": "Method Watch | EyeAuras Docs",
    "keywords": "Method Watch Watch(TKey) Declaration public IObservable<Change<TObject, TKey>> Watch(TKey key) Parameters Type Name Description TKey key Returns Type Description IObservable<Change<TObject, TKey>>"
  },
  "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalSourceCache-2.html",
    "title": "Class HierarchicalSourceCache<TObject, TKey> | EyeAuras Docs",
    "keywords": "Class HierarchicalSourceCache<TObject, TKey> Inheritance object DisposableReactiveObject HierarchicalSourceCache<TObject, TKey> Implements IHierarchicalSourceCache<TObject, TKey> ISourceCache<TObject, TKey> IObservableCache<TObject, TKey> IConnectableCache<TObject, TKey> IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class HierarchicalSourceCache<TObject, TKey> : DisposableReactiveObject, IHierarchicalSourceCache<TObject, TKey>, ISourceCache<TObject, TKey>, IObservableCache<TObject, TKey>, IConnectableCache<TObject, TKey>, IDisposable, INotifyPropertyChanged Type Parameters Name Description TObject TKey Constructors Name Description HierarchicalSourceCache(Func<TObject, TKey>) Properties Name Description Count CountChanged Effective Items KeySelector KeyValues Keys LocalCache Parent Methods Name Description Connect(Func<TObject, bool>, bool) Edit(Action<ISourceUpdater<TObject, TKey>>) Lookup(TKey) Preview(Func<TObject, bool>) Watch(TKey) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.HierarchicalValue-2.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalValue-2.-ctor.html",
    "title": "Constructor HierarchicalValue | EyeAuras Docs",
    "keywords": "Constructor HierarchicalValue HierarchicalValue(TContainer, Expression<Func<TContainer, T>>, Expression<Func<TContainer, TContainer>>, Expression<Func<TContainer, T, T>>) Declaration public HierarchicalValue(TContainer owner, Expression<Func<TContainer, T>> valueExtractor, Expression<Func<TContainer, TContainer>> parentExtractor, Expression<Func<TContainer, T, T>> valueCalculator) Parameters Type Name Description TContainer owner Expression<Func<TContainer, T>> valueExtractor Expression<Func<TContainer, TContainer>> parentExtractor Expression<Func<TContainer, T, T>> valueCalculator"
  },
  "api/PoeShared.Scaffolding.HierarchicalValue-2.CalculatedValue.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalValue-2.CalculatedValue.html",
    "title": "Property CalculatedValue | EyeAuras Docs",
    "keywords": "Property CalculatedValue CalculatedValue Declaration public T CalculatedValue { get; } Property Value Type Description T"
  },
  "api/PoeShared.Scaffolding.HierarchicalValue-2.Owner.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalValue-2.Owner.html",
    "title": "Property Owner | EyeAuras Docs",
    "keywords": "Property Owner Owner Declaration public TContainer Owner { get; } Property Value Type Description TContainer"
  },
  "api/PoeShared.Scaffolding.HierarchicalValue-2.OwnerValue.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalValue-2.OwnerValue.html",
    "title": "Property OwnerValue | EyeAuras Docs",
    "keywords": "Property OwnerValue OwnerValue Declaration public T OwnerValue { get; } Property Value Type Description T"
  },
  "api/PoeShared.Scaffolding.HierarchicalValue-2.Parent.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalValue-2.Parent.html",
    "title": "Property Parent | EyeAuras Docs",
    "keywords": "Property Parent Parent Declaration public TContainer Parent { get; } Property Value Type Description TContainer"
  },
  "api/PoeShared.Scaffolding.HierarchicalValue-2.ParentValue.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalValue-2.ParentValue.html",
    "title": "Property ParentValue | EyeAuras Docs",
    "keywords": "Property ParentValue ParentValue Declaration public T ParentValue { get; } Property Value Type Description T"
  },
  "api/PoeShared.Scaffolding.HierarchicalValue-2.html": {
    "href": "api/PoeShared.Scaffolding.HierarchicalValue-2.html",
    "title": "Class HierarchicalValue<TContainer, T> | EyeAuras Docs",
    "keywords": "Class HierarchicalValue<TContainer, T> Inheritance object DisposableReactiveObject HierarchicalValue<TContainer, T> Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class HierarchicalValue<TContainer, T> : DisposableReactiveObject, IDisposable, INotifyPropertyChanged where TContainer : class Type Parameters Name Description TContainer T Constructors Name Description HierarchicalValue(TContainer, Expression<Func<TContainer, T>>, Expression<Func<TContainer, TContainer>>, Expression<Func<TContainer, T, T>>) Properties Name Description CalculatedValue Owner OwnerValue Parent ParentValue Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ICloseController-1.Close.html": {
    "href": "api/PoeShared.Scaffolding.ICloseController-1.Close.html",
    "title": "Method Close | EyeAuras Docs",
    "keywords": "Method Close Close(TValue) Declaration void Close(TValue value) Parameters Type Name Description TValue value"
  },
  "api/PoeShared.Scaffolding.ICloseController-1.html": {
    "href": "api/PoeShared.Scaffolding.ICloseController-1.html",
    "title": "Interface ICloseController<TValue> | EyeAuras Docs",
    "keywords": "Interface ICloseController<TValue> Inherited Members ICloseController.Close() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public interface ICloseController<in TValue> : ICloseController Type Parameters Name Description TValue Methods Name Description Close(TValue) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ICloseController.Close.html": {
    "href": "api/PoeShared.Scaffolding.ICloseController.Close.html",
    "title": "Method Close | EyeAuras Docs",
    "keywords": "Method Close Close() Declaration void Close()"
  },
  "api/PoeShared.Scaffolding.ICloseController.html": {
    "href": "api/PoeShared.Scaffolding.ICloseController.html",
    "title": "Interface ICloseController | EyeAuras Docs",
    "keywords": "Interface ICloseController Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public interface ICloseController Methods Name Description Close() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ICloseable-1.CloseController.html": {
    "href": "api/PoeShared.Scaffolding.ICloseable-1.CloseController.html",
    "title": "Property CloseController | EyeAuras Docs",
    "keywords": "Property CloseController CloseController Declaration ICloseController<T> CloseController { get; set; } Property Value Type Description ICloseController<T>"
  },
  "api/PoeShared.Scaffolding.ICloseable-1.html": {
    "href": "api/PoeShared.Scaffolding.ICloseable-1.html",
    "title": "Interface ICloseable<T> | EyeAuras Docs",
    "keywords": "Interface ICloseable<T> Inherited Members INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public interface ICloseable<T> : INotifyPropertyChanged Type Parameters Name Description T Properties Name Description CloseController Extension Methods NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ICloseable.CloseController.html": {
    "href": "api/PoeShared.Scaffolding.ICloseable.CloseController.html",
    "title": "Property CloseController | EyeAuras Docs",
    "keywords": "Property CloseController CloseController Declaration ICloseController CloseController { get; set; } Property Value Type Description ICloseController"
  },
  "api/PoeShared.Scaffolding.ICloseable.html": {
    "href": "api/PoeShared.Scaffolding.ICloseable.html",
    "title": "Interface ICloseable | EyeAuras Docs",
    "keywords": "Interface ICloseable Inherited Members INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public interface ICloseable : INotifyPropertyChanged Properties Name Description CloseController Extension Methods NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ICommandWrapper.Description.html": {
    "href": "api/PoeShared.Scaffolding.ICommandWrapper.Description.html",
    "title": "Property Description | EyeAuras Docs",
    "keywords": "Property Description Description Declaration string Description { get; } Property Value Type Description string"
  },
  "api/PoeShared.Scaffolding.ICommandWrapper.Error.html": {
    "href": "api/PoeShared.Scaffolding.ICommandWrapper.Error.html",
    "title": "Property Error | EyeAuras Docs",
    "keywords": "Property Error Error Declaration string Error { get; } Property Value Type Description string"
  },
  "api/PoeShared.Scaffolding.ICommandWrapper.ExecuteAsync.html": {
    "href": "api/PoeShared.Scaffolding.ICommandWrapper.ExecuteAsync.html",
    "title": "Method ExecuteAsync | EyeAuras Docs",
    "keywords": "Method ExecuteAsync ExecuteAsync(object) Declaration Task ExecuteAsync(object parameter) Parameters Type Name Description object parameter Returns Type Description Task"
  },
  "api/PoeShared.Scaffolding.ICommandWrapper.IsBusy.html": {
    "href": "api/PoeShared.Scaffolding.ICommandWrapper.IsBusy.html",
    "title": "Property IsBusy | EyeAuras Docs",
    "keywords": "Property IsBusy IsBusy Declaration bool IsBusy { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Scaffolding.ICommandWrapper.WhenExecuted.html": {
    "href": "api/PoeShared.Scaffolding.ICommandWrapper.WhenExecuted.html",
    "title": "Property WhenExecuted | EyeAuras Docs",
    "keywords": "Property WhenExecuted WhenExecuted Declaration IObservable<object> WhenExecuted { get; } Property Value Type Description IObservable<object>"
  },
  "api/PoeShared.Scaffolding.ICommandWrapper.html": {
    "href": "api/PoeShared.Scaffolding.ICommandWrapper.html",
    "title": "Interface ICommandWrapper | EyeAuras Docs",
    "keywords": "Interface ICommandWrapper Inherited Members ICommand.CanExecute(object) ICommand.Execute(object) ICommand.CanExecuteChanged Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public interface ICommandWrapper : ICommand Properties Name Description Description Error IsBusy WhenExecuted Methods Name Description ExecuteAsync(object) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.IConfigurableReactiveObject-1.Properties.html": {
    "href": "api/PoeShared.Scaffolding.IConfigurableReactiveObject-1.Properties.html",
    "title": "Property Properties | EyeAuras Docs",
    "keywords": "Property Properties Properties Declaration TProperties Properties { get; } Property Value Type Description TProperties"
  },
  "api/PoeShared.Scaffolding.IConfigurableReactiveObject-1.html": {
    "href": "api/PoeShared.Scaffolding.IConfigurableReactiveObject-1.html",
    "title": "Interface IConfigurableReactiveObject<TProperties> | EyeAuras Docs",
    "keywords": "Interface IConfigurableReactiveObject<TProperties> Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public interface IConfigurableReactiveObject<out TProperties> : IDisposable, INotifyPropertyChanged where TProperties : IPoeEyeConfigVersioned, IHasValidation, new() Type Parameters Name Description TProperties Properties Name Description Properties Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.IHierarchicalSourceCache-2.LocalCache.html": {
    "href": "api/PoeShared.Scaffolding.IHierarchicalSourceCache-2.LocalCache.html",
    "title": "Property LocalCache | EyeAuras Docs",
    "keywords": "Property LocalCache LocalCache Declaration ISourceCache<TObject, TKey> LocalCache { get; } Property Value Type Description ISourceCache<TObject, TKey>"
  },
  "api/PoeShared.Scaffolding.IHierarchicalSourceCache-2.Parent.html": {
    "href": "api/PoeShared.Scaffolding.IHierarchicalSourceCache-2.Parent.html",
    "title": "Property Parent | EyeAuras Docs",
    "keywords": "Property Parent Parent Declaration IHierarchicalSourceCache<TObject, TKey> Parent { get; set; } Property Value Type Description IHierarchicalSourceCache<TObject, TKey>"
  },
  "api/PoeShared.Scaffolding.IHierarchicalSourceCache-2.html": {
    "href": "api/PoeShared.Scaffolding.IHierarchicalSourceCache-2.html",
    "title": "Interface IHierarchicalSourceCache<TObject, TKey> | EyeAuras Docs",
    "keywords": "Interface IHierarchicalSourceCache<TObject, TKey> Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public interface IHierarchicalSourceCache<TObject, TKey> : ISourceCache<TObject, TKey>, IObservableCache<TObject, TKey>, IConnectableCache<TObject, TKey>, IDisposable, INotifyPropertyChanged Type Parameters Name Description TObject TKey Properties Name Description LocalCache Parent Extension Methods ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.IObservableCacheEx-2.Collection.html": {
    "href": "api/PoeShared.Scaffolding.IObservableCacheEx-2.Collection.html",
    "title": "Property Collection | EyeAuras Docs",
    "keywords": "Property Collection Collection Declaration IReadOnlyObservableCollection<T> Collection { get; } Property Value Type Description IReadOnlyObservableCollection<T>"
  },
  "api/PoeShared.Scaffolding.IObservableCacheEx-2.html": {
    "href": "api/PoeShared.Scaffolding.IObservableCacheEx-2.html",
    "title": "Interface IObservableCacheEx<T, TKey> | EyeAuras Docs",
    "keywords": "Interface IObservableCacheEx<T, TKey> Inherited Members IDisposable.Dispose() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public interface IObservableCacheEx<T, TKey> : IObservableCache<T, TKey>, IConnectableCache<T, TKey>, IDisposable Type Parameters Name Description T TKey Properties Name Description Collection Extension Methods ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.IObservableListEx-1.Collection.html": {
    "href": "api/PoeShared.Scaffolding.IObservableListEx-1.Collection.html",
    "title": "Property Collection | EyeAuras Docs",
    "keywords": "Property Collection Collection Declaration IReadOnlyObservableCollection<T> Collection { get; } Property Value Type Description IReadOnlyObservableCollection<T>"
  },
  "api/PoeShared.Scaffolding.IObservableListEx-1.html": {
    "href": "api/PoeShared.Scaffolding.IObservableListEx-1.html",
    "title": "Interface IObservableListEx<T> | EyeAuras Docs",
    "keywords": "Interface IObservableListEx<T> Inherited Members IDisposable.Dispose() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public interface IObservableListEx<T> : IObservableList<T>, IDisposable Type Parameters Name Description T Properties Name Description Collection Extension Methods ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.IReadOnlyObservableCollection-1.html": {
    "href": "api/PoeShared.Scaffolding.IReadOnlyObservableCollection-1.html",
    "title": "Interface IReadOnlyObservableCollection<T> | EyeAuras Docs",
    "keywords": "Interface IReadOnlyObservableCollection<T> Inherited Members IReadOnlyList<T>.this[int] IReadOnlyCollection<T>.Count IEnumerable<T>.GetEnumerator() INotifyCollectionChanged.CollectionChanged INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public interface IReadOnlyObservableCollection<out T> : IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged Type Parameters Name Description T Extension Methods ChangeSetExtensions.Connect<T>(IReadOnlyObservableCollection<T>) ChangeSetExtensions.ToObservableChangeSet<T>(IReadOnlyObservableCollection<T>) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ChangeSetExtensions.AsSourceListEx<T>(IEnumerable<T>) ChangeSetExtensions.ToSourceList<T>(IEnumerable<T>) EnumerableExtensions.EmptyIfNull<T>(IEnumerable<T>) EnumerableExtensions.ForEachAsync<T>(IEnumerable<T>, Func<T, Task>) EnumerableExtensions.ForEach<T>(IEnumerable<T>, Action<T>) EnumerableExtensions.Intersperse<T>(IEnumerable<T>, Func<T, T>) EnumerableExtensions.Intersperse<T>(IEnumerable<T>, T) EnumerableExtensions.IsEmpty<T>(IEnumerable<T>) EnumerableExtensions.IsUnique<T>(IEnumerable<T>) EnumerableExtensions.PickRandom<T>(IEnumerable<T>) EnumerableExtensions.Randomize<T>(IEnumerable<T>) EnumerableExtensions.SelectSafe<T, TResult>(IEnumerable<T>, Func<T, TResult>) EnumerableExtensions.SelectSafe<T, TResult>(IEnumerable<T>, Func<T, TResult>, Action<T, Exception>) EnumerableExtensions.ToDictionaryWithReplacement<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>) EnumerableExtensions.ToDictionaryWithThrow<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>) EnumerableExtensions.ToDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>, Func<(TKey key, TValue existingValue, TValue newValue), TValue>) EnumerableExtensions.ToObservableCollection<T>(IEnumerable<T>) EnumerableExtensions.ToReadOnlyObservableCollection<T>(IEnumerable<T>) EnumerableExtensions.ToVariations<T>(IEnumerable<T>) ObjectExtensions.DumpToNamedTable<T>(IEnumerable<T>, string, int, string) ObjectExtensions.DumpToNamedTable<T>(IEnumerable<T>, string, string) ObjectExtensions.DumpToString<T>(IEnumerable<T>) ObjectExtensions.DumpToTable<T>(IEnumerable<T>, int) ObjectExtensions.DumpToTable<T>(IEnumerable<T>, string) ObjectExtensions.DumpToTable<T>(IEnumerable<T>, string, string, int?) ObjectExtensions.ToStringTable<T>(IEnumerable<T>, string) EnumerableExtensions.Subrange<T>(IReadOnlyList<T>, int, int) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ISourceCacheEx-2.html": {
    "href": "api/PoeShared.Scaffolding.ISourceCacheEx-2.html",
    "title": "Interface ISourceCacheEx<T, TKey> | EyeAuras Docs",
    "keywords": "Interface ISourceCacheEx<T, TKey> Inherited Members IEnumerable<T>.GetEnumerator() IObservableCacheEx<T, TKey>.Collection IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged INotifyCollectionChanged.CollectionChanged Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public interface ISourceCacheEx<T, TKey> : ISourceCache<T, TKey>, IEnumerable<T>, IEnumerable, IObservableCacheEx<T, TKey>, IObservableCache<T, TKey>, IConnectableCache<T, TKey>, IDisposable, INotifyPropertyChanged, INotifyCollectionChanged Type Parameters Name Description T TKey Extension Methods ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ISourceListEx-1.html": {
    "href": "api/PoeShared.Scaffolding.ISourceListEx-1.html",
    "title": "Interface ISourceListEx<T> | EyeAuras Docs",
    "keywords": "Interface ISourceListEx<T> Inherited Members IObservableListEx<T>.Collection IEnumerable<T>.GetEnumerator() IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged INotifyCollectionChanged.CollectionChanged Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public interface ISourceListEx<T> : ISourceList<T>, IObservableListEx<T>, IObservableList<T>, IEnumerable<T>, IEnumerable, IDisposable, INotifyPropertyChanged, INotifyCollectionChanged Type Parameters Name Description T Extension Methods ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ISuspendable.Suspend.html": {
    "href": "api/PoeShared.Scaffolding.ISuspendable.Suspend.html",
    "title": "Method Suspend | EyeAuras Docs",
    "keywords": "Method Suspend Suspend() Declaration IDisposable Suspend() Returns Type Description IDisposable"
  },
  "api/PoeShared.Scaffolding.ISuspendable.html": {
    "href": "api/PoeShared.Scaffolding.ISuspendable.html",
    "title": "Interface ISuspendable | EyeAuras Docs",
    "keywords": "Interface ISuspendable Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public interface ISuspendable Methods Name Description Suspend() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.IntPtrExtensions.HiWord.html": {
    "href": "api/PoeShared.Scaffolding.IntPtrExtensions.HiWord.html",
    "title": "Method HiWord | EyeAuras Docs",
    "keywords": "Method HiWord HiWord(IntPtr) Declaration public static ushort HiWord(this IntPtr value) Parameters Type Name Description nint value Returns Type Description ushort"
  },
  "api/PoeShared.Scaffolding.IntPtrExtensions.LoWord.html": {
    "href": "api/PoeShared.Scaffolding.IntPtrExtensions.LoWord.html",
    "title": "Method LoWord | EyeAuras Docs",
    "keywords": "Method LoWord LoWord(IntPtr) Declaration public static ushort LoWord(this IntPtr value) Parameters Type Name Description nint value Returns Type Description ushort"
  },
  "api/PoeShared.Scaffolding.IntPtrExtensions.ToHexadecimal.html": {
    "href": "api/PoeShared.Scaffolding.IntPtrExtensions.ToHexadecimal.html",
    "title": "Method ToHexadecimal | EyeAuras Docs",
    "keywords": "Method ToHexadecimal ToHexadecimal(IntPtr) Declaration public static string ToHexadecimal(this IntPtr value) Parameters Type Name Description nint value Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.IntPtrExtensions.html": {
    "href": "api/PoeShared.Scaffolding.IntPtrExtensions.html",
    "title": "Class IntPtrExtensions | EyeAuras Docs",
    "keywords": "Class IntPtrExtensions Inheritance object IntPtrExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class IntPtrExtensions Methods Name Description HiWord(IntPtr) LoWord(IntPtr) ToHexadecimal(IntPtr)"
  },
  "api/PoeShared.Scaffolding.InvalidStateException.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.InvalidStateException.-ctor.html",
    "title": "Constructor InvalidStateException | EyeAuras Docs",
    "keywords": "Constructor InvalidStateException InvalidStateException() Declaration public InvalidStateException() InvalidStateException(string) Declaration public InvalidStateException(string message) Parameters Type Name Description string message InvalidStateException(string, Exception) Declaration public InvalidStateException(string message, Exception innerException) Parameters Type Name Description string message Exception innerException"
  },
  "api/PoeShared.Scaffolding.InvalidStateException.html": {
    "href": "api/PoeShared.Scaffolding.InvalidStateException.html",
    "title": "Class InvalidStateException | EyeAuras Docs",
    "keywords": "Class InvalidStateException Inheritance object Exception InvalidStateException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public class InvalidStateException : Exception, ISerializable Constructors Name Description InvalidStateException() InvalidStateException(string) InvalidStateException(string, Exception) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.IpAddressExtensions.IsInSubnet.html": {
    "href": "api/PoeShared.Scaffolding.IpAddressExtensions.IsInSubnet.html",
    "title": "Method IsInSubnet | EyeAuras Docs",
    "keywords": "Method IsInSubnet IsInSubnet(IPAddress, string) Declaration public static bool IsInSubnet(this IPAddress address, string subnetMask) Parameters Type Name Description IPAddress address string subnetMask Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.IpAddressExtensions.ToReadableIpAddressOrIdentity.html": {
    "href": "api/PoeShared.Scaffolding.IpAddressExtensions.ToReadableIpAddressOrIdentity.html",
    "title": "Method ToReadableIpAddressOrIdentity | EyeAuras Docs",
    "keywords": "Method ToReadableIpAddressOrIdentity ToReadableIpAddressOrIdentity(string) Declaration public static string ToReadableIpAddressOrIdentity(this string ip) Parameters Type Name Description string ip Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.IpAddressExtensions.ToReadableString.html": {
    "href": "api/PoeShared.Scaffolding.IpAddressExtensions.ToReadableString.html",
    "title": "Method ToReadableString | EyeAuras Docs",
    "keywords": "Method ToReadableString ToReadableString(IPAddress) Declaration public static string ToReadableString(this IPAddress ipAddress) Parameters Type Name Description IPAddress ipAddress Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.IpAddressExtensions.TryParseToIpAddress.html": {
    "href": "api/PoeShared.Scaffolding.IpAddressExtensions.TryParseToIpAddress.html",
    "title": "Method TryParseToIpAddress | EyeAuras Docs",
    "keywords": "Method TryParseToIpAddress TryParseToIpAddress(string, out IPAddress) Declaration public static bool TryParseToIpAddress(this string ip, out IPAddress result) Parameters Type Name Description string ip IPAddress result Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.IpAddressExtensions.html": {
    "href": "api/PoeShared.Scaffolding.IpAddressExtensions.html",
    "title": "Class IpAddressExtensions | EyeAuras Docs",
    "keywords": "Class IpAddressExtensions Inheritance object IpAddressExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class IpAddressExtensions Methods Name Description IsInSubnet(IPAddress, string) ToReadableIpAddressOrIdentity(string) ToReadableString(IPAddress) TryParseToIpAddress(string, out IPAddress)"
  },
  "api/PoeShared.Scaffolding.KeyboardLayoutManagerExtensions.ChangeLayout.html": {
    "href": "api/PoeShared.Scaffolding.KeyboardLayoutManagerExtensions.ChangeLayout.html",
    "title": "Method ChangeLayout | EyeAuras Docs",
    "keywords": "Method ChangeLayout ChangeLayout(IKeyboardLayoutManager, KeyboardLayout, IWindowHandle) Declaration public static IDisposable ChangeLayout(this IKeyboardLayoutManager keyboardLayoutManager, KeyboardLayout layout, IWindowHandle targetWindow) Parameters Type Name Description IKeyboardLayoutManager keyboardLayoutManager KeyboardLayout layout IWindowHandle targetWindow Returns Type Description IDisposable"
  },
  "api/PoeShared.Scaffolding.KeyboardLayoutManagerExtensions.html": {
    "href": "api/PoeShared.Scaffolding.KeyboardLayoutManagerExtensions.html",
    "title": "Class KeyboardLayoutManagerExtensions | EyeAuras Docs",
    "keywords": "Class KeyboardLayoutManagerExtensions Inheritance object KeyboardLayoutManagerExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.Native.dll Syntax public static class KeyboardLayoutManagerExtensions Methods Name Description ChangeLayout(IKeyboardLayoutManager, KeyboardLayout, IWindowHandle)"
  },
  "api/PoeShared.Scaffolding.LambdaComparer-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.LambdaComparer-1.-ctor.html",
    "title": "Constructor LambdaComparer | EyeAuras Docs",
    "keywords": "Constructor LambdaComparer LambdaComparer(Func<T, T, int>) Declaration public LambdaComparer(Func<T, T, int> comparer) Parameters Type Name Description Func<T, T, int> comparer"
  },
  "api/PoeShared.Scaffolding.LambdaComparer-1.Compare.html": {
    "href": "api/PoeShared.Scaffolding.LambdaComparer-1.Compare.html",
    "title": "Method Compare | EyeAuras Docs",
    "keywords": "Method Compare Compare(T, T) Declaration public int Compare(T x, T y) Parameters Type Name Description T x T y Returns Type Description int Implements IComparer<T>.Compare(T, T)"
  },
  "api/PoeShared.Scaffolding.LambdaComparer-1.html": {
    "href": "api/PoeShared.Scaffolding.LambdaComparer-1.html",
    "title": "Class LambdaComparer<T> | EyeAuras Docs",
    "keywords": "Class LambdaComparer<T> Inheritance object LambdaComparer<T> Implements IComparer<T> Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class LambdaComparer<T> : IComparer<T> Type Parameters Name Description T Constructors Name Description LambdaComparer(Func<T, T, int>) Methods Name Description Compare(T, T) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.LambdaEqualityComparer-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.LambdaEqualityComparer-1.-ctor.html",
    "title": "Constructor LambdaEqualityComparer | EyeAuras Docs",
    "keywords": "Constructor LambdaEqualityComparer LambdaEqualityComparer(Func<T, T, bool>) Declaration public LambdaEqualityComparer(Func<T, T, bool> comparer) Parameters Type Name Description Func<T, T, bool> comparer LambdaEqualityComparer(Func<T, T, bool>, Func<T, int>) Declaration public LambdaEqualityComparer(Func<T, T, bool> comparer, Func<T, int> hash) Parameters Type Name Description Func<T, T, bool> comparer Func<T, int> hash"
  },
  "api/PoeShared.Scaffolding.LambdaEqualityComparer-1.Equals.html": {
    "href": "api/PoeShared.Scaffolding.LambdaEqualityComparer-1.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(T, T) Declaration public bool Equals(T x, T y) Parameters Type Name Description T x T y Returns Type Description bool Implements IEqualityComparer<T>.Equals(T, T)"
  },
  "api/PoeShared.Scaffolding.LambdaEqualityComparer-1.FromKey.html": {
    "href": "api/PoeShared.Scaffolding.LambdaEqualityComparer-1.FromKey.html",
    "title": "Method FromKey | EyeAuras Docs",
    "keywords": "Method FromKey FromKey<TKey>(Func<T, TKey>) Declaration public static LambdaEqualityComparer<T> FromKey<TKey>(Func<T, TKey> keyExtractor) Parameters Type Name Description Func<T, TKey> keyExtractor Returns Type Description LambdaEqualityComparer<T> Type Parameters Name Description TKey"
  },
  "api/PoeShared.Scaffolding.LambdaEqualityComparer-1.GetHashCode.html": {
    "href": "api/PoeShared.Scaffolding.LambdaEqualityComparer-1.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode(T) Declaration public int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description int Implements IEqualityComparer<T>.GetHashCode(T)"
  },
  "api/PoeShared.Scaffolding.LambdaEqualityComparer-1.html": {
    "href": "api/PoeShared.Scaffolding.LambdaEqualityComparer-1.html",
    "title": "Class LambdaEqualityComparer<T> | EyeAuras Docs",
    "keywords": "Class LambdaEqualityComparer<T> Inheritance object LambdaEqualityComparer<T> Implements IEqualityComparer<T> Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class LambdaEqualityComparer<T> : IEqualityComparer<T> Type Parameters Name Description T Constructors Name Description LambdaEqualityComparer(Func<T, T, bool>) LambdaEqualityComparer(Func<T, T, bool>, Func<T, int>) Methods Name Description Equals(T, T) FromKey<TKey>(Func<T, TKey>) GetHashCode(T) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.LazyReactiveObject-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.LazyReactiveObject-1.-ctor.html",
    "title": "Constructor LazyReactiveObject | EyeAuras Docs",
    "keywords": "Constructor LazyReactiveObject LazyReactiveObject() Declaration protected LazyReactiveObject()"
  },
  "api/PoeShared.Scaffolding.LazyReactiveObject-1.Instance.html": {
    "href": "api/PoeShared.Scaffolding.LazyReactiveObject-1.Instance.html",
    "title": "Property Instance | EyeAuras Docs",
    "keywords": "Property Instance Instance Declaration public static T Instance { get; } Property Value Type Description T"
  },
  "api/PoeShared.Scaffolding.LazyReactiveObject-1.html": {
    "href": "api/PoeShared.Scaffolding.LazyReactiveObject-1.html",
    "title": "Class LazyReactiveObject<T> | EyeAuras Docs",
    "keywords": "Class LazyReactiveObject<T> Inheritance object DisposableReactiveObject LazyReactiveObject<T> BlackboardSyntaxRewriter CIEDE2000ColorSimilarityCalculator EuclideanDistanceColorSimilarityCalculator CsharpExpressionParser Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public abstract class LazyReactiveObject<T> : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Type Parameters Name Description T Constructors Name Description LazyReactiveObject() Properties Name Description Instance Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.LoggingChangeSetAdaptor-2.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.LoggingChangeSetAdaptor-2.-ctor.html",
    "title": "Constructor LoggingChangeSetAdaptor | EyeAuras Docs",
    "keywords": "Constructor LoggingChangeSetAdaptor LoggingChangeSetAdaptor(string, IFluentLog, FluentLogLevel, IChangeSetAdaptor<T, TKey>) Declaration public LoggingChangeSetAdaptor(string name = null, IFluentLog logger = null, FluentLogLevel logLevel = FluentLogLevel.Trace, IChangeSetAdaptor<T, TKey> innerAdaptor = null) Parameters Type Name Description string name IFluentLog logger FluentLogLevel logLevel IChangeSetAdaptor<T, TKey> innerAdaptor"
  },
  "api/PoeShared.Scaffolding.LoggingChangeSetAdaptor-2.Adapt.html": {
    "href": "api/PoeShared.Scaffolding.LoggingChangeSetAdaptor-2.Adapt.html",
    "title": "Method Adapt | EyeAuras Docs",
    "keywords": "Method Adapt Adapt(IChangeSet<T, TKey>) Declaration public void Adapt(IChangeSet<T, TKey> changeSet) Parameters Type Name Description IChangeSet<T, TKey> changeSet"
  },
  "api/PoeShared.Scaffolding.LoggingChangeSetAdaptor-2.html": {
    "href": "api/PoeShared.Scaffolding.LoggingChangeSetAdaptor-2.html",
    "title": "Class LoggingChangeSetAdaptor<T, TKey> | EyeAuras Docs",
    "keywords": "Class LoggingChangeSetAdaptor<T, TKey> Inheritance object DisposableReactiveObject LoggingChangeSetAdaptorBase LoggingChangeSetAdaptor<T, TKey> Implements IDisposable INotifyPropertyChanged IChangeSetAdaptor<T, TKey> Inherited Members LoggingChangeSetAdaptorBase.ParentThread LoggingChangeSetAdaptorBase.ParentStackTraceInfo LoggingChangeSetAdaptorBase.Messages LoggingChangeSetAdaptorBase.FormatPrefix() LoggingChangeSetAdaptorBase.FormatSuffix() LoggingChangeSetAdaptorBase.WriteLog(string) LoggingChangeSetAdaptorBase.Logger LoggingChangeSetAdaptorBase.LogLevel object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public class LoggingChangeSetAdaptor<T, TKey> : LoggingChangeSetAdaptorBase, IDisposable, INotifyPropertyChanged, IChangeSetAdaptor<T, TKey> Type Parameters Name Description T TKey Constructors Name Description LoggingChangeSetAdaptor(string, IFluentLog, FluentLogLevel, IChangeSetAdaptor<T, TKey>) Methods Name Description Adapt(IChangeSet<T, TKey>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.-ctor.html",
    "title": "Constructor LoggingChangeSetAdaptorBase | EyeAuras Docs",
    "keywords": "Constructor LoggingChangeSetAdaptorBase LoggingChangeSetAdaptorBase() Declaration protected LoggingChangeSetAdaptorBase()"
  },
  "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.FormatPrefix.html": {
    "href": "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.FormatPrefix.html",
    "title": "Method FormatPrefix | EyeAuras Docs",
    "keywords": "Method FormatPrefix FormatPrefix() Declaration protected string FormatPrefix() Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.FormatSuffix.html": {
    "href": "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.FormatSuffix.html",
    "title": "Method FormatSuffix | EyeAuras Docs",
    "keywords": "Method FormatSuffix FormatSuffix() Declaration protected string FormatSuffix() Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.LogLevel.html": {
    "href": "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.LogLevel.html",
    "title": "Property LogLevel | EyeAuras Docs",
    "keywords": "Property LogLevel LogLevel Declaration public FluentLogLevel LogLevel { get; set; } Property Value Type Description FluentLogLevel"
  },
  "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.Logger.html": {
    "href": "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.Logger.html",
    "title": "Property Logger | EyeAuras Docs",
    "keywords": "Property Logger Logger Declaration public IFluentLog Logger { get; set; } Property Value Type Description IFluentLog"
  },
  "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.Messages.html": {
    "href": "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.Messages.html",
    "title": "Field Messages | EyeAuras Docs",
    "keywords": "Field Messages Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax protected readonly ConcurrentQueue<string> Messages Returns Type Description ConcurrentQueue<string>"
  },
  "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.ParentStackTraceInfo.html": {
    "href": "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.ParentStackTraceInfo.html",
    "title": "Field ParentStackTraceInfo | EyeAuras Docs",
    "keywords": "Field ParentStackTraceInfo Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax protected readonly string ParentStackTraceInfo Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.ParentThread.html": {
    "href": "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.ParentThread.html",
    "title": "Field ParentThread | EyeAuras Docs",
    "keywords": "Field ParentThread Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax protected readonly int ParentThread Returns Type Description int"
  },
  "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.WriteLog.html": {
    "href": "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.WriteLog.html",
    "title": "Method WriteLog | EyeAuras Docs",
    "keywords": "Method WriteLog WriteLog(string) Declaration protected void WriteLog(string message) Parameters Type Name Description string message"
  },
  "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.html": {
    "href": "api/PoeShared.Scaffolding.LoggingChangeSetAdaptorBase.html",
    "title": "Class LoggingChangeSetAdaptorBase | EyeAuras Docs",
    "keywords": "Class LoggingChangeSetAdaptorBase Inheritance object DisposableReactiveObject LoggingChangeSetAdaptorBase LoggingChangeSetAdaptor<T, TKey> LoggingListChangeSetAdaptor<T> Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public abstract class LoggingChangeSetAdaptorBase : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Constructors Name Description LoggingChangeSetAdaptorBase() Fields Name Description Messages ParentStackTraceInfo ParentThread Properties Name Description LogLevel Logger Methods Name Description FormatPrefix() FormatSuffix() WriteLog(string) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.LoggingListChangeSetAdaptor-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.LoggingListChangeSetAdaptor-1.-ctor.html",
    "title": "Constructor LoggingListChangeSetAdaptor | EyeAuras Docs",
    "keywords": "Constructor LoggingListChangeSetAdaptor LoggingListChangeSetAdaptor(string, IFluentLog, FluentLogLevel, IChangeSetAdaptor<T>) Declaration public LoggingListChangeSetAdaptor(string name = null, IFluentLog logger = null, FluentLogLevel logLevel = FluentLogLevel.Trace, IChangeSetAdaptor<T> innerAdaptor = null) Parameters Type Name Description string name IFluentLog logger FluentLogLevel logLevel IChangeSetAdaptor<T> innerAdaptor"
  },
  "api/PoeShared.Scaffolding.LoggingListChangeSetAdaptor-1.Adapt.html": {
    "href": "api/PoeShared.Scaffolding.LoggingListChangeSetAdaptor-1.Adapt.html",
    "title": "Method Adapt | EyeAuras Docs",
    "keywords": "Method Adapt Adapt(IChangeSet<T>) Declaration public void Adapt(IChangeSet<T> changeSet) Parameters Type Name Description IChangeSet<T> changeSet"
  },
  "api/PoeShared.Scaffolding.LoggingListChangeSetAdaptor-1.html": {
    "href": "api/PoeShared.Scaffolding.LoggingListChangeSetAdaptor-1.html",
    "title": "Class LoggingListChangeSetAdaptor<T> | EyeAuras Docs",
    "keywords": "Class LoggingListChangeSetAdaptor<T> Inheritance object DisposableReactiveObject LoggingChangeSetAdaptorBase LoggingListChangeSetAdaptor<T> Implements IDisposable INotifyPropertyChanged IChangeSetAdaptor<T> Inherited Members LoggingChangeSetAdaptorBase.ParentThread LoggingChangeSetAdaptorBase.ParentStackTraceInfo LoggingChangeSetAdaptorBase.Messages LoggingChangeSetAdaptorBase.FormatPrefix() LoggingChangeSetAdaptorBase.FormatSuffix() LoggingChangeSetAdaptorBase.WriteLog(string) LoggingChangeSetAdaptorBase.Logger LoggingChangeSetAdaptorBase.LogLevel object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public class LoggingListChangeSetAdaptor<T> : LoggingChangeSetAdaptorBase, IDisposable, INotifyPropertyChanged, IChangeSetAdaptor<T> Type Parameters Name Description T Constructors Name Description LoggingListChangeSetAdaptor(string, IFluentLog, FluentLogLevel, IChangeSetAdaptor<T>) Methods Name Description Adapt(IChangeSet<T>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.MappingEnumerator-2.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.MappingEnumerator-2.-ctor.html",
    "title": "Constructor MappingEnumerator | EyeAuras Docs",
    "keywords": "Constructor MappingEnumerator MappingEnumerator(IEnumerator<T>, Func<T, TResult>) Declaration public MappingEnumerator(IEnumerator<T> enumerator, Func<T, TResult> selector) Parameters Type Name Description IEnumerator<T> enumerator Func<T, TResult> selector"
  },
  "api/PoeShared.Scaffolding.MappingEnumerator-2.Current.html": {
    "href": "api/PoeShared.Scaffolding.MappingEnumerator-2.Current.html",
    "title": "Property Current | EyeAuras Docs",
    "keywords": "Property Current Current Declaration public TResult Current { get; } Property Value Type Description TResult Implements IEnumerator<T>.Current"
  },
  "api/PoeShared.Scaffolding.MappingEnumerator-2.Dispose.html": {
    "href": "api/PoeShared.Scaffolding.MappingEnumerator-2.Dispose.html",
    "title": "Method Dispose | EyeAuras Docs",
    "keywords": "Method Dispose Dispose() Declaration public void Dispose() Implements IDisposable.Dispose()"
  },
  "api/PoeShared.Scaffolding.MappingEnumerator-2.MoveNext.html": {
    "href": "api/PoeShared.Scaffolding.MappingEnumerator-2.MoveNext.html",
    "title": "Method MoveNext | EyeAuras Docs",
    "keywords": "Method MoveNext MoveNext() Declaration public bool MoveNext() Returns Type Description bool Implements IEnumerator.MoveNext()"
  },
  "api/PoeShared.Scaffolding.MappingEnumerator-2.Reset.html": {
    "href": "api/PoeShared.Scaffolding.MappingEnumerator-2.Reset.html",
    "title": "Method Reset | EyeAuras Docs",
    "keywords": "Method Reset Reset() Declaration public void Reset() Implements IEnumerator.Reset()"
  },
  "api/PoeShared.Scaffolding.MappingEnumerator-2.html": {
    "href": "api/PoeShared.Scaffolding.MappingEnumerator-2.html",
    "title": "Class MappingEnumerator<T, TResult> | EyeAuras Docs",
    "keywords": "Class MappingEnumerator<T, TResult> Inheritance object MappingEnumerator<T, TResult> Implements IEnumerator<TResult> IEnumerator IDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class MappingEnumerator<T, TResult> : IEnumerator<TResult>, IEnumerator, IDisposable Type Parameters Name Description T TResult Constructors Name Description MappingEnumerator(IEnumerator<T>, Func<T, TResult>) Properties Name Description Current Methods Name Description Dispose() MoveNext() Reset() Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) EnumeratorExtensions.ToList<T>(IEnumerator<T>) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.MetricsExtensions.SetTime.html": {
    "href": "api/PoeShared.Scaffolding.MetricsExtensions.SetTime.html",
    "title": "Method SetTime | EyeAuras Docs",
    "keywords": "Method SetTime SetTime(IMeasureGaugeMetrics, string, double) Declaration public static void SetTime(this IMeasureGaugeMetrics metrics, string gaugeName, double value) Parameters Type Name Description IMeasureGaugeMetrics metrics string gaugeName double value"
  },
  "api/PoeShared.Scaffolding.MetricsExtensions.Time.html": {
    "href": "api/PoeShared.Scaffolding.MetricsExtensions.Time.html",
    "title": "Method Time | EyeAuras Docs",
    "keywords": "Method Time Time(IMeasureGaugeMetrics, string) Declaration public static IDisposable Time(this IMeasureGaugeMetrics metrics, string gaugeName) Parameters Type Name Description IMeasureGaugeMetrics metrics string gaugeName Returns Type Description IDisposable Time(IMeasureGaugeMetrics, GaugeOptions) Declaration public static IDisposable Time(this IMeasureGaugeMetrics metrics, GaugeOptions options) Parameters Type Name Description IMeasureGaugeMetrics metrics GaugeOptions options Returns Type Description IDisposable"
  },
  "api/PoeShared.Scaffolding.MetricsExtensions.html": {
    "href": "api/PoeShared.Scaffolding.MetricsExtensions.html",
    "title": "Class MetricsExtensions | EyeAuras Docs",
    "keywords": "Class MetricsExtensions Inheritance object MetricsExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class MetricsExtensions Methods Name Description SetTime(IMeasureGaugeMetrics, string, double) Time(IMeasureGaugeMetrics, GaugeOptions) Time(IMeasureGaugeMetrics, string)"
  },
  "api/PoeShared.Scaffolding.NaturalStringComparer.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.NaturalStringComparer.-ctor.html",
    "title": "Constructor NaturalStringComparer | EyeAuras Docs",
    "keywords": "Constructor NaturalStringComparer NaturalStringComparer() Declaration public NaturalStringComparer()"
  },
  "api/PoeShared.Scaffolding.NaturalStringComparer.Compare.html": {
    "href": "api/PoeShared.Scaffolding.NaturalStringComparer.Compare.html",
    "title": "Method Compare | EyeAuras Docs",
    "keywords": "Method Compare Compare(string, string) Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other. Declaration public int Compare(string x, string y) Parameters Type Name Description string x The first object to compare. string y The second object to compare. Returns Type Description int A signed integer that indicates the relative values of x and y, as shown in the following table.Value Meaning Less than zerox is less than y.Zerox equals y.Greater than zerox is greater than y. Implements IComparer<T>.Compare(T, T)"
  },
  "api/PoeShared.Scaffolding.NaturalStringComparer.html": {
    "href": "api/PoeShared.Scaffolding.NaturalStringComparer.html",
    "title": "Class NaturalStringComparer | EyeAuras Docs",
    "keywords": "Class NaturalStringComparer Implements a natural comparer for strings. Inheritance object NaturalStringComparer Implements IComparer<string> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public class NaturalStringComparer : IComparer<string> Constructors Name Description NaturalStringComparer() Methods Name Description Compare(string, string) Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.NotifyPropertyChangedExtensions.GetPropertyName.html": {
    "href": "api/PoeShared.Scaffolding.NotifyPropertyChangedExtensions.GetPropertyName.html",
    "title": "Method GetPropertyName | EyeAuras Docs",
    "keywords": "Method GetPropertyName GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) Declaration public static string GetPropertyName<TObject, T1>(this TObject instance, Expression<Func<TObject, T1>> instancePropertyExtractor) where TObject : INotifyPropertyChanged Parameters Type Name Description TObject instance Expression<Func<TObject, T1>> instancePropertyExtractor Returns Type Description string Type Parameters Name Description TObject T1"
  },
  "api/PoeShared.Scaffolding.NotifyPropertyChangedExtensions.TryWaitForValue.html": {
    "href": "api/PoeShared.Scaffolding.NotifyPropertyChangedExtensions.TryWaitForValue.html",
    "title": "Method TryWaitForValue | EyeAuras Docs",
    "keywords": "Method TryWaitForValue TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) Declaration public static bool TryWaitForValue<TObject, T1>(this TObject instance, Expression<Func<TObject, T1>> ex1, Predicate<T1> condition, TimeSpan timeout) where TObject : INotifyPropertyChanged Parameters Type Name Description TObject instance Expression<Func<TObject, T1>> ex1 Predicate<T1> condition TimeSpan timeout Returns Type Description bool Type Parameters Name Description TObject T1"
  },
  "api/PoeShared.Scaffolding.NotifyPropertyChangedExtensions.WaitForAsync.html": {
    "href": "api/PoeShared.Scaffolding.NotifyPropertyChangedExtensions.WaitForAsync.html",
    "title": "Method WaitForAsync | EyeAuras Docs",
    "keywords": "Method WaitForAsync WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) Declaration public static Task<T1> WaitForAsync<TObject, T1>(this TObject instance, Func<TObject, T1> extractor, Predicate<T1> condition, TimeSpan timeout) where TObject : INotifyPropertyChanged Parameters Type Name Description TObject instance Func<TObject, T1> extractor Predicate<T1> condition TimeSpan timeout Returns Type Description Task<T1> Type Parameters Name Description TObject T1"
  },
  "api/PoeShared.Scaffolding.NotifyPropertyChangedExtensions.WaitForValue.html": {
    "href": "api/PoeShared.Scaffolding.NotifyPropertyChangedExtensions.WaitForValue.html",
    "title": "Method WaitForValue | EyeAuras Docs",
    "keywords": "Method WaitForValue WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) Declaration public static void WaitForValue<TObject, T1>(this TObject instance, Expression<Func<TObject, T1>> ex1, Predicate<T1> condition, TimeSpan timeout) where TObject : INotifyPropertyChanged Parameters Type Name Description TObject instance Expression<Func<TObject, T1>> ex1 Predicate<T1> condition TimeSpan timeout Type Parameters Name Description TObject T1"
  },
  "api/PoeShared.Scaffolding.NotifyPropertyChangedExtensions.WaitForValueAsync.html": {
    "href": "api/PoeShared.Scaffolding.NotifyPropertyChangedExtensions.WaitForValueAsync.html",
    "title": "Method WaitForValueAsync | EyeAuras Docs",
    "keywords": "Method WaitForValueAsync WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) Declaration public static Task<T1> WaitForValueAsync<TObject, T1>(this TObject instance, Expression<Func<TObject, T1>> ex1, Predicate<T1> condition, TimeSpan timeout) where TObject : INotifyPropertyChanged Parameters Type Name Description TObject instance Expression<Func<TObject, T1>> ex1 Predicate<T1> condition TimeSpan timeout Returns Type Description Task<T1> Type Parameters Name Description TObject T1"
  },
  "api/PoeShared.Scaffolding.NotifyPropertyChangedExtensions.WhenAnyProperty.html": {
    "href": "api/PoeShared.Scaffolding.NotifyPropertyChangedExtensions.WhenAnyProperty.html",
    "title": "Method WhenAnyProperty | EyeAuras Docs",
    "keywords": "Method WhenAnyProperty WhenAnyProperty<TObject>(TObject, params string[]) Declaration public static IObservable<EventPattern<PropertyChangedEventArgs>> WhenAnyProperty<TObject>(this TObject instance, params string[] propertiesToMonitor) where TObject : INotifyPropertyChanged Parameters Type Name Description TObject instance string[] propertiesToMonitor Returns Type Description IObservable<EventPattern<PropertyChangedEventArgs>> Type Parameters Name Description TObject WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) Declaration public static IObservable<EventPattern<PropertyChangedEventArgs>> WhenAnyProperty<TObject, T1>(this TObject instance, Expression<Func<TObject, T1>> instancePropertyExtractor) where TObject : INotifyPropertyChanged Parameters Type Name Description TObject instance Expression<Func<TObject, T1>> instancePropertyExtractor Returns Type Description IObservable<EventPattern<PropertyChangedEventArgs>> Type Parameters Name Description TObject T1 WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) Declaration public static IObservable<EventPattern<PropertyChangedEventArgs>> WhenAnyProperty<TObject, T1, T2>(this TObject instance, Expression<Func<TObject, T1>> ex1, Expression<Func<TObject, T2>> ex2) where TObject : INotifyPropertyChanged Parameters Type Name Description TObject instance Expression<Func<TObject, T1>> ex1 Expression<Func<TObject, T2>> ex2 Returns Type Description IObservable<EventPattern<PropertyChangedEventArgs>> Type Parameters Name Description TObject T1 T2 WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) Declaration public static IObservable<EventPattern<PropertyChangedEventArgs>> WhenAnyProperty<TObject, T1, T2, T3>(this TObject instance, Expression<Func<TObject, T1>> ex1, Expression<Func<TObject, T2>> ex2, Expression<Func<TObject, T3>> ex3) where TObject : INotifyPropertyChanged Parameters Type Name Description TObject instance Expression<Func<TObject, T1>> ex1 Expression<Func<TObject, T2>> ex2 Expression<Func<TObject, T3>> ex3 Returns Type Description IObservable<EventPattern<PropertyChangedEventArgs>> Type Parameters Name Description TObject T1 T2 T3 WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) Declaration public static IObservable<EventPattern<PropertyChangedEventArgs>> WhenAnyProperty<TObject, T1, T2, T3, T4>(this TObject instance, Expression<Func<TObject, T1>> ex1, Expression<Func<TObject, T2>> ex2, Expression<Func<TObject, T3>> ex3, Expression<Func<TObject, T4>> ex4) where TObject : INotifyPropertyChanged Parameters Type Name Description TObject instance Expression<Func<TObject, T1>> ex1 Expression<Func<TObject, T2>> ex2 Expression<Func<TObject, T3>> ex3 Expression<Func<TObject, T4>> ex4 Returns Type Description IObservable<EventPattern<PropertyChangedEventArgs>> Type Parameters Name Description TObject T1 T2 T3 T4 WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) Declaration public static IObservable<EventPattern<PropertyChangedEventArgs>> WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(this TObject instance, Expression<Func<TObject, T1>> ex1, Expression<Func<TObject, T2>> ex2, Expression<Func<TObject, T3>> ex3, Expression<Func<TObject, T4>> ex4, Expression<Func<TObject, T5>> ex5) where TObject : INotifyPropertyChanged Parameters Type Name Description TObject instance Expression<Func<TObject, T1>> ex1 Expression<Func<TObject, T2>> ex2 Expression<Func<TObject, T3>> ex3 Expression<Func<TObject, T4>> ex4 Expression<Func<TObject, T5>> ex5 Returns Type Description IObservable<EventPattern<PropertyChangedEventArgs>> Type Parameters Name Description TObject T1 T2 T3 T4 T5"
  },
  "api/PoeShared.Scaffolding.NotifyPropertyChangedExtensions.html": {
    "href": "api/PoeShared.Scaffolding.NotifyPropertyChangedExtensions.html",
    "title": "Class NotifyPropertyChangedExtensions | EyeAuras Docs",
    "keywords": "Class NotifyPropertyChangedExtensions Inheritance object NotifyPropertyChangedExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class NotifyPropertyChangedExtensions Methods Name Description GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) WhenAnyProperty<TObject>(TObject, params string[]) WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>)"
  },
  "api/PoeShared.Scaffolding.NumberExtensions.EnsureInRange.html": {
    "href": "api/PoeShared.Scaffolding.NumberExtensions.EnsureInRange.html",
    "title": "Method EnsureInRange | EyeAuras Docs",
    "keywords": "Method EnsureInRange EnsureInRange(TimeSpan, TimeSpan, TimeSpan) Declaration public static TimeSpan EnsureInRange(this TimeSpan value, TimeSpan min, TimeSpan max) Parameters Type Name Description TimeSpan value TimeSpan min TimeSpan max Returns Type Description TimeSpan EnsureInRange(int, int, int) Declaration public static int EnsureInRange(this int value, int min, int max) Parameters Type Name Description int value int min int max Returns Type Description int EnsureInRange(double, double, double) Declaration public static double EnsureInRange(this double value, double min, double max) Parameters Type Name Description double value double min double max Returns Type Description double"
  },
  "api/PoeShared.Scaffolding.NumberExtensions.EnsureOdd.html": {
    "href": "api/PoeShared.Scaffolding.NumberExtensions.EnsureOdd.html",
    "title": "Method EnsureOdd | EyeAuras Docs",
    "keywords": "Method EnsureOdd EnsureOdd(int) Declaration public static int EnsureOdd(this int value) Parameters Type Name Description int value Returns Type Description int"
  },
  "api/PoeShared.Scaffolding.NumberExtensions.IsInRange.html": {
    "href": "api/PoeShared.Scaffolding.NumberExtensions.IsInRange.html",
    "title": "Method IsInRange | EyeAuras Docs",
    "keywords": "Method IsInRange IsInRange(TimeSpan, TimeSpan, TimeSpan) Declaration public static bool IsInRange(this TimeSpan value, TimeSpan min, TimeSpan max) Parameters Type Name Description TimeSpan value TimeSpan min TimeSpan max Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.NumberExtensions.ToHexadecimal.html": {
    "href": "api/PoeShared.Scaffolding.NumberExtensions.ToHexadecimal.html",
    "title": "Method ToHexadecimal | EyeAuras Docs",
    "keywords": "Method ToHexadecimal ToHexadecimal(long) Declaration public static string ToHexadecimal(this long value) Parameters Type Name Description long value Returns Type Description string ToHexadecimal(int) Declaration public static string ToHexadecimal(this int value) Parameters Type Name Description int value Returns Type Description string ToHexadecimal(uint) Declaration public static string ToHexadecimal(this uint value) Parameters Type Name Description uint value Returns Type Description string ToHexadecimal(ushort) Declaration public static string ToHexadecimal(this ushort value) Parameters Type Name Description ushort value Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.NumberExtensions.html": {
    "href": "api/PoeShared.Scaffolding.NumberExtensions.html",
    "title": "Class NumberExtensions | EyeAuras Docs",
    "keywords": "Class NumberExtensions Inheritance object NumberExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class NumberExtensions Methods Name Description EnsureInRange(double, double, double) EnsureInRange(int, int, int) EnsureInRange(TimeSpan, TimeSpan, TimeSpan) EnsureOdd(int) IsInRange(TimeSpan, TimeSpan, TimeSpan) ToHexadecimal(int) ToHexadecimal(long) ToHexadecimal(ushort) ToHexadecimal(uint)"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.AddTo.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.AddTo.html",
    "title": "Method AddTo | EyeAuras Docs",
    "keywords": "Method AddTo AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) Declaration public static TItem AddTo<TItem, TCollection>(this TItem instance, ISourceList<TCollection> parent) where TItem : TCollection Parameters Type Name Description TItem instance ISourceList<TCollection> parent Returns Type Description TItem Type Parameters Name Description TItem TCollection AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) Declaration public static TItem AddTo<TItem, TCollection>(this TItem instance, ICollection<TCollection> collection) where TItem : TCollection Parameters Type Name Description TItem instance ICollection<TCollection> collection Returns Type Description TItem Type Parameters Name Description TItem TCollection"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.CloneJson.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.CloneJson.html",
    "title": "Method CloneJson | EyeAuras Docs",
    "keywords": "Method CloneJson CloneJson<T>(T) Perform a deep Copy of the object, using Json as a serialisation method. NOTE: Private members are not cloned using this method. Declaration public static T CloneJson<T>(this T source) Parameters Type Name Description T source The object instance to copy. Returns Type Description T The copied object. Type Parameters Name Description T The type of object being copied."
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.CopyPropertiesTo.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.CopyPropertiesTo.html",
    "title": "Method CopyPropertiesTo | EyeAuras Docs",
    "keywords": "Method CopyPropertiesTo CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) Declaration public static void CopyPropertiesTo<TSource, TTarget>(this TSource source, TTarget target) where TTarget : class, TSource Parameters Type Name Description TSource source TTarget target Type Parameters Name Description TSource TTarget"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.Dump.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.Dump.html",
    "title": "Method Dump | EyeAuras Docs",
    "keywords": "Method Dump Dump<T>(T) Declaration public static string Dump<T>(this T instance) Parameters Type Name Description T instance Returns Type Description string Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.DumpToHex.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.DumpToHex.html",
    "title": "Method DumpToHex | EyeAuras Docs",
    "keywords": "Method DumpToHex DumpToHex(byte[], int) Declaration public static string DumpToHex(this byte[] value, int bytesPerLine = 32) Parameters Type Name Description byte[] value int bytesPerLine Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.DumpToNamedTable.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.DumpToNamedTable.html",
    "title": "Method DumpToNamedTable | EyeAuras Docs",
    "keywords": "Method DumpToNamedTable DumpToNamedTable<T>(IEnumerable<T>, string, string) Declaration public static string DumpToNamedTable<T>(this IEnumerable<T> instance, string name, string separator = \"\\n\\t\") Parameters Type Name Description IEnumerable<T> instance string name string separator Returns Type Description string Type Parameters Name Description T DumpToNamedTable<T>(IEnumerable<T>, string, int, string) Declaration public static string DumpToNamedTable<T>(this IEnumerable<T> instance, string name, int maxItemsToShow, string separator = \"\\n\\t\") Parameters Type Name Description IEnumerable<T> instance string name int maxItemsToShow string separator Returns Type Description string Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.DumpToString.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.DumpToString.html",
    "title": "Method DumpToString | EyeAuras Docs",
    "keywords": "Method DumpToString DumpToString<T>(IEnumerable<T>) Declaration public static string DumpToString<T>(this IEnumerable<T> instance) Parameters Type Name Description IEnumerable<T> instance Returns Type Description string Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.DumpToTable.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.DumpToTable.html",
    "title": "Method DumpToTable | EyeAuras Docs",
    "keywords": "Method DumpToTable DumpToTable<T>(IEnumerable<T>, int) Declaration public static string DumpToTable<T>(this IEnumerable<T> instance, int maxItemsToShow) Parameters Type Name Description IEnumerable<T> instance int maxItemsToShow Returns Type Description string Type Parameters Name Description T DumpToTable<T>(IEnumerable<T>, string) Declaration public static string DumpToTable<T>(this IEnumerable<T> instance, string separator = \"\\n\\t\") Parameters Type Name Description IEnumerable<T> instance string separator Returns Type Description string Type Parameters Name Description T DumpToTable<T>(IEnumerable<T>, string, string, int?) Declaration public static string DumpToTable<T>(this IEnumerable<T> instance, string name, string separator, int? maxItemsToShow) Parameters Type Name Description IEnumerable<T> instance string name string separator int? maxItemsToShow Returns Type Description string Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.DumpToText.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.DumpToText.html",
    "title": "Method DumpToText | EyeAuras Docs",
    "keywords": "Method DumpToText DumpToText<T>(T) Declaration [Obsolete(\"Replaced with Dump(), left here for compatibility reasons\")] public static string DumpToText<T>(this T instance) Parameters Type Name Description T instance Returns Type Description string Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.DumpToTextRaw.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.DumpToTextRaw.html",
    "title": "Method DumpToTextRaw | EyeAuras Docs",
    "keywords": "Method DumpToTextRaw DumpToTextRaw<T>(T) Declaration [Obsolete(\"Replaced with Dump(), left here for compatibility reasons\")] public static string DumpToTextRaw<T>(this T instance) Parameters Type Name Description T instance Returns Type Description string Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.Eval.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.Eval.html",
    "title": "Method Eval | EyeAuras Docs",
    "keywords": "Method Eval Eval<T, TValue>(T, Func<T, TValue>) Declaration public static TValue Eval<T, TValue>(this T instance, Func<T, TValue> extractor) where T : class Parameters Type Name Description T instance Func<T, TValue> extractor Returns Type Description TValue Type Parameters Name Description T TValue"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.EvalOrDefault.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.EvalOrDefault.html",
    "title": "Method EvalOrDefault | EyeAuras Docs",
    "keywords": "Method EvalOrDefault EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) Declaration public static TValue EvalOrDefault<T, TValue>(this T instance, Func<T, TValue> extractor, TValue defaultValue) where T : class Parameters Type Name Description T instance Func<T, TValue> extractor TValue defaultValue Returns Type Description TValue Type Parameters Name Description T TValue"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.GetAllProperties.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.GetAllProperties.html",
    "title": "Method GetAllProperties | EyeAuras Docs",
    "keywords": "Method GetAllProperties GetAllProperties(Type, BindingFlags) Declaration public static IEnumerable<PropertyInfo> GetAllProperties(this Type type, BindingFlags flags) Parameters Type Name Description Type type BindingFlags flags Returns Type Description IEnumerable<PropertyInfo>"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.GetPropertyAccessor.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.GetPropertyAccessor.html",
    "title": "Method GetPropertyAccessor | EyeAuras Docs",
    "keywords": "Method GetPropertyAccessor GetPropertyAccessor<TValue>(object, string) Declaration public static PropertyAccessor<TValue> GetPropertyAccessor<TValue>(this object source, string propertyPath) Parameters Type Name Description object source string propertyPath Returns Type Description PropertyAccessor<TValue> Type Parameters Name Description TValue GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) Declaration public static PropertyAccessor<TValue> GetPropertyAccessor<TSource, TValue>(this TSource source, Expression<Func<TSource, TValue>> valueAccessor) Parameters Type Name Description TSource source Expression<Func<TSource, TValue>> valueAccessor Returns Type Description PropertyAccessor<TValue> Type Parameters Name Description TSource TValue"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.InsertTo.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.InsertTo.html",
    "title": "Method InsertTo | EyeAuras Docs",
    "keywords": "Method InsertTo InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) Declaration public static TItem InsertTo<TItem, TCollection>(this TItem instance, IList<TCollection> collection, int index) where TItem : TCollection Parameters Type Name Description TItem instance IList<TCollection> collection int index Returns Type Description TItem Type Parameters Name Description TItem TCollection"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.ToJson.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.ToJson.html",
    "title": "Method ToJson | EyeAuras Docs",
    "keywords": "Method ToJson ToJson<T>(T) Declaration public static string ToJson<T>(this T instance) Parameters Type Name Description T instance Returns Type Description string Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.ToStringSafe.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.ToStringSafe.html",
    "title": "Method ToStringSafe | EyeAuras Docs",
    "keywords": "Method ToStringSafe ToStringSafe<T>(T) Declaration public static string ToStringSafe<T>(this T instance) Parameters Type Name Description T instance Returns Type Description string Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.ToStringTable.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.ToStringTable.html",
    "title": "Method ToStringTable | EyeAuras Docs",
    "keywords": "Method ToStringTable ToStringTable<T>(IEnumerable<T>, string) Declaration [Obsolete(\"Replaced with DumpToTable(), left here for compatibility reasons\")] public static string ToStringTable<T>(this IEnumerable<T> instance, string separator = \"\\n\\t\") Parameters Type Name Description IEnumerable<T> instance string separator Returns Type Description string Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.TransferPropertiesTo.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.TransferPropertiesTo.html",
    "title": "Method TransferPropertiesTo | EyeAuras Docs",
    "keywords": "Method TransferPropertiesTo TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) Declaration public static void TransferPropertiesTo<TSource, TTarget>(this TSource source, TTarget target, params string[] propertiesToExclude) Parameters Type Name Description TSource source TTarget target string[] propertiesToExclude Type Parameters Name Description TSource TTarget"
  },
  "api/PoeShared.Scaffolding.ObjectExtensions.html": {
    "href": "api/PoeShared.Scaffolding.ObjectExtensions.html",
    "title": "Class ObjectExtensions | EyeAuras Docs",
    "keywords": "Class ObjectExtensions Inheritance object ObjectExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class ObjectExtensions Methods Name Description AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) CloneJson<T>(T) Perform a deep Copy of the object, using Json as a serialisation method. NOTE: Private members are not cloned using this method. CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) DumpToHex(byte[], int) DumpToNamedTable<T>(IEnumerable<T>, string, int, string) DumpToNamedTable<T>(IEnumerable<T>, string, string) DumpToString<T>(IEnumerable<T>) DumpToTable<T>(IEnumerable<T>, int) DumpToTable<T>(IEnumerable<T>, string) DumpToTable<T>(IEnumerable<T>, string, string, int?) DumpToTextRaw<T>(T) DumpToText<T>(T) Dump<T>(T) EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) Eval<T, TValue>(T, Func<T, TValue>) GetAllProperties(Type, BindingFlags) GetPropertyAccessor<TValue>(object, string) GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ToJson<T>(T) ToStringSafe<T>(T) ToStringTable<T>(IEnumerable<T>, string) TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[])"
  },
  "api/PoeShared.Scaffolding.ObjectReflectionExtensions.GetPropertyInfo.html": {
    "href": "api/PoeShared.Scaffolding.ObjectReflectionExtensions.GetPropertyInfo.html",
    "title": "Method GetPropertyInfo | EyeAuras Docs",
    "keywords": "Method GetPropertyInfo GetPropertyInfo(Type, string) Declaration public static PropertyInfo GetPropertyInfo(this Type type, string propertyPath) Parameters Type Name Description Type type string propertyPath Returns Type Description PropertyInfo"
  },
  "api/PoeShared.Scaffolding.ObjectReflectionExtensions.GetPropertyInfoOrDefault.html": {
    "href": "api/PoeShared.Scaffolding.ObjectReflectionExtensions.GetPropertyInfoOrDefault.html",
    "title": "Method GetPropertyInfoOrDefault | EyeAuras Docs",
    "keywords": "Method GetPropertyInfoOrDefault GetPropertyInfoOrDefault(Type, string) Declaration public static PropertyInfo GetPropertyInfoOrDefault(this Type type, string propertyPath) Parameters Type Name Description Type type string propertyPath Returns Type Description PropertyInfo"
  },
  "api/PoeShared.Scaffolding.ObjectReflectionExtensions.GetPropertyTypeOrDefault.html": {
    "href": "api/PoeShared.Scaffolding.ObjectReflectionExtensions.GetPropertyTypeOrDefault.html",
    "title": "Method GetPropertyTypeOrDefault | EyeAuras Docs",
    "keywords": "Method GetPropertyTypeOrDefault GetPropertyTypeOrDefault(object, string) Declaration public static Type GetPropertyTypeOrDefault(this object instance, string propertyPath) Parameters Type Name Description object instance string propertyPath Returns Type Description Type GetPropertyTypeOrDefault(Type, string) Declaration public static Type GetPropertyTypeOrDefault(this Type type, string propertyPath) Parameters Type Name Description Type type string propertyPath Returns Type Description Type"
  },
  "api/PoeShared.Scaffolding.ObjectReflectionExtensions.GetPropertyValue.html": {
    "href": "api/PoeShared.Scaffolding.ObjectReflectionExtensions.GetPropertyValue.html",
    "title": "Method GetPropertyValue | EyeAuras Docs",
    "keywords": "Method GetPropertyValue GetPropertyValue<T>(object, string) Declaration public static T GetPropertyValue<T>(this object model, string propertyPath) Parameters Type Name Description object model string propertyPath Returns Type Description T Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObjectReflectionExtensions.IsIndexedProperty.html": {
    "href": "api/PoeShared.Scaffolding.ObjectReflectionExtensions.IsIndexedProperty.html",
    "title": "Method IsIndexedProperty | EyeAuras Docs",
    "keywords": "Method IsIndexedProperty IsIndexedProperty(PropertyInfo) Declaration public static bool IsIndexedProperty(this PropertyInfo propertyInfo) Parameters Type Name Description PropertyInfo propertyInfo Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.ObjectReflectionExtensions.SetPropertyValue.html": {
    "href": "api/PoeShared.Scaffolding.ObjectReflectionExtensions.SetPropertyValue.html",
    "title": "Method SetPropertyValue | EyeAuras Docs",
    "keywords": "Method SetPropertyValue SetPropertyValue<T>(object, string, T) Declaration public static object SetPropertyValue<T>(this object model, string propertyPath, T value) Parameters Type Name Description object model string propertyPath T value Returns Type Description object Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObjectReflectionExtensions.html": {
    "href": "api/PoeShared.Scaffolding.ObjectReflectionExtensions.html",
    "title": "Class ObjectReflectionExtensions | EyeAuras Docs",
    "keywords": "Class ObjectReflectionExtensions Inheritance object ObjectReflectionExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class ObjectReflectionExtensions Methods Name Description GetPropertyInfo(Type, string) GetPropertyInfoOrDefault(Type, string) GetPropertyTypeOrDefault(object, string) GetPropertyTypeOrDefault(Type, string) GetPropertyValue<T>(object, string) IsIndexedProperty(PropertyInfo) SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionAdaptorEx-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionAdaptorEx-1.-ctor.html",
    "title": "Constructor ObservableCollectionAdaptorEx | EyeAuras Docs",
    "keywords": "Constructor ObservableCollectionAdaptorEx ObservableCollectionAdaptorEx(IObservableCollection<T>) Declaration public ObservableCollectionAdaptorEx(IObservableCollection<T> observableCollectionEx) Parameters Type Name Description IObservableCollection<T> observableCollectionEx"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionAdaptorEx-1.Adapt.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionAdaptorEx-1.Adapt.html",
    "title": "Method Adapt | EyeAuras Docs",
    "keywords": "Method Adapt Adapt(IChangeSet<T>) Declaration public void Adapt(IChangeSet<T> changeSet) Parameters Type Name Description IChangeSet<T> changeSet"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionAdaptorEx-1.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionAdaptorEx-1.html",
    "title": "Class ObservableCollectionAdaptorEx<T> | EyeAuras Docs",
    "keywords": "Class ObservableCollectionAdaptorEx<T> Inheritance object ObservableCollectionAdaptorEx<T> Implements IChangeSetAdaptor<T> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public class ObservableCollectionAdaptorEx<T> : IChangeSetAdaptor<T> Type Parameters Name Description T Constructors Name Description ObservableCollectionAdaptorEx(IObservableCollection<T>) Methods Name Description Adapt(IChangeSet<T>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.-ctor.html",
    "title": "Constructor ObservableCollectionEx | EyeAuras Docs",
    "keywords": "Constructor ObservableCollectionEx ObservableCollectionEx(IEnumerable<T>) Declaration public ObservableCollectionEx(IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable<T> enumerable ObservableCollectionEx() Declaration public ObservableCollectionEx()"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Add.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Add.html",
    "title": "Method Add | EyeAuras Docs",
    "keywords": "Method Add Add(T) Declaration public void Add(T item) Parameters Type Name Description T item Implements ICollection<T>.Add(T)"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Clear.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Clear.html",
    "title": "Method Clear | EyeAuras Docs",
    "keywords": "Method Clear Clear() Declaration public void Clear() Implements ICollection<T>.Clear()"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.CollectionChanged.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.CollectionChanged.html",
    "title": "Event CollectionChanged | EyeAuras Docs",
    "keywords": "Event CollectionChanged Implements CollectionChanged Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public event NotifyCollectionChangedEventHandler CollectionChanged Returns Type Description NotifyCollectionChangedEventHandler"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Contains.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Contains.html",
    "title": "Method Contains | EyeAuras Docs",
    "keywords": "Method Contains Contains(T) Declaration public bool Contains(T item) Parameters Type Name Description T item Returns Type Description bool Implements ICollection<T>.Contains(T)"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.CopyTo.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.CopyTo.html",
    "title": "Method CopyTo | EyeAuras Docs",
    "keywords": "Method CopyTo CopyTo(T[], int) Declaration public void CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array int arrayIndex Implements ICollection<T>.CopyTo(T[], int)"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Count.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public int Count { get; } Property Value Type Description int Implements ICollection<T>.Count IReadOnlyCollection<T>.Count"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.GetEnumerator.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.GetEnumerator.html",
    "title": "Method GetEnumerator | EyeAuras Docs",
    "keywords": "Method GetEnumerator GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator<T> Implements IEnumerable<T>.GetEnumerator()"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.IndexOf.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.IndexOf.html",
    "title": "Method IndexOf | EyeAuras Docs",
    "keywords": "Method IndexOf IndexOf(T) Declaration public int IndexOf(T item) Parameters Type Name Description T item Returns Type Description int Implements IList<T>.IndexOf(T)"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Insert.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Insert.html",
    "title": "Method Insert | EyeAuras Docs",
    "keywords": "Method Insert Insert(int, T) Declaration public void Insert(int index, T item) Parameters Type Name Description int index T item Implements IList<T>.Insert(int, T)"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.IsReadOnly.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.IsReadOnly.html",
    "title": "Property IsReadOnly | EyeAuras Docs",
    "keywords": "Property IsReadOnly IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool Implements ICollection<T>.IsReadOnly"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Item.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Item.html",
    "title": "Property this | EyeAuras Docs",
    "keywords": "Property this this[int] Declaration public T this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description T Implements IList<T>.this[int] IReadOnlyList<T>.this[int]"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Load.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Load.html",
    "title": "Method Load | EyeAuras Docs",
    "keywords": "Method Load Load(IEnumerable<T>) Declaration public void Load(IEnumerable<T> items) Parameters Type Name Description IEnumerable<T> items"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Move.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Move.html",
    "title": "Method Move | EyeAuras Docs",
    "keywords": "Method Move Move(int, int) Declaration public void Move(int oldIndex, int newIndex) Parameters Type Name Description int oldIndex int newIndex"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Remove.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.Remove.html",
    "title": "Method Remove | EyeAuras Docs",
    "keywords": "Method Remove Remove(T) Declaration public bool Remove(T item) Parameters Type Name Description T item Returns Type Description bool Implements ICollection<T>.Remove(T)"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.RemoveAt.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.RemoveAt.html",
    "title": "Method RemoveAt | EyeAuras Docs",
    "keywords": "Method RemoveAt RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index Implements IList<T>.RemoveAt(int)"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.SuspendCount.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.SuspendCount.html",
    "title": "Method SuspendCount | EyeAuras Docs",
    "keywords": "Method SuspendCount SuspendCount() Declaration public IDisposable SuspendCount() Returns Type Description IDisposable"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.SuspendNotifications.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.SuspendNotifications.html",
    "title": "Method SuspendNotifications | EyeAuras Docs",
    "keywords": "Method SuspendNotifications SuspendNotifications() Declaration public IDisposable SuspendNotifications() Returns Type Description IDisposable"
  },
  "api/PoeShared.Scaffolding.ObservableCollectionEx-1.html": {
    "href": "api/PoeShared.Scaffolding.ObservableCollectionEx-1.html",
    "title": "Class ObservableCollectionEx<T> | EyeAuras Docs",
    "keywords": "Class ObservableCollectionEx<T> Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger ObservableCollectionEx<T> Implements IDisposable IObservableCollection<T> IList<T> ICollection<T> INotifyCollectionChangedSuspender IReadOnlyObservableCollection<T> INotifyCollectionChanged INotifyPropertyChanged IReadOnlyList<T> IReadOnlyCollection<T> IEnumerable<T> IEnumerable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class ObservableCollectionEx<T> : DisposableReactiveObjectWithLogger, IDisposable, IObservableCollection<T>, IList<T>, ICollection<T>, INotifyCollectionChangedSuspender, IReadOnlyObservableCollection<T>, INotifyCollectionChanged, INotifyPropertyChanged, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors Name Description ObservableCollectionEx() ObservableCollectionEx(IEnumerable<T>) Properties Name Description Count IsReadOnly this[int] Methods Name Description Add(T) Clear() Contains(T) CopyTo(T[], int) GetEnumerator() IndexOf(T) Insert(int, T) Load(IEnumerable<T>) Move(int, int) Remove(T) RemoveAt(int) SuspendCount() SuspendNotifications() Events Name Description CollectionChanged Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.DisposePrevious.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.DisposePrevious.html",
    "title": "Method DisposePrevious | EyeAuras Docs",
    "keywords": "Method DisposePrevious DisposePrevious<TSource>(IObservable<TSource>) Declaration public static IObservable<TSource> DisposePrevious<TSource>(this IObservable<TSource> source) where TSource : IDisposable Parameters Type Name Description IObservable<TSource> source Returns Type Description IObservable<TSource> Type Parameters Name Description TSource"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.DoWithPrevious.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.DoWithPrevious.html",
    "title": "Method DoWithPrevious | EyeAuras Docs",
    "keywords": "Method DoWithPrevious DoWithPrevious<TSource>(IObservable<TSource>, Action<TSource>) Declaration public static IObservable<TSource> DoWithPrevious<TSource>(this IObservable<TSource> source, Action<TSource> action) Parameters Type Name Description IObservable<TSource> source Action<TSource> action Returns Type Description IObservable<TSource> Type Parameters Name Description TSource"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.EnableIf.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.EnableIf.html",
    "title": "Method EnableIf | EyeAuras Docs",
    "keywords": "Method EnableIf EnableIf<T>(IObservable<T>, IObservable<bool>) Declaration public static IObservable<T> EnableIf<T>(this IObservable<T> source, IObservable<bool> condition) Parameters Type Name Description IObservable<T> source IObservable<bool> condition Returns Type Description IObservable<T> Type Parameters Name Description T EnableIf<T>(IObservable<T>, IObservable<bool>, IObservable<T>) Declaration public static IObservable<T> EnableIf<T>(this IObservable<T> source, IObservable<bool> condition, IObservable<T> alternateSource) Parameters Type Name Description IObservable<T> source IObservable<bool> condition IObservable<T> alternateSource Returns Type Description IObservable<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.ObserveLatestOn.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.ObserveLatestOn.html",
    "title": "Method ObserveLatestOn | EyeAuras Docs",
    "keywords": "Method ObserveLatestOn ObserveLatestOn<T>(IObservable<T>, IScheduler) https://www.zerobugbuild.com/?p=192 This is a problem that comes up when the UI dispatcher can’t keep up with inbound activity. the example I saw on a project was a price stream that had to be displayed on the UI that could get very busy. If more than one new price arrives on background threads in between dispatcher time slices, there is no point displaying anything but the most recent price – in fact we want the UI to “catch up” by dropping all but the most recent undisplayed price. So the operation is like an ObserveOn that drops all but the most recent events. Here’s a picture of what’s happening – notice how price 2 is dropped and how prices are only published during the dispatcher time slice: The key idea here is that we keep track of the notification to be pushed on to the target scheduler in pendingNotification – and whenever an event is received, we swap the pendingNotification for the new notification. We ensure the new notification will be scheduled for dispatch on the target scheduler – but we may not need to do this… If the previousNotification is null we know that either (a) there was no previous notification as this is the first one or (b) the previousNotification was already dispatched. How to we know this? Because in the scheduler action that does the dispatch we swap the pendingNotification for null! So if previousNotification is null, we know we must schedule a new dispatch action. This approach keeps the checks, locks and scheduled actions to a minimum. Notes and credits: I’ve gone round the houses a few times on this implementation – my own attempts to improve it to use CAS rather than lock ran into bugs, so the code below is largely due to Lee Campbell, and edited for RX 2.0 support by Wilka Hudson. For an interesting discussion on this approach see this thread on the official RX forum. Declaration public static IObservable<T> ObserveLatestOn<T>(this IObservable<T> source, IScheduler scheduler) Parameters Type Name Description IObservable<T> source IScheduler scheduler Returns Type Description IObservable<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.RetryWithBackOff.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.RetryWithBackOff.html",
    "title": "Method RetryWithBackOff | EyeAuras Docs",
    "keywords": "Method RetryWithBackOff RetryWithBackOff<T>(IObservable<T>, Func<Exception, int, TimeSpan?>) Declaration public static IObservable<T> RetryWithBackOff<T>(this IObservable<T> observable, Func<Exception, int, TimeSpan?> strategy) Parameters Type Name Description IObservable<T> observable Func<Exception, int, TimeSpan?> strategy Returns Type Description IObservable<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.RetryWithDelay.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.RetryWithDelay.html",
    "title": "Method RetryWithDelay | EyeAuras Docs",
    "keywords": "Method RetryWithDelay RetryWithDelay<T>(IObservable<T>, TimeSpan) Declaration public static IObservable<T> RetryWithDelay<T>(this IObservable<T> source, TimeSpan timeSpan) Parameters Type Name Description IObservable<T> source TimeSpan timeSpan Returns Type Description IObservable<T> Type Parameters Name Description T RetryWithDelay<T>(IObservable<T>, TimeSpan, IScheduler) Declaration public static IObservable<T> RetryWithDelay<T>(this IObservable<T> source, TimeSpan timeSpan, IScheduler scheduler) Parameters Type Name Description IObservable<T> source TimeSpan timeSpan IScheduler scheduler Returns Type Description IObservable<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.SelectAsync.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.SelectAsync.html",
    "title": "Method SelectAsync | EyeAuras Docs",
    "keywords": "Method SelectAsync SelectAsync<T, T1>(IObservable<T>, Func<T, CancellationToken, Task<T1>>) Declaration public static IObservable<T1> SelectAsync<T, T1>(this IObservable<T> observable, Func<T, CancellationToken, Task<T1>> supplier) Parameters Type Name Description IObservable<T> observable Func<T, CancellationToken, Task<T1>> supplier Returns Type Description IObservable<T1> Type Parameters Name Description T T1 SelectAsync<T, T1>(IObservable<T>, Func<T, Task<T1>>) Declaration public static IObservable<T1> SelectAsync<T, T1>(this IObservable<T> observable, Func<T, Task<T1>> supplier) Parameters Type Name Description IObservable<T> observable Func<T, Task<T1>> supplier Returns Type Description IObservable<T1> Type Parameters Name Description T T1 SelectAsync<T, T1>(IObservable<T>, Func<T, Task<T1>>, IScheduler) Declaration public static IObservable<T1> SelectAsync<T, T1>(this IObservable<T> observable, Func<T, Task<T1>> supplier, IScheduler scheduler) Parameters Type Name Description IObservable<T> observable Func<T, Task<T1>> supplier IScheduler scheduler Returns Type Description IObservable<T1> Type Parameters Name Description T T1 SelectAsync<T>(IObservable<T>, Func<T, Task>, IScheduler) Declaration public static IObservable<Unit> SelectAsync<T>(this IObservable<T> observable, Func<T, Task> supplier, IScheduler scheduler) Parameters Type Name Description IObservable<T> observable Func<T, Task> supplier IScheduler scheduler Returns Type Description IObservable<Unit> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.SelectSafe.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.SelectSafe.html",
    "title": "Method SelectSafe | EyeAuras Docs",
    "keywords": "Method SelectSafe SelectSafe<TIn, TOut, TException>(IObservable<TIn>, Func<TIn, TOut>, Func<TException, TOut>) Declaration public static IObservable<TOut> SelectSafe<TIn, TOut, TException>(this IObservable<TIn> observable, Func<TIn, TOut> onNext, Func<TException, TOut> onError) where TException : Exception Parameters Type Name Description IObservable<TIn> observable Func<TIn, TOut> onNext Func<TException, TOut> onError Returns Type Description IObservable<TOut> Type Parameters Name Description TIn TOut TException SelectSafe<TIn, TOut>(IObservable<TIn>, Func<TIn, TOut>, Func<TIn, Exception, TOut>) Declaration public static IObservable<TOut> SelectSafe<TIn, TOut>(this IObservable<TIn> observable, Func<TIn, TOut> onNext, Func<TIn, Exception, TOut> onError) Parameters Type Name Description IObservable<TIn> observable Func<TIn, TOut> onNext Func<TIn, Exception, TOut> onError Returns Type Description IObservable<TOut> Type Parameters Name Description TIn TOut SelectSafe<TIn, TOut, TException>(IObservable<TIn>, Func<TIn, TOut>, Func<TIn, TException, TOut>) Declaration public static IObservable<TOut> SelectSafe<TIn, TOut, TException>(this IObservable<TIn> observable, Func<TIn, TOut> onNext, Func<TIn, TException, TOut> onError) where TException : Exception Parameters Type Name Description IObservable<TIn> observable Func<TIn, TOut> onNext Func<TIn, TException, TOut> onError Returns Type Description IObservable<TOut> Type Parameters Name Description TIn TOut TException"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.SelectSafeOrDefault.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.SelectSafeOrDefault.html",
    "title": "Method SelectSafeOrDefault | EyeAuras Docs",
    "keywords": "Method SelectSafeOrDefault SelectSafeOrDefault<TIn, TOut>(IObservable<TIn>, Func<TIn, TOut>) Declaration public static IObservable<TOut> SelectSafeOrDefault<TIn, TOut>(this IObservable<TIn> observable, Func<TIn, TOut> onNext) Parameters Type Name Description IObservable<TIn> observable Func<TIn, TOut> onNext Returns Type Description IObservable<TOut> Type Parameters Name Description TIn TOut SelectSafeOrDefault<TIn, TOut>(IObservable<TIn>, Func<TIn, TOut>, Action<Exception>) Declaration public static IObservable<TOut> SelectSafeOrDefault<TIn, TOut>(this IObservable<TIn> observable, Func<TIn, TOut> onNext, Action<Exception> onError) Parameters Type Name Description IObservable<TIn> observable Func<TIn, TOut> onNext Action<Exception> onError Returns Type Description IObservable<TOut> Type Parameters Name Description TIn TOut"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.SelectTo.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.SelectTo.html",
    "title": "Method SelectTo | EyeAuras Docs",
    "keywords": "Method SelectTo SelectTo<T, Y>(IObservable<T>, Func<Y>) Declaration public static IObservable<Y> SelectTo<T, Y>(this IObservable<T> observable, Func<Y> selector) Parameters Type Name Description IObservable<T> observable Func<Y> selector Returns Type Description IObservable<Y> Type Parameters Name Description T Y"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.SkipUntil.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.SkipUntil.html",
    "title": "Method SkipUntil | EyeAuras Docs",
    "keywords": "Method SkipUntil SkipUntil<TSource>(IObservable<TSource>, Func<TSource, bool>) Declaration public static IObservable<TSource> SkipUntil<TSource>(this IObservable<TSource> source, Func<TSource, bool> condition) Parameters Type Name Description IObservable<TSource> source Func<TSource, bool> condition Returns Type Description IObservable<TSource> Type Parameters Name Description TSource"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.StartWithDefault.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.StartWithDefault.html",
    "title": "Method StartWithDefault | EyeAuras Docs",
    "keywords": "Method StartWithDefault StartWithDefault<T>(IObservable<T>) Declaration public static IObservable<T> StartWithDefault<T>(this IObservable<T> observable) Parameters Type Name Description IObservable<T> observable Returns Type Description IObservable<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.Subscribe.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.Subscribe.html",
    "title": "Method Subscribe | EyeAuras Docs",
    "keywords": "Method Subscribe Subscribe<T>(IObservable<T>, Action) Declaration public static IDisposable Subscribe<T>(this IObservable<T> observable, Action onNext) Parameters Type Name Description IObservable<T> observable Action onNext Returns Type Description IDisposable Type Parameters Name Description T Subscribe<T>(IObservable<T>, Action, Action<Exception>) Declaration public static IDisposable Subscribe<T>(this IObservable<T> observable, Action onNext, Action<Exception> onError) Parameters Type Name Description IObservable<T> observable Action onNext Action<Exception> onError Returns Type Description IDisposable Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.SubscribeAsync.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.SubscribeAsync.html",
    "title": "Method SubscribeAsync | EyeAuras Docs",
    "keywords": "Method SubscribeAsync SubscribeAsync<T>(IObservable<T>, Func<Task>) Declaration public static IDisposable SubscribeAsync<T>(this IObservable<T> observable, Func<Task> supplier) Parameters Type Name Description IObservable<T> observable Func<Task> supplier Returns Type Description IDisposable Type Parameters Name Description T SubscribeAsync<T>(IObservable<T>, Func<T, Task>) Declaration public static IDisposable SubscribeAsync<T>(this IObservable<T> observable, Func<T, Task> supplier) Parameters Type Name Description IObservable<T> observable Func<T, Task> supplier Returns Type Description IDisposable Type Parameters Name Description T SubscribeAsync<T>(IObservable<T>, Func<Task>, Action<Exception>) Declaration public static IDisposable SubscribeAsync<T>(this IObservable<T> observable, Func<Task> supplier, Action<Exception> onError) Parameters Type Name Description IObservable<T> observable Func<Task> supplier Action<Exception> onError Returns Type Description IDisposable Type Parameters Name Description T SubscribeAsync<T>(IObservable<T>, Func<T, CancellationToken, Task>) Declaration public static IDisposable SubscribeAsync<T>(this IObservable<T> observable, Func<T, CancellationToken, Task> supplier) Parameters Type Name Description IObservable<T> observable Func<T, CancellationToken, Task> supplier Returns Type Description IDisposable Type Parameters Name Description T SubscribeAsync<T>(IObservable<T>, Func<T, CancellationToken, Task>, Action<Exception>) Declaration public static IDisposable SubscribeAsync<T>(this IObservable<T> observable, Func<T, CancellationToken, Task> supplier, Action<Exception> onError) Parameters Type Name Description IObservable<T> observable Func<T, CancellationToken, Task> supplier Action<Exception> onError Returns Type Description IDisposable Type Parameters Name Description T SubscribeAsync<T>(IObservable<T>, Func<T, Task>, Action<Exception>) Declaration public static IDisposable SubscribeAsync<T>(this IObservable<T> observable, Func<T, Task> supplier, Action<Exception> onError) Parameters Type Name Description IObservable<T> observable Func<T, Task> supplier Action<Exception> onError Returns Type Description IDisposable Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.SubscribeSafe.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.SubscribeSafe.html",
    "title": "Method SubscribeSafe | EyeAuras Docs",
    "keywords": "Method SubscribeSafe SubscribeSafe<T>(IObservable<T>, Action, Action<Exception>) Declaration public static IDisposable SubscribeSafe<T>(this IObservable<T> source, Action onNext, Action<Exception> onError) Parameters Type Name Description IObservable<T> source Action onNext Action<Exception> onError Returns Type Description IDisposable Type Parameters Name Description T SubscribeSafe<T>(IObservable<T>, Action<T>, Action<Exception>) Declaration public static IDisposable SubscribeSafe<T>(this IObservable<T> source, Action<T> onNext, Action<Exception> onError) Parameters Type Name Description IObservable<T> source Action<T> onNext Action<Exception> onError Returns Type Description IDisposable Type Parameters Name Description T SubscribeSafe<T>(IObservable<T>, Action<T>, Action<Exception>, Action) Declaration public static IDisposable SubscribeSafe<T>(this IObservable<T> source, Action<T> onNext, Action<Exception> onError, Action onCompleted) Parameters Type Name Description IObservable<T> source Action<T> onNext Action<Exception> onError Action onCompleted Returns Type Description IDisposable Type Parameters Name Description T SubscribeSafe<T>(IObservable<T>, Func<Task>, Action<Exception>) Declaration public static IDisposable SubscribeSafe<T>(this IObservable<T> source, Func<Task> asyncAction, Action<Exception> handler) Parameters Type Name Description IObservable<T> source Func<Task> asyncAction Action<Exception> handler Returns Type Description IDisposable Type Parameters Name Description T SubscribeSafe<T>(IObservable<T>, Func<T, Task>, Action<Exception>) Declaration public static IDisposable SubscribeSafe<T>(this IObservable<T> source, Func<T, Task> asyncAction, Action<Exception> handler) Parameters Type Name Description IObservable<T> source Func<T, Task> asyncAction Action<Exception> handler Returns Type Description IDisposable Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.SubscribeToErrors.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.SubscribeToErrors.html",
    "title": "Method SubscribeToErrors | EyeAuras Docs",
    "keywords": "Method SubscribeToErrors SubscribeToErrors<T>(IObservable<T>, Action<Exception>) Declaration public static IDisposable SubscribeToErrors<T>(this IObservable<T> source, Action<Exception> onError) Parameters Type Name Description IObservable<T> source Action<Exception> onError Returns Type Description IDisposable Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.SwitchIf.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.SwitchIf.html",
    "title": "Method SwitchIf | EyeAuras Docs",
    "keywords": "Method SwitchIf SwitchIf<TIn, TOut>(IObservable<TIn>, Predicate<TIn>, Func<TIn, IObservable<TOut>>) Declaration public static IObservable<TOut> SwitchIf<TIn, TOut>(this IObservable<TIn> observable, Predicate<TIn> condition, Func<TIn, IObservable<TOut>> trueSelector) Parameters Type Name Description IObservable<TIn> observable Predicate<TIn> condition Func<TIn, IObservable<TOut>> trueSelector Returns Type Description IObservable<TOut> Type Parameters Name Description TIn TOut SwitchIf<TIn, TOut>(IObservable<TIn>, Predicate<TIn>, Func<TIn, IObservable<TOut>>, Func<TIn, IObservable<TOut>>) Declaration public static IObservable<TOut> SwitchIf<TIn, TOut>(this IObservable<TIn> observable, Predicate<TIn> condition, Func<TIn, IObservable<TOut>> trueSelector, Func<TIn, IObservable<TOut>> falseSelector) Parameters Type Name Description IObservable<TIn> observable Predicate<TIn> condition Func<TIn, IObservable<TOut>> trueSelector Func<TIn, IObservable<TOut>> falseSelector Returns Type Description IObservable<TOut> Type Parameters Name Description TIn TOut"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.SwitchIfNotDefault.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.SwitchIfNotDefault.html",
    "title": "Method SwitchIfNotDefault | EyeAuras Docs",
    "keywords": "Method SwitchIfNotDefault SwitchIfNotDefault<TIn, TOut>(IObservable<TIn>, Func<TIn, IObservable<TOut>>, Func<IObservable<TOut>>) Declaration public static IObservable<TOut> SwitchIfNotDefault<TIn, TOut>(this IObservable<TIn> observable, Func<TIn, IObservable<TOut>> trueSelector, Func<IObservable<TOut>> falseSelector) Parameters Type Name Description IObservable<TIn> observable Func<TIn, IObservable<TOut>> trueSelector Func<IObservable<TOut>> falseSelector Returns Type Description IObservable<TOut> Type Parameters Name Description TIn TOut SwitchIfNotDefault<TIn, TOut>(IObservable<TIn>, Func<TIn, IObservable<TOut>>) Declaration public static IObservable<TOut> SwitchIfNotDefault<TIn, TOut>(this IObservable<TIn> observable, Func<TIn, IObservable<TOut>> selector) Parameters Type Name Description IObservable<TIn> observable Func<TIn, IObservable<TOut>> selector Returns Type Description IObservable<TOut> Type Parameters Name Description TIn TOut"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.SwitchLatestAsync.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.SwitchLatestAsync.html",
    "title": "Method SwitchLatestAsync | EyeAuras Docs",
    "keywords": "Method SwitchLatestAsync SwitchLatestAsync<TSource, TResult>(IObservable<TSource>, Func<TSource, CancellationToken, Task<TResult>>) Declaration public static IObservable<TResult> SwitchLatestAsync<TSource, TResult>(this IObservable<TSource> source, Func<TSource, CancellationToken, Task<TResult>> asyncMethod) Parameters Type Name Description IObservable<TSource> source Func<TSource, CancellationToken, Task<TResult>> asyncMethod Returns Type Description IObservable<TResult> Type Parameters Name Description TSource TResult"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.Synchronize.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.Synchronize.html",
    "title": "Method Synchronize | EyeAuras Docs",
    "keywords": "Method Synchronize Synchronize<T>(IObservable<T>, NamedLock) Declaration public static IObservable<T> Synchronize<T>(this IObservable<T> observable, NamedLock gate) Parameters Type Name Description IObservable<T> observable NamedLock gate Returns Type Description IObservable<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.ToProperty.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.ToProperty.html",
    "title": "Method ToProperty | EyeAuras Docs",
    "keywords": "Method ToProperty ToProperty<TSourceProperty>(IObservable<TSourceProperty>) Declaration public static ObservableAsPropertyHelper<TSourceProperty> ToProperty<TSourceProperty>(this IObservable<TSourceProperty> sourceObservable) Parameters Type Name Description IObservable<TSourceProperty> sourceObservable Returns Type Description ObservableAsPropertyHelper<TSourceProperty> Type Parameters Name Description TSourceProperty ToProperty<TSource, TSourceProperty>(IObservable<TSourceProperty>, out ObservableAsPropertyHelper<TSourceProperty>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) Declaration public static ObservableAsPropertyHelper<TSourceProperty> ToProperty<TSource, TSourceProperty>(this IObservable<TSourceProperty> sourceObservable, out ObservableAsPropertyHelper<TSourceProperty> result, TSource instance, Expression<Func<TSource, TSourceProperty>> instancePropertyExtractor, IScheduler scheduler = null) where TSource : IDisposableReactiveObject Parameters Type Name Description IObservable<TSourceProperty> sourceObservable ObservableAsPropertyHelper<TSourceProperty> result TSource instance Expression<Func<TSource, TSourceProperty>> instancePropertyExtractor IScheduler scheduler Returns Type Description ObservableAsPropertyHelper<TSourceProperty> Type Parameters Name Description TSource TSourceProperty ToProperty<TSource, TSourceProperty>(IObservable<TSourceProperty>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) Declaration public static ObservableAsPropertyHelper<TSourceProperty> ToProperty<TSource, TSourceProperty>(this IObservable<TSourceProperty> sourceObservable, TSource instance, Expression<Func<TSource, TSourceProperty>> instancePropertyExtractor, IScheduler scheduler = null) where TSource : IDisposableReactiveObject Parameters Type Name Description IObservable<TSourceProperty> sourceObservable TSource instance Expression<Func<TSource, TSourceProperty>> instancePropertyExtractor IScheduler scheduler Returns Type Description ObservableAsPropertyHelper<TSourceProperty> Type Parameters Name Description TSource TSourceProperty"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.ToUnit.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.ToUnit.html",
    "title": "Method ToUnit | EyeAuras Docs",
    "keywords": "Method ToUnit ToUnit<T>(IObservable<T>) Declaration public static IObservable<Unit> ToUnit<T>(this IObservable<T> observable) Parameters Type Name Description IObservable<T> observable Returns Type Description IObservable<Unit> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.WithExpirationTime.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.WithExpirationTime.html",
    "title": "Method WithExpirationTime | EyeAuras Docs",
    "keywords": "Method WithExpirationTime WithExpirationTime<T>(IObservable<T>, TimeSpan, Func<T, T>) Allows to attach TTL to each value of the stream. If next value is not produced in expected time slice, fallback value is sent into stream as replacement until next value is propagated. Declaration public static IObservable<T> WithExpirationTime<T>(this IObservable<T> source, TimeSpan expirationTime, Func<T, T> fallbackValueSupplier) Parameters Type Name Description IObservable<T> source TimeSpan expirationTime Func<T, T> fallbackValueSupplier Returns Type Description IObservable<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.WithPrevious.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.WithPrevious.html",
    "title": "Method WithPrevious | EyeAuras Docs",
    "keywords": "Method WithPrevious WithPrevious<TSource, TResult>(IObservable<TSource>, Func<TSource, TSource, TResult>) Declaration public static IObservable<TResult> WithPrevious<TSource, TResult>(this IObservable<TSource> source, Func<TSource, TSource, TResult> resultSelector) Parameters Type Name Description IObservable<TSource> source Func<TSource, TSource, TResult> resultSelector Returns Type Description IObservable<TResult> Type Parameters Name Description TSource TResult WithPrevious<TSource>(IObservable<TSource>) Declaration public static IObservable<(TSource Previous, TSource Current)> WithPrevious<TSource>(this IObservable<TSource> source) Parameters Type Name Description IObservable<TSource> source Returns Type Description IObservable<(TSource Previous, TSource Current)> Type Parameters Name Description TSource"
  },
  "api/PoeShared.Scaffolding.ObservableExtensions.html": {
    "href": "api/PoeShared.Scaffolding.ObservableExtensions.html",
    "title": "Class ObservableExtensions | EyeAuras Docs",
    "keywords": "Class ObservableExtensions Inheritance object ObservableExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class ObservableExtensions Methods Name Description DisposePrevious<TSource>(IObservable<TSource>) DoWithPrevious<TSource>(IObservable<TSource>, Action<TSource>) EnableIf<T>(IObservable<T>, IObservable<bool>) EnableIf<T>(IObservable<T>, IObservable<bool>, IObservable<T>) ObserveLatestOn<T>(IObservable<T>, IScheduler) https://www.zerobugbuild.com/?p=192 This is a problem that comes up when the UI dispatcher can’t keep up with inbound activity. the example I saw on a project was a price stream that had to be displayed on the UI that could get very busy. If more than one new price arrives on background threads in between dispatcher time slices, there is no point displaying anything but the most recent price – in fact we want the UI to “catch up” by dropping all but the most recent undisplayed price. So the operation is like an ObserveOn that drops all but the most recent events. Here’s a picture of what’s happening – notice how price 2 is dropped and how prices are only published during the dispatcher time slice: The key idea here is that we keep track of the notification to be pushed on to the target scheduler in pendingNotification – and whenever an event is received, we swap the pendingNotification for the new notification. We ensure the new notification will be scheduled for dispatch on the target scheduler – but we may not need to do this… If the previousNotification is null we know that either (a) there was no previous notification as this is the first one or (b) the previousNotification was already dispatched. How to we know this? Because in the scheduler action that does the dispatch we swap the pendingNotification for null! So if previousNotification is null, we know we must schedule a new dispatch action. This approach keeps the checks, locks and scheduled actions to a minimum. Notes and credits: I’ve gone round the houses a few times on this implementation – my own attempts to improve it to use CAS rather than lock ran into bugs, so the code below is largely due to Lee Campbell, and edited for RX 2.0 support by Wilka Hudson. For an interesting discussion on this approach see this thread on the official RX forum. RetryWithBackOff<T>(IObservable<T>, Func<Exception, int, TimeSpan?>) RetryWithDelay<T>(IObservable<T>, TimeSpan) RetryWithDelay<T>(IObservable<T>, TimeSpan, IScheduler) SelectAsync<T>(IObservable<T>, Func<T, Task>, IScheduler) SelectAsync<T, T1>(IObservable<T>, Func<T, CancellationToken, Task<T1>>) SelectAsync<T, T1>(IObservable<T>, Func<T, Task<T1>>) SelectAsync<T, T1>(IObservable<T>, Func<T, Task<T1>>, IScheduler) SelectSafeOrDefault<TIn, TOut>(IObservable<TIn>, Func<TIn, TOut>) SelectSafeOrDefault<TIn, TOut>(IObservable<TIn>, Func<TIn, TOut>, Action<Exception>) SelectSafe<TIn, TOut>(IObservable<TIn>, Func<TIn, TOut>, Func<TIn, Exception, TOut>) SelectSafe<TIn, TOut, TException>(IObservable<TIn>, Func<TIn, TOut>, Func<TIn, TException, TOut>) SelectSafe<TIn, TOut, TException>(IObservable<TIn>, Func<TIn, TOut>, Func<TException, TOut>) SelectTo<T, Y>(IObservable<T>, Func<Y>) SkipUntil<TSource>(IObservable<TSource>, Func<TSource, bool>) StartWithDefault<T>(IObservable<T>) SubscribeAsync<T>(IObservable<T>, Func<Task>) SubscribeAsync<T>(IObservable<T>, Func<Task>, Action<Exception>) SubscribeAsync<T>(IObservable<T>, Func<T, CancellationToken, Task>) SubscribeAsync<T>(IObservable<T>, Func<T, CancellationToken, Task>, Action<Exception>) SubscribeAsync<T>(IObservable<T>, Func<T, Task>) SubscribeAsync<T>(IObservable<T>, Func<T, Task>, Action<Exception>) SubscribeSafe<T>(IObservable<T>, Action, Action<Exception>) SubscribeSafe<T>(IObservable<T>, Action<T>, Action<Exception>) SubscribeSafe<T>(IObservable<T>, Action<T>, Action<Exception>, Action) SubscribeSafe<T>(IObservable<T>, Func<Task>, Action<Exception>) SubscribeSafe<T>(IObservable<T>, Func<T, Task>, Action<Exception>) SubscribeToErrors<T>(IObservable<T>, Action<Exception>) Subscribe<T>(IObservable<T>, Action) Subscribe<T>(IObservable<T>, Action, Action<Exception>) SwitchIfNotDefault<TIn, TOut>(IObservable<TIn>, Func<TIn, IObservable<TOut>>) SwitchIfNotDefault<TIn, TOut>(IObservable<TIn>, Func<TIn, IObservable<TOut>>, Func<IObservable<TOut>>) SwitchIf<TIn, TOut>(IObservable<TIn>, Predicate<TIn>, Func<TIn, IObservable<TOut>>) SwitchIf<TIn, TOut>(IObservable<TIn>, Predicate<TIn>, Func<TIn, IObservable<TOut>>, Func<TIn, IObservable<TOut>>) SwitchLatestAsync<TSource, TResult>(IObservable<TSource>, Func<TSource, CancellationToken, Task<TResult>>) Synchronize<T>(IObservable<T>, NamedLock) ToProperty<TSourceProperty>(IObservable<TSourceProperty>) ToProperty<TSource, TSourceProperty>(IObservable<TSourceProperty>, out ObservableAsPropertyHelper<TSourceProperty>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ToProperty<TSource, TSourceProperty>(IObservable<TSourceProperty>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ToUnit<T>(IObservable<T>) WithExpirationTime<T>(IObservable<T>, TimeSpan, Func<T, T>) Allows to attach TTL to each value of the stream. If next value is not produced in expected time slice, fallback value is sent into stream as replacement until next value is propagated. WithPrevious<TSource>(IObservable<TSource>) WithPrevious<TSource, TResult>(IObservable<TSource>, Func<TSource, TSource, TResult>)"
  },
  "api/PoeShared.Scaffolding.Observables.BlockingTimer.html": {
    "href": "api/PoeShared.Scaffolding.Observables.BlockingTimer.html",
    "title": "Method BlockingTimer | EyeAuras Docs",
    "keywords": "Method BlockingTimer BlockingTimer(TimeSpan, string, bool?) This timer waits for callback completion before proceeding to the next tick Declaration public static IObservable<long> BlockingTimer(TimeSpan period, string timerName = null, bool? amendPeriod = null) Parameters Type Name Description TimeSpan period Tick interval, first tick will occur after offset string timerName bool? amendPeriod Returns Type Description IObservable<long>"
  },
  "api/PoeShared.Scaffolding.Observables.PeriodicAsync.html": {
    "href": "api/PoeShared.Scaffolding.Observables.PeriodicAsync.html",
    "title": "Method PeriodicAsync | EyeAuras Docs",
    "keywords": "Method PeriodicAsync PeriodicAsync(TimeSpan, Func<CancellationToken, Task>) Declaration public static IObservable<Unit> PeriodicAsync(TimeSpan period, Func<CancellationToken, Task> supplier) Parameters Type Name Description TimeSpan period Func<CancellationToken, Task> supplier Returns Type Description IObservable<Unit> PeriodicAsync<T>(TimeSpan, Func<CancellationToken, Task<T>>) Declaration public static IObservable<T> PeriodicAsync<T>(TimeSpan period, Func<CancellationToken, Task<T>> supplier) Parameters Type Name Description TimeSpan period Func<CancellationToken, Task<T>> supplier Returns Type Description IObservable<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.Observables.Using.html": {
    "href": "api/PoeShared.Scaffolding.Observables.Using.html",
    "title": "Method Using | EyeAuras Docs",
    "keywords": "Method Using Using<T>(Func<T>) Declaration public static IObservable<T> Using<T>(Func<T> resourceFactory) where T : IDisposable Parameters Type Name Description Func<T> resourceFactory Returns Type Description IObservable<T> Type Parameters Name Description T Using<T>(Action<CompositeDisposable>) Declaration public static IObservable<T> Using<T>(Action<CompositeDisposable> resourceFactory) where T : IDisposable Parameters Type Name Description Action<CompositeDisposable> resourceFactory Returns Type Description IObservable<T> Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.Observables.html": {
    "href": "api/PoeShared.Scaffolding.Observables.html",
    "title": "Class Observables | EyeAuras Docs",
    "keywords": "Class Observables Inheritance object Observables Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class Observables Methods Name Description BlockingTimer(TimeSpan, string, bool?) This timer waits for callback completion before proceeding to the next tick PeriodicAsync(TimeSpan, Func<CancellationToken, Task>) PeriodicAsync<T>(TimeSpan, Func<CancellationToken, Task<T>>) Using<T>(Action<CompositeDisposable>) Using<T>(Func<T>)"
  },
  "api/PoeShared.Scaffolding.OperationTimer.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.OperationTimer.-ctor.html",
    "title": "Constructor OperationTimer | EyeAuras Docs",
    "keywords": "Constructor OperationTimer OperationTimer(Action<TimeSpan>) Declaration public OperationTimer(Action<TimeSpan> endAction) Parameters Type Name Description Action<TimeSpan> endAction"
  },
  "api/PoeShared.Scaffolding.OperationTimer.Dispose.html": {
    "href": "api/PoeShared.Scaffolding.OperationTimer.Dispose.html",
    "title": "Method Dispose | EyeAuras Docs",
    "keywords": "Method Dispose Dispose() Declaration public void Dispose() Implements IDisposable.Dispose()"
  },
  "api/PoeShared.Scaffolding.OperationTimer.Elapsed.html": {
    "href": "api/PoeShared.Scaffolding.OperationTimer.Elapsed.html",
    "title": "Property Elapsed | EyeAuras Docs",
    "keywords": "Property Elapsed Elapsed Declaration public TimeSpan Elapsed { get; } Property Value Type Description TimeSpan"
  },
  "api/PoeShared.Scaffolding.OperationTimer.LogOperation.html": {
    "href": "api/PoeShared.Scaffolding.OperationTimer.LogOperation.html",
    "title": "Method LogOperation | EyeAuras Docs",
    "keywords": "Method LogOperation LogOperation(Action<TimeSpan>) Declaration public void LogOperation(Action<TimeSpan> action) Parameters Type Name Description Action<TimeSpan> action"
  },
  "api/PoeShared.Scaffolding.OperationTimer.PutTimestamp.html": {
    "href": "api/PoeShared.Scaffolding.OperationTimer.PutTimestamp.html",
    "title": "Method PutTimestamp | EyeAuras Docs",
    "keywords": "Method PutTimestamp PutTimestamp() Declaration public void PutTimestamp()"
  },
  "api/PoeShared.Scaffolding.OperationTimer.html": {
    "href": "api/PoeShared.Scaffolding.OperationTimer.html",
    "title": "Class OperationTimer | EyeAuras Docs",
    "keywords": "Class OperationTimer Inheritance object OperationTimer Implements IDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class OperationTimer : IDisposable Constructors Name Description OperationTimer(Action<TimeSpan>) Properties Name Description Elapsed Methods Name Description Dispose() LogOperation(Action<TimeSpan>) PutTimestamp() Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.PathUtils.AddExtensionPrefix.html": {
    "href": "api/PoeShared.Scaffolding.PathUtils.AddExtensionPrefix.html",
    "title": "Method AddExtensionPrefix | EyeAuras Docs",
    "keywords": "Method AddExtensionPrefix AddExtensionPrefix(string, string) Adds a specified prefix to the extension of a file path. Declaration public static string AddExtensionPrefix(string path, string prefix) Parameters Type Name Description string path The original file path. string prefix The prefix to append to the file extension. Returns Type Description string The file path with the prefix appended to the file extension. If the directory of the path could not be determined, an empty string is used. Examples AddExtensionPrefix(\"C:\\\\temp\\\\file.txt\", \"bak\"); // Returns \"C:\\\\temp\\\\file.bak.txt\""
  },
  "api/PoeShared.Scaffolding.PathUtils.ExpandPath.html": {
    "href": "api/PoeShared.Scaffolding.PathUtils.ExpandPath.html",
    "title": "Method ExpandPath | EyeAuras Docs",
    "keywords": "Method ExpandPath ExpandPath(string, string) Expands a relative path to an absolute path based on a provided root. Declaration public static string ExpandPath(string rootPath, string path) Parameters Type Name Description string rootPath The root path. string path The relative path. Returns Type Description string The expanded path. Examples ExpandPath(\"C:\\\\temp\", \"..\\\\file.txt\"); //Returns \"C:\\\\file.txt\" Exceptions Type Condition ArgumentNullException Thrown when rootPath or path is null. FormatException Thrown when invalid path is provided."
  },
  "api/PoeShared.Scaffolding.PathUtils.GenerateValidName.html": {
    "href": "api/PoeShared.Scaffolding.PathUtils.GenerateValidName.html",
    "title": "Method GenerateValidName | EyeAuras Docs",
    "keywords": "Method GenerateValidName GenerateValidName(string, Func<string, int, string>, Predicate<string>) Generates a valid path name by mutating a base path name. Declaration public static string GenerateValidName(string baseName, Func<string, int, string> mutation, Predicate<string> pathValidator) Parameters Type Name Description string baseName The base path. Func<string, int, string> mutation A function defining how to mutate the baseName when the pathValidator returns false. Predicate<string> pathValidator A function to check the validity of a path, which returns true when valid and false otherwise. Returns Type Description string A valid path based on the baseName. Exceptions Type Condition ArgumentException Thrown when no folder path is specified or invalid new folder path is provided. GenerateValidName(string, Predicate<string>) Creates a valid path name by appending a number to a base path name. Declaration public static string GenerateValidName(string baseName, Predicate<string> pathValidator) Parameters Type Name Description string baseName The base path. Predicate<string> pathValidator A function to validate a path, which returns true when valid and false otherwise. Returns Type Description string A valid path converted from the base path. Examples GenerateValidName(\"C:\\\\temp\", path => !Directory.Exists(path)); //Returns \"C:\\\\temp (1)\" if \"C:\\\\temp\" exists"
  },
  "api/PoeShared.Scaffolding.PathUtils.GetDepth.html": {
    "href": "api/PoeShared.Scaffolding.PathUtils.GetDepth.html",
    "title": "Method GetDepth | EyeAuras Docs",
    "keywords": "Method GetDepth GetDepth(string) Calculates the depth of a directory path. Declaration public static int GetDepth(string path) Parameters Type Name Description string path The path for which to calculate the depth. Returns Type Description int The depth of the path as an integer. Returns 0 if path is null or whitespace. Examples GetDepth(\"C:\\\\temp\\\\file.txt\"); // Returns 2"
  },
  "api/PoeShared.Scaffolding.PathUtils.GetLongestCommonPath.html": {
    "href": "api/PoeShared.Scaffolding.PathUtils.GetLongestCommonPath.html",
    "title": "Method GetLongestCommonPath | EyeAuras Docs",
    "keywords": "Method GetLongestCommonPath GetLongestCommonPath(IReadOnlyList<string>) Declaration public static string GetLongestCommonPath(IReadOnlyList<string> paths) Parameters Type Name Description IReadOnlyList<string> paths Returns Type Description string GetLongestCommonPath(IReadOnlyList<string>, char) Declaration public static string GetLongestCommonPath(IReadOnlyList<string> paths, char separator) Parameters Type Name Description IReadOnlyList<string> paths char separator Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.PathUtils.GetRootDirectory.html": {
    "href": "api/PoeShared.Scaffolding.PathUtils.GetRootDirectory.html",
    "title": "Method GetRootDirectory | EyeAuras Docs",
    "keywords": "Method GetRootDirectory GetRootDirectory(IReadOnlyList<string>) Declaration public static string GetRootDirectory(IReadOnlyList<string> paths) Parameters Type Name Description IReadOnlyList<string> paths Returns Type Description string GetRootDirectory(string) Determines the root directory of a given path. Declaration public static string GetRootDirectory(string path) Parameters Type Name Description string path The path for which to determine the root directory. Returns Type Description string If the root path of the directory is found, it's returned as a string. If not, an empty string is returned. Examples GetRootDirectory(\"C:\\\\temp\\\\file.txt\"); // Returns \"C:\\\\\""
  },
  "api/PoeShared.Scaffolding.PathUtils.IsDirOrSubDir.html": {
    "href": "api/PoeShared.Scaffolding.PathUtils.IsDirOrSubDir.html",
    "title": "Method IsDirOrSubDir | EyeAuras Docs",
    "keywords": "Method IsDirOrSubDir IsDirOrSubDir(string, string) Checks if a given path is a directory or a subdirectory of another. Declaration public static bool IsDirOrSubDir(string candidate, string parentDir) Parameters Type Name Description string candidate Potential subdirectory path. string parentDir Parent directory path. Returns Type Description bool Boolean value indicating whether the candidate is a subdirectory of parentDir, or is the same as parentDir. Examples IsDirOrSubDir(\"C:\\\\temp\", \"C:\\\\\"); //Returns true"
  },
  "api/PoeShared.Scaffolding.PathUtils.IsLinux.html": {
    "href": "api/PoeShared.Scaffolding.PathUtils.IsLinux.html",
    "title": "Property IsLinux | EyeAuras Docs",
    "keywords": "Property IsLinux IsLinux Declaration public static bool IsLinux { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Scaffolding.PathUtils.IsParentDir.html": {
    "href": "api/PoeShared.Scaffolding.PathUtils.IsParentDir.html",
    "title": "Method IsParentDir | EyeAuras Docs",
    "keywords": "Method IsParentDir IsParentDir(string, string) Checks if a given path is a parent directory of another. Declaration public static bool IsParentDir(string candidatePath, string parentDir) Parameters Type Name Description string candidatePath Potential child directory path. string parentDir Potential parent directory path. Returns Type Description bool Boolean value indicating whether the candidatePath is a child of parentDir. Examples IsParentDir(\"C:\\\\temp\\\\file\", \"C:\\\\temp\"); //Returns true"
  },
  "api/PoeShared.Scaffolding.PathUtils.IsSamePath.html": {
    "href": "api/PoeShared.Scaffolding.PathUtils.IsSamePath.html",
    "title": "Method IsSamePath | EyeAuras Docs",
    "keywords": "Method IsSamePath IsSamePath(string, string) Checks if the two provided paths are the same. Declaration public static bool IsSamePath(string first, string second) Parameters Type Name Description string first First path to compare. string second Second path to compare. Returns Type Description bool Boolean value indicating whether the two paths are the same. Examples IsSamePath(\"C:\\\\temp\\\\file.txt\", \"C:/temp/file.txt\"); //Returns true"
  },
  "api/PoeShared.Scaffolding.PathUtils.IsSubDir.html": {
    "href": "api/PoeShared.Scaffolding.PathUtils.IsSubDir.html",
    "title": "Method IsSubDir | EyeAuras Docs",
    "keywords": "Method IsSubDir IsSubDir(string, string) Determines if a given path is a subdirectory of another path. Declaration public static bool IsSubDir(string candidatePath, string parentDir) Parameters Type Name Description string candidatePath The path to test for subdirectory status. string parentDir The parent directory path. Returns Type Description bool A boolean representing whether the path is a subdirectory of the parent directory. Examples IsSubDir(\"C:\\\\Program Files\\\\Common Files\", \"C:\\\\Program Files\"); //Returns true"
  },
  "api/PoeShared.Scaffolding.PathUtils.IsWindows.html": {
    "href": "api/PoeShared.Scaffolding.PathUtils.IsWindows.html",
    "title": "Property IsWindows | EyeAuras Docs",
    "keywords": "Property IsWindows IsWindows Declaration public static bool IsWindows { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Scaffolding.PathUtils.html": {
    "href": "api/PoeShared.Scaffolding.PathUtils.html",
    "title": "Class PathUtils | EyeAuras Docs",
    "keywords": "Class PathUtils Inheritance object PathUtils Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class PathUtils Properties Name Description IsLinux IsWindows Methods Name Description AddExtensionPrefix(string, string) Adds a specified prefix to the extension of a file path. ExpandPath(string, string) Expands a relative path to an absolute path based on a provided root. GenerateValidName(string, Func<string, int, string>, Predicate<string>) Generates a valid path name by mutating a base path name. GenerateValidName(string, Predicate<string>) Creates a valid path name by appending a number to a base path name. GetDepth(string) Calculates the depth of a directory path. GetLongestCommonPath(IReadOnlyList<string>) GetLongestCommonPath(IReadOnlyList<string>, char) GetRootDirectory(IReadOnlyList<string>) GetRootDirectory(string) Determines the root directory of a given path. IsDirOrSubDir(string, string) Checks if a given path is a directory or a subdirectory of another. IsParentDir(string, string) Checks if a given path is a parent directory of another. IsSamePath(string, string) Checks if the two provided paths are the same. IsSubDir(string, string) Determines if a given path is a subdirectory of another path."
  },
  "api/PoeShared.Scaffolding.ProcessHelper.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.ProcessHelper.-ctor.html",
    "title": "Constructor ProcessHelper | EyeAuras Docs",
    "keywords": "Constructor ProcessHelper ProcessHelper() Declaration public ProcessHelper()"
  },
  "api/PoeShared.Scaffolding.ProcessHelper.ProcessRunInfo.ExitCode.html": {
    "href": "api/PoeShared.Scaffolding.ProcessHelper.ProcessRunInfo.ExitCode.html",
    "title": "Property ExitCode | EyeAuras Docs",
    "keywords": "Property ExitCode ExitCode Declaration public int ExitCode { get; init; } Property Value Type Description int"
  },
  "api/PoeShared.Scaffolding.ProcessHelper.ProcessRunInfo.Output.html": {
    "href": "api/PoeShared.Scaffolding.ProcessHelper.ProcessRunInfo.Output.html",
    "title": "Property Output | EyeAuras Docs",
    "keywords": "Property Output Output Declaration public IReadOnlyList<string> Output { get; } Property Value Type Description IReadOnlyList<string>"
  },
  "api/PoeShared.Scaffolding.ProcessHelper.ProcessRunInfo.StdErr.html": {
    "href": "api/PoeShared.Scaffolding.ProcessHelper.ProcessRunInfo.StdErr.html",
    "title": "Property StdErr | EyeAuras Docs",
    "keywords": "Property StdErr StdErr Declaration public IReadOnlyList<string> StdErr { get; init; } Property Value Type Description IReadOnlyList<string>"
  },
  "api/PoeShared.Scaffolding.ProcessHelper.ProcessRunInfo.StdOut.html": {
    "href": "api/PoeShared.Scaffolding.ProcessHelper.ProcessRunInfo.StdOut.html",
    "title": "Property StdOut | EyeAuras Docs",
    "keywords": "Property StdOut StdOut Declaration public IReadOnlyList<string> StdOut { get; init; } Property Value Type Description IReadOnlyList<string>"
  },
  "api/PoeShared.Scaffolding.ProcessHelper.ProcessRunInfo.html": {
    "href": "api/PoeShared.Scaffolding.ProcessHelper.ProcessRunInfo.html",
    "title": "Struct ProcessHelper.ProcessRunInfo | EyeAuras Docs",
    "keywords": "Struct ProcessHelper.ProcessRunInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Scaffolding Assembly: PoeShared.Native.dll Syntax public readonly struct ProcessHelper.ProcessRunInfo Properties Name Description ExitCode Output StdErr StdOut Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer)"
  },
  "api/PoeShared.Scaffolding.ProcessHelper.RunCmd.html": {
    "href": "api/PoeShared.Scaffolding.ProcessHelper.RunCmd.html",
    "title": "Method RunCmd | EyeAuras Docs",
    "keywords": "Method RunCmd RunCmd(string, string, TimeSpan?) Declaration public static ProcessHelper.ProcessRunInfo RunCmd(string cmd, string arguments, TimeSpan? timeout = null) Parameters Type Name Description string cmd string arguments TimeSpan? timeout Returns Type Description ProcessHelper.ProcessRunInfo RunCmd(ProcessStartInfo, TimeSpan?) Declaration public static ProcessHelper.ProcessRunInfo RunCmd(ProcessStartInfo processStartInfo, TimeSpan? timeout = null) Parameters Type Name Description ProcessStartInfo processStartInfo TimeSpan? timeout Returns Type Description ProcessHelper.ProcessRunInfo"
  },
  "api/PoeShared.Scaffolding.ProcessHelper.RunCmdAs.html": {
    "href": "api/PoeShared.Scaffolding.ProcessHelper.RunCmdAs.html",
    "title": "Method RunCmdAs | EyeAuras Docs",
    "keywords": "Method RunCmdAs RunCmdAs(string, string, bool) Declaration public static ProcessHelper.ProcessRunInfo RunCmdAs(string cmd, string arguments, bool showWindow = false) Parameters Type Name Description string cmd string arguments bool showWindow Returns Type Description ProcessHelper.ProcessRunInfo"
  },
  "api/PoeShared.Scaffolding.ProcessHelper.html": {
    "href": "api/PoeShared.Scaffolding.ProcessHelper.html",
    "title": "Class ProcessHelper | EyeAuras Docs",
    "keywords": "Class ProcessHelper Inheritance object ProcessHelper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.Native.dll Syntax public class ProcessHelper Constructors Name Description ProcessHelper() Methods Name Description RunCmd(ProcessStartInfo, TimeSpan?) RunCmd(string, string, TimeSpan?) RunCmdAs(string, string, bool) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ProcessUtils.OpenFolder.html": {
    "href": "api/PoeShared.Scaffolding.ProcessUtils.OpenFolder.html",
    "title": "Method OpenFolder | EyeAuras Docs",
    "keywords": "Method OpenFolder OpenFolder(DirectoryInfo) Declaration public static Task OpenFolder(DirectoryInfo directory) Parameters Type Name Description DirectoryInfo directory Returns Type Description Task"
  },
  "api/PoeShared.Scaffolding.ProcessUtils.OpenUri.html": {
    "href": "api/PoeShared.Scaffolding.ProcessUtils.OpenUri.html",
    "title": "Method OpenUri | EyeAuras Docs",
    "keywords": "Method OpenUri OpenUri(string) Declaration public static Task OpenUri(string uri) Parameters Type Name Description string uri Returns Type Description Task"
  },
  "api/PoeShared.Scaffolding.ProcessUtils.SelectFileOrFolder.html": {
    "href": "api/PoeShared.Scaffolding.ProcessUtils.SelectFileOrFolder.html",
    "title": "Method SelectFileOrFolder | EyeAuras Docs",
    "keywords": "Method SelectFileOrFolder SelectFileOrFolder(FileSystemInfo) Declaration public static Task SelectFileOrFolder(FileSystemInfo fileSystemInfo) Parameters Type Name Description FileSystemInfo fileSystemInfo Returns Type Description Task"
  },
  "api/PoeShared.Scaffolding.ProcessUtils.html": {
    "href": "api/PoeShared.Scaffolding.ProcessUtils.html",
    "title": "Class ProcessUtils | EyeAuras Docs",
    "keywords": "Class ProcessUtils Inheritance object ProcessUtils Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class ProcessUtils Methods Name Description OpenFolder(DirectoryInfo) OpenUri(string) SelectFileOrFolder(FileSystemInfo)"
  },
  "api/PoeShared.Scaffolding.PropertyAccessor-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.PropertyAccessor-1.-ctor.html",
    "title": "Constructor PropertyAccessor | EyeAuras Docs",
    "keywords": "Constructor PropertyAccessor PropertyAccessor(object, string) Declaration public PropertyAccessor(object source, string propertyPath) Parameters Type Name Description object source string propertyPath"
  },
  "api/PoeShared.Scaffolding.PropertyAccessor-1.PropertyPath.html": {
    "href": "api/PoeShared.Scaffolding.PropertyAccessor-1.PropertyPath.html",
    "title": "Property PropertyPath | EyeAuras Docs",
    "keywords": "Property PropertyPath PropertyPath Declaration public string PropertyPath { get; } Property Value Type Description string"
  },
  "api/PoeShared.Scaffolding.PropertyAccessor-1.Value.html": {
    "href": "api/PoeShared.Scaffolding.PropertyAccessor-1.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration public TValue Value { get; set; } Property Value Type Description TValue"
  },
  "api/PoeShared.Scaffolding.PropertyAccessor-1.html": {
    "href": "api/PoeShared.Scaffolding.PropertyAccessor-1.html",
    "title": "Struct PropertyAccessor<TValue> | EyeAuras Docs",
    "keywords": "Struct PropertyAccessor<TValue> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public readonly struct PropertyAccessor<TValue> Type Parameters Name Description TValue Constructors Name Description PropertyAccessor(object, string) Properties Name Description PropertyPath Value Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ProxyServiceProvider.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.ProxyServiceProvider.-ctor.html",
    "title": "Constructor ProxyServiceProvider | EyeAuras Docs",
    "keywords": "Constructor ProxyServiceProvider ProxyServiceProvider() Declaration public ProxyServiceProvider()"
  },
  "api/PoeShared.Scaffolding.ProxyServiceProvider.GetService.html": {
    "href": "api/PoeShared.Scaffolding.ProxyServiceProvider.GetService.html",
    "title": "Method GetService | EyeAuras Docs",
    "keywords": "Method GetService GetService(Type) Declaration public object GetService(Type serviceType) Parameters Type Name Description Type serviceType Returns Type Description object Implements IServiceProvider.GetService(Type)"
  },
  "api/PoeShared.Scaffolding.ProxyServiceProvider.ServiceProvider.html": {
    "href": "api/PoeShared.Scaffolding.ProxyServiceProvider.ServiceProvider.html",
    "title": "Property ServiceProvider | EyeAuras Docs",
    "keywords": "Property ServiceProvider ServiceProvider Declaration public IServiceProvider ServiceProvider { get; set; } Property Value Type Description IServiceProvider"
  },
  "api/PoeShared.Scaffolding.ProxyServiceProvider.html": {
    "href": "api/PoeShared.Scaffolding.ProxyServiceProvider.html",
    "title": "Class ProxyServiceProvider | EyeAuras Docs",
    "keywords": "Class ProxyServiceProvider Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger ProxyServiceProvider Implements IDisposable INotifyPropertyChanged IServiceProvider Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class ProxyServiceProvider : DisposableReactiveObjectWithLogger, IDisposable, INotifyPropertyChanged, IServiceProvider Constructors Name Description ProxyServiceProvider() Properties Name Description ServiceProvider Methods Name Description GetService(Type) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ReactiveObjectExtensions.BindPropertyTo.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveObjectExtensions.BindPropertyTo.html",
    "title": "Method BindPropertyTo | EyeAuras Docs",
    "keywords": "Method BindPropertyTo BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) Declaration [Obsolete(\"Use RaiseWhenSourceValue instead\")] public static IDisposable BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(this TTarget instance, Expression<Func<TTarget, TTargetProperty>> instancePropertyExtractor, TSource source, Expression<Func<TSource, TSourceProperty>> sourcePropertyExtractor, IScheduler scheduler) where TSource : INotifyPropertyChanged where TTarget : IDisposableReactiveObject Parameters Type Name Description TTarget instance Expression<Func<TTarget, TTargetProperty>> instancePropertyExtractor TSource source Expression<Func<TSource, TSourceProperty>> sourcePropertyExtractor IScheduler scheduler Returns Type Description IDisposable Type Parameters Name Description TSource TTarget TSourceProperty TTargetProperty BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) Declaration [Obsolete(\"Use RaiseWhenSourceValue instead\")] public static IDisposable BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(this TTarget instance, Expression<Func<TTarget, TTargetProperty>> instancePropertyExtractor, TSource source, Expression<Func<TSource, TSourceProperty>> sourcePropertyExtractor) where TSource : INotifyPropertyChanged where TTarget : IDisposableReactiveObject Parameters Type Name Description TTarget instance Expression<Func<TTarget, TTargetProperty>> instancePropertyExtractor TSource source Expression<Func<TSource, TSourceProperty>> sourcePropertyExtractor Returns Type Description IDisposable Type Parameters Name Description TSource TTarget TSourceProperty TTargetProperty"
  },
  "api/PoeShared.Scaffolding.ReactiveObjectExtensions.LinkObjectProperties.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveObjectExtensions.LinkObjectProperties.html",
    "title": "Method LinkObjectProperties | EyeAuras Docs",
    "keywords": "Method LinkObjectProperties LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) Declaration public static IDisposable LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(this TSource instance, Expression<Func<TSource, TSourceProperty>> instancePropertyExtractor, Expression<Func<TSource, TTargetProperty>> sourcePropertyExtractor) where TSource : IDisposableReactiveObject Parameters Type Name Description TSource instance Expression<Func<TSource, TSourceProperty>> instancePropertyExtractor Expression<Func<TSource, TTargetProperty>> sourcePropertyExtractor Returns Type Description IDisposable Type Parameters Name Description TSource TSourceProperty TTargetProperty"
  },
  "api/PoeShared.Scaffolding.ReactiveObjectExtensions.RaiseIfChanged.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveObjectExtensions.RaiseIfChanged.html",
    "title": "Method RaiseIfChanged | EyeAuras Docs",
    "keywords": "Method RaiseIfChanged RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) Declaration public static void RaiseIfChanged<TSource, TSourceProperty>(this TSource instance, string instancePropertyName, TSourceProperty previous, TSourceProperty current) where TSource : IDisposableReactiveObject Parameters Type Name Description TSource instance string instancePropertyName TSourceProperty previous TSourceProperty current Type Parameters Name Description TSource TSourceProperty"
  },
  "api/PoeShared.Scaffolding.ReactiveObjectExtensions.RaiseWhenSourceValue.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveObjectExtensions.RaiseWhenSourceValue.html",
    "title": "Method RaiseWhenSourceValue | EyeAuras Docs",
    "keywords": "Method RaiseWhenSourceValue RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) Declaration public static IDisposable RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(this TTarget instance, Expression<Func<TTarget, TTargetProperty>> instancePropertyExtractor, TSource source, Expression<Func<TSource, TSourceProperty>> sourcePropertyExtractor, IScheduler scheduler = null) where TSource : INotifyPropertyChanged where TTarget : IDisposableReactiveObject Parameters Type Name Description TTarget instance Expression<Func<TTarget, TTargetProperty>> instancePropertyExtractor TSource source Expression<Func<TSource, TSourceProperty>> sourcePropertyExtractor IScheduler scheduler Returns Type Description IDisposable Type Parameters Name Description TSource TTarget TSourceProperty TTargetProperty"
  },
  "api/PoeShared.Scaffolding.ReactiveObjectExtensions.ToProperty.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveObjectExtensions.ToProperty.html",
    "title": "Method ToProperty | EyeAuras Docs",
    "keywords": "Method ToProperty ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) Declaration public static ObservableAsPropertyHelper<TSourceProperty> ToProperty<TSource, TSourceProperty>(this TSource instance, Expression<Func<TSource, TSourceProperty>> instancePropertyExtractor, IObservable<TSourceProperty> sourceObservable, TSourceProperty initialValue, bool deferSubscription, IScheduler scheduler) where TSource : IDisposableReactiveObject Parameters Type Name Description TSource instance Expression<Func<TSource, TSourceProperty>> instancePropertyExtractor IObservable<TSourceProperty> sourceObservable TSourceProperty initialValue bool deferSubscription IScheduler scheduler Returns Type Description ObservableAsPropertyHelper<TSourceProperty> Type Parameters Name Description TSource TSourceProperty"
  },
  "api/PoeShared.Scaffolding.ReactiveObjectExtensions.ToPropertyHelper.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveObjectExtensions.ToPropertyHelper.html",
    "title": "Method ToPropertyHelper | EyeAuras Docs",
    "keywords": "Method ToPropertyHelper ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) Declaration public static ObservableAsPropertyHelper<TSourceProperty> ToPropertyHelper<TSource, TSourceProperty>(this TSource instance, Expression<Func<TSource, TSourceProperty>> instancePropertyExtractor, IObservable<TSourceProperty> sourceObservable, IScheduler scheduler = null) where TSource : IDisposableReactiveObject Parameters Type Name Description TSource instance Expression<Func<TSource, TSourceProperty>> instancePropertyExtractor IObservable<TSourceProperty> sourceObservable IScheduler scheduler Returns Type Description ObservableAsPropertyHelper<TSourceProperty> Type Parameters Name Description TSource TSourceProperty"
  },
  "api/PoeShared.Scaffolding.ReactiveObjectExtensions.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveObjectExtensions.html",
    "title": "Class ReactiveObjectExtensions | EyeAuras Docs",
    "keywords": "Class ReactiveObjectExtensions Inheritance object ReactiveObjectExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class ReactiveObjectExtensions Methods Name Description BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler)"
  },
  "api/PoeShared.Scaffolding.ReactiveObjectWithProperties-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveObjectWithProperties-1.-ctor.html",
    "title": "Constructor ReactiveObjectWithProperties | EyeAuras Docs",
    "keywords": "Constructor ReactiveObjectWithProperties ReactiveObjectWithProperties(TProperties) Declaration protected ReactiveObjectWithProperties(TProperties properties) Parameters Type Name Description TProperties properties"
  },
  "api/PoeShared.Scaffolding.ReactiveObjectWithProperties-1.InitialProperties.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveObjectWithProperties-1.InitialProperties.html",
    "title": "Property InitialProperties | EyeAuras Docs",
    "keywords": "Property InitialProperties InitialProperties Declaration protected TProperties InitialProperties { get; } Property Value Type Description TProperties"
  },
  "api/PoeShared.Scaffolding.ReactiveObjectWithProperties-1.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveObjectWithProperties-1.html",
    "title": "Class ReactiveObjectWithProperties<TProperties> | EyeAuras Docs",
    "keywords": "Class ReactiveObjectWithProperties<TProperties> Inheritance object DisposableReactiveObject ReactiveObjectWithProperties<TProperties> ConfigurableReactiveObjectWithProperties<TProperties> Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public abstract class ReactiveObjectWithProperties<TProperties> : DisposableReactiveObject, IDisposable, INotifyPropertyChanged where TProperties : IPoeEyeConfigVersioned, new() Type Parameters Name Description TProperties Constructors Name Description ReactiveObjectWithProperties(TProperties) Properties Name Description InitialProperties Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ReactiveRecord.-Clone--.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveRecord.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public abstract ReactiveRecord <Clone>$() Returns Type Description ReactiveRecord"
  },
  "api/PoeShared.Scaffolding.ReactiveRecord.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveRecord.-ctor.html",
    "title": "Constructor ReactiveRecord | EyeAuras Docs",
    "keywords": "Constructor ReactiveRecord ReactiveRecord() Declaration protected ReactiveRecord() ReactiveRecord(ReactiveRecord) Declaration protected ReactiveRecord(ReactiveRecord original) Parameters Type Name Description ReactiveRecord original"
  },
  "api/PoeShared.Scaffolding.ReactiveRecord.EqualityContract.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveRecord.EqualityContract.html",
    "title": "Property EqualityContract | EyeAuras Docs",
    "keywords": "Property EqualityContract EqualityContract Declaration protected virtual Type EqualityContract { get; } Property Value Type Description Type"
  },
  "api/PoeShared.Scaffolding.ReactiveRecord.Equals.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveRecord.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(ReactiveRecord?) Declaration public virtual bool Equals(ReactiveRecord? other) Parameters Type Name Description ReactiveRecord other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/PoeShared.Scaffolding.ReactiveRecord.GetHashCode.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveRecord.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/PoeShared.Scaffolding.ReactiveRecord.PrintMembers.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveRecord.PrintMembers.html",
    "title": "Method PrintMembers | EyeAuras Docs",
    "keywords": "Method PrintMembers PrintMembers(StringBuilder) Declaration protected virtual bool PrintMembers(StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.ReactiveRecord.PropertyChanged.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveRecord.PropertyChanged.html",
    "title": "Event PropertyChanged | EyeAuras Docs",
    "keywords": "Event PropertyChanged Implements PropertyChanged Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public event PropertyChangedEventHandler PropertyChanged Returns Type Description PropertyChangedEventHandler"
  },
  "api/PoeShared.Scaffolding.ReactiveRecord.RaiseAndSet.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveRecord.RaiseAndSet.html",
    "title": "Method RaiseAndSet | EyeAuras Docs",
    "keywords": "Method RaiseAndSet RaiseAndSet<TRet>(ref TRet, TRet, string) Declaration protected TRet RaiseAndSet<TRet>(ref TRet backingField, TRet newValue, string propertyName = null) Parameters Type Name Description TRet backingField TRet newValue string propertyName Returns Type Description TRet Type Parameters Name Description TRet"
  },
  "api/PoeShared.Scaffolding.ReactiveRecord.RaiseAndSetIfChanged.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveRecord.RaiseAndSetIfChanged.html",
    "title": "Method RaiseAndSetIfChanged | EyeAuras Docs",
    "keywords": "Method RaiseAndSetIfChanged RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) Declaration protected TRet RaiseAndSetIfChanged<TRet>(ref TRet backingField, TRet newValue, string propertyName = null) Parameters Type Name Description TRet backingField TRet newValue string propertyName Returns Type Description TRet Type Parameters Name Description TRet"
  },
  "api/PoeShared.Scaffolding.ReactiveRecord.RaisePropertyChanged.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveRecord.RaisePropertyChanged.html",
    "title": "Method RaisePropertyChanged | EyeAuras Docs",
    "keywords": "Method RaisePropertyChanged RaisePropertyChanged(string) Declaration public void RaisePropertyChanged(string propertyName) Parameters Type Name Description string propertyName"
  },
  "api/PoeShared.Scaffolding.ReactiveRecord.ToString.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveRecord.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/PoeShared.Scaffolding.ReactiveRecord.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveRecord.html",
    "title": "Class ReactiveRecord | EyeAuras Docs",
    "keywords": "Class ReactiveRecord Inheritance object ReactiveRecord AuraTextMessage DisposableReactiveRecord Implements INotifyPropertyChanged IEquatable<ReactiveRecord> Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public abstract record ReactiveRecord : INotifyPropertyChanged, IEquatable<ReactiveRecord> Constructors Name Description ReactiveRecord() ReactiveRecord(ReactiveRecord) Properties Name Description EqualityContract Methods Name Description Equals(ReactiveRecord?) Equals(object?) GetHashCode() PrintMembers(StringBuilder) RaiseAndSetIfChanged<TRet>(ref TRet, TRet, string) RaiseAndSet<TRet>(ref TRet, TRet, string) RaisePropertyChanged(string) ToString() <Clone>$() Events Name Description PropertyChanged Operators Name Description operator ==(ReactiveRecord?, ReactiveRecord?) operator !=(ReactiveRecord?, ReactiveRecord?) Extension Methods NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ReactiveRecord.op_Equality.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveRecord.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(ReactiveRecord?, ReactiveRecord?) Declaration public static bool operator ==(ReactiveRecord? left, ReactiveRecord? right) Parameters Type Name Description ReactiveRecord left ReactiveRecord right Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.ReactiveRecord.op_Inequality.html": {
    "href": "api/PoeShared.Scaffolding.ReactiveRecord.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(ReactiveRecord?, ReactiveRecord?) Declaration public static bool operator !=(ReactiveRecord? left, ReactiveRecord? right) Parameters Type Name Description ReactiveRecord left ReactiveRecord right Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.SchedulerExtensions.Run.html": {
    "href": "api/PoeShared.Scaffolding.SchedulerExtensions.Run.html",
    "title": "Method Run | EyeAuras Docs",
    "keywords": "Method Run Run(IScheduler, Action, CancellationToken) Declaration [Obsolete(\"Left here for compatibility reasons - cancellationToken is no longer used\")] public static void Run(this IScheduler scheduler, Action action, CancellationToken cancellationToken) Parameters Type Name Description IScheduler scheduler Action action CancellationToken cancellationToken Run(IScheduler, Action) Declaration public static void Run(this IScheduler scheduler, Action action) Parameters Type Name Description IScheduler scheduler Action action"
  },
  "api/PoeShared.Scaffolding.SchedulerExtensions.html": {
    "href": "api/PoeShared.Scaffolding.SchedulerExtensions.html",
    "title": "Class SchedulerExtensions | EyeAuras Docs",
    "keywords": "Class SchedulerExtensions Inheritance object SchedulerExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class SchedulerExtensions Methods Name Description Run(IScheduler, Action) Run(IScheduler, Action, CancellationToken)"
  },
  "api/PoeShared.Scaffolding.SecureStringExtensions.CopyInto.html": {
    "href": "api/PoeShared.Scaffolding.SecureStringExtensions.CopyInto.html",
    "title": "Method CopyInto | EyeAuras Docs",
    "keywords": "Method CopyInto CopyInto(SecureString, SecureString) Copies the existing instance of a secure string into the destination, clearing the destination beforehand. Declaration public static void CopyInto(this SecureString source, SecureString destination) Parameters Type Name Description SecureString source SecureString destination"
  },
  "api/PoeShared.Scaffolding.SecureStringExtensions.ToSecuredString.html": {
    "href": "api/PoeShared.Scaffolding.SecureStringExtensions.ToSecuredString.html",
    "title": "Method ToSecuredString | EyeAuras Docs",
    "keywords": "Method ToSecuredString ToSecuredString(string) Converts an unsecured string to a secured string. Declaration public static SecureString ToSecuredString(this string plainString) Parameters Type Name Description string plainString Returns Type Description SecureString"
  },
  "api/PoeShared.Scaffolding.SecureStringExtensions.ToUnsecuredString.html": {
    "href": "api/PoeShared.Scaffolding.SecureStringExtensions.ToUnsecuredString.html",
    "title": "Method ToUnsecuredString | EyeAuras Docs",
    "keywords": "Method ToUnsecuredString ToUnsecuredString(SecureString) Converts a secured string to an unsecured string. Declaration public static string ToUnsecuredString(this SecureString secureString) Parameters Type Name Description SecureString secureString Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.SecureStringExtensions.html": {
    "href": "api/PoeShared.Scaffolding.SecureStringExtensions.html",
    "title": "Class SecureStringExtensions | EyeAuras Docs",
    "keywords": "Class SecureStringExtensions Provides unsafe temporary operations on secured strings. Inheritance object SecureStringExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class SecureStringExtensions Methods Name Description CopyInto(SecureString, SecureString) Copies the existing instance of a secure string into the destination, clearing the destination beforehand. ToSecuredString(string) Converts an unsecured string to a secured string. ToUnsecuredString(SecureString) Converts a secured string to an unsecured string."
  },
  "api/PoeShared.Scaffolding.SemaphoreSlimExtensions.Rent.html": {
    "href": "api/PoeShared.Scaffolding.SemaphoreSlimExtensions.Rent.html",
    "title": "Method Rent | EyeAuras Docs",
    "keywords": "Method Rent Rent(SemaphoreSlim) Declaration public static Task<IDisposable> Rent(this SemaphoreSlim semaphoreSlim) Parameters Type Name Description SemaphoreSlim semaphoreSlim Returns Type Description Task<IDisposable>"
  },
  "api/PoeShared.Scaffolding.SemaphoreSlimExtensions.html": {
    "href": "api/PoeShared.Scaffolding.SemaphoreSlimExtensions.html",
    "title": "Class SemaphoreSlimExtensions | EyeAuras Docs",
    "keywords": "Class SemaphoreSlimExtensions Inheritance object SemaphoreSlimExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class SemaphoreSlimExtensions Methods Name Description Rent(SemaphoreSlim)"
  },
  "api/PoeShared.Scaffolding.ServiceCollectionExtensions.AddFactory.html": {
    "href": "api/PoeShared.Scaffolding.ServiceCollectionExtensions.AddFactory.html",
    "title": "Method AddFactory | EyeAuras Docs",
    "keywords": "Method AddFactory AddFactory<TService, TImplementation>(IServiceCollection) Declaration public static void AddFactory<TService, TImplementation>(this IServiceCollection services) where TService : class where TImplementation : class, TService Parameters Type Name Description IServiceCollection services Type Parameters Name Description TService TImplementation AddFactory<TService>(IServiceCollection) Declaration public static void AddFactory<TService>(this IServiceCollection services) where TService : class Parameters Type Name Description IServiceCollection services Type Parameters Name Description TService"
  },
  "api/PoeShared.Scaffolding.ServiceCollectionExtensions.AddHostedService.html": {
    "href": "api/PoeShared.Scaffolding.ServiceCollectionExtensions.AddHostedService.html",
    "title": "Method AddHostedService | EyeAuras Docs",
    "keywords": "Method AddHostedService AddHostedService<TService, TImplementation>(IServiceCollection) Declaration public static void AddHostedService<TService, TImplementation>(this IServiceCollection services) where TService : class, IHostedService where TImplementation : class, TService Parameters Type Name Description IServiceCollection services Type Parameters Name Description TService TImplementation"
  },
  "api/PoeShared.Scaffolding.ServiceCollectionExtensions.TryAdd.html": {
    "href": "api/PoeShared.Scaffolding.ServiceCollectionExtensions.TryAdd.html",
    "title": "Method TryAdd | EyeAuras Docs",
    "keywords": "Method TryAdd TryAdd<TServiceImplementation>(IServiceCollection, ServiceLifetime) Declaration public static void TryAdd<TServiceImplementation>(this IServiceCollection collection, ServiceLifetime lifetime) Parameters Type Name Description IServiceCollection collection ServiceLifetime lifetime Type Parameters Name Description TServiceImplementation TryAdd(IServiceCollection, Type, Type, ServiceLifetime) Declaration public static void TryAdd(this IServiceCollection collection, Type serviceType, Type serviceImplementation, ServiceLifetime lifetime) Parameters Type Name Description IServiceCollection collection Type serviceType Type serviceImplementation ServiceLifetime lifetime TryAdd<TServiceType, TServiceImplementation>(IServiceCollection, ServiceLifetime) Declaration public static void TryAdd<TServiceType, TServiceImplementation>(this IServiceCollection collection, ServiceLifetime lifetime) where TServiceImplementation : TServiceType Parameters Type Name Description IServiceCollection collection ServiceLifetime lifetime Type Parameters Name Description TServiceType TServiceImplementation"
  },
  "api/PoeShared.Scaffolding.ServiceCollectionExtensions.html": {
    "href": "api/PoeShared.Scaffolding.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | EyeAuras Docs",
    "keywords": "Class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class ServiceCollectionExtensions Methods Name Description AddFactory<TService>(IServiceCollection) AddFactory<TService, TImplementation>(IServiceCollection) AddHostedService<TService, TImplementation>(IServiceCollection) TryAdd(IServiceCollection, Type, Type, ServiceLifetime) TryAdd<TServiceImplementation>(IServiceCollection, ServiceLifetime) TryAdd<TServiceType, TServiceImplementation>(IServiceCollection, ServiceLifetime)"
  },
  "api/PoeShared.Scaffolding.SourceCacheAccessor-2.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheAccessor-2.-ctor.html",
    "title": "Constructor SourceCacheAccessor | EyeAuras Docs",
    "keywords": "Constructor SourceCacheAccessor SourceCacheAccessor(TKey) Declaration public SourceCacheAccessor(TKey key) Parameters Type Name Description TKey key"
  },
  "api/PoeShared.Scaffolding.SourceCacheAccessor-2.Cache.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheAccessor-2.Cache.html",
    "title": "Property Cache | EyeAuras Docs",
    "keywords": "Property Cache Cache Declaration public ISourceCache<TObject, TKey> Cache { get; set; } Property Value Type Description ISourceCache<TObject, TKey>"
  },
  "api/PoeShared.Scaffolding.SourceCacheAccessor-2.IsEnabled.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheAccessor-2.IsEnabled.html",
    "title": "Property IsEnabled | EyeAuras Docs",
    "keywords": "Property IsEnabled IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.Scaffolding.SourceCacheAccessor-2.Key.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheAccessor-2.Key.html",
    "title": "Property Key | EyeAuras Docs",
    "keywords": "Property Key Key Declaration public TKey Key { get; } Property Value Type Description TKey"
  },
  "api/PoeShared.Scaffolding.SourceCacheAccessor-2.Value.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheAccessor-2.Value.html",
    "title": "Property Value | EyeAuras Docs",
    "keywords": "Property Value Value Declaration public TObject Value { get; set; } Property Value Type Description TObject"
  },
  "api/PoeShared.Scaffolding.SourceCacheAccessor-2.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheAccessor-2.html",
    "title": "Class SourceCacheAccessor<TObject, TKey> | EyeAuras Docs",
    "keywords": "Class SourceCacheAccessor<TObject, TKey> Inheritance object DisposableReactiveObject SourceCacheAccessor<TObject, TKey> Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class SourceCacheAccessor<TObject, TKey> : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Type Parameters Name Description TObject TKey Constructors Name Description SourceCacheAccessor(TKey) Properties Name Description Cache IsEnabled Key Value Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.-ctor.html",
    "title": "Constructor SourceCacheEx | EyeAuras Docs",
    "keywords": "Constructor SourceCacheEx SourceCacheEx(Func<T, TKey>, IScheduler) Declaration public SourceCacheEx(Func<T, TKey> keySelector, IScheduler scheduler = null) Parameters Type Name Description Func<T, TKey> keySelector IScheduler scheduler SourceCacheEx(ISourceCache<T, TKey>, IScheduler) Declaration public SourceCacheEx(ISourceCache<T, TKey> sourceList, IScheduler scheduler = null) Parameters Type Name Description ISourceCache<T, TKey> sourceList IScheduler scheduler"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.Collection.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.Collection.html",
    "title": "Property Collection | EyeAuras Docs",
    "keywords": "Property Collection Collection Declaration public IReadOnlyObservableCollection<T> Collection { get; } Property Value Type Description IReadOnlyObservableCollection<T> Implements IObservableCacheEx<T, TKey>.Collection"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.CollectionChanged.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.CollectionChanged.html",
    "title": "Event CollectionChanged | EyeAuras Docs",
    "keywords": "Event CollectionChanged Implements CollectionChanged Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public event NotifyCollectionChangedEventHandler CollectionChanged Returns Type Description NotifyCollectionChangedEventHandler"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.Connect.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.Connect.html",
    "title": "Method Connect | EyeAuras Docs",
    "keywords": "Method Connect Connect(Func<T, bool>, bool) Declaration public IObservable<IChangeSet<T, TKey>> Connect(Func<T, bool> predicate = null, bool suppressEmptyChangeSets = true) Parameters Type Name Description Func<T, bool> predicate bool suppressEmptyChangeSets Returns Type Description IObservable<IChangeSet<T, TKey>>"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.Count.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public int Count { get; } Property Value Type Description int"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.CountChanged.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.CountChanged.html",
    "title": "Property CountChanged | EyeAuras Docs",
    "keywords": "Property CountChanged CountChanged Declaration public IObservable<int> CountChanged { get; } Property Value Type Description IObservable<int>"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.Edit.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.Edit.html",
    "title": "Method Edit | EyeAuras Docs",
    "keywords": "Method Edit Edit(Action<ISourceUpdater<T, TKey>>) Declaration public void Edit(Action<ISourceUpdater<T, TKey>> updateAction) Parameters Type Name Description Action<ISourceUpdater<T, TKey>> updateAction"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.GetEnumerator.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.GetEnumerator.html",
    "title": "Method GetEnumerator | EyeAuras Docs",
    "keywords": "Method GetEnumerator GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator<T> Implements IEnumerable<T>.GetEnumerator()"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.Items.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.Items.html",
    "title": "Property Items | EyeAuras Docs",
    "keywords": "Property Items Items Declaration public IEnumerable<T> Items { get; } Property Value Type Description IEnumerable<T>"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.KeySelector.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.KeySelector.html",
    "title": "Property KeySelector | EyeAuras Docs",
    "keywords": "Property KeySelector KeySelector Declaration public Func<T, TKey> KeySelector { get; } Property Value Type Description Func<T, TKey>"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.KeyValues.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.KeyValues.html",
    "title": "Property KeyValues | EyeAuras Docs",
    "keywords": "Property KeyValues KeyValues Declaration public IEnumerable<KeyValuePair<TKey, T>> KeyValues { get; } Property Value Type Description IEnumerable<KeyValuePair<TKey, T>>"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.Keys.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.Keys.html",
    "title": "Property Keys | EyeAuras Docs",
    "keywords": "Property Keys Keys Declaration public IEnumerable<TKey> Keys { get; } Property Value Type Description IEnumerable<TKey>"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.Lookup.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.Lookup.html",
    "title": "Method Lookup | EyeAuras Docs",
    "keywords": "Method Lookup Lookup(TKey) Declaration public Optional<T> Lookup(TKey key) Parameters Type Name Description TKey key Returns Type Description Optional<T>"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.Preview.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.Preview.html",
    "title": "Method Preview | EyeAuras Docs",
    "keywords": "Method Preview Preview(Func<T, bool>) Declaration public IObservable<IChangeSet<T, TKey>> Preview(Func<T, bool> predicate = null) Parameters Type Name Description Func<T, bool> predicate Returns Type Description IObservable<IChangeSet<T, TKey>>"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.Watch.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.Watch.html",
    "title": "Method Watch | EyeAuras Docs",
    "keywords": "Method Watch Watch(TKey) Declaration public IObservable<Change<T, TKey>> Watch(TKey key) Parameters Type Name Description TKey key Returns Type Description IObservable<Change<T, TKey>>"
  },
  "api/PoeShared.Scaffolding.SourceCacheEx-2.html": {
    "href": "api/PoeShared.Scaffolding.SourceCacheEx-2.html",
    "title": "Class SourceCacheEx<T, TKey> | EyeAuras Docs",
    "keywords": "Class SourceCacheEx<T, TKey> Inheritance object DisposableReactiveObject SourceCacheEx<T, TKey> Implements ISourceCacheEx<T, TKey> ISourceCache<T, TKey> IEnumerable<T> IEnumerable IObservableCacheEx<T, TKey> IObservableCache<T, TKey> IConnectableCache<T, TKey> IDisposable INotifyPropertyChanged INotifyCollectionChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class SourceCacheEx<T, TKey> : DisposableReactiveObject, ISourceCacheEx<T, TKey>, ISourceCache<T, TKey>, IEnumerable<T>, IEnumerable, IObservableCacheEx<T, TKey>, IObservableCache<T, TKey>, IConnectableCache<T, TKey>, IDisposable, INotifyPropertyChanged, INotifyCollectionChanged Type Parameters Name Description T TKey Constructors Name Description SourceCacheEx(ISourceCache<T, TKey>, IScheduler) SourceCacheEx(Func<T, TKey>, IScheduler) Properties Name Description Collection Count CountChanged Items KeySelector KeyValues Keys Methods Name Description Connect(Func<T, bool>, bool) Edit(Action<ISourceUpdater<T, TKey>>) GetEnumerator() Lookup(TKey) Preview(Func<T, bool>) Watch(TKey) Events Name Description CollectionChanged Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.SourceCachesSynchronizer-2.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.SourceCachesSynchronizer-2.-ctor.html",
    "title": "Constructor SourceCachesSynchronizer | EyeAuras Docs",
    "keywords": "Constructor SourceCachesSynchronizer SourceCachesSynchronizer(ISourceCache<TObject, TKey>, ISourceCache<TObject, TKey>) Declaration public SourceCachesSynchronizer(ISourceCache<TObject, TKey> sourceList, ISourceCache<TObject, TKey> targetList) Parameters Type Name Description ISourceCache<TObject, TKey> sourceList ISourceCache<TObject, TKey> targetList"
  },
  "api/PoeShared.Scaffolding.SourceCachesSynchronizer-2.From.html": {
    "href": "api/PoeShared.Scaffolding.SourceCachesSynchronizer-2.From.html",
    "title": "Method From | EyeAuras Docs",
    "keywords": "Method From From(ISourceCache<TObject, TKey>, ISourceCache<TObject, TKey>) Declaration public static SourceCachesSynchronizer<TObject, TKey> From(ISourceCache<TObject, TKey> sourceList, ISourceCache<TObject, TKey> targetList) Parameters Type Name Description ISourceCache<TObject, TKey> sourceList ISourceCache<TObject, TKey> targetList Returns Type Description SourceCachesSynchronizer<TObject, TKey>"
  },
  "api/PoeShared.Scaffolding.SourceCachesSynchronizer-2.html": {
    "href": "api/PoeShared.Scaffolding.SourceCachesSynchronizer-2.html",
    "title": "Class SourceCachesSynchronizer<TObject, TKey> | EyeAuras Docs",
    "keywords": "Class SourceCachesSynchronizer<TObject, TKey> Provides synchronization between two source lists. Changes made to one list will be reflected in the other and vice versa. NOTE: The same approach for SourceList does not work as it is not really possible to distinguish between some operations in multi-threaded environment. It will work MOST of the time, but for some combinations of operation this will generate invalid sequences. Inheritance object DisposableReactiveObject SourceCachesSynchronizer<TObject, TKey> Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public class SourceCachesSynchronizer<TObject, TKey> : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Type Parameters Name Description TObject The type of items within the source lists. TKey The type of item Constructors Name Description SourceCachesSynchronizer(ISourceCache<TObject, TKey>, ISourceCache<TObject, TKey>) Methods Name Description From(ISourceCache<TObject, TKey>, ISourceCache<TObject, TKey>) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.SourceListEx-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.SourceListEx-1.-ctor.html",
    "title": "Constructor SourceListEx | EyeAuras Docs",
    "keywords": "Constructor SourceListEx SourceListEx(ISourceList<T>, IScheduler) Declaration public SourceListEx(ISourceList<T> sourceList, IScheduler scheduler = null) Parameters Type Name Description ISourceList<T> sourceList IScheduler scheduler SourceListEx(IObservable<IChangeSet<T>>) Declaration public SourceListEx(IObservable<IChangeSet<T>> source) Parameters Type Name Description IObservable<IChangeSet<T>> source SourceListEx() Declaration public SourceListEx()"
  },
  "api/PoeShared.Scaffolding.SourceListEx-1.Collection.html": {
    "href": "api/PoeShared.Scaffolding.SourceListEx-1.Collection.html",
    "title": "Property Collection | EyeAuras Docs",
    "keywords": "Property Collection Collection Declaration public IReadOnlyObservableCollection<T> Collection { get; } Property Value Type Description IReadOnlyObservableCollection<T> Implements IObservableListEx<T>.Collection"
  },
  "api/PoeShared.Scaffolding.SourceListEx-1.CollectionChanged.html": {
    "href": "api/PoeShared.Scaffolding.SourceListEx-1.CollectionChanged.html",
    "title": "Event CollectionChanged | EyeAuras Docs",
    "keywords": "Event CollectionChanged Implements CollectionChanged Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public event NotifyCollectionChangedEventHandler CollectionChanged Returns Type Description NotifyCollectionChangedEventHandler"
  },
  "api/PoeShared.Scaffolding.SourceListEx-1.Connect.html": {
    "href": "api/PoeShared.Scaffolding.SourceListEx-1.Connect.html",
    "title": "Method Connect | EyeAuras Docs",
    "keywords": "Method Connect Connect(Func<T, bool>) Declaration public IObservable<IChangeSet<T>> Connect(Func<T, bool> predicate = null) Parameters Type Name Description Func<T, bool> predicate Returns Type Description IObservable<IChangeSet<T>>"
  },
  "api/PoeShared.Scaffolding.SourceListEx-1.Count.html": {
    "href": "api/PoeShared.Scaffolding.SourceListEx-1.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public int Count { get; } Property Value Type Description int"
  },
  "api/PoeShared.Scaffolding.SourceListEx-1.CountChanged.html": {
    "href": "api/PoeShared.Scaffolding.SourceListEx-1.CountChanged.html",
    "title": "Property CountChanged | EyeAuras Docs",
    "keywords": "Property CountChanged CountChanged Declaration public IObservable<int> CountChanged { get; } Property Value Type Description IObservable<int>"
  },
  "api/PoeShared.Scaffolding.SourceListEx-1.Edit.html": {
    "href": "api/PoeShared.Scaffolding.SourceListEx-1.Edit.html",
    "title": "Method Edit | EyeAuras Docs",
    "keywords": "Method Edit Edit(Action<IExtendedList<T>>) Declaration public void Edit(Action<IExtendedList<T>> updateAction) Parameters Type Name Description Action<IExtendedList<T>> updateAction"
  },
  "api/PoeShared.Scaffolding.SourceListEx-1.GetEnumerator.html": {
    "href": "api/PoeShared.Scaffolding.SourceListEx-1.GetEnumerator.html",
    "title": "Method GetEnumerator | EyeAuras Docs",
    "keywords": "Method GetEnumerator GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator<T> Implements IEnumerable<T>.GetEnumerator()"
  },
  "api/PoeShared.Scaffolding.SourceListEx-1.Items.html": {
    "href": "api/PoeShared.Scaffolding.SourceListEx-1.Items.html",
    "title": "Property Items | EyeAuras Docs",
    "keywords": "Property Items Items Declaration public IEnumerable<T> Items { get; } Property Value Type Description IEnumerable<T>"
  },
  "api/PoeShared.Scaffolding.SourceListEx-1.Preview.html": {
    "href": "api/PoeShared.Scaffolding.SourceListEx-1.Preview.html",
    "title": "Method Preview | EyeAuras Docs",
    "keywords": "Method Preview Preview(Func<T, bool>) Declaration public IObservable<IChangeSet<T>> Preview(Func<T, bool> predicate = null) Parameters Type Name Description Func<T, bool> predicate Returns Type Description IObservable<IChangeSet<T>>"
  },
  "api/PoeShared.Scaffolding.SourceListEx-1.html": {
    "href": "api/PoeShared.Scaffolding.SourceListEx-1.html",
    "title": "Class SourceListEx<T> | EyeAuras Docs",
    "keywords": "Class SourceListEx<T> Slightly extended version of SourceList that materializes collection changes using specified scheduler or Immediate if not provided Inheritance object DisposableReactiveObject SourceListEx<T> Implements ISourceListEx<T> ISourceList<T> IObservableListEx<T> IObservableList<T> IEnumerable<T> IEnumerable IDisposable INotifyPropertyChanged INotifyCollectionChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class SourceListEx<T> : DisposableReactiveObject, ISourceListEx<T>, ISourceList<T>, IObservableListEx<T>, IObservableList<T>, IEnumerable<T>, IEnumerable, IDisposable, INotifyPropertyChanged, INotifyCollectionChanged Type Parameters Name Description T Constructors Name Description SourceListEx() SourceListEx(ISourceList<T>, IScheduler) SourceListEx(IObservable<IChangeSet<T>>) Properties Name Description Collection Count CountChanged Items Methods Name Description Connect(Func<T, bool>) Edit(Action<IExtendedList<T>>) GetEnumerator() Preview(Func<T, bool>) Events Name Description CollectionChanged Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.StopwatchExtensions.GetTime.html": {
    "href": "api/PoeShared.Scaffolding.StopwatchExtensions.GetTime.html",
    "title": "Method GetTime | EyeAuras Docs",
    "keywords": "Method GetTime GetTime(Stopwatch) Declaration public static TimeSpan GetTime(this Stopwatch stopwatch) Parameters Type Name Description Stopwatch stopwatch Returns Type Description TimeSpan"
  },
  "api/PoeShared.Scaffolding.StopwatchExtensions.html": {
    "href": "api/PoeShared.Scaffolding.StopwatchExtensions.html",
    "title": "Class StopwatchExtensions | EyeAuras Docs",
    "keywords": "Class StopwatchExtensions Inheritance object StopwatchExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class StopwatchExtensions Methods Name Description GetTime(Stopwatch)"
  },
  "api/PoeShared.Scaffolding.StreamExtensions.ReadToEnd.html": {
    "href": "api/PoeShared.Scaffolding.StreamExtensions.ReadToEnd.html",
    "title": "Method ReadToEnd | EyeAuras Docs",
    "keywords": "Method ReadToEnd ReadToEnd(Stream) Declaration public static byte[] ReadToEnd(this Stream instance) Parameters Type Name Description Stream instance Returns Type Description byte[]"
  },
  "api/PoeShared.Scaffolding.StreamExtensions.ReadToEndAsync.html": {
    "href": "api/PoeShared.Scaffolding.StreamExtensions.ReadToEndAsync.html",
    "title": "Method ReadToEndAsync | EyeAuras Docs",
    "keywords": "Method ReadToEndAsync ReadToEndAsync(Stream) Declaration public static Task<byte[]> ReadToEndAsync(this Stream instance) Parameters Type Name Description Stream instance Returns Type Description Task<byte[]>"
  },
  "api/PoeShared.Scaffolding.StreamExtensions.html": {
    "href": "api/PoeShared.Scaffolding.StreamExtensions.html",
    "title": "Class StreamExtensions | EyeAuras Docs",
    "keywords": "Class StreamExtensions Inheritance object StreamExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class StreamExtensions Methods Name Description ReadToEnd(Stream) ReadToEndAsync(Stream)"
  },
  "api/PoeShared.Scaffolding.StringExtensions.IsSurroundedWith.html": {
    "href": "api/PoeShared.Scaffolding.StringExtensions.IsSurroundedWith.html",
    "title": "Method IsSurroundedWith | EyeAuras Docs",
    "keywords": "Method IsSurroundedWith IsSurroundedWith(string, string) Declaration public static bool IsSurroundedWith(this string input, string value) Parameters Type Name Description string input string value Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.StringExtensions.JoinStrings.html": {
    "href": "api/PoeShared.Scaffolding.StringExtensions.JoinStrings.html",
    "title": "Method JoinStrings | EyeAuras Docs",
    "keywords": "Method JoinStrings JoinStrings(IEnumerable<string>, char) Declaration public static string JoinStrings(this IEnumerable<string> obj, char separator) Parameters Type Name Description IEnumerable<string> obj char separator Returns Type Description string JoinStrings(IEnumerable<string>, string) Declaration public static string JoinStrings(this IEnumerable<string> obj, string separator) Parameters Type Name Description IEnumerable<string> obj string separator Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringExtensions.Pascalize.html": {
    "href": "api/PoeShared.Scaffolding.StringExtensions.Pascalize.html",
    "title": "Method Pascalize | EyeAuras Docs",
    "keywords": "Method Pascalize Pascalize(string) By default, pascalize converts strings to UpperCamelCase also removing underscores Declaration public static string Pascalize(this string input) Parameters Type Name Description string input Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringExtensions.SplitTrim.html": {
    "href": "api/PoeShared.Scaffolding.StringExtensions.SplitTrim.html",
    "title": "Method SplitTrim | EyeAuras Docs",
    "keywords": "Method SplitTrim SplitTrim(string, string) Split string into substrings using separator string Empty items are removed and existing are trimmed Declaration public static string[] SplitTrim(this string str, string separator) Parameters Type Name Description string str string separator Returns Type Description string[] SplitTrim(string, char) Perform a string split that also trims whitespace from each result and removes duplicats Declaration public static IEnumerable<string> SplitTrim(this string text, char separator) Parameters Type Name Description string text char separator Returns Type Description IEnumerable<string> SplitTrim(string, char[]) Perform a string split that also trims whitespace from each result and removes duplicats Declaration public static IEnumerable<string> SplitTrim(this string text, char[] separator) Parameters Type Name Description string text char[] separator Returns Type Description IEnumerable<string>"
  },
  "api/PoeShared.Scaffolding.StringExtensions.SurroundWith.html": {
    "href": "api/PoeShared.Scaffolding.StringExtensions.SurroundWith.html",
    "title": "Method SurroundWith | EyeAuras Docs",
    "keywords": "Method SurroundWith SurroundWith(string, char) Declaration public static string SurroundWith(this string input, char c) Parameters Type Name Description string input char c Returns Type Description string SurroundWith(string, string) Declaration public static string SurroundWith(this string input, string value) Parameters Type Name Description string input string value Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringExtensions.TakeChars.html": {
    "href": "api/PoeShared.Scaffolding.StringExtensions.TakeChars.html",
    "title": "Method TakeChars | EyeAuras Docs",
    "keywords": "Method TakeChars TakeChars(string, int) Declaration public static string TakeChars(this string str, int maxChars) Parameters Type Name Description string str int maxChars Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringExtensions.TakeMidChars.html": {
    "href": "api/PoeShared.Scaffolding.StringExtensions.TakeMidChars.html",
    "title": "Method TakeMidChars | EyeAuras Docs",
    "keywords": "Method TakeMidChars TakeMidChars(string, int, bool) Declaration public static string TakeMidChars(this string str, int maxChars, bool addSuffix = false) Parameters Type Name Description string str int maxChars bool addSuffix Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringExtensions.ToDecimalOrDefault.html": {
    "href": "api/PoeShared.Scaffolding.StringExtensions.ToDecimalOrDefault.html",
    "title": "Method ToDecimalOrDefault | EyeAuras Docs",
    "keywords": "Method ToDecimalOrDefault ToDecimalOrDefault(string) Declaration public static decimal? ToDecimalOrDefault(this string str) Parameters Type Name Description string str Returns Type Description decimal?"
  },
  "api/PoeShared.Scaffolding.StringExtensions.ToIntOrDefault.html": {
    "href": "api/PoeShared.Scaffolding.StringExtensions.ToIntOrDefault.html",
    "title": "Method ToIntOrDefault | EyeAuras Docs",
    "keywords": "Method ToIntOrDefault ToIntOrDefault(string) Declaration public static int? ToIntOrDefault(this string str) Parameters Type Name Description string str Returns Type Description int?"
  },
  "api/PoeShared.Scaffolding.StringExtensions.ToUriOrDefault.html": {
    "href": "api/PoeShared.Scaffolding.StringExtensions.ToUriOrDefault.html",
    "title": "Method ToUriOrDefault | EyeAuras Docs",
    "keywords": "Method ToUriOrDefault ToUriOrDefault(string) Declaration public static Uri ToUriOrDefault(this string str) Parameters Type Name Description string str Returns Type Description Uri"
  },
  "api/PoeShared.Scaffolding.StringExtensions.html": {
    "href": "api/PoeShared.Scaffolding.StringExtensions.html",
    "title": "Class StringExtensions | EyeAuras Docs",
    "keywords": "Class StringExtensions Inheritance object StringExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class StringExtensions Methods Name Description IsSurroundedWith(string, string) JoinStrings(IEnumerable<string>, char) JoinStrings(IEnumerable<string>, string) Pascalize(string) By default, pascalize converts strings to UpperCamelCase also removing underscores SplitTrim(string, char) Perform a string split that also trims whitespace from each result and removes duplicats SplitTrim(string, char[]) Perform a string split that also trims whitespace from each result and removes duplicats SplitTrim(string, string) Split string into substrings using separator string Empty items are removed and existing are trimmed SurroundWith(string, char) SurroundWith(string, string) TakeChars(string, int) TakeMidChars(string, int, bool) ToDecimalOrDefault(string) ToIntOrDefault(string) ToUriOrDefault(string)"
  },
  "api/PoeShared.Scaffolding.StringUtils.AppendFormattedLine.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.AppendFormattedLine.html",
    "title": "Method AppendFormattedLine | EyeAuras Docs",
    "keywords": "Method AppendFormattedLine AppendFormattedLine(StringBuilder, string, params object[]) Добавляет отформатированную строку и дополняет ее переводом каретки. Declaration public static void AppendFormattedLine(this StringBuilder _sb, string _format, params object[] _args) Parameters Type Name Description StringBuilder _sb string _format object[] _args"
  },
  "api/PoeShared.Scaffolding.StringUtils.AsciiBytesToString.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.AsciiBytesToString.html",
    "title": "Method AsciiBytesToString | EyeAuras Docs",
    "keywords": "Method AsciiBytesToString AsciiBytesToString(byte[], Encoding) Считывает NullTerminated строку используя указанную кодировку Declaration public static string AsciiBytesToString(byte[] buffer, Encoding _encoding = null) Parameters Type Name Description byte[] buffer Encoding _encoding Returns Type Description string AsciiBytesToString(byte[], int, int, Encoding) Считывает NullTerminated строку используя указанную кодировку Declaration public static string AsciiBytesToString(byte[] buffer, int offset, int maxLength, Encoding _encoding = null) Parameters Type Name Description byte[] buffer int offset int maxLength Encoding _encoding Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.CompressList.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.CompressList.html",
    "title": "Method CompressList | EyeAuras Docs",
    "keywords": "Method CompressList CompressList(IEnumerable<string>) Склеивает указанные строки с использованием ListDelimiter'а в качестве разделителя элементов Declaration public static string CompressList(IEnumerable<string> _list) Parameters Type Name Description IEnumerable<string> _list Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.CompressStringToGZip.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.CompressStringToGZip.html",
    "title": "Method CompressStringToGZip | EyeAuras Docs",
    "keywords": "Method CompressStringToGZip CompressStringToGZip(string, bool) Compresses the string. Declaration public static string CompressStringToGZip(string text, bool includePrefix = false) Parameters Type Name Description string text The text. bool includePrefix includes 'GZip' prefix to indicate that it's compressed base64 string Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.CompressToGZip.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.CompressToGZip.html",
    "title": "Method CompressToGZip | EyeAuras Docs",
    "keywords": "Method CompressToGZip CompressToGZip(byte[]) Declaration public static byte[] CompressToGZip(byte[] buffer) Parameters Type Name Description byte[] buffer Returns Type Description byte[]"
  },
  "api/PoeShared.Scaffolding.StringUtils.DecompressFromGZip.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.DecompressFromGZip.html",
    "title": "Method DecompressFromGZip | EyeAuras Docs",
    "keywords": "Method DecompressFromGZip DecompressFromGZip(byte[]) Declaration public static byte[] DecompressFromGZip(byte[] compressedBuffer) Parameters Type Name Description byte[] compressedBuffer Returns Type Description byte[]"
  },
  "api/PoeShared.Scaffolding.StringUtils.DecompressList.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.DecompressList.html",
    "title": "Method DecompressList | EyeAuras Docs",
    "keywords": "Method DecompressList DecompressList(string) Распаковывает сжатый список с использованием ListDelimiter'а в качестве разделителя элементов Declaration public static IEnumerable<string> DecompressList(string _compressedList) Parameters Type Name Description string _compressedList Returns Type Description IEnumerable<string>"
  },
  "api/PoeShared.Scaffolding.StringUtils.DecompressStringFromGZip.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.DecompressStringFromGZip.html",
    "title": "Method DecompressStringFromGZip | EyeAuras Docs",
    "keywords": "Method DecompressStringFromGZip DecompressStringFromGZip(string, bool) Decompresses the string. Declaration public static string DecompressStringFromGZip(string compressedText, bool requirePrefix = false) Parameters Type Name Description string compressedText The compressed text. bool requirePrefix Indicates whether compressed text must contain GZip prefix Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.FormatBytesToString.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.FormatBytesToString.html",
    "title": "Method FormatBytesToString | EyeAuras Docs",
    "keywords": "Method FormatBytesToString FormatBytesToString(long) Форматирует указанный байтовый размер в человекочитаемый вид Declaration public static string FormatBytesToString(long _bytesCount) Parameters Type Name Description long _bytesCount Размер Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.FormatXmlString.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.FormatXmlString.html",
    "title": "Method FormatXmlString | EyeAuras Docs",
    "keywords": "Method FormatXmlString FormatXmlString(string) Форматирует указанный XML в человекочитаемый вид Declaration public static string FormatXmlString(string _unformattedXml) Parameters Type Name Description string _unformattedXml Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.FromHex.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.FromHex.html",
    "title": "Method FromHex | EyeAuras Docs",
    "keywords": "Method FromHex FromHex(string) Преобразовывает из HEX строки в байтовый массив Declaration public static byte[] FromHex(string _hex) Parameters Type Name Description string _hex Returns Type Description byte[]"
  },
  "api/PoeShared.Scaffolding.StringUtils.FromHexGzip.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.FromHexGzip.html",
    "title": "Method FromHexGzip | EyeAuras Docs",
    "keywords": "Method FromHexGzip FromHexGzip(string) Declaration public static string FromHexGzip(string hexGzip) Parameters Type Name Description string hexGzip Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.GzipPrefix.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.GzipPrefix.html",
    "title": "Field GzipPrefix | EyeAuras Docs",
    "keywords": "Field GzipPrefix Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static readonly string GzipPrefix Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.HexDump.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.HexDump.html",
    "title": "Method HexDump | EyeAuras Docs",
    "keywords": "Method HexDump HexDump(byte[], int) Дампит содержимое массива в HEX виде Реализация взята отсюда http://www.codeproject.com/Articles/36747/Quick-and-Dirty-HexDump-of-a-Byte-Array Declaration public static string HexDump(byte[] _bytes, int _bytesPerLine = 16) Parameters Type Name Description byte[] _bytes Байтовый массив int _bytesPerLine Количество байт на одну строку Returns Type Description string Строки вида 00000010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ················"
  },
  "api/PoeShared.Scaffolding.StringUtils.HexGzipPrefix.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.HexGzipPrefix.html",
    "title": "Field HexGzipPrefix | EyeAuras Docs",
    "keywords": "Field HexGzipPrefix Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static readonly string HexGzipPrefix Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.IsGzip.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.IsGzip.html",
    "title": "Method IsGzip | EyeAuras Docs",
    "keywords": "Method IsGzip IsGzip(string) Declaration public static bool IsGzip(string text) Parameters Type Name Description string text Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.StringUtils.IsHexGzip.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.IsHexGzip.html",
    "title": "Method IsHexGzip | EyeAuras Docs",
    "keywords": "Method IsHexGzip IsHexGzip(string) Declaration public static bool IsHexGzip(string value) Parameters Type Name Description string value Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.StringUtils.ListDelimiter.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.ListDelimiter.html",
    "title": "Field ListDelimiter | EyeAuras Docs",
    "keywords": "Field ListDelimiter Разделитель, который используется при формировании списков Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static string ListDelimiter Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.ShortenFilename.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.ShortenFilename.html",
    "title": "Method ShortenFilename | EyeAuras Docs",
    "keywords": "Method ShortenFilename ShortenFilename(string) Укорачивает имя файла до 8 символов Declaration public static string ShortenFilename(string _fileName) Parameters Type Name Description string _fileName Returns Type Description string ShortenFilename(string, uint) Укорачивает имя файла до указанного числа символов, к примеру \"C:\\Dir1\\Dir2\\Dir3\\LongFileName1.ext\" => \"C:\\Dir...Name1.ext\" Declaration public static string ShortenFilename(string _fileName, uint _desiredLength) Parameters Type Name Description string _fileName uint _desiredLength Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.ToHex.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.ToHex.html",
    "title": "Method ToHex | EyeAuras Docs",
    "keywords": "Method ToHex ToHex(byte[], string) Конвертирует массив в набор HEX данных вида 0x00 Declaration public static string ToHex(byte[] _bytes, string _separator = \" \") Parameters Type Name Description byte[] _bytes string _separator Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.ToHexGzip.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.ToHexGzip.html",
    "title": "Method ToHexGzip | EyeAuras Docs",
    "keywords": "Method ToHexGzip ToHexGzip(string) Declaration public static string ToHexGzip(string value) Parameters Type Name Description string value Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.ToMD5.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.ToMD5.html",
    "title": "Method ToMD5 | EyeAuras Docs",
    "keywords": "Method ToMD5 ToMD5(string) Declaration public static string ToMD5(string value) Parameters Type Name Description string value Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.ToUnicodeHex.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.ToUnicodeHex.html",
    "title": "Method ToUnicodeHex | EyeAuras Docs",
    "keywords": "Method ToUnicodeHex ToUnicodeHex(string) Declaration public static string ToUnicodeHex(string value) Parameters Type Name Description string value Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.StringUtils.TryParseEnum.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.TryParseEnum.html",
    "title": "Method TryParseEnum | EyeAuras Docs",
    "keywords": "Method TryParseEnum TryParseEnum<T>(object, out T) Парсит Enum из строки/числа, регистронезависимо Declaration public static bool TryParseEnum<T>(object _value, out T _enumValue) where T : struct Parameters Type Name Description object _value T _enumValue Returns Type Description bool Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.StringUtils.TryParseMultiBooleanValue.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.TryParseMultiBooleanValue.html",
    "title": "Method TryParseMultiBooleanValue | EyeAuras Docs",
    "keywords": "Method TryParseMultiBooleanValue TryParseMultiBooleanValue(object, out bool) Пропарсивает значение _value. Если это string, тогда проверяет на True/False и 1/0, если int - только на 1/0 Declaration public static bool TryParseMultiBooleanValue(object _value, out bool _booleanValue) Parameters Type Name Description object _value String/Int значение, которое описывает булевую сущность bool _booleanValue Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.StringUtils.html": {
    "href": "api/PoeShared.Scaffolding.StringUtils.html",
    "title": "Class StringUtils | EyeAuras Docs",
    "keywords": "Class StringUtils Inheritance object StringUtils Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class StringUtils Fields Name Description GzipPrefix HexGzipPrefix ListDelimiter Разделитель, который используется при формировании списков Methods Name Description AppendFormattedLine(StringBuilder, string, params object[]) Добавляет отформатированную строку и дополняет ее переводом каретки. AsciiBytesToString(byte[], int, int, Encoding) Считывает NullTerminated строку используя указанную кодировку AsciiBytesToString(byte[], Encoding) Считывает NullTerminated строку используя указанную кодировку CompressList(IEnumerable<string>) Склеивает указанные строки с использованием ListDelimiter'а в качестве разделителя элементов CompressStringToGZip(string, bool) Compresses the string. CompressToGZip(byte[]) DecompressFromGZip(byte[]) DecompressList(string) Распаковывает сжатый список с использованием ListDelimiter'а в качестве разделителя элементов DecompressStringFromGZip(string, bool) Decompresses the string. FormatBytesToString(long) Форматирует указанный байтовый размер в человекочитаемый вид FormatXmlString(string) Форматирует указанный XML в человекочитаемый вид FromHex(string) Преобразовывает из HEX строки в байтовый массив FromHexGzip(string) HexDump(byte[], int) Дампит содержимое массива в HEX виде Реализация взята отсюда http://www.codeproject.com/Articles/36747/Quick-and-Dirty-HexDump-of-a-Byte-Array IsGzip(string) IsHexGzip(string) ShortenFilename(string) Укорачивает имя файла до 8 символов ShortenFilename(string, uint) Укорачивает имя файла до указанного числа символов, к примеру \"C:\\Dir1\\Dir2\\Dir3\\LongFileName1.ext\" => \"C:\\Dir...Name1.ext\" ToHex(byte[], string) Конвертирует массив в набор HEX данных вида 0x00 ToHexGzip(string) ToMD5(string) ToUnicodeHex(string) TryParseEnum<T>(object, out T) Парсит Enum из строки/числа, регистронезависимо TryParseMultiBooleanValue(object, out bool) Пропарсивает значение _value. Если это string, тогда проверяет на True/False и 1/0, если int - только на 1/0"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.-ctor.html",
    "title": "Constructor SynchronizedObservableCollectionEx | EyeAuras Docs",
    "keywords": "Constructor SynchronizedObservableCollectionEx SynchronizedObservableCollectionEx() Declaration public SynchronizedObservableCollectionEx()"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Add.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Add.html",
    "title": "Method Add | EyeAuras Docs",
    "keywords": "Method Add Add(T) Declaration public void Add(T item) Parameters Type Name Description T item Implements ICollection<T>.Add(T)"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Clear.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Clear.html",
    "title": "Method Clear | EyeAuras Docs",
    "keywords": "Method Clear Clear() Declaration public void Clear() Implements ICollection<T>.Clear()"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.CollectionChanged.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.CollectionChanged.html",
    "title": "Event CollectionChanged | EyeAuras Docs",
    "keywords": "Event CollectionChanged Implements CollectionChanged Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public event NotifyCollectionChangedEventHandler CollectionChanged Returns Type Description NotifyCollectionChangedEventHandler"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Contains.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Contains.html",
    "title": "Method Contains | EyeAuras Docs",
    "keywords": "Method Contains Contains(T) Declaration public bool Contains(T item) Parameters Type Name Description T item Returns Type Description bool Implements ICollection<T>.Contains(T)"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.CopyTo.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.CopyTo.html",
    "title": "Method CopyTo | EyeAuras Docs",
    "keywords": "Method CopyTo CopyTo(T[], int) Declaration public void CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array int arrayIndex Implements ICollection<T>.CopyTo(T[], int)"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Count.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public int Count { get; } Property Value Type Description int Implements ICollection<T>.Count IReadOnlyCollection<T>.Count"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.GetEnumerator.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.GetEnumerator.html",
    "title": "Method GetEnumerator | EyeAuras Docs",
    "keywords": "Method GetEnumerator GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator<T> Implements IEnumerable<T>.GetEnumerator()"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.IndexOf.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.IndexOf.html",
    "title": "Method IndexOf | EyeAuras Docs",
    "keywords": "Method IndexOf IndexOf(T) Declaration public int IndexOf(T item) Parameters Type Name Description T item Returns Type Description int Implements IList<T>.IndexOf(T)"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Insert.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Insert.html",
    "title": "Method Insert | EyeAuras Docs",
    "keywords": "Method Insert Insert(int, T) Declaration public void Insert(int index, T item) Parameters Type Name Description int index T item Implements IList<T>.Insert(int, T)"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.IsReadOnly.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.IsReadOnly.html",
    "title": "Property IsReadOnly | EyeAuras Docs",
    "keywords": "Property IsReadOnly IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool Implements ICollection<T>.IsReadOnly"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Item.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Item.html",
    "title": "Property this | EyeAuras Docs",
    "keywords": "Property this this[int] Declaration public T this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description T Implements IList<T>.this[int] IReadOnlyList<T>.this[int]"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Load.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Load.html",
    "title": "Method Load | EyeAuras Docs",
    "keywords": "Method Load Load(IEnumerable<T>) Declaration public void Load(IEnumerable<T> items) Parameters Type Name Description IEnumerable<T> items"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Move.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Move.html",
    "title": "Method Move | EyeAuras Docs",
    "keywords": "Method Move Move(int, int) Declaration public void Move(int oldIndex, int newIndex) Parameters Type Name Description int oldIndex int newIndex"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Remove.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.Remove.html",
    "title": "Method Remove | EyeAuras Docs",
    "keywords": "Method Remove Remove(T) Declaration public bool Remove(T item) Parameters Type Name Description T item Returns Type Description bool Implements ICollection<T>.Remove(T)"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.RemoveAt.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.RemoveAt.html",
    "title": "Method RemoveAt | EyeAuras Docs",
    "keywords": "Method RemoveAt RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index Implements IList<T>.RemoveAt(int)"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.SuspendCount.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.SuspendCount.html",
    "title": "Method SuspendCount | EyeAuras Docs",
    "keywords": "Method SuspendCount SuspendCount() Declaration public IDisposable SuspendCount() Returns Type Description IDisposable"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.SuspendNotifications.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.SuspendNotifications.html",
    "title": "Method SuspendNotifications | EyeAuras Docs",
    "keywords": "Method SuspendNotifications SuspendNotifications() Declaration public IDisposable SuspendNotifications() Returns Type Description IDisposable"
  },
  "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.html": {
    "href": "api/PoeShared.Scaffolding.SynchronizedObservableCollectionEx-1.html",
    "title": "Class SynchronizedObservableCollectionEx<T> | EyeAuras Docs",
    "keywords": "Class SynchronizedObservableCollectionEx<T> Inheritance object DisposableReactiveObject SynchronizedObservableCollectionEx<T> Implements IDisposable IObservableCollection<T> IList<T> ICollection<T> INotifyCollectionChangedSuspender IReadOnlyObservableCollection<T> INotifyCollectionChanged INotifyPropertyChanged IReadOnlyList<T> IReadOnlyCollection<T> IEnumerable<T> IEnumerable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class SynchronizedObservableCollectionEx<T> : DisposableReactiveObject, IDisposable, IObservableCollection<T>, IList<T>, ICollection<T>, INotifyCollectionChangedSuspender, IReadOnlyObservableCollection<T>, INotifyCollectionChanged, INotifyPropertyChanged, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors Name Description SynchronizedObservableCollectionEx() Properties Name Description Count IsReadOnly this[int] Methods Name Description Add(T) Clear() Contains(T) CopyTo(T[], int) GetEnumerator() IndexOf(T) Insert(int, T) Load(IEnumerable<T>) Move(int, int) Remove(T) RemoveAt(int) SuspendCount() SuspendNotifications() Events Name Description CollectionChanged Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.TaskExtensions.Sleep.html": {
    "href": "api/PoeShared.Scaffolding.TaskExtensions.Sleep.html",
    "title": "Method Sleep | EyeAuras Docs",
    "keywords": "Method Sleep Sleep(CancellationToken, TimeSpan) Declaration public static void Sleep(this CancellationToken cancellationToken, TimeSpan timeout) Parameters Type Name Description CancellationToken cancellationToken TimeSpan timeout Sleep(CancellationToken, int, IFluentLog) Declaration public static void Sleep(this CancellationToken cancellationToken, int millisecondsTimeout, IFluentLog log) Parameters Type Name Description CancellationToken cancellationToken int millisecondsTimeout IFluentLog log Sleep(CancellationToken, TimeSpan, IFluentLog) Declaration public static void Sleep(this CancellationToken cancellationToken, TimeSpan timeout, IFluentLog log) Parameters Type Name Description CancellationToken cancellationToken TimeSpan timeout IFluentLog log"
  },
  "api/PoeShared.Scaffolding.TaskExtensions.TimeoutAfter.html": {
    "href": "api/PoeShared.Scaffolding.TaskExtensions.TimeoutAfter.html",
    "title": "Method TimeoutAfter | EyeAuras Docs",
    "keywords": "Method TimeoutAfter TimeoutAfter<TResult>(Task<TResult>, TimeSpan) Declaration public static Task<TResult> TimeoutAfter<TResult>(this Task<TResult> task, TimeSpan timeout) Parameters Type Name Description Task<TResult> task TimeSpan timeout Returns Type Description Task<TResult> Type Parameters Name Description TResult TimeoutAfter(Task, TimeSpan) Declaration public static Task TimeoutAfter(this Task task, TimeSpan timeout) Parameters Type Name Description Task task TimeSpan timeout Returns Type Description Task"
  },
  "api/PoeShared.Scaffolding.TaskExtensions.html": {
    "href": "api/PoeShared.Scaffolding.TaskExtensions.html",
    "title": "Class TaskExtensions | EyeAuras Docs",
    "keywords": "Class TaskExtensions Inheritance object TaskExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class TaskExtensions Methods Name Description Sleep(CancellationToken, int, IFluentLog) Sleep(CancellationToken, TimeSpan) Sleep(CancellationToken, TimeSpan, IFluentLog) TimeoutAfter(Task, TimeSpan) TimeoutAfter<TResult>(Task<TResult>, TimeSpan)"
  },
  "api/PoeShared.Scaffolding.TempFile.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.TempFile.-ctor.html",
    "title": "Constructor TempFile | EyeAuras Docs",
    "keywords": "Constructor TempFile TempFile(FileInfo) Initializes a new instance of the TempFile class. Creates a copy of the provided source file in a temporary location. Declaration public TempFile(FileInfo sourceFile) Parameters Type Name Description FileInfo sourceFile The source file to be copied to a temporary location. TempFile() Initializes a new instance of the TempFile class. Creates a file in temporary location. Declaration public TempFile()"
  },
  "api/PoeShared.Scaffolding.TempFile.Dispose.html": {
    "href": "api/PoeShared.Scaffolding.TempFile.Dispose.html",
    "title": "Method Dispose | EyeAuras Docs",
    "keywords": "Method Dispose Dispose() Disposes of the temporary file by attempting to delete it. Declaration public void Dispose() Implements IDisposable.Dispose()"
  },
  "api/PoeShared.Scaffolding.TempFile.File.html": {
    "href": "api/PoeShared.Scaffolding.TempFile.File.html",
    "title": "Property File | EyeAuras Docs",
    "keywords": "Property File File Gets the temporary file information. Declaration public FileInfo File { get; } Property Value Type Description FileInfo"
  },
  "api/PoeShared.Scaffolding.TempFile.ToString.html": {
    "href": "api/PoeShared.Scaffolding.TempFile.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/PoeShared.Scaffolding.TempFile.html": {
    "href": "api/PoeShared.Scaffolding.TempFile.html",
    "title": "Class TempFile | EyeAuras Docs",
    "keywords": "Class TempFile Represents a temporary file that can be disposed of. Inheritance object TempFile Implements IDisposable Inherited Members object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class TempFile : IDisposable Constructors Name Description TempFile() Initializes a new instance of the TempFile class. Creates a file in temporary location. TempFile(FileInfo) Initializes a new instance of the TempFile class. Creates a copy of the provided source file in a temporary location. Properties Name Description File Gets the temporary file information. Methods Name Description Dispose() Disposes of the temporary file by attempting to delete it. ToString() Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.ToStringBuilder.-ctor.html": {
    "href": "api/PoeShared.Scaffolding.ToStringBuilder.-ctor.html",
    "title": "Constructor ToStringBuilder | EyeAuras Docs",
    "keywords": "Constructor ToStringBuilder ToStringBuilder(object) Declaration public ToStringBuilder(object owner) Parameters Type Name Description object owner"
  },
  "api/PoeShared.Scaffolding.ToStringBuilder.Append.html": {
    "href": "api/PoeShared.Scaffolding.ToStringBuilder.Append.html",
    "title": "Method Append | EyeAuras Docs",
    "keywords": "Method Append Append(string) Declaration public void Append(string value) Parameters Type Name Description string value"
  },
  "api/PoeShared.Scaffolding.ToStringBuilder.AppendParameter.html": {
    "href": "api/PoeShared.Scaffolding.ToStringBuilder.AppendParameter.html",
    "title": "Method AppendParameter | EyeAuras Docs",
    "keywords": "Method AppendParameter AppendParameter<T>(string, T) Declaration public void AppendParameter<T>(string parameterName, T value) Parameters Type Name Description string parameterName T value Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ToStringBuilder.AppendParameterIfNotDefault.html": {
    "href": "api/PoeShared.Scaffolding.ToStringBuilder.AppendParameterIfNotDefault.html",
    "title": "Method AppendParameterIfNotDefault | EyeAuras Docs",
    "keywords": "Method AppendParameterIfNotDefault AppendParameterIfNotDefault<T>(string, T) Declaration public void AppendParameterIfNotDefault<T>(string parameterName, T value) Parameters Type Name Description string parameterName T value Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.ToStringBuilder.ParametersToString.html": {
    "href": "api/PoeShared.Scaffolding.ToStringBuilder.ParametersToString.html",
    "title": "Method ParametersToString | EyeAuras Docs",
    "keywords": "Method ParametersToString ParametersToString() Declaration public string ParametersToString() Returns Type Description string"
  },
  "api/PoeShared.Scaffolding.ToStringBuilder.ToString.html": {
    "href": "api/PoeShared.Scaffolding.ToStringBuilder.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/PoeShared.Scaffolding.ToStringBuilder.WithParamsSeparator.html": {
    "href": "api/PoeShared.Scaffolding.ToStringBuilder.WithParamsSeparator.html",
    "title": "Method WithParamsSeparator | EyeAuras Docs",
    "keywords": "Method WithParamsSeparator WithParamsSeparator(string) Declaration public ToStringBuilder WithParamsSeparator(string paramsSeparator) Parameters Type Name Description string paramsSeparator Returns Type Description ToStringBuilder"
  },
  "api/PoeShared.Scaffolding.ToStringBuilder.html": {
    "href": "api/PoeShared.Scaffolding.ToStringBuilder.html",
    "title": "Class ToStringBuilder | EyeAuras Docs",
    "keywords": "Class ToStringBuilder Inheritance object ToStringBuilder Inherited Members object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public sealed class ToStringBuilder Constructors Name Description ToStringBuilder(object) Methods Name Description Append(string) AppendParameterIfNotDefault<T>(string, T) AppendParameter<T>(string, T) ParametersToString() ToString() WithParamsSeparator(string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Scaffolding.TypeExtensions.GetDefault.html": {
    "href": "api/PoeShared.Scaffolding.TypeExtensions.GetDefault.html",
    "title": "Method GetDefault | EyeAuras Docs",
    "keywords": "Method GetDefault GetDefault(Type) Declaration public static object GetDefault(this Type type) Parameters Type Name Description Type type Returns Type Description object"
  },
  "api/PoeShared.Scaffolding.TypeExtensions.PrepareLogger.html": {
    "href": "api/PoeShared.Scaffolding.TypeExtensions.PrepareLogger.html",
    "title": "Method PrepareLogger | EyeAuras Docs",
    "keywords": "Method PrepareLogger PrepareLogger(Type, string) Declaration public static IFluentLog PrepareLogger(this Type type, string name = null) Parameters Type Name Description Type type string name Returns Type Description IFluentLog"
  },
  "api/PoeShared.Scaffolding.TypeExtensions.html": {
    "href": "api/PoeShared.Scaffolding.TypeExtensions.html",
    "title": "Class TypeExtensions | EyeAuras Docs",
    "keywords": "Class TypeExtensions Inheritance object TypeExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class TypeExtensions Methods Name Description GetDefault(Type) PrepareLogger(Type, string)"
  },
  "api/PoeShared.Scaffolding.UnityContainerExtensions.AddNewExtensionIfNotExists.html": {
    "href": "api/PoeShared.Scaffolding.UnityContainerExtensions.AddNewExtensionIfNotExists.html",
    "title": "Method AddNewExtensionIfNotExists | EyeAuras Docs",
    "keywords": "Method AddNewExtensionIfNotExists AddNewExtensionIfNotExists<TExtension>(IUnityContainer) Declaration public static IUnityContainer AddNewExtensionIfNotExists<TExtension>(this IUnityContainer container) where TExtension : UnityContainerExtension Parameters Type Name Description IUnityContainer container Returns Type Description IUnityContainer Type Parameters Name Description TExtension"
  },
  "api/PoeShared.Scaffolding.UnityContainerExtensions.RegisterSingleton.html": {
    "href": "api/PoeShared.Scaffolding.UnityContainerExtensions.RegisterSingleton.html",
    "title": "Method RegisterSingleton | EyeAuras Docs",
    "keywords": "Method RegisterSingleton RegisterSingleton<TTo>(IUnityContainer, params Type[]) Declaration public static IUnityContainer RegisterSingleton<TTo>(this IUnityContainer instance, params Type[] types) Parameters Type Name Description IUnityContainer instance Type[] types Returns Type Description IUnityContainer Type Parameters Name Description TTo RegisterSingleton<TTo>(IUnityContainer, Func<IUnityContainer, object>) Declaration public static IUnityContainer RegisterSingleton<TTo>(this IUnityContainer instance, Func<IUnityContainer, object> func) Parameters Type Name Description IUnityContainer instance Func<IUnityContainer, object> func Returns Type Description IUnityContainer Type Parameters Name Description TTo RegisterSingleton<TTo>(IUnityContainer, string, Func<IUnityContainer, object>) Declaration public static IUnityContainer RegisterSingleton<TTo>(this IUnityContainer instance, string name, Func<IUnityContainer, object> func) Parameters Type Name Description IUnityContainer instance string name Func<IUnityContainer, object> func Returns Type Description IUnityContainer Type Parameters Name Description TTo"
  },
  "api/PoeShared.Scaffolding.UnityContainerExtensions.RegisterType.html": {
    "href": "api/PoeShared.Scaffolding.UnityContainerExtensions.RegisterType.html",
    "title": "Method RegisterType | EyeAuras Docs",
    "keywords": "Method RegisterType RegisterType<TTo>(IUnityContainer, params Type[]) Declaration public static IUnityContainer RegisterType<TTo>(this IUnityContainer instance, params Type[] types) Parameters Type Name Description IUnityContainer instance Type[] types Returns Type Description IUnityContainer Type Parameters Name Description TTo"
  },
  "api/PoeShared.Scaffolding.UnityContainerExtensions.ReplaceConfigMetadata.html": {
    "href": "api/PoeShared.Scaffolding.UnityContainerExtensions.ReplaceConfigMetadata.html",
    "title": "Method ReplaceConfigMetadata | EyeAuras Docs",
    "keywords": "Method ReplaceConfigMetadata ReplaceConfigMetadata<T>(IUnityContainer, string) Declaration public static IUnityContainer ReplaceConfigMetadata<T>(this IUnityContainer container, string sourceTypeName) Parameters Type Name Description IUnityContainer container string sourceTypeName Returns Type Description IUnityContainer Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.UnityContainerExtensions.html": {
    "href": "api/PoeShared.Scaffolding.UnityContainerExtensions.html",
    "title": "Class UnityContainerExtensions | EyeAuras Docs",
    "keywords": "Class UnityContainerExtensions Inheritance object UnityContainerExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class UnityContainerExtensions Methods Name Description AddNewExtensionIfNotExists<TExtension>(IUnityContainer) RegisterSingleton<TTo>(IUnityContainer, Func<IUnityContainer, object>) RegisterSingleton<TTo>(IUnityContainer, string, Func<IUnityContainer, object>) RegisterSingleton<TTo>(IUnityContainer, params Type[]) RegisterType<TTo>(IUnityContainer, params Type[]) ReplaceConfigMetadata<T>(IUnityContainer, string)"
  },
  "api/PoeShared.Scaffolding.VersionExtensions.ToNormalizedVersion.html": {
    "href": "api/PoeShared.Scaffolding.VersionExtensions.ToNormalizedVersion.html",
    "title": "Method ToNormalizedVersion | EyeAuras Docs",
    "keywords": "Method ToNormalizedVersion ToNormalizedVersion(Version) Declaration public static Version ToNormalizedVersion(this Version version) Parameters Type Name Description Version version Returns Type Description Version"
  },
  "api/PoeShared.Scaffolding.VersionExtensions.html": {
    "href": "api/PoeShared.Scaffolding.VersionExtensions.html",
    "title": "Class VersionExtensions | EyeAuras Docs",
    "keywords": "Class VersionExtensions Inheritance object VersionExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class VersionExtensions Methods Name Description ToNormalizedVersion(Version)"
  },
  "api/PoeShared.Scaffolding.WindowHandleExtensions.IsOwnWindow.html": {
    "href": "api/PoeShared.Scaffolding.WindowHandleExtensions.IsOwnWindow.html",
    "title": "Method IsOwnWindow | EyeAuras Docs",
    "keywords": "Method IsOwnWindow IsOwnWindow(IWindowHandle) Declaration public static bool IsOwnWindow(this IWindowHandle window) Parameters Type Name Description IWindowHandle window Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.WindowHandleExtensions.IsVisibleAndValid.html": {
    "href": "api/PoeShared.Scaffolding.WindowHandleExtensions.IsVisibleAndValid.html",
    "title": "Method IsVisibleAndValid | EyeAuras Docs",
    "keywords": "Method IsVisibleAndValid IsVisibleAndValid(IWindowHandle, bool) Checks Visibility, WS_CHILD, WS_EX_TOOLWINDOW and other properties to make sure that this window could be interacted with Declaration public static bool IsVisibleAndValid(this IWindowHandle windowHandle, bool excludeMinimized = false) Parameters Type Name Description IWindowHandle windowHandle bool excludeMinimized Returns Type Description bool"
  },
  "api/PoeShared.Scaffolding.WindowHandleExtensions.html": {
    "href": "api/PoeShared.Scaffolding.WindowHandleExtensions.html",
    "title": "Class WindowHandleExtensions | EyeAuras Docs",
    "keywords": "Class WindowHandleExtensions Inheritance object WindowHandleExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.Native.dll Syntax public static class WindowHandleExtensions Methods Name Description IsOwnWindow(IWindowHandle) IsVisibleAndValid(IWindowHandle, bool) Checks Visibility, WS_CHILD, WS_EX_TOOLWINDOW and other properties to make sure that this window could be interacted with"
  },
  "api/PoeShared.Scaffolding.WpfSizeExtensions.Scale.html": {
    "href": "api/PoeShared.Scaffolding.WpfSizeExtensions.Scale.html",
    "title": "Method Scale | EyeAuras Docs",
    "keywords": "Method Scale Scale(Size, double) Declaration public static Size Scale(this Size size, double factor) Parameters Type Name Description Size size double factor Returns Type Description Size Scale(Size, Point) Declaration public static Size Scale(this Size size, Point factor) Parameters Type Name Description Size size Point factor Returns Type Description Size Scale(Size, PointF) Declaration public static Size Scale(this Size size, PointF factor) Parameters Type Name Description Size size PointF factor Returns Type Description Size Scale(Size, double, double) Declaration public static Size Scale(this Size size, double factorX, double factorY) Parameters Type Name Description Size size double factorX double factorY Returns Type Description Size"
  },
  "api/PoeShared.Scaffolding.WpfSizeExtensions.html": {
    "href": "api/PoeShared.Scaffolding.WpfSizeExtensions.html",
    "title": "Class WpfSizeExtensions | EyeAuras Docs",
    "keywords": "Class WpfSizeExtensions Inheritance object WpfSizeExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.Native.dll Syntax public static class WpfSizeExtensions Methods Name Description Scale(Size, double) Scale(Size, double, double) Scale(Size, PointF) Scale(Size, Point)"
  },
  "api/PoeShared.Scaffolding.XDocumentExtensions.AddTo.html": {
    "href": "api/PoeShared.Scaffolding.XDocumentExtensions.AddTo.html",
    "title": "Method AddTo | EyeAuras Docs",
    "keywords": "Method AddTo AddTo<T>(T, XContainer) Declaration public static T AddTo<T>(this T element, XContainer parent) Parameters Type Name Description T element XContainer parent Returns Type Description T Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.XDocumentExtensions.WithAttribute.html": {
    "href": "api/PoeShared.Scaffolding.XDocumentExtensions.WithAttribute.html",
    "title": "Method WithAttribute | EyeAuras Docs",
    "keywords": "Method WithAttribute WithAttribute<T>(T, XName, string) Declaration public static T WithAttribute<T>(this T element, XName name, string value) where T : XElement Parameters Type Name Description T element XName name string value Returns Type Description T Type Parameters Name Description T"
  },
  "api/PoeShared.Scaffolding.XDocumentExtensions.html": {
    "href": "api/PoeShared.Scaffolding.XDocumentExtensions.html",
    "title": "Class XDocumentExtensions | EyeAuras Docs",
    "keywords": "Class XDocumentExtensions Inheritance object XDocumentExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class XDocumentExtensions Methods Name Description AddTo<T>(T, XContainer) WithAttribute<T>(T, XName, string)"
  },
  "api/PoeShared.Scaffolding.XmlExtensions.SetAttribute.html": {
    "href": "api/PoeShared.Scaffolding.XmlExtensions.SetAttribute.html",
    "title": "Method SetAttribute | EyeAuras Docs",
    "keywords": "Method SetAttribute SetAttribute(XPathNavigator, string, string, string) Declaration public static void SetAttribute(this XPathNavigator nav, string localName, string namespaceUri, string value) Parameters Type Name Description XPathNavigator nav string localName string namespaceUri string value"
  },
  "api/PoeShared.Scaffolding.XmlExtensions.html": {
    "href": "api/PoeShared.Scaffolding.XmlExtensions.html",
    "title": "Class XmlExtensions | EyeAuras Docs",
    "keywords": "Class XmlExtensions Inheritance object XmlExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Scaffolding Assembly: PoeShared.dll Syntax public static class XmlExtensions Methods Name Description SetAttribute(XPathNavigator, string, string, string)"
  },
  "api/PoeShared.Scaffolding.html": {
    "href": "api/PoeShared.Scaffolding.html",
    "title": "Namespace PoeShared.Scaffolding | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Scaffolding Classes AssemblyExtensions BenchmarkTimer BinaryExtensions ChangeSetExtensions CircularBuffer<T> Circular buffer. When writing to a full buffer: PushBack -> removes this[0] / Front() PushFront -> removes this[Size-1] / Back() this implementation is inspired by http://www.boost.org/doc/libs/1_53_0/libs/circular_buffer/doc/circular_buffer.html because I liked their interface. CircularSourceList<T> Not thread safe ! There is a bug in ChangeAwareList(?) that leads to ArgumentOutOfRange in some cases CliExtensions CloseableReactiveObject ComparableExtensions ComplexProgressTracker ConfigurableReactiveObjectWithProperties<TProperties> DateTimeUtils DictionaryExtensions DirectoryInfoExtensions DisposableExtensions DisposableReactiveRecord EnumExtensions EnumerableComparer<T> Compares two sequences. EnumerableExtensions EnumeratorExtensions ExceptionExtensions Fallback<T> FileInfoExtensions FileUtils GeometryExtensions GlobalIdProvider HierarchicalSourceCache<TObject, TKey> HierarchicalValue<TContainer, T> IntPtrExtensions InvalidStateException IpAddressExtensions KeyboardLayoutManagerExtensions LambdaComparer<T> LambdaEqualityComparer<T> LazyReactiveObject<T> LoggingChangeSetAdaptorBase LoggingChangeSetAdaptor<T, TKey> LoggingListChangeSetAdaptor<T> MappingEnumerator<T, TResult> MetricsExtensions NaturalStringComparer Implements a natural comparer for strings. NotifyPropertyChangedExtensions NumberExtensions ObjectExtensions ObjectReflectionExtensions ObservableCollectionAdaptorEx<T> ObservableCollectionEx<T> ObservableExtensions Observables OperationTimer PathUtils ProcessHelper ProcessUtils ProxyServiceProvider ReactiveObjectExtensions ReactiveObjectWithProperties<TProperties> ReactiveRecord SchedulerExtensions SecureStringExtensions Provides unsafe temporary operations on secured strings. SemaphoreSlimExtensions ServiceCollectionExtensions SourceCacheAccessor<TObject, TKey> SourceCacheEx<T, TKey> SourceCachesSynchronizer<TObject, TKey> Provides synchronization between two source lists. Changes made to one list will be reflected in the other and vice versa. NOTE: The same approach for SourceList does not work as it is not really possible to distinguish between some operations in multi-threaded environment. It will work MOST of the time, but for some combinations of operation this will generate invalid sequences. SourceListEx<T> Slightly extended version of SourceList that materializes collection changes using specified scheduler or Immediate if not provided StopwatchExtensions StreamExtensions StringExtensions StringUtils SynchronizedObservableCollectionEx<T> TaskExtensions TempFile Represents a temporary file that can be disposed of. ToStringBuilder TypeExtensions UnityContainerExtensions VersionExtensions WindowHandleExtensions WpfSizeExtensions XDocumentExtensions XmlExtensions Structs AnnotatedBoolean ProcessHelper.ProcessRunInfo PropertyAccessor<TValue> Interfaces ICloseController ICloseController<TValue> ICloseable ICloseable<T> ICommandWrapper IConfigurableReactiveObject<TProperties> IHierarchicalSourceCache<TObject, TKey> IObservableCacheEx<T, TKey> IObservableListEx<T> IReadOnlyObservableCollection<T> ISourceCacheEx<T, TKey> ISourceListEx<T> ISuspendable"
  },
  "api/PoeShared.Services.FileLock.-ctor.html": {
    "href": "api/PoeShared.Services.FileLock.-ctor.html",
    "title": "Constructor FileLock | EyeAuras Docs",
    "keywords": "Constructor FileLock FileLock(FileInfo) Declaration public FileLock(FileInfo lockFile) Parameters Type Name Description FileInfo lockFile FileLock(FileInfo, TimeSpan) Declaration public FileLock(FileInfo lockFile, TimeSpan timeout) Parameters Type Name Description FileInfo lockFile TimeSpan timeout"
  },
  "api/PoeShared.Services.FileLock.ExistedInitially.html": {
    "href": "api/PoeShared.Services.FileLock.ExistedInitially.html",
    "title": "Property ExistedInitially | EyeAuras Docs",
    "keywords": "Property ExistedInitially ExistedInitially Declaration public bool ExistedInitially { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.FileLock.Exists.html": {
    "href": "api/PoeShared.Services.FileLock.Exists.html",
    "title": "Property Exists | EyeAuras Docs",
    "keywords": "Property Exists Exists Declaration public bool Exists { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.FileLock.FormatToString.html": {
    "href": "api/PoeShared.Services.FileLock.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides DisposableReactiveObject.FormatToString(ToStringBuilder)"
  },
  "api/PoeShared.Services.FileLock.LockFile.html": {
    "href": "api/PoeShared.Services.FileLock.LockFile.html",
    "title": "Property LockFile | EyeAuras Docs",
    "keywords": "Property LockFile LockFile Declaration public FileInfo LockFile { get; } Property Value Type Description FileInfo"
  },
  "api/PoeShared.Services.FileLock.Timeout.html": {
    "href": "api/PoeShared.Services.FileLock.Timeout.html",
    "title": "Property Timeout | EyeAuras Docs",
    "keywords": "Property Timeout Timeout Declaration public TimeSpan Timeout { get; } Property Value Type Description TimeSpan"
  },
  "api/PoeShared.Services.FileLock.html": {
    "href": "api/PoeShared.Services.FileLock.html",
    "title": "Class FileLock | EyeAuras Docs",
    "keywords": "Class FileLock Inheritance object DisposableReactiveObject FileLock Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public sealed class FileLock : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Constructors Name Description FileLock(FileInfo) FileLock(FileInfo, TimeSpan) Properties Name Description ExistedInitially Exists LockFile Timeout Methods Name Description FormatToString(ToStringBuilder) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.IApplicationAccessor.Exit.html": {
    "href": "api/PoeShared.Services.IApplicationAccessor.Exit.html",
    "title": "Method Exit | EyeAuras Docs",
    "keywords": "Method Exit Exit() Declaration void Exit()"
  },
  "api/PoeShared.Services.IApplicationAccessor.IsElevated.html": {
    "href": "api/PoeShared.Services.IApplicationAccessor.IsElevated.html",
    "title": "Property IsElevated | EyeAuras Docs",
    "keywords": "Property IsElevated IsElevated Declaration bool IsElevated { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.IApplicationAccessor.IsExiting.html": {
    "href": "api/PoeShared.Services.IApplicationAccessor.IsExiting.html",
    "title": "Property IsExiting | EyeAuras Docs",
    "keywords": "Property IsExiting IsExiting Declaration bool IsExiting { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.IApplicationAccessor.IsLoaded.html": {
    "href": "api/PoeShared.Services.IApplicationAccessor.IsLoaded.html",
    "title": "Property IsLoaded | EyeAuras Docs",
    "keywords": "Property IsLoaded IsLoaded IsLoaded is set to true after main window is loaded Declaration bool IsLoaded { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.IApplicationAccessor.LastExitWasGraceful.html": {
    "href": "api/PoeShared.Services.IApplicationAccessor.LastExitWasGraceful.html",
    "title": "Property LastExitWasGraceful | EyeAuras Docs",
    "keywords": "Property LastExitWasGraceful LastExitWasGraceful Declaration bool LastExitWasGraceful { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.IApplicationAccessor.LastLoadWasSuccessful.html": {
    "href": "api/PoeShared.Services.IApplicationAccessor.LastLoadWasSuccessful.html",
    "title": "Property LastLoadWasSuccessful | EyeAuras Docs",
    "keywords": "Property LastLoadWasSuccessful LastLoadWasSuccessful Declaration bool LastLoadWasSuccessful { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.IApplicationAccessor.MainWindow.html": {
    "href": "api/PoeShared.Services.IApplicationAccessor.MainWindow.html",
    "title": "Property MainWindow | EyeAuras Docs",
    "keywords": "Property MainWindow MainWindow Declaration Window MainWindow { get; } Property Value Type Description Window"
  },
  "api/PoeShared.Services.IApplicationAccessor.ReportIsLoaded.html": {
    "href": "api/PoeShared.Services.IApplicationAccessor.ReportIsLoaded.html",
    "title": "Method ReportIsLoaded | EyeAuras Docs",
    "keywords": "Method ReportIsLoaded ReportIsLoaded() Declaration void ReportIsLoaded()"
  },
  "api/PoeShared.Services.IApplicationAccessor.RestartAs.html": {
    "href": "api/PoeShared.Services.IApplicationAccessor.RestartAs.html",
    "title": "Method RestartAs | EyeAuras Docs",
    "keywords": "Method RestartAs RestartAs(string, string, string) Declaration void RestartAs(string processPath, string arguments = null, string verb = null) Parameters Type Name Description string processPath string arguments string verb"
  },
  "api/PoeShared.Services.IApplicationAccessor.RestartAsAdmin.html": {
    "href": "api/PoeShared.Services.IApplicationAccessor.RestartAsAdmin.html",
    "title": "Method RestartAsAdmin | EyeAuras Docs",
    "keywords": "Method RestartAsAdmin RestartAsAdmin() Declaration void RestartAsAdmin()"
  },
  "api/PoeShared.Services.IApplicationAccessor.Terminate.html": {
    "href": "api/PoeShared.Services.IApplicationAccessor.Terminate.html",
    "title": "Method Terminate | EyeAuras Docs",
    "keywords": "Method Terminate Terminate(int) Terminates instantly Declaration void Terminate(int exitCode) Parameters Type Name Description int exitCode"
  },
  "api/PoeShared.Services.IApplicationAccessor.WhenExit.html": {
    "href": "api/PoeShared.Services.IApplicationAccessor.WhenExit.html",
    "title": "Property WhenExit | EyeAuras Docs",
    "keywords": "Property WhenExit WhenExit Happens only when Exit() is called, Terminate bypasses this Declaration IObservable<int> WhenExit { get; } Property Value Type Description IObservable<int>"
  },
  "api/PoeShared.Services.IApplicationAccessor.WhenTerminate.html": {
    "href": "api/PoeShared.Services.IApplicationAccessor.WhenTerminate.html",
    "title": "Property WhenTerminate | EyeAuras Docs",
    "keywords": "Property WhenTerminate WhenTerminate Declaration IObservable<int> WhenTerminate { get; } Property Value Type Description IObservable<int>"
  },
  "api/PoeShared.Services.IApplicationAccessor.html": {
    "href": "api/PoeShared.Services.IApplicationAccessor.html",
    "title": "Interface IApplicationAccessor | EyeAuras Docs",
    "keywords": "Interface IApplicationAccessor Inherited Members INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Services Assembly: PoeShared.Native.dll Syntax public interface IApplicationAccessor : INotifyPropertyChanged Properties Name Description IsElevated IsExiting IsLoaded IsLoaded is set to true after main window is loaded LastExitWasGraceful LastLoadWasSuccessful MainWindow WhenExit Happens only when Exit() is called, Terminate bypasses this WhenTerminate Methods Name Description Exit() ReportIsLoaded() RestartAs(string, string, string) RestartAsAdmin() Terminate(int) Terminates instantly Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.IAssemblyTracker.LoadedAssemblies.html": {
    "href": "api/PoeShared.Services.IAssemblyTracker.LoadedAssemblies.html",
    "title": "Property LoadedAssemblies | EyeAuras Docs",
    "keywords": "Property LoadedAssemblies LoadedAssemblies Declaration IObservableList<Assembly> LoadedAssemblies { get; } Property Value Type Description IObservableList<Assembly>"
  },
  "api/PoeShared.Services.IAssemblyTracker.WhenLoaded.html": {
    "href": "api/PoeShared.Services.IAssemblyTracker.WhenLoaded.html",
    "title": "Property WhenLoaded | EyeAuras Docs",
    "keywords": "Property WhenLoaded WhenLoaded Declaration IObservable<Assembly> WhenLoaded { get; } Property Value Type Description IObservable<Assembly>"
  },
  "api/PoeShared.Services.IAssemblyTracker.html": {
    "href": "api/PoeShared.Services.IAssemblyTracker.html",
    "title": "Interface IAssemblyTracker | EyeAuras Docs",
    "keywords": "Interface IAssemblyTracker Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public interface IAssemblyTracker Properties Name Description LoadedAssemblies WhenLoaded Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.IComparisonService.Compare.html": {
    "href": "api/PoeShared.Services.IComparisonService.Compare.html",
    "title": "Method Compare | EyeAuras Docs",
    "keywords": "Method Compare Compare(object, object) Declaration ComparisonResult Compare(object first, object second) Parameters Type Name Description object first object second Returns Type Description ComparisonResult"
  },
  "api/PoeShared.Services.IComparisonService.html": {
    "href": "api/PoeShared.Services.IComparisonService.html",
    "title": "Interface IComparisonService | EyeAuras Docs",
    "keywords": "Interface IComparisonService Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public interface IComparisonService Methods Name Description Compare(object, object) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.ICredentialManager.DeleteCredential.html": {
    "href": "api/PoeShared.Services.ICredentialManager.DeleteCredential.html",
    "title": "Method DeleteCredential | EyeAuras Docs",
    "keywords": "Method DeleteCredential DeleteCredential(string) Declaration void DeleteCredential(string applicationName) Parameters Type Name Description string applicationName"
  },
  "api/PoeShared.Services.ICredentialManager.EnumerateCredentials.html": {
    "href": "api/PoeShared.Services.ICredentialManager.EnumerateCredentials.html",
    "title": "Method EnumerateCredentials | EyeAuras Docs",
    "keywords": "Method EnumerateCredentials EnumerateCredentials(string) Declaration IReadOnlyList<Credential> EnumerateCredentials(string filter) Parameters Type Name Description string filter Returns Type Description IReadOnlyList<Credential> EnumerateCredentials() Declaration IReadOnlyList<Credential> EnumerateCredentials() Returns Type Description IReadOnlyList<Credential>"
  },
  "api/PoeShared.Services.ICredentialManager.PromptForCredentials.html": {
    "href": "api/PoeShared.Services.ICredentialManager.PromptForCredentials.html",
    "title": "Method PromptForCredentials | EyeAuras Docs",
    "keywords": "Method PromptForCredentials PromptForCredentials(nint, string, string, string, CredentialSaveOption) Declaration CredentialResult PromptForCredentials(nint owner = 0, string messageText = null, string captionText = null, string userName = null, CredentialSaveOption saveCredential = 0) Parameters Type Name Description nint owner string messageText string captionText string userName CredentialSaveOption saveCredential Returns Type Description CredentialResult"
  },
  "api/PoeShared.Services.ICredentialManager.PromptForCredentialsConsole.html": {
    "href": "api/PoeShared.Services.ICredentialManager.PromptForCredentialsConsole.html",
    "title": "Method PromptForCredentialsConsole | EyeAuras Docs",
    "keywords": "Method PromptForCredentialsConsole PromptForCredentialsConsole(string, string, CredentialSaveOption) Declaration CredentialResult PromptForCredentialsConsole(string target, string userName = null, CredentialSaveOption saveCredential = 0) Parameters Type Name Description string target string userName CredentialSaveOption saveCredential Returns Type Description CredentialResult"
  },
  "api/PoeShared.Services.ICredentialManager.ReadCredential.html": {
    "href": "api/PoeShared.Services.ICredentialManager.ReadCredential.html",
    "title": "Method ReadCredential | EyeAuras Docs",
    "keywords": "Method ReadCredential ReadCredential(string) Declaration Credential ReadCredential(string applicationName) Parameters Type Name Description string applicationName Returns Type Description Credential"
  },
  "api/PoeShared.Services.ICredentialManager.WriteCredential.html": {
    "href": "api/PoeShared.Services.ICredentialManager.WriteCredential.html",
    "title": "Method WriteCredential | EyeAuras Docs",
    "keywords": "Method WriteCredential WriteCredential(string, string, string, string, CredentialPersistence) Declaration void WriteCredential(string applicationName, string userName, string secret, string comment, CredentialPersistence persistence) Parameters Type Name Description string applicationName string userName string secret string comment CredentialPersistence persistence WriteCredential(string, string, string, CredentialPersistence) Declaration void WriteCredential(string applicationName, string userName, string secret, CredentialPersistence persistence) Parameters Type Name Description string applicationName string userName string secret CredentialPersistence persistence"
  },
  "api/PoeShared.Services.ICredentialManager.html": {
    "href": "api/PoeShared.Services.ICredentialManager.html",
    "title": "Interface ICredentialManager | EyeAuras Docs",
    "keywords": "Interface ICredentialManager Namespace: PoeShared.Services Assembly: PoeShared.Native.dll Syntax public interface ICredentialManager Methods Name Description DeleteCredential(string) EnumerateCredentials() EnumerateCredentials(string) PromptForCredentials(nint, string, string, string, CredentialSaveOption) PromptForCredentialsConsole(string, string, CredentialSaveOption) ReadCredential(string) WriteCredential(string, string, string, CredentialPersistence) WriteCredential(string, string, string, string, CredentialPersistence) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.IFolderCleanerService.AddDirectory.html": {
    "href": "api/PoeShared.Services.IFolderCleanerService.AddDirectory.html",
    "title": "Method AddDirectory | EyeAuras Docs",
    "keywords": "Method AddDirectory AddDirectory(DirectoryInfo) Declaration IDisposable AddDirectory(DirectoryInfo directoryInfo) Parameters Type Name Description DirectoryInfo directoryInfo Returns Type Description IDisposable"
  },
  "api/PoeShared.Services.IFolderCleanerService.CleanupTimeout.html": {
    "href": "api/PoeShared.Services.IFolderCleanerService.CleanupTimeout.html",
    "title": "Property CleanupTimeout | EyeAuras Docs",
    "keywords": "Property CleanupTimeout CleanupTimeout Declaration TimeSpan? CleanupTimeout { get; set; } Property Value Type Description TimeSpan?"
  },
  "api/PoeShared.Services.IFolderCleanerService.FileTimeToLive.html": {
    "href": "api/PoeShared.Services.IFolderCleanerService.FileTimeToLive.html",
    "title": "Property FileTimeToLive | EyeAuras Docs",
    "keywords": "Property FileTimeToLive FileTimeToLive Declaration TimeSpan? FileTimeToLive { get; set; } Property Value Type Description TimeSpan?"
  },
  "api/PoeShared.Services.IFolderCleanerService.html": {
    "href": "api/PoeShared.Services.IFolderCleanerService.html",
    "title": "Interface IFolderCleanerService | EyeAuras Docs",
    "keywords": "Interface IFolderCleanerService Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public interface IFolderCleanerService Properties Name Description CleanupTimeout FileTimeToLive Methods Name Description AddDirectory(DirectoryInfo) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.IKeyboardLayoutManager.Activate.html": {
    "href": "api/PoeShared.Services.IKeyboardLayoutManager.Activate.html",
    "title": "Method Activate | EyeAuras Docs",
    "keywords": "Method Activate Activate(KeyboardLayout) Activates layout for entire system using ActivateKeyboardLayout API. Has some bugs when trying to executed this from non-ui thread (STA or message-pump?) Declaration void Activate(KeyboardLayout layout) Parameters Type Name Description KeyboardLayout layout"
  },
  "api/PoeShared.Services.IKeyboardLayoutManager.ActivateForWindow.html": {
    "href": "api/PoeShared.Services.IKeyboardLayoutManager.ActivateForWindow.html",
    "title": "Method ActivateForWindow | EyeAuras Docs",
    "keywords": "Method ActivateForWindow ActivateForWindow(KeyboardLayout, IWindowHandle) Works much more reliable than ActivateKeyboardLayout Declaration void ActivateForWindow(KeyboardLayout layout, IWindowHandle targetWindow) Parameters Type Name Description KeyboardLayout layout IWindowHandle targetWindow"
  },
  "api/PoeShared.Services.IKeyboardLayoutManager.GetCurrent.html": {
    "href": "api/PoeShared.Services.IKeyboardLayoutManager.GetCurrent.html",
    "title": "Method GetCurrent | EyeAuras Docs",
    "keywords": "Method GetCurrent GetCurrent() Uses GetKeyboardLayout(), must be called from thread with message pump, otherwise it won't work as expected Declaration KeyboardLayout GetCurrent() Returns Type Description KeyboardLayout GetCurrent(IWindowHandle) Uses GetKeyboardLayout for specified window thread, must be called from thread with message pump, otherwise it won't work as expected Declaration KeyboardLayout GetCurrent(IWindowHandle targetWindow) Parameters Type Name Description IWindowHandle targetWindow Returns Type Description KeyboardLayout"
  },
  "api/PoeShared.Services.IKeyboardLayoutManager.KnownLayouts.html": {
    "href": "api/PoeShared.Services.IKeyboardLayoutManager.KnownLayouts.html",
    "title": "Property KnownLayouts | EyeAuras Docs",
    "keywords": "Property KnownLayouts KnownLayouts Declaration ReadOnlyObservableCollection<KeyboardLayout> KnownLayouts { get; } Property Value Type Description ReadOnlyObservableCollection<KeyboardLayout>"
  },
  "api/PoeShared.Services.IKeyboardLayoutManager.ResolveByCulture.html": {
    "href": "api/PoeShared.Services.IKeyboardLayoutManager.ResolveByCulture.html",
    "title": "Method ResolveByCulture | EyeAuras Docs",
    "keywords": "Method ResolveByCulture ResolveByCulture(CultureInfo) Resolved layout by looking for layout with specific culture(e.g. en-US, en-UK) or more generic if specific was not found (e.g. en-US will match en-GB) Declaration KeyboardLayout ResolveByCulture(CultureInfo cultureInfo) Parameters Type Name Description CultureInfo cultureInfo Returns Type Description KeyboardLayout"
  },
  "api/PoeShared.Services.IKeyboardLayoutManager.ResolveByLayoutName.html": {
    "href": "api/PoeShared.Services.IKeyboardLayoutManager.ResolveByLayoutName.html",
    "title": "Method ResolveByLayoutName | EyeAuras Docs",
    "keywords": "Method ResolveByLayoutName ResolveByLayoutName(string) LayoutId (NOT NAME), e.g. Russian = 00000419, English = 00000409 Declaration KeyboardLayout ResolveByLayoutName(string keyboardLayoutName) Parameters Type Name Description string keyboardLayoutName Returns Type Description KeyboardLayout"
  },
  "api/PoeShared.Services.IKeyboardLayoutManager.html": {
    "href": "api/PoeShared.Services.IKeyboardLayoutManager.html",
    "title": "Interface IKeyboardLayoutManager | EyeAuras Docs",
    "keywords": "Interface IKeyboardLayoutManager Namespace: PoeShared.Services Assembly: PoeShared.Native.dll Syntax public interface IKeyboardLayoutManager Properties Name Description KnownLayouts Methods Name Description Activate(KeyboardLayout) Activates layout for entire system using ActivateKeyboardLayout API. Has some bugs when trying to executed this from non-ui thread (STA or message-pump?) ActivateForWindow(KeyboardLayout, IWindowHandle) Works much more reliable than ActivateKeyboardLayout GetCurrent() Uses GetKeyboardLayout(), must be called from thread with message pump, otherwise it won't work as expected GetCurrent(IWindowHandle) Uses GetKeyboardLayout for specified window thread, must be called from thread with message pump, otherwise it won't work as expected ResolveByCulture(CultureInfo) Resolved layout by looking for layout with specific culture(e.g. en-US, en-UK) or more generic if specific was not found (e.g. en-US will match en-GB) ResolveByLayoutName(string) LayoutId (NOT NAME), e.g. Russian = 00000419, English = 00000409 Extension Methods KeyboardLayoutManagerExtensions.ChangeLayout(IKeyboardLayoutManager, KeyboardLayout, IWindowHandle) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.IMemoryPool.Rent.html": {
    "href": "api/PoeShared.Services.IMemoryPool.Rent.html",
    "title": "Method Rent | EyeAuras Docs",
    "keywords": "Method Rent Rent(int) Declaration byte[] Rent(int minimumLength) Parameters Type Name Description int minimumLength Returns Type Description byte[]"
  },
  "api/PoeShared.Services.IMemoryPool.RentPinnedBuffer.html": {
    "href": "api/PoeShared.Services.IMemoryPool.RentPinnedBuffer.html",
    "title": "Method RentPinnedBuffer | EyeAuras Docs",
    "keywords": "Method RentPinnedBuffer RentPinnedBuffer(int) Declaration PinnedMemoryBuffer RentPinnedBuffer(int minimumLength) Parameters Type Name Description int minimumLength Returns Type Description PinnedMemoryBuffer"
  },
  "api/PoeShared.Services.IMemoryPool.Return.html": {
    "href": "api/PoeShared.Services.IMemoryPool.Return.html",
    "title": "Method Return | EyeAuras Docs",
    "keywords": "Method Return Return(byte[]) Returns array to memory pool, DOES NOT CLEAR ARRAY Declaration void Return(byte[] array) Parameters Type Name Description byte[] array"
  },
  "api/PoeShared.Services.IMemoryPool.html": {
    "href": "api/PoeShared.Services.IMemoryPool.html",
    "title": "Interface IMemoryPool | EyeAuras Docs",
    "keywords": "Interface IMemoryPool Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public interface IMemoryPool Methods Name Description Rent(int) RentPinnedBuffer(int) Return(byte[]) Returns array to memory pool, DOES NOT CLEAR ARRAY Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.ISevenZipWrapper.AddToArchive.html": {
    "href": "api/PoeShared.Services.ISevenZipWrapper.AddToArchive.html",
    "title": "Method AddToArchive | EyeAuras Docs",
    "keywords": "Method AddToArchive AddToArchive(FileInfo, IReadOnlyList<FileInfo>) Declaration void AddToArchive(FileInfo outputFileName, IReadOnlyList<FileInfo> filesToAdd) Parameters Type Name Description FileInfo outputFileName IReadOnlyList<FileInfo> filesToAdd"
  },
  "api/PoeShared.Services.ISevenZipWrapper.ExtractArchive.html": {
    "href": "api/PoeShared.Services.ISevenZipWrapper.ExtractArchive.html",
    "title": "Method ExtractArchive | EyeAuras Docs",
    "keywords": "Method ExtractArchive ExtractArchive(FileInfo, DirectoryInfo) Declaration void ExtractArchive(FileInfo inputFileName, DirectoryInfo outputDirectory) Parameters Type Name Description FileInfo inputFileName DirectoryInfo outputDirectory ExtractArchive(SevenZipExtractArguments) Declaration void ExtractArchive(SevenZipExtractArguments arguments) Parameters Type Name Description SevenZipExtractArguments arguments"
  },
  "api/PoeShared.Services.ISevenZipWrapper.html": {
    "href": "api/PoeShared.Services.ISevenZipWrapper.html",
    "title": "Interface ISevenZipWrapper | EyeAuras Docs",
    "keywords": "Interface ISevenZipWrapper Namespace: PoeShared.Services Assembly: PoeShared.Native.dll Syntax public interface ISevenZipWrapper Methods Name Description AddToArchive(FileInfo, IReadOnlyList<FileInfo>) ExtractArchive(SevenZipExtractArguments) ExtractArchive(FileInfo, DirectoryInfo) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.ISharedResource.AddResource.html": {
    "href": "api/PoeShared.Services.ISharedResource.AddResource.html",
    "title": "Method AddResource | EyeAuras Docs",
    "keywords": "Method AddResource AddResource(IDisposable) Declaration void AddResource(IDisposable resource) Parameters Type Name Description IDisposable resource AddResource(Action) Declaration void AddResource(Action disposeAction) Parameters Type Name Description Action disposeAction"
  },
  "api/PoeShared.Services.ISharedResource.IsDisposed.html": {
    "href": "api/PoeShared.Services.ISharedResource.IsDisposed.html",
    "title": "Property IsDisposed | EyeAuras Docs",
    "keywords": "Property IsDisposed IsDisposed Declaration bool IsDisposed { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.ISharedResource.IsReadLockHeld.html": {
    "href": "api/PoeShared.Services.ISharedResource.IsReadLockHeld.html",
    "title": "Property IsReadLockHeld | EyeAuras Docs",
    "keywords": "Property IsReadLockHeld IsReadLockHeld Declaration bool IsReadLockHeld { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.ISharedResource.IsWriteLockHeld.html": {
    "href": "api/PoeShared.Services.ISharedResource.IsWriteLockHeld.html",
    "title": "Property IsWriteLockHeld | EyeAuras Docs",
    "keywords": "Property IsWriteLockHeld IsWriteLockHeld Declaration bool IsWriteLockHeld { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.ISharedResource.RefCount.html": {
    "href": "api/PoeShared.Services.ISharedResource.RefCount.html",
    "title": "Property RefCount | EyeAuras Docs",
    "keywords": "Property RefCount RefCount Declaration long RefCount { get; } Property Value Type Description long"
  },
  "api/PoeShared.Services.ISharedResource.RentReadLock.html": {
    "href": "api/PoeShared.Services.ISharedResource.RentReadLock.html",
    "title": "Method RentReadLock | EyeAuras Docs",
    "keywords": "Method RentReadLock RentReadLock() Declaration IDisposable RentReadLock() Returns Type Description IDisposable"
  },
  "api/PoeShared.Services.ISharedResource.RentWriteLock.html": {
    "href": "api/PoeShared.Services.ISharedResource.RentWriteLock.html",
    "title": "Method RentWriteLock | EyeAuras Docs",
    "keywords": "Method RentWriteLock RentWriteLock() Declaration IDisposable RentWriteLock() Returns Type Description IDisposable"
  },
  "api/PoeShared.Services.ISharedResource.TryRent.html": {
    "href": "api/PoeShared.Services.ISharedResource.TryRent.html",
    "title": "Method TryRent | EyeAuras Docs",
    "keywords": "Method TryRent TryRent() Declaration bool TryRent() Returns Type Description bool"
  },
  "api/PoeShared.Services.ISharedResource.html": {
    "href": "api/PoeShared.Services.ISharedResource.html",
    "title": "Interface ISharedResource | EyeAuras Docs",
    "keywords": "Interface ISharedResource Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public interface ISharedResource : IDisposable, INotifyPropertyChanged Properties Name Description IsDisposed IsReadLockHeld IsWriteLockHeld RefCount Methods Name Description AddResource(Action) AddResource(IDisposable) RentReadLock() RentWriteLock() TryRent() Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.ISharedResourceLatch.IsBusy.html": {
    "href": "api/PoeShared.Services.ISharedResourceLatch.IsBusy.html",
    "title": "Property IsBusy | EyeAuras Docs",
    "keywords": "Property IsBusy IsBusy Declaration bool IsBusy { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.ISharedResourceLatch.Name.html": {
    "href": "api/PoeShared.Services.ISharedResourceLatch.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration string Name { get; } Property Value Type Description string"
  },
  "api/PoeShared.Services.ISharedResourceLatch.Rent.html": {
    "href": "api/PoeShared.Services.ISharedResourceLatch.Rent.html",
    "title": "Method Rent | EyeAuras Docs",
    "keywords": "Method Rent Rent() Declaration IDisposable Rent() Returns Type Description IDisposable"
  },
  "api/PoeShared.Services.ISharedResourceLatch.html": {
    "href": "api/PoeShared.Services.ISharedResourceLatch.html",
    "title": "Interface ISharedResourceLatch | EyeAuras Docs",
    "keywords": "Interface ISharedResourceLatch Inherited Members IDisposable.Dispose() INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public interface ISharedResourceLatch : IDisposable, INotifyPropertyChanged Properties Name Description IsBusy Name Methods Name Description Rent() Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.IStartupManager.IsReady.html": {
    "href": "api/PoeShared.Services.IStartupManager.IsReady.html",
    "title": "Property IsReady | EyeAuras Docs",
    "keywords": "Property IsReady IsReady Declaration bool IsReady { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.IStartupManager.IsRegistered.html": {
    "href": "api/PoeShared.Services.IStartupManager.IsRegistered.html",
    "title": "Property IsRegistered | EyeAuras Docs",
    "keywords": "Property IsRegistered IsRegistered Declaration bool IsRegistered { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.IStartupManager.Register.html": {
    "href": "api/PoeShared.Services.IStartupManager.Register.html",
    "title": "Method Register | EyeAuras Docs",
    "keywords": "Method Register Register() Declaration bool Register() Returns Type Description bool"
  },
  "api/PoeShared.Services.IStartupManager.Unregister.html": {
    "href": "api/PoeShared.Services.IStartupManager.Unregister.html",
    "title": "Method Unregister | EyeAuras Docs",
    "keywords": "Method Unregister Unregister() Declaration bool Unregister() Returns Type Description bool"
  },
  "api/PoeShared.Services.IStartupManager.html": {
    "href": "api/PoeShared.Services.IStartupManager.html",
    "title": "Interface IStartupManager | EyeAuras Docs",
    "keywords": "Interface IStartupManager Inherited Members INotifyPropertyChanged.PropertyChanged Namespace: PoeShared.Services Assembly: PoeShared.Native.dll Syntax public interface IStartupManager : INotifyPropertyChanged Properties Name Description IsReady IsRegistered Methods Name Description Register() Unregister() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.IUniqueIdGenerator.Next.html": {
    "href": "api/PoeShared.Services.IUniqueIdGenerator.Next.html",
    "title": "Method Next | EyeAuras Docs",
    "keywords": "Method Next Next() Declaration string Next() Returns Type Description string Next(string) Declaration string Next(string prefix) Parameters Type Name Description string prefix Returns Type Description string"
  },
  "api/PoeShared.Services.IUniqueIdGenerator.html": {
    "href": "api/PoeShared.Services.IUniqueIdGenerator.html",
    "title": "Interface IUniqueIdGenerator | EyeAuras Docs",
    "keywords": "Interface IUniqueIdGenerator Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public interface IUniqueIdGenerator Methods Name Description Next() Next(string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.KeyboardLayout.-Clone--.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public KeyboardLayout <Clone>$() Returns Type Description KeyboardLayout"
  },
  "api/PoeShared.Services.KeyboardLayout.-ctor.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.-ctor.html",
    "title": "Constructor KeyboardLayout | EyeAuras Docs",
    "keywords": "Constructor KeyboardLayout KeyboardLayout(InputLanguage) Declaration public KeyboardLayout(InputLanguage inputLanguage) Parameters Type Name Description InputLanguage inputLanguage"
  },
  "api/PoeShared.Services.KeyboardLayout.Culture.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.Culture.html",
    "title": "Property Culture | EyeAuras Docs",
    "keywords": "Property Culture Culture Declaration public CultureInfo Culture { get; } Property Value Type Description CultureInfo"
  },
  "api/PoeShared.Services.KeyboardLayout.Equals.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(KeyboardLayout?) Declaration public bool Equals(KeyboardLayout? other) Parameters Type Name Description KeyboardLayout other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/PoeShared.Services.KeyboardLayout.GetHashCode.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/PoeShared.Services.KeyboardLayout.Handle.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.Handle.html",
    "title": "Property Handle | EyeAuras Docs",
    "keywords": "Property Handle Handle Declaration public nint Handle { get; } Property Value Type Description nint"
  },
  "api/PoeShared.Services.KeyboardLayout.InputLanguage.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.InputLanguage.html",
    "title": "Property InputLanguage | EyeAuras Docs",
    "keywords": "Property InputLanguage InputLanguage Declaration public InputLanguage InputLanguage { get; } Property Value Type Description InputLanguage"
  },
  "api/PoeShared.Services.KeyboardLayout.IsValid.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.IsValid.html",
    "title": "Property IsValid | EyeAuras Docs",
    "keywords": "Property IsValid IsValid Declaration public bool IsValid { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.KeyboardLayout.LCID.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.LCID.html",
    "title": "Property LCID | EyeAuras Docs",
    "keywords": "Property LCID LCID Declaration public ushort LCID { get; } Property Value Type Description ushort"
  },
  "api/PoeShared.Services.KeyboardLayout.LayoutName.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.LayoutName.html",
    "title": "Property LayoutName | EyeAuras Docs",
    "keywords": "Property LayoutName LayoutName Declaration public string LayoutName { get; } Property Value Type Description string"
  },
  "api/PoeShared.Services.KeyboardLayout.PrimaryLanguageId.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.PrimaryLanguageId.html",
    "title": "Property PrimaryLanguageId | EyeAuras Docs",
    "keywords": "Property PrimaryLanguageId PrimaryLanguageId Declaration public byte PrimaryLanguageId { get; } Property Value Type Description byte"
  },
  "api/PoeShared.Services.KeyboardLayout.SubLanguageId.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.SubLanguageId.html",
    "title": "Property SubLanguageId | EyeAuras Docs",
    "keywords": "Property SubLanguageId SubLanguageId Declaration public byte SubLanguageId { get; } Property Value Type Description byte"
  },
  "api/PoeShared.Services.KeyboardLayout.ToString.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/PoeShared.Services.KeyboardLayout.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.html",
    "title": "Class KeyboardLayout | EyeAuras Docs",
    "keywords": "Class KeyboardLayout Inheritance object KeyboardLayout Implements IEquatable<KeyboardLayout> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Services Assembly: PoeShared.Native.dll Syntax public sealed record KeyboardLayout : IEquatable<KeyboardLayout> Constructors Name Description KeyboardLayout(InputLanguage) Properties Name Description Culture Handle InputLanguage IsValid LCID LayoutName PrimaryLanguageId SubLanguageId Methods Name Description Equals(KeyboardLayout?) Equals(object?) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(KeyboardLayout?, KeyboardLayout?) operator !=(KeyboardLayout?, KeyboardLayout?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.KeyboardLayout.op_Equality.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(KeyboardLayout?, KeyboardLayout?) Declaration public static bool operator ==(KeyboardLayout? left, KeyboardLayout? right) Parameters Type Name Description KeyboardLayout left KeyboardLayout right Returns Type Description bool"
  },
  "api/PoeShared.Services.KeyboardLayout.op_Inequality.html": {
    "href": "api/PoeShared.Services.KeyboardLayout.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(KeyboardLayout?, KeyboardLayout?) Declaration public static bool operator !=(KeyboardLayout? left, KeyboardLayout? right) Parameters Type Name Description KeyboardLayout left KeyboardLayout right Returns Type Description bool"
  },
  "api/PoeShared.Services.MemoryPool.Rent.html": {
    "href": "api/PoeShared.Services.MemoryPool.Rent.html",
    "title": "Method Rent | EyeAuras Docs",
    "keywords": "Method Rent Rent(int) Declaration public byte[] Rent(int minimumLength) Parameters Type Name Description int minimumLength Returns Type Description byte[] Implements IMemoryPool.Rent(int)"
  },
  "api/PoeShared.Services.MemoryPool.RentPinnedBuffer.html": {
    "href": "api/PoeShared.Services.MemoryPool.RentPinnedBuffer.html",
    "title": "Method RentPinnedBuffer | EyeAuras Docs",
    "keywords": "Method RentPinnedBuffer RentPinnedBuffer(int) Declaration public PinnedMemoryBuffer RentPinnedBuffer(int minimumLength) Parameters Type Name Description int minimumLength Returns Type Description PinnedMemoryBuffer Implements IMemoryPool.RentPinnedBuffer(int)"
  },
  "api/PoeShared.Services.MemoryPool.Return.html": {
    "href": "api/PoeShared.Services.MemoryPool.Return.html",
    "title": "Method Return | EyeAuras Docs",
    "keywords": "Method Return Return(byte[]) Returns array to memory pool, DOES NOT CLEAR ARRAY Declaration public void Return(byte[] array) Parameters Type Name Description byte[] array Implements IMemoryPool.Return(byte[])"
  },
  "api/PoeShared.Services.MemoryPool.Shared.html": {
    "href": "api/PoeShared.Services.MemoryPool.Shared.html",
    "title": "Property Shared | EyeAuras Docs",
    "keywords": "Property Shared Shared Declaration public static IMemoryPool Shared { get; } Property Value Type Description IMemoryPool"
  },
  "api/PoeShared.Services.MemoryPool.html": {
    "href": "api/PoeShared.Services.MemoryPool.html",
    "title": "Class MemoryPool | EyeAuras Docs",
    "keywords": "Class MemoryPool Inheritance object MemoryPool Implements IMemoryPool Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public sealed class MemoryPool : IMemoryPool Properties Name Description Shared Methods Name Description Rent(int) RentPinnedBuffer(int) Return(byte[]) Returns array to memory pool, DOES NOT CLEAR ARRAY Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.NamedLock.-ctor.html": {
    "href": "api/PoeShared.Services.NamedLock.-ctor.html",
    "title": "Constructor NamedLock | EyeAuras Docs",
    "keywords": "Constructor NamedLock NamedLock(string) Declaration public NamedLock(string name) Parameters Type Name Description string name"
  },
  "api/PoeShared.Services.NamedLock.EnableLogging.html": {
    "href": "api/PoeShared.Services.NamedLock.EnableLogging.html",
    "title": "Property EnableLogging | EyeAuras Docs",
    "keywords": "Property EnableLogging EnableLogging Declaration public bool EnableLogging { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.NamedLock.Enter.html": {
    "href": "api/PoeShared.Services.NamedLock.Enter.html",
    "title": "Method Enter | EyeAuras Docs",
    "keywords": "Method Enter Enter(TimeSpan) Declaration public IDisposable Enter(TimeSpan timeout) Parameters Type Name Description TimeSpan timeout Returns Type Description IDisposable Enter() Declaration public IDisposable Enter() Returns Type Description IDisposable"
  },
  "api/PoeShared.Services.NamedLock.Gate.html": {
    "href": "api/PoeShared.Services.NamedLock.Gate.html",
    "title": "Property Gate | EyeAuras Docs",
    "keywords": "Property Gate Gate Declaration public object Gate { get; } Property Value Type Description object"
  },
  "api/PoeShared.Services.NamedLock.IsEntered.html": {
    "href": "api/PoeShared.Services.NamedLock.IsEntered.html",
    "title": "Property IsEntered | EyeAuras Docs",
    "keywords": "Property IsEntered IsEntered Declaration public bool IsEntered { get; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.NamedLock.RecordStackTraces.html": {
    "href": "api/PoeShared.Services.NamedLock.RecordStackTraces.html",
    "title": "Property RecordStackTraces | EyeAuras Docs",
    "keywords": "Property RecordStackTraces RecordStackTraces Declaration public bool RecordStackTraces { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.NamedLock.ToString.html": {
    "href": "api/PoeShared.Services.NamedLock.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/PoeShared.Services.NamedLock.html": {
    "href": "api/PoeShared.Services.NamedLock.html",
    "title": "Class NamedLock | EyeAuras Docs",
    "keywords": "Class NamedLock Class that implements locking with timeout and logging of locked threads Logging is enabled only in debug configuration due to huge performance input Inheritance object NamedLock Inherited Members object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public sealed class NamedLock Constructors Name Description NamedLock(string) Properties Name Description EnableLogging Gate IsEntered RecordStackTraces Methods Name Description Enter() Enter(TimeSpan) ToString() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.PinnedMemoryBuffer.-ctor.html": {
    "href": "api/PoeShared.Services.PinnedMemoryBuffer.-ctor.html",
    "title": "Constructor PinnedMemoryBuffer | EyeAuras Docs",
    "keywords": "Constructor PinnedMemoryBuffer PinnedMemoryBuffer(IMemoryPool, int) Declaration public PinnedMemoryBuffer(IMemoryPool memoryPool, int bufferSize) Parameters Type Name Description IMemoryPool memoryPool int bufferSize"
  },
  "api/PoeShared.Services.PinnedMemoryBuffer.Anchors.html": {
    "href": "api/PoeShared.Services.PinnedMemoryBuffer.Anchors.html",
    "title": "Property Anchors | EyeAuras Docs",
    "keywords": "Property Anchors Anchors Declaration public CompositeDisposable Anchors { get; } Property Value Type Description CompositeDisposable"
  },
  "api/PoeShared.Services.PinnedMemoryBuffer.Dispose.html": {
    "href": "api/PoeShared.Services.PinnedMemoryBuffer.Dispose.html",
    "title": "Method Dispose | EyeAuras Docs",
    "keywords": "Method Dispose Dispose() Declaration public void Dispose() Implements IDisposable.Dispose()"
  },
  "api/PoeShared.Services.PinnedMemoryBuffer.Pointer.html": {
    "href": "api/PoeShared.Services.PinnedMemoryBuffer.Pointer.html",
    "title": "Property Pointer | EyeAuras Docs",
    "keywords": "Property Pointer Pointer Declaration public IntPtr Pointer { get; } Property Value Type Description nint"
  },
  "api/PoeShared.Services.PinnedMemoryBuffer.html": {
    "href": "api/PoeShared.Services.PinnedMemoryBuffer.html",
    "title": "Struct PinnedMemoryBuffer | EyeAuras Docs",
    "keywords": "Struct PinnedMemoryBuffer Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public readonly struct PinnedMemoryBuffer : IDisposable Constructors Name Description PinnedMemoryBuffer(IMemoryPool, int) Properties Name Description Anchors Pointer Methods Name Description Dispose() Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.ResourceChooser-1.-ctor.html": {
    "href": "api/PoeShared.Services.ResourceChooser-1.-ctor.html",
    "title": "Constructor ResourceChooser | EyeAuras Docs",
    "keywords": "Constructor ResourceChooser ResourceChooser(IEnumerable<T>) Declaration public ResourceChooser(IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable<T> enumerable ResourceChooser() Declaration public ResourceChooser()"
  },
  "api/PoeShared.Services.ResourceChooser-1.Add.html": {
    "href": "api/PoeShared.Services.ResourceChooser-1.Add.html",
    "title": "Method Add | EyeAuras Docs",
    "keywords": "Method Add Add(T) Declaration public void Add(T resource) Parameters Type Name Description T resource"
  },
  "api/PoeShared.Services.ResourceChooser-1.Clear.html": {
    "href": "api/PoeShared.Services.ResourceChooser-1.Clear.html",
    "title": "Method Clear | EyeAuras Docs",
    "keywords": "Method Clear Clear() Declaration public void Clear()"
  },
  "api/PoeShared.Services.ResourceChooser-1.GetAlive.html": {
    "href": "api/PoeShared.Services.ResourceChooser-1.GetAlive.html",
    "title": "Method GetAlive | EyeAuras Docs",
    "keywords": "Method GetAlive GetAlive() Declaration public T GetAlive() Returns Type Description T"
  },
  "api/PoeShared.Services.ResourceChooser-1.GetEnumerator.html": {
    "href": "api/PoeShared.Services.ResourceChooser-1.GetEnumerator.html",
    "title": "Method GetEnumerator | EyeAuras Docs",
    "keywords": "Method GetEnumerator GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator<T> Implements IEnumerable<T>.GetEnumerator()"
  },
  "api/PoeShared.Services.ResourceChooser-1.Remove.html": {
    "href": "api/PoeShared.Services.ResourceChooser-1.Remove.html",
    "title": "Method Remove | EyeAuras Docs",
    "keywords": "Method Remove Remove(T) Declaration public void Remove(T resource) Parameters Type Name Description T resource"
  },
  "api/PoeShared.Services.ResourceChooser-1.Report.html": {
    "href": "api/PoeShared.Services.ResourceChooser-1.Report.html",
    "title": "Method Report | EyeAuras Docs",
    "keywords": "Method Report Report(T, bool) Declaration public void Report(T resource, bool isAlive) Parameters Type Name Description T resource bool isAlive"
  },
  "api/PoeShared.Services.ResourceChooser-1.ReportAlive.html": {
    "href": "api/PoeShared.Services.ResourceChooser-1.ReportAlive.html",
    "title": "Method ReportAlive | EyeAuras Docs",
    "keywords": "Method ReportAlive ReportAlive(T) Declaration public void ReportAlive(T resource) Parameters Type Name Description T resource"
  },
  "api/PoeShared.Services.ResourceChooser-1.ReportBroken.html": {
    "href": "api/PoeShared.Services.ResourceChooser-1.ReportBroken.html",
    "title": "Method ReportBroken | EyeAuras Docs",
    "keywords": "Method ReportBroken ReportBroken(T) Declaration public void ReportBroken(T resource) Parameters Type Name Description T resource"
  },
  "api/PoeShared.Services.ResourceChooser-1.TryGetAlive.html": {
    "href": "api/PoeShared.Services.ResourceChooser-1.TryGetAlive.html",
    "title": "Method TryGetAlive | EyeAuras Docs",
    "keywords": "Method TryGetAlive TryGetAlive(out T) Declaration public bool TryGetAlive(out T result) Parameters Type Name Description T result Returns Type Description bool"
  },
  "api/PoeShared.Services.ResourceChooser-1.html": {
    "href": "api/PoeShared.Services.ResourceChooser-1.html",
    "title": "Class ResourceChooser<T> | EyeAuras Docs",
    "keywords": "Class ResourceChooser<T> Inheritance object ResourceChooser<T> Implements IEnumerable<T> IEnumerable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public class ResourceChooser<T> : IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors Name Description ResourceChooser() ResourceChooser(IEnumerable<T>) Methods Name Description Add(T) Clear() GetAlive() GetEnumerator() Remove(T) Report(T, bool) ReportAlive(T) ReportBroken(T) TryGetAlive(out T) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ChangeSetExtensions.AsSourceListEx<T>(IEnumerable<T>) ChangeSetExtensions.ToSourceList<T>(IEnumerable<T>) EnumerableExtensions.EmptyIfNull<T>(IEnumerable<T>) EnumerableExtensions.ForEachAsync<T>(IEnumerable<T>, Func<T, Task>) EnumerableExtensions.ForEach<T>(IEnumerable<T>, Action<T>) EnumerableExtensions.Intersperse<T>(IEnumerable<T>, Func<T, T>) EnumerableExtensions.Intersperse<T>(IEnumerable<T>, T) EnumerableExtensions.IsEmpty<T>(IEnumerable<T>) EnumerableExtensions.IsUnique<T>(IEnumerable<T>) EnumerableExtensions.PickRandom<T>(IEnumerable<T>) EnumerableExtensions.Randomize<T>(IEnumerable<T>) EnumerableExtensions.SelectSafe<T, TResult>(IEnumerable<T>, Func<T, TResult>) EnumerableExtensions.SelectSafe<T, TResult>(IEnumerable<T>, Func<T, TResult>, Action<T, Exception>) EnumerableExtensions.ToDictionaryWithReplacement<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>) EnumerableExtensions.ToDictionaryWithThrow<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>) EnumerableExtensions.ToDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>, Func<(TKey key, TValue existingValue, TValue newValue), TValue>) EnumerableExtensions.ToObservableCollection<T>(IEnumerable<T>) EnumerableExtensions.ToReadOnlyObservableCollection<T>(IEnumerable<T>) EnumerableExtensions.ToVariations<T>(IEnumerable<T>) ObjectExtensions.DumpToNamedTable<T>(IEnumerable<T>, string, int, string) ObjectExtensions.DumpToNamedTable<T>(IEnumerable<T>, string, string) ObjectExtensions.DumpToString<T>(IEnumerable<T>) ObjectExtensions.DumpToTable<T>(IEnumerable<T>, int) ObjectExtensions.DumpToTable<T>(IEnumerable<T>, string) ObjectExtensions.DumpToTable<T>(IEnumerable<T>, string, string, int?) ObjectExtensions.ToStringTable<T>(IEnumerable<T>, string) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.ResourcePool-2.-ctor.html": {
    "href": "api/PoeShared.Services.ResourcePool-2.-ctor.html",
    "title": "Constructor ResourcePool | EyeAuras Docs",
    "keywords": "Constructor ResourcePool ResourcePool(IClock, Func<TKey, TResource>) Declaration public ResourcePool(IClock clock, Func<TKey, TResource> resourceFactory) Parameters Type Name Description IClock clock Func<TKey, TResource> resourceFactory"
  },
  "api/PoeShared.Services.ResourcePool-2.CleanupTimeout.html": {
    "href": "api/PoeShared.Services.ResourcePool-2.CleanupTimeout.html",
    "title": "Property CleanupTimeout | EyeAuras Docs",
    "keywords": "Property CleanupTimeout CleanupTimeout Declaration public TimeSpan CleanupTimeout { get; } Property Value Type Description TimeSpan"
  },
  "api/PoeShared.Services.ResourcePool-2.LastCleanupTimestamp.html": {
    "href": "api/PoeShared.Services.ResourcePool-2.LastCleanupTimestamp.html",
    "title": "Property LastCleanupTimestamp | EyeAuras Docs",
    "keywords": "Property LastCleanupTimestamp LastCleanupTimestamp Declaration public DateTimeOffset LastCleanupTimestamp { get; } Property Value Type Description DateTimeOffset"
  },
  "api/PoeShared.Services.ResourcePool-2.Rent.html": {
    "href": "api/PoeShared.Services.ResourcePool-2.Rent.html",
    "title": "Method Rent | EyeAuras Docs",
    "keywords": "Method Rent Rent(TKey, out TResource) Declaration public IDisposable Rent(TKey key, out TResource instance) Parameters Type Name Description TKey key TResource instance Returns Type Description IDisposable"
  },
  "api/PoeShared.Services.ResourcePool-2.TimeToLive.html": {
    "href": "api/PoeShared.Services.ResourcePool-2.TimeToLive.html",
    "title": "Property TimeToLive | EyeAuras Docs",
    "keywords": "Property TimeToLive TimeToLive Declaration public TimeSpan TimeToLive { get; set; } Property Value Type Description TimeSpan"
  },
  "api/PoeShared.Services.ResourcePool-2.html": {
    "href": "api/PoeShared.Services.ResourcePool-2.html",
    "title": "Class ResourcePool<TKey, TResource> | EyeAuras Docs",
    "keywords": "Class ResourcePool<TKey, TResource> Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger ResourcePool<TKey, TResource> Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public sealed class ResourcePool<TKey, TResource> : DisposableReactiveObjectWithLogger, IDisposable, INotifyPropertyChanged Type Parameters Name Description TKey TResource Constructors Name Description ResourcePool(IClock, Func<TKey, TResource>) Properties Name Description CleanupTimeout LastCleanupTimestamp TimeToLive Methods Name Description Rent(TKey, out TResource) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.SevenZipExtractArguments.-Clone--.html": {
    "href": "api/PoeShared.Services.SevenZipExtractArguments.-Clone--.html",
    "title": "Method <Clone>$ | EyeAuras Docs",
    "keywords": "Method <Clone>$ <Clone>$() Declaration public SevenZipExtractArguments <Clone>$() Returns Type Description SevenZipExtractArguments"
  },
  "api/PoeShared.Services.SevenZipExtractArguments.-ctor.html": {
    "href": "api/PoeShared.Services.SevenZipExtractArguments.-ctor.html",
    "title": "Constructor SevenZipExtractArguments | EyeAuras Docs",
    "keywords": "Constructor SevenZipExtractArguments SevenZipExtractArguments(FileInfo, DirectoryInfo) Declaration public SevenZipExtractArguments(FileInfo Archive, DirectoryInfo OutputDirectory) Parameters Type Name Description FileInfo Archive DirectoryInfo OutputDirectory"
  },
  "api/PoeShared.Services.SevenZipExtractArguments.Archive.html": {
    "href": "api/PoeShared.Services.SevenZipExtractArguments.Archive.html",
    "title": "Property Archive | EyeAuras Docs",
    "keywords": "Property Archive Archive Declaration public FileInfo Archive { get; } Property Value Type Description FileInfo"
  },
  "api/PoeShared.Services.SevenZipExtractArguments.Deconstruct.html": {
    "href": "api/PoeShared.Services.SevenZipExtractArguments.Deconstruct.html",
    "title": "Method Deconstruct | EyeAuras Docs",
    "keywords": "Method Deconstruct Deconstruct(out FileInfo, out DirectoryInfo) Declaration public void Deconstruct(out FileInfo Archive, out DirectoryInfo OutputDirectory) Parameters Type Name Description FileInfo Archive DirectoryInfo OutputDirectory"
  },
  "api/PoeShared.Services.SevenZipExtractArguments.Equals.html": {
    "href": "api/PoeShared.Services.SevenZipExtractArguments.Equals.html",
    "title": "Method Equals | EyeAuras Docs",
    "keywords": "Method Equals Equals(object?) Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) Equals(SevenZipExtractArguments?) Declaration public bool Equals(SevenZipExtractArguments? other) Parameters Type Name Description SevenZipExtractArguments other Returns Type Description bool Implements IEquatable<T>.Equals(T)"
  },
  "api/PoeShared.Services.SevenZipExtractArguments.GetHashCode.html": {
    "href": "api/PoeShared.Services.SevenZipExtractArguments.GetHashCode.html",
    "title": "Method GetHashCode | EyeAuras Docs",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/PoeShared.Services.SevenZipExtractArguments.OutputDirectory.html": {
    "href": "api/PoeShared.Services.SevenZipExtractArguments.OutputDirectory.html",
    "title": "Property OutputDirectory | EyeAuras Docs",
    "keywords": "Property OutputDirectory OutputDirectory Declaration public DirectoryInfo OutputDirectory { get; } Property Value Type Description DirectoryInfo"
  },
  "api/PoeShared.Services.SevenZipExtractArguments.OverwriteAll.html": {
    "href": "api/PoeShared.Services.SevenZipExtractArguments.OverwriteAll.html",
    "title": "Property OverwriteAll | EyeAuras Docs",
    "keywords": "Property OverwriteAll OverwriteAll Declaration public bool OverwriteAll { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.Services.SevenZipExtractArguments.ToString.html": {
    "href": "api/PoeShared.Services.SevenZipExtractArguments.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/PoeShared.Services.SevenZipExtractArguments.html": {
    "href": "api/PoeShared.Services.SevenZipExtractArguments.html",
    "title": "Class SevenZipExtractArguments | EyeAuras Docs",
    "keywords": "Class SevenZipExtractArguments Inheritance object SevenZipExtractArguments Implements IEquatable<SevenZipExtractArguments> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PoeShared.Services Assembly: PoeShared.Native.dll Syntax public sealed record SevenZipExtractArguments : IEquatable<SevenZipExtractArguments> Constructors Name Description SevenZipExtractArguments(FileInfo, DirectoryInfo) Properties Name Description Archive OutputDirectory OverwriteAll Methods Name Description Deconstruct(out FileInfo, out DirectoryInfo) Equals(SevenZipExtractArguments?) Equals(object?) GetHashCode() ToString() <Clone>$() Operators Name Description operator ==(SevenZipExtractArguments?, SevenZipExtractArguments?) operator !=(SevenZipExtractArguments?, SevenZipExtractArguments?) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.SevenZipExtractArguments.op_Equality.html": {
    "href": "api/PoeShared.Services.SevenZipExtractArguments.op_Equality.html",
    "title": "Operator operator == | EyeAuras Docs",
    "keywords": "Operator operator == operator ==(SevenZipExtractArguments?, SevenZipExtractArguments?) Declaration public static bool operator ==(SevenZipExtractArguments? left, SevenZipExtractArguments? right) Parameters Type Name Description SevenZipExtractArguments left SevenZipExtractArguments right Returns Type Description bool"
  },
  "api/PoeShared.Services.SevenZipExtractArguments.op_Inequality.html": {
    "href": "api/PoeShared.Services.SevenZipExtractArguments.op_Inequality.html",
    "title": "Operator operator != | EyeAuras Docs",
    "keywords": "Operator operator != operator !=(SevenZipExtractArguments?, SevenZipExtractArguments?) Declaration public static bool operator !=(SevenZipExtractArguments? left, SevenZipExtractArguments? right) Parameters Type Name Description SevenZipExtractArguments left SevenZipExtractArguments right Returns Type Description bool"
  },
  "api/PoeShared.Services.SharedResource-1.-ctor.html": {
    "href": "api/PoeShared.Services.SharedResource-1.-ctor.html",
    "title": "Constructor SharedResource | EyeAuras Docs",
    "keywords": "Constructor SharedResource SharedResource(Func<T>) Declaration public SharedResource(Func<T> factory) Parameters Type Name Description Func<T> factory"
  },
  "api/PoeShared.Services.SharedResource-1.RentOrCreate.html": {
    "href": "api/PoeShared.Services.SharedResource-1.RentOrCreate.html",
    "title": "Method RentOrCreate | EyeAuras Docs",
    "keywords": "Method RentOrCreate RentOrCreate() Declaration public T RentOrCreate() Returns Type Description T"
  },
  "api/PoeShared.Services.SharedResource-1.html": {
    "href": "api/PoeShared.Services.SharedResource-1.html",
    "title": "Class SharedResource<T> | EyeAuras Docs",
    "keywords": "Class SharedResource<T> Inheritance object DisposableReactiveObject SharedResource<T> Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public sealed class SharedResource<T> : DisposableReactiveObject, IDisposable, INotifyPropertyChanged where T : SharedResourceBase Type Parameters Name Description T Constructors Name Description SharedResource(Func<T>) Methods Name Description RentOrCreate() Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.SharedResourceBase.-ctor.html": {
    "href": "api/PoeShared.Services.SharedResourceBase.-ctor.html",
    "title": "Constructor SharedResourceBase | EyeAuras Docs",
    "keywords": "Constructor SharedResourceBase SharedResourceBase() Declaration protected SharedResourceBase()"
  },
  "api/PoeShared.Services.SharedResourceBase.AddResource.html": {
    "href": "api/PoeShared.Services.SharedResourceBase.AddResource.html",
    "title": "Method AddResource | EyeAuras Docs",
    "keywords": "Method AddResource AddResource(IDisposable) Declaration public void AddResource(IDisposable resource) Parameters Type Name Description IDisposable resource Implements ISharedResource.AddResource(IDisposable) AddResource(Action) Declaration public void AddResource(Action disposeAction) Parameters Type Name Description Action disposeAction Implements ISharedResource.AddResource(Action)"
  },
  "api/PoeShared.Services.SharedResourceBase.Dispose.html": {
    "href": "api/PoeShared.Services.SharedResourceBase.Dispose.html",
    "title": "Method Dispose | EyeAuras Docs",
    "keywords": "Method Dispose Dispose() Declaration public override void Dispose() Overrides DisposableReactiveObject.Dispose() Implements IDisposable.Dispose()"
  },
  "api/PoeShared.Services.SharedResourceBase.Gate.html": {
    "href": "api/PoeShared.Services.SharedResourceBase.Gate.html",
    "title": "Property Gate | EyeAuras Docs",
    "keywords": "Property Gate Gate Declaration public ReaderWriterLockSlim Gate { get; } Property Value Type Description ReaderWriterLockSlim"
  },
  "api/PoeShared.Services.SharedResourceBase.IsDisposed.html": {
    "href": "api/PoeShared.Services.SharedResourceBase.IsDisposed.html",
    "title": "Property IsDisposed | EyeAuras Docs",
    "keywords": "Property IsDisposed IsDisposed Declaration public bool IsDisposed { get; } Property Value Type Description bool Implements ISharedResource.IsDisposed"
  },
  "api/PoeShared.Services.SharedResourceBase.IsReadLockHeld.html": {
    "href": "api/PoeShared.Services.SharedResourceBase.IsReadLockHeld.html",
    "title": "Property IsReadLockHeld | EyeAuras Docs",
    "keywords": "Property IsReadLockHeld IsReadLockHeld Declaration public bool IsReadLockHeld { get; } Property Value Type Description bool Implements ISharedResource.IsReadLockHeld"
  },
  "api/PoeShared.Services.SharedResourceBase.IsWriteLockHeld.html": {
    "href": "api/PoeShared.Services.SharedResourceBase.IsWriteLockHeld.html",
    "title": "Property IsWriteLockHeld | EyeAuras Docs",
    "keywords": "Property IsWriteLockHeld IsWriteLockHeld Declaration public bool IsWriteLockHeld { get; } Property Value Type Description bool Implements ISharedResource.IsWriteLockHeld"
  },
  "api/PoeShared.Services.SharedResourceBase.Log.html": {
    "href": "api/PoeShared.Services.SharedResourceBase.Log.html",
    "title": "Property Log | EyeAuras Docs",
    "keywords": "Property Log Log Declaration protected IFluentLog Log { get; } Property Value Type Description IFluentLog"
  },
  "api/PoeShared.Services.SharedResourceBase.RefCount.html": {
    "href": "api/PoeShared.Services.SharedResourceBase.RefCount.html",
    "title": "Property RefCount | EyeAuras Docs",
    "keywords": "Property RefCount RefCount Declaration public long RefCount { get; } Property Value Type Description long Implements ISharedResource.RefCount"
  },
  "api/PoeShared.Services.SharedResourceBase.RentReadLock.html": {
    "href": "api/PoeShared.Services.SharedResourceBase.RentReadLock.html",
    "title": "Method RentReadLock | EyeAuras Docs",
    "keywords": "Method RentReadLock RentReadLock() Declaration public IDisposable RentReadLock() Returns Type Description IDisposable Implements ISharedResource.RentReadLock()"
  },
  "api/PoeShared.Services.SharedResourceBase.RentWriteLock.html": {
    "href": "api/PoeShared.Services.SharedResourceBase.RentWriteLock.html",
    "title": "Method RentWriteLock | EyeAuras Docs",
    "keywords": "Method RentWriteLock RentWriteLock() Declaration public IDisposable RentWriteLock() Returns Type Description IDisposable Implements ISharedResource.RentWriteLock()"
  },
  "api/PoeShared.Services.SharedResourceBase.ResourceId.html": {
    "href": "api/PoeShared.Services.SharedResourceBase.ResourceId.html",
    "title": "Property ResourceId | EyeAuras Docs",
    "keywords": "Property ResourceId ResourceId Declaration public string ResourceId { get; } Property Value Type Description string"
  },
  "api/PoeShared.Services.SharedResourceBase.TryRent.html": {
    "href": "api/PoeShared.Services.SharedResourceBase.TryRent.html",
    "title": "Method TryRent | EyeAuras Docs",
    "keywords": "Method TryRent TryRent() Declaration public bool TryRent() Returns Type Description bool Implements ISharedResource.TryRent()"
  },
  "api/PoeShared.Services.SharedResourceBase.html": {
    "href": "api/PoeShared.Services.SharedResourceBase.html",
    "title": "Class SharedResourceBase | EyeAuras Docs",
    "keywords": "Class SharedResourceBase Inheritance object DisposableReactiveObject SharedResourceBase Implements ISharedResource IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public abstract class SharedResourceBase : DisposableReactiveObject, ISharedResource, IDisposable, INotifyPropertyChanged Constructors Name Description SharedResourceBase() Properties Name Description Gate IsDisposed IsReadLockHeld IsWriteLockHeld Log RefCount ResourceId Methods Name Description AddResource(Action) AddResource(IDisposable) Dispose() RentReadLock() RentWriteLock() TryRent() Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.SharedResourceLatch.-ctor.html": {
    "href": "api/PoeShared.Services.SharedResourceLatch.-ctor.html",
    "title": "Constructor SharedResourceLatch | EyeAuras Docs",
    "keywords": "Constructor SharedResourceLatch SharedResourceLatch(string) Declaration public SharedResourceLatch(string name) Parameters Type Name Description string name SharedResourceLatch() Declaration public SharedResourceLatch()"
  },
  "api/PoeShared.Services.SharedResourceLatch.FormatToString.html": {
    "href": "api/PoeShared.Services.SharedResourceLatch.FormatToString.html",
    "title": "Method FormatToString | EyeAuras Docs",
    "keywords": "Method FormatToString FormatToString(ToStringBuilder) Declaration protected override void FormatToString(ToStringBuilder builder) Parameters Type Name Description ToStringBuilder builder Overrides DisposableReactiveObject.FormatToString(ToStringBuilder)"
  },
  "api/PoeShared.Services.SharedResourceLatch.IsBusy.html": {
    "href": "api/PoeShared.Services.SharedResourceLatch.IsBusy.html",
    "title": "Property IsBusy | EyeAuras Docs",
    "keywords": "Property IsBusy IsBusy Declaration public bool IsBusy { get; } Property Value Type Description bool Implements ISharedResourceLatch.IsBusy"
  },
  "api/PoeShared.Services.SharedResourceLatch.Name.html": {
    "href": "api/PoeShared.Services.SharedResourceLatch.Name.html",
    "title": "Property Name | EyeAuras Docs",
    "keywords": "Property Name Name Declaration public string Name { get; set; } Property Value Type Description string Implements ISharedResourceLatch.Name"
  },
  "api/PoeShared.Services.SharedResourceLatch.Rent.html": {
    "href": "api/PoeShared.Services.SharedResourceLatch.Rent.html",
    "title": "Method Rent | EyeAuras Docs",
    "keywords": "Method Rent Rent() Declaration public IDisposable Rent() Returns Type Description IDisposable Implements ISharedResourceLatch.Rent()"
  },
  "api/PoeShared.Services.SharedResourceLatch.html": {
    "href": "api/PoeShared.Services.SharedResourceLatch.html",
    "title": "Class SharedResourceLatch | EyeAuras Docs",
    "keywords": "Class SharedResourceLatch Inheritance object DisposableReactiveObject SharedResourceLatch Implements ISharedResourceLatch IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public sealed class SharedResourceLatch : DisposableReactiveObject, ISharedResourceLatch, IDisposable, INotifyPropertyChanged Constructors Name Description SharedResourceLatch() SharedResourceLatch(string) Properties Name Description IsBusy Name Methods Name Description FormatToString(ToStringBuilder) Rent() Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.SharedResourceRepository-2.-ctor.html": {
    "href": "api/PoeShared.Services.SharedResourceRepository-2.-ctor.html",
    "title": "Constructor SharedResourceRepository | EyeAuras Docs",
    "keywords": "Constructor SharedResourceRepository SharedResourceRepository() Declaration public SharedResourceRepository()"
  },
  "api/PoeShared.Services.SharedResourceRepository-2.Cleanup.html": {
    "href": "api/PoeShared.Services.SharedResourceRepository-2.Cleanup.html",
    "title": "Method Cleanup | EyeAuras Docs",
    "keywords": "Method Cleanup Cleanup() Declaration public void Cleanup()"
  },
  "api/PoeShared.Services.SharedResourceRepository-2.Count.html": {
    "href": "api/PoeShared.Services.SharedResourceRepository-2.Count.html",
    "title": "Property Count | EyeAuras Docs",
    "keywords": "Property Count Count Declaration public int Count { get; } Property Value Type Description int"
  },
  "api/PoeShared.Services.SharedResourceRepository-2.GetOrAdd.html": {
    "href": "api/PoeShared.Services.SharedResourceRepository-2.GetOrAdd.html",
    "title": "Method GetOrAdd | EyeAuras Docs",
    "keywords": "Method GetOrAdd GetOrAdd(TKey, Func<TKey, TResource>) Declaration public TResource GetOrAdd(TKey key, Func<TKey, TResource> resourceFactory) Parameters Type Name Description TKey key Func<TKey, TResource> resourceFactory Returns Type Description TResource"
  },
  "api/PoeShared.Services.SharedResourceRepository-2.ResolveOrAdd.html": {
    "href": "api/PoeShared.Services.SharedResourceRepository-2.ResolveOrAdd.html",
    "title": "Method ResolveOrAdd | EyeAuras Docs",
    "keywords": "Method ResolveOrAdd ResolveOrAdd(TKey, Func<TKey, TResource>) Declaration public IObservable<TResource> ResolveOrAdd(TKey key, Func<TKey, TResource> resourceFactory) Parameters Type Name Description TKey key Func<TKey, TResource> resourceFactory Returns Type Description IObservable<TResource>"
  },
  "api/PoeShared.Services.SharedResourceRepository-2.html": {
    "href": "api/PoeShared.Services.SharedResourceRepository-2.html",
    "title": "Class SharedResourceRepository<TKey, TResource> | EyeAuras Docs",
    "keywords": "Class SharedResourceRepository<TKey, TResource> Inheritance object SharedResourceRepository<TKey, TResource> Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public sealed class SharedResourceRepository<TKey, TResource> where TResource : ISharedResource Type Parameters Name Description TKey TResource Constructors Name Description SharedResourceRepository() Properties Name Description Count Methods Name Description Cleanup() GetOrAdd(TKey, Func<TKey, TResource>) ResolveOrAdd(TKey, Func<TKey, TResource>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.StartupManagerArgs.-ctor.html": {
    "href": "api/PoeShared.Services.StartupManagerArgs.-ctor.html",
    "title": "Constructor StartupManagerArgs | EyeAuras Docs",
    "keywords": "Constructor StartupManagerArgs StartupManagerArgs() Declaration public StartupManagerArgs()"
  },
  "api/PoeShared.Services.StartupManagerArgs.AutostartFlag.html": {
    "href": "api/PoeShared.Services.StartupManagerArgs.AutostartFlag.html",
    "title": "Property AutostartFlag | EyeAuras Docs",
    "keywords": "Property AutostartFlag AutostartFlag Declaration public string AutostartFlag { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.Services.StartupManagerArgs.CommandLineArgs.html": {
    "href": "api/PoeShared.Services.StartupManagerArgs.CommandLineArgs.html",
    "title": "Property CommandLineArgs | EyeAuras Docs",
    "keywords": "Property CommandLineArgs CommandLineArgs Declaration public string CommandLineArgs { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.Services.StartupManagerArgs.ExecutablePath.html": {
    "href": "api/PoeShared.Services.StartupManagerArgs.ExecutablePath.html",
    "title": "Property ExecutablePath | EyeAuras Docs",
    "keywords": "Property ExecutablePath ExecutablePath Declaration public string ExecutablePath { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.Services.StartupManagerArgs.UniqueAppName.html": {
    "href": "api/PoeShared.Services.StartupManagerArgs.UniqueAppName.html",
    "title": "Property UniqueAppName | EyeAuras Docs",
    "keywords": "Property UniqueAppName UniqueAppName Declaration public string UniqueAppName { get; set; } Property Value Type Description string"
  },
  "api/PoeShared.Services.StartupManagerArgs.html": {
    "href": "api/PoeShared.Services.StartupManagerArgs.html",
    "title": "Class StartupManagerArgs | EyeAuras Docs",
    "keywords": "Class StartupManagerArgs Inheritance object StartupManagerArgs Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Services Assembly: PoeShared.Native.dll Syntax public sealed class StartupManagerArgs Constructors Name Description StartupManagerArgs() Properties Name Description AutostartFlag CommandLineArgs ExecutablePath UniqueAppName Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.Services.StringMatcher.MatchExpression.html": {
    "href": "api/PoeShared.Services.StringMatcher.MatchExpression.html",
    "title": "Method MatchExpression | EyeAuras Docs",
    "keywords": "Method MatchExpression MatchExpression(string, string) Declaration public static bool MatchExpression(string input, string expression) Parameters Type Name Description string input string expression Returns Type Description bool"
  },
  "api/PoeShared.Services.StringMatcher.MatchRegex.html": {
    "href": "api/PoeShared.Services.StringMatcher.MatchRegex.html",
    "title": "Method MatchRegex | EyeAuras Docs",
    "keywords": "Method MatchRegex MatchRegex(string, string) Declaration public static bool MatchRegex(string input, string regex) Parameters Type Name Description string input string regex Returns Type Description bool"
  },
  "api/PoeShared.Services.StringMatcher.MatchString.html": {
    "href": "api/PoeShared.Services.StringMatcher.MatchString.html",
    "title": "Method MatchString | EyeAuras Docs",
    "keywords": "Method MatchString MatchString(string, string, bool) Declaration public static bool MatchString(string input, string needle, bool exactMatch) Parameters Type Name Description string input string needle bool exactMatch Returns Type Description bool"
  },
  "api/PoeShared.Services.StringMatcher.html": {
    "href": "api/PoeShared.Services.StringMatcher.html",
    "title": "Class StringMatcher | EyeAuras Docs",
    "keywords": "Class StringMatcher Inheritance object StringMatcher Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.Services Assembly: PoeShared.dll Syntax public static class StringMatcher Methods Name Description MatchExpression(string, string) MatchRegex(string, string) MatchString(string, string, bool)"
  },
  "api/PoeShared.Services.html": {
    "href": "api/PoeShared.Services.html",
    "title": "Namespace PoeShared.Services | EyeAuras Docs",
    "keywords": "Namespace PoeShared.Services Classes FileLock KeyboardLayout MemoryPool NamedLock Class that implements locking with timeout and logging of locked threads Logging is enabled only in debug configuration due to huge performance input ResourceChooser<T> ResourcePool<TKey, TResource> SevenZipExtractArguments SharedResourceBase SharedResourceLatch SharedResourceRepository<TKey, TResource> SharedResource<T> StartupManagerArgs StringMatcher Structs PinnedMemoryBuffer Interfaces IApplicationAccessor IAssemblyTracker IComparisonService ICredentialManager IFolderCleanerService IKeyboardLayoutManager IMemoryPool ISevenZipWrapper ISharedResource ISharedResourceLatch IStartupManager IUniqueIdGenerator"
  },
  "api/PoeShared.SharedLog.-ctor.html": {
    "href": "api/PoeShared.SharedLog.-ctor.html",
    "title": "Constructor SharedLog | EyeAuras Docs",
    "keywords": "Constructor SharedLog SharedLog() Declaration public SharedLog()"
  },
  "api/PoeShared.SharedLog.AddAppender.html": {
    "href": "api/PoeShared.SharedLog.AddAppender.html",
    "title": "Method AddAppender | EyeAuras Docs",
    "keywords": "Method AddAppender AddAppender(IAppender) Declaration public IDisposable AddAppender(IAppender appender) Parameters Type Name Description IAppender appender Returns Type Description IDisposable"
  },
  "api/PoeShared.SharedLog.AddConsoleAppender.html": {
    "href": "api/PoeShared.SharedLog.AddConsoleAppender.html",
    "title": "Method AddConsoleAppender | EyeAuras Docs",
    "keywords": "Method AddConsoleAppender AddConsoleAppender() Declaration public IDisposable AddConsoleAppender() Returns Type Description IDisposable"
  },
  "api/PoeShared.SharedLog.AddTraceAppender.html": {
    "href": "api/PoeShared.SharedLog.AddTraceAppender.html",
    "title": "Method AddTraceAppender | EyeAuras Docs",
    "keywords": "Method AddTraceAppender AddTraceAppender() Declaration public IDisposable AddTraceAppender() Returns Type Description IDisposable"
  },
  "api/PoeShared.SharedLog.DumpApplicationInfo.html": {
    "href": "api/PoeShared.SharedLog.DumpApplicationInfo.html",
    "title": "Method DumpApplicationInfo | EyeAuras Docs",
    "keywords": "Method DumpApplicationInfo DumpApplicationInfo(IAppArguments) Declaration public void DumpApplicationInfo(IAppArguments appArguments) Parameters Type Name Description IAppArguments appArguments"
  },
  "api/PoeShared.SharedLog.Errors.html": {
    "href": "api/PoeShared.SharedLog.Errors.html",
    "title": "Property Errors | EyeAuras Docs",
    "keywords": "Property Errors Errors Declaration public ISubject<Exception> Errors { get; } Property Value Type Description ISubject<Exception>"
  },
  "api/PoeShared.SharedLog.InitializeLogging.html": {
    "href": "api/PoeShared.SharedLog.InitializeLogging.html",
    "title": "Method InitializeLogging | EyeAuras Docs",
    "keywords": "Method InitializeLogging InitializeLogging(IAppArguments) Declaration public void InitializeLogging(IAppArguments appArguments) Parameters Type Name Description IAppArguments appArguments"
  },
  "api/PoeShared.SharedLog.Instance.html": {
    "href": "api/PoeShared.SharedLog.Instance.html",
    "title": "Property Instance | EyeAuras Docs",
    "keywords": "Property Instance Instance Declaration public static SharedLog Instance { get; } Property Value Type Description SharedLog"
  },
  "api/PoeShared.SharedLog.LoadLogConfiguration.html": {
    "href": "api/PoeShared.SharedLog.LoadLogConfiguration.html",
    "title": "Method LoadLogConfiguration | EyeAuras Docs",
    "keywords": "Method LoadLogConfiguration LoadLogConfiguration(IAppArguments, FileInfo) Declaration public void LoadLogConfiguration(IAppArguments appArguments, FileInfo logConfig) Parameters Type Name Description IAppArguments appArguments FileInfo logConfig"
  },
  "api/PoeShared.SharedLog.Log.html": {
    "href": "api/PoeShared.SharedLog.Log.html",
    "title": "Property Log | EyeAuras Docs",
    "keywords": "Property Log Log Declaration public IFluentLog Log { get; } Property Value Type Description IFluentLog"
  },
  "api/PoeShared.SharedLog.SwitchImmediateFlush.html": {
    "href": "api/PoeShared.SharedLog.SwitchImmediateFlush.html",
    "title": "Method SwitchImmediateFlush | EyeAuras Docs",
    "keywords": "Method SwitchImmediateFlush SwitchImmediateFlush(bool) Declaration public void SwitchImmediateFlush(bool immediateFlush) Parameters Type Name Description bool immediateFlush"
  },
  "api/PoeShared.SharedLog.SwitchLoggingLevel.html": {
    "href": "api/PoeShared.SharedLog.SwitchLoggingLevel.html",
    "title": "Method SwitchLoggingLevel | EyeAuras Docs",
    "keywords": "Method SwitchLoggingLevel SwitchLoggingLevel(Level) Declaration public void SwitchLoggingLevel(Level loggingLevel) Parameters Type Name Description Level loggingLevel"
  },
  "api/PoeShared.SharedLog.html": {
    "href": "api/PoeShared.SharedLog.html",
    "title": "Class SharedLog | EyeAuras Docs",
    "keywords": "Class SharedLog Inheritance object DisposableReactiveObject SharedLog Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared Assembly: PoeShared.dll Syntax public class SharedLog : DisposableReactiveObject, IDisposable, INotifyPropertyChanged Constructors Name Description SharedLog() Properties Name Description Errors Instance Log Methods Name Description AddAppender(IAppender) AddConsoleAppender() AddTraceAppender() DumpApplicationInfo(IAppArguments) InitializeLogging(IAppArguments) LoadLogConfiguration(IAppArguments, FileInfo) SwitchImmediateFlush(bool) SwitchLoggingLevel(Level) Extension Methods DisposableExtensions.AssignTo<T>(T, SerialDisposable) NotifyPropertyChangedExtensions.GetPropertyName<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.TryWaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForAsync<TObject, T1>(TObject, Func<TObject, T1>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValueAsync<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WaitForValue<TObject, T1>(TObject, Expression<Func<TObject, T1>>, Predicate<T1>, TimeSpan) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject>(TObject, params string[]) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1>(TObject, Expression<Func<TObject, T1>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>) NotifyPropertyChangedExtensions.WhenAnyProperty<TObject, T1, T2, T3, T4, T5>(TObject, Expression<Func<TObject, T1>>, Expression<Func<TObject, T2>>, Expression<Func<TObject, T3>>, Expression<Func<TObject, T4>>, Expression<Func<TObject, T5>>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>) ReactiveObjectExtensions.BindPropertyTo<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.LinkObjectProperties<TSource, TSourceProperty, TTargetProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, Expression<Func<TSource, TTargetProperty>>) ReactiveObjectExtensions.RaiseIfChanged<TSource, TSourceProperty>(TSource, string, TSourceProperty, TSourceProperty) ReactiveObjectExtensions.RaiseWhenSourceValue<TSource, TTarget, TSourceProperty, TTargetProperty>(TTarget, Expression<Func<TTarget, TTargetProperty>>, TSource, Expression<Func<TSource, TSourceProperty>>, IScheduler) ReactiveObjectExtensions.ToPropertyHelper<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, IScheduler) ReactiveObjectExtensions.ToProperty<TSource, TSourceProperty>(TSource, Expression<Func<TSource, TSourceProperty>>, IObservable<TSourceProperty>, TSourceProperty, bool, IScheduler) XDocumentExtensions.AddTo<T>(T, XContainer) DisposableExtensions.ToObservable(IDisposable) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.WinCaptureAudio.ProcessWaveInListener.-ctor.html": {
    "href": "api/PoeShared.WinCaptureAudio.ProcessWaveInListener.-ctor.html",
    "title": "Constructor ProcessWaveInListener | EyeAuras Docs",
    "keywords": "Constructor ProcessWaveInListener ProcessWaveInListener(Process, WaveFormat) Declaration public ProcessWaveInListener(Process process, WaveFormat outputFormat) Parameters Type Name Description Process process WaveFormat outputFormat"
  },
  "api/PoeShared.WinCaptureAudio.ProcessWaveInListener.GetSource.html": {
    "href": "api/PoeShared.WinCaptureAudio.ProcessWaveInListener.GetSource.html",
    "title": "Method GetSource | EyeAuras Docs",
    "keywords": "Method GetSource GetSource() Declaration protected override IWaveIn GetSource() Returns Type Description IWaveIn Overrides PoeShared.Audio.Models.WaveInListener.GetSource()"
  },
  "api/PoeShared.WinCaptureAudio.ProcessWaveInListener.html": {
    "href": "api/PoeShared.WinCaptureAudio.ProcessWaveInListener.html",
    "title": "Class ProcessWaveInListener | EyeAuras Docs",
    "keywords": "Class ProcessWaveInListener Inheritance object DisposableReactiveObject DisposableReactiveObjectWithLogger WaveInListener ProcessWaveInListener Implements IDisposable INotifyPropertyChanged Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.WinCaptureAudio Assembly: PoeShared.WinCaptureAudio.dll Syntax public class ProcessWaveInListener : WaveInListener, IDisposable, INotifyPropertyChanged Constructors Name Description ProcessWaveInListener(Process, WaveFormat) Methods Name Description GetSource() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.WinCaptureAudio.html": {
    "href": "api/PoeShared.WinCaptureAudio.html",
    "title": "Namespace PoeShared.WinCaptureAudio | EyeAuras Docs",
    "keywords": "Namespace PoeShared.WinCaptureAudio Classes ProcessWaveInListener"
  },
  "api/PoeShared.WindowSeekers.BaseWindowSeeker.-ctor.html": {
    "href": "api/PoeShared.WindowSeekers.BaseWindowSeeker.-ctor.html",
    "title": "Constructor BaseWindowSeeker | EyeAuras Docs",
    "keywords": "Constructor BaseWindowSeeker BaseWindowSeeker() Declaration protected BaseWindowSeeker()"
  },
  "api/PoeShared.WindowSeekers.BaseWindowSeeker.BlacklistedWindows.html": {
    "href": "api/PoeShared.WindowSeekers.BaseWindowSeeker.BlacklistedWindows.html",
    "title": "Property BlacklistedWindows | EyeAuras Docs",
    "keywords": "Property BlacklistedWindows BlacklistedWindows Gets or sets the window handle of the owner. Declaration public ISet<nint> BlacklistedWindows { get; } Property Value Type Description ISet<nint> Remarks Windows with this handle will be automatically skipped."
  },
  "api/PoeShared.WindowSeekers.BaseWindowSeeker.Refresh.html": {
    "href": "api/PoeShared.WindowSeekers.BaseWindowSeeker.Refresh.html",
    "title": "Method Refresh | EyeAuras Docs",
    "keywords": "Method Refresh Refresh() Refreshes the list of windows. Declaration public abstract void Refresh() Implements IWindowSeeker.Refresh()"
  },
  "api/PoeShared.WindowSeekers.BaseWindowSeeker.SkipNotVisibleWindows.html": {
    "href": "api/PoeShared.WindowSeekers.BaseWindowSeeker.SkipNotVisibleWindows.html",
    "title": "Property SkipNotVisibleWindows | EyeAuras Docs",
    "keywords": "Property SkipNotVisibleWindows SkipNotVisibleWindows Gets or sets whether not visible windows should be skipped. Declaration public bool SkipNotVisibleWindows { get; set; } Property Value Type Description bool Implements IWindowSeeker.SkipNotVisibleWindows"
  },
  "api/PoeShared.WindowSeekers.BaseWindowSeeker.Windows.html": {
    "href": "api/PoeShared.WindowSeekers.BaseWindowSeeker.Windows.html",
    "title": "Property Windows | EyeAuras Docs",
    "keywords": "Property Windows Windows Get the matching windows from the last refresh. Declaration public abstract IReadOnlyCollection<IWindowHandle> Windows { get; protected set; } Property Value Type Description IReadOnlyCollection<IWindowHandle> Implements IWindowSeeker.Windows"
  },
  "api/PoeShared.WindowSeekers.BaseWindowSeeker.html": {
    "href": "api/PoeShared.WindowSeekers.BaseWindowSeeker.html",
    "title": "Class BaseWindowSeeker | EyeAuras Docs",
    "keywords": "Class BaseWindowSeeker Base class for window seekers that can populate a list of window handles based on some criteria and with basic filtering. Inheritance object BaseWindowSeeker TaskWindowSeeker Implements IWindowSeeker Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.WindowSeekers Assembly: PoeShared.Native.dll Syntax public abstract class BaseWindowSeeker : IWindowSeeker Constructors Name Description BaseWindowSeeker() Properties Name Description BlacklistedWindows Gets or sets the window handle of the owner. SkipNotVisibleWindows Gets or sets whether not visible windows should be skipped. Windows Get the matching windows from the last refresh. Methods Name Description Refresh() Refreshes the list of windows. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.WindowSeekers.IWindowSeeker.Refresh.html": {
    "href": "api/PoeShared.WindowSeekers.IWindowSeeker.Refresh.html",
    "title": "Method Refresh | EyeAuras Docs",
    "keywords": "Method Refresh Refresh() Refreshes the list of windows. Declaration void Refresh()"
  },
  "api/PoeShared.WindowSeekers.IWindowSeeker.SkipNotVisibleWindows.html": {
    "href": "api/PoeShared.WindowSeekers.IWindowSeeker.SkipNotVisibleWindows.html",
    "title": "Property SkipNotVisibleWindows | EyeAuras Docs",
    "keywords": "Property SkipNotVisibleWindows SkipNotVisibleWindows Declaration bool SkipNotVisibleWindows { get; set; } Property Value Type Description bool"
  },
  "api/PoeShared.WindowSeekers.IWindowSeeker.Windows.html": {
    "href": "api/PoeShared.WindowSeekers.IWindowSeeker.Windows.html",
    "title": "Property Windows | EyeAuras Docs",
    "keywords": "Property Windows Windows Get the list of matching windows, ordered by priority (optionally). Declaration IReadOnlyCollection<IWindowHandle> Windows { get; } Property Value Type Description IReadOnlyCollection<IWindowHandle>"
  },
  "api/PoeShared.WindowSeekers.IWindowSeeker.html": {
    "href": "api/PoeShared.WindowSeekers.IWindowSeeker.html",
    "title": "Interface IWindowSeeker | EyeAuras Docs",
    "keywords": "Interface IWindowSeeker Interface for window seekers. Namespace: PoeShared.WindowSeekers Assembly: PoeShared.Native.dll Syntax public interface IWindowSeeker Properties Name Description SkipNotVisibleWindows Windows Get the list of matching windows, ordered by priority (optionally). Methods Name Description Refresh() Refreshes the list of windows. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.WindowSeekers.TaskWindowSeeker.-ctor.html": {
    "href": "api/PoeShared.WindowSeekers.TaskWindowSeeker.-ctor.html",
    "title": "Constructor TaskWindowSeeker | EyeAuras Docs",
    "keywords": "Constructor TaskWindowSeeker TaskWindowSeeker(IWindowHandleProvider) Declaration public TaskWindowSeeker(IWindowHandleProvider windowHandleProvider) Parameters Type Name Description IWindowHandleProvider windowHandleProvider"
  },
  "api/PoeShared.WindowSeekers.TaskWindowSeeker.Refresh.html": {
    "href": "api/PoeShared.WindowSeekers.TaskWindowSeeker.Refresh.html",
    "title": "Method Refresh | EyeAuras Docs",
    "keywords": "Method Refresh Refresh() Refreshes the list of windows. Declaration public override void Refresh() Overrides BaseWindowSeeker.Refresh()"
  },
  "api/PoeShared.WindowSeekers.TaskWindowSeeker.Windows.html": {
    "href": "api/PoeShared.WindowSeekers.TaskWindowSeeker.Windows.html",
    "title": "Property Windows | EyeAuras Docs",
    "keywords": "Property Windows Windows Get the matching windows from the last refresh. Declaration public override IReadOnlyCollection<IWindowHandle> Windows { get; protected set; } Property Value Type Description IReadOnlyCollection<IWindowHandle> Overrides BaseWindowSeeker.Windows"
  },
  "api/PoeShared.WindowSeekers.TaskWindowSeeker.html": {
    "href": "api/PoeShared.WindowSeekers.TaskWindowSeeker.html",
    "title": "Class TaskWindowSeeker | EyeAuras Docs",
    "keywords": "Class TaskWindowSeeker Window seeker that attempts to mimic ALT+TAB behavior in filtering windows to show. Inheritance object BaseWindowSeeker TaskWindowSeeker Implements IWindowSeeker Inherited Members BaseWindowSeeker.BlacklistedWindows BaseWindowSeeker.SkipNotVisibleWindows object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PoeShared.WindowSeekers Assembly: PoeShared.Native.dll Syntax public sealed class TaskWindowSeeker : BaseWindowSeeker, IWindowSeeker Constructors Name Description TaskWindowSeeker(IWindowHandleProvider) Properties Name Description Windows Get the matching windows from the last refresh. Methods Name Description Refresh() Refreshes the list of windows. Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PoeShared.WindowSeekers.html": {
    "href": "api/PoeShared.WindowSeekers.html",
    "title": "Namespace PoeShared.WindowSeekers | EyeAuras Docs",
    "keywords": "Namespace PoeShared.WindowSeekers Classes BaseWindowSeeker Base class for window seekers that can populate a list of window handles based on some criteria and with basic filtering. TaskWindowSeeker Window seeker that attempts to mimic ALT+TAB behavior in filtering windows to show. Interfaces IWindowSeeker Interface for window seekers."
  },
  "api/PoeShared.html": {
    "href": "api/PoeShared.html",
    "title": "Namespace PoeShared | EyeAuras Docs",
    "keywords": "Namespace PoeShared Namespaces PoeShared.Audio.Services PoeShared.Bindings PoeShared.Blazor PoeShared.Caching PoeShared.Common PoeShared.Communications PoeShared.Converters PoeShared.Evaluators PoeShared.Expressions PoeShared.Hotkeys PoeShared.IO PoeShared.Logging PoeShared.Modularity PoeShared.Native PoeShared.Prism PoeShared.Scaffolding PoeShared.Services PoeShared.WinCaptureAudio PoeShared.WindowSeekers Classes AppArguments AppOptions Guard LogExtensions SharedLog Interfaces IClock IRandomNumberGenerator"
  },
  "api/PropertyBinder.Binder-1.-ctor.html": {
    "href": "api/PropertyBinder.Binder-1.-ctor.html",
    "title": "Constructor Binder | EyeAuras Docs",
    "keywords": "Constructor Binder Binder() Declaration public Binder()"
  },
  "api/PropertyBinder.Binder-1.AssignmentAction.html": {
    "href": "api/PropertyBinder.Binder-1.AssignmentAction.html",
    "title": "Property AssignmentAction | EyeAuras Docs",
    "keywords": "Property AssignmentAction AssignmentAction Declaration public Action<TContext, Action<TContext>> AssignmentAction { get; } Property Value Type Description Action<TContext, Action<TContext>>"
  },
  "api/PropertyBinder.Binder-1.Attach.html": {
    "href": "api/PropertyBinder.Binder-1.Attach.html",
    "title": "Method Attach | EyeAuras Docs",
    "keywords": "Method Attach Attach(TContext) Declaration public IDisposable Attach(TContext context) Parameters Type Name Description TContext context Returns Type Description IDisposable"
  },
  "api/PropertyBinder.Binder-1.BeginTransaction.html": {
    "href": "api/PropertyBinder.Binder-1.BeginTransaction.html",
    "title": "Method BeginTransaction | EyeAuras Docs",
    "keywords": "Method BeginTransaction BeginTransaction() Declaration public IDisposable BeginTransaction() Returns Type Description IDisposable"
  },
  "api/PropertyBinder.Binder-1.Clone.html": {
    "href": "api/PropertyBinder.Binder-1.Clone.html",
    "title": "Method Clone | EyeAuras Docs",
    "keywords": "Method Clone Clone<TNewContext>() Declaration public Binder<TNewContext> Clone<TNewContext>() where TNewContext : class, TContext Returns Type Description Binder<TNewContext> Type Parameters Name Description TNewContext Clone() Declaration public Binder<TContext> Clone() Returns Type Description Binder<TContext>"
  },
  "api/PropertyBinder.Binder-1.GetActionByKey.html": {
    "href": "api/PropertyBinder.Binder-1.GetActionByKey.html",
    "title": "Method GetActionByKey | EyeAuras Docs",
    "keywords": "Method GetActionByKey GetActionByKey(string) Declaration public Action<TContext> GetActionByKey(string key) Parameters Type Name Description string key Returns Type Description Action<TContext>"
  },
  "api/PropertyBinder.Binder-1.WithAssignmentAction.html": {
    "href": "api/PropertyBinder.Binder-1.WithAssignmentAction.html",
    "title": "Method WithAssignmentAction | EyeAuras Docs",
    "keywords": "Method WithAssignmentAction WithAssignmentAction(Action<TContext, Action<TContext>>) Declaration public Binder<TContext> WithAssignmentAction(Action<TContext, Action<TContext>> assignmentAction) Parameters Type Name Description Action<TContext, Action<TContext>> assignmentAction Returns Type Description Binder<TContext>"
  },
  "api/PropertyBinder.Binder-1.WithExceptionHandler.html": {
    "href": "api/PropertyBinder.Binder-1.WithExceptionHandler.html",
    "title": "Method WithExceptionHandler | EyeAuras Docs",
    "keywords": "Method WithExceptionHandler WithExceptionHandler(EventHandler<BindingExceptionEventArgs>) Declaration public Binder<TContext> WithExceptionHandler(EventHandler<BindingExceptionEventArgs> exceptionHandler) Parameters Type Name Description EventHandler<BindingExceptionEventArgs> exceptionHandler Returns Type Description Binder<TContext>"
  },
  "api/PropertyBinder.Binder-1.html": {
    "href": "api/PropertyBinder.Binder-1.html",
    "title": "Class Binder<TContext> | EyeAuras Docs",
    "keywords": "Class Binder<TContext> Inheritance object Binder<TContext> Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax public sealed class Binder<TContext> where TContext : class Type Parameters Name Description TContext Constructors Name Description Binder() Properties Name Description AssignmentAction Methods Name Description Attach(TContext) BeginTransaction() Clone() Clone<TNewContext>() GetActionByKey(string) WithAssignmentAction(Action<TContext, Action<TContext>>) WithExceptionHandler(EventHandler<BindingExceptionEventArgs>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) BinderExtensions.AddRule<TContext>(Binder<TContext>, Action<TContext>, string, string, bool, bool, Expression, params Expression[]) BinderExtensions.BindAction<TContext>(Binder<TContext>, Expression<Action<TContext>>, string) BinderExtensions.BindCommand<TContext>(Binder<TContext>, Action<TContext, object>, Expression<Func<TContext, object, bool>>) BinderExtensions.BindCommand<TContext>(Binder<TContext>, Action<TContext>, Expression<Func<TContext, bool>>) BinderExtensions.BindIf<T, TContext>(Binder<TContext>, Expression<Func<TContext, bool>>, Expression<Func<TContext, T>>) BinderExtensions.Bind<T, TContext>(Binder<TContext>, Expression<Func<TContext, T>>) BinderExtensions.Unbind<TContext>(Binder<TContext>, string) BinderExtensions.Unbind<T, TContext>(Binder<TContext>, Expression<Func<TContext, T>>) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PropertyBinder.Binder.AllowReuseOfWatchers.html": {
    "href": "api/PropertyBinder.Binder.AllowReuseOfWatchers.html",
    "title": "Property AllowReuseOfWatchers | EyeAuras Docs",
    "keywords": "Property AllowReuseOfWatchers AllowReuseOfWatchers Declaration public static bool AllowReuseOfWatchers { get; set; } Property Value Type Description bool"
  },
  "api/PropertyBinder.Binder.BeginTransaction.html": {
    "href": "api/PropertyBinder.Binder.BeginTransaction.html",
    "title": "Method BeginTransaction | EyeAuras Docs",
    "keywords": "Method BeginTransaction BeginTransaction() Declaration public static IDisposable BeginTransaction() Returns Type Description IDisposable"
  },
  "api/PropertyBinder.Binder.DebugMode.html": {
    "href": "api/PropertyBinder.Binder.DebugMode.html",
    "title": "Property DebugMode | EyeAuras Docs",
    "keywords": "Property DebugMode DebugMode Declaration public static bool DebugMode { get; set; } Property Value Type Description bool"
  },
  "api/PropertyBinder.Binder.DefaultCommandCanExecuteCheckMode.html": {
    "href": "api/PropertyBinder.Binder.DefaultCommandCanExecuteCheckMode.html",
    "title": "Property DefaultCommandCanExecuteCheckMode | EyeAuras Docs",
    "keywords": "Property DefaultCommandCanExecuteCheckMode DefaultCommandCanExecuteCheckMode Declaration public static CommandCanExecuteCheckMode DefaultCommandCanExecuteCheckMode { get; set; } Property Value Type Description CommandCanExecuteCheckMode"
  },
  "api/PropertyBinder.Binder.ExpressionCompiler.html": {
    "href": "api/PropertyBinder.Binder.ExpressionCompiler.html",
    "title": "Property ExpressionCompiler | EyeAuras Docs",
    "keywords": "Property ExpressionCompiler ExpressionCompiler Declaration public static IExpressionCompiler ExpressionCompiler { get; set; } Property Value Type Description IExpressionCompiler"
  },
  "api/PropertyBinder.Binder.SetExceptionHandler.html": {
    "href": "api/PropertyBinder.Binder.SetExceptionHandler.html",
    "title": "Method SetExceptionHandler | EyeAuras Docs",
    "keywords": "Method SetExceptionHandler SetExceptionHandler(EventHandler<BindingExceptionEventArgs>) Declaration public static void SetExceptionHandler(EventHandler<BindingExceptionEventArgs> exceptionHandler) Parameters Type Name Description EventHandler<BindingExceptionEventArgs> exceptionHandler"
  },
  "api/PropertyBinder.Binder.SetTracer.html": {
    "href": "api/PropertyBinder.Binder.SetTracer.html",
    "title": "Method SetTracer | EyeAuras Docs",
    "keywords": "Method SetTracer SetTracer(IBindingTracer) Declaration public static void SetTracer(IBindingTracer tracer) Parameters Type Name Description IBindingTracer tracer"
  },
  "api/PropertyBinder.Binder.SupportTransactions.html": {
    "href": "api/PropertyBinder.Binder.SupportTransactions.html",
    "title": "Property SupportTransactions | EyeAuras Docs",
    "keywords": "Property SupportTransactions SupportTransactions Declaration public static bool SupportTransactions { get; set; } Property Value Type Description bool"
  },
  "api/PropertyBinder.Binder.html": {
    "href": "api/PropertyBinder.Binder.html",
    "title": "Class Binder | EyeAuras Docs",
    "keywords": "Class Binder Inheritance object Binder Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax public static class Binder Properties Name Description AllowReuseOfWatchers DebugMode DefaultCommandCanExecuteCheckMode ExpressionCompiler SupportTransactions Methods Name Description BeginTransaction() SetExceptionHandler(EventHandler<BindingExceptionEventArgs>) SetTracer(IBindingTracer)"
  },
  "api/PropertyBinder.BinderExtensions.AddRule.html": {
    "href": "api/PropertyBinder.BinderExtensions.AddRule.html",
    "title": "Method AddRule | EyeAuras Docs",
    "keywords": "Method AddRule AddRule<TContext>(Binder<TContext>, Action<TContext>, string, string, bool, bool, Expression, params Expression[]) Declaration public static void AddRule<TContext>(this Binder<TContext> binder, Action<TContext> bindingAction, string key, string debugDescription, bool runOnAttach, bool canOverride, Expression stampExpression, params Expression[] triggerExpressions) where TContext : class Parameters Type Name Description Binder<TContext> binder Action<TContext> bindingAction string key string debugDescription bool runOnAttach bool canOverride Expression stampExpression Expression[] triggerExpressions Type Parameters Name Description TContext"
  },
  "api/PropertyBinder.BinderExtensions.Bind.html": {
    "href": "api/PropertyBinder.BinderExtensions.Bind.html",
    "title": "Method Bind | EyeAuras Docs",
    "keywords": "Method Bind Bind<T, TContext>(Binder<TContext>, Expression<Func<TContext, T>>) Declaration public static PropertyRuleBuilder<T, TContext> Bind<T, TContext>(this Binder<TContext> binder, Expression<Func<TContext, T>> sourceExpression) where TContext : class Parameters Type Name Description Binder<TContext> binder Expression<Func<TContext, T>> sourceExpression Returns Type Description PropertyRuleBuilder<T, TContext> Type Parameters Name Description T TContext"
  },
  "api/PropertyBinder.BinderExtensions.BindAction.html": {
    "href": "api/PropertyBinder.BinderExtensions.BindAction.html",
    "title": "Method BindAction | EyeAuras Docs",
    "keywords": "Method BindAction BindAction<TContext>(Binder<TContext>, Expression<Action<TContext>>, string) Declaration public static void BindAction<TContext>(this Binder<TContext> binder, Expression<Action<TContext>> expression, string overrideKey = null) where TContext : class Parameters Type Name Description Binder<TContext> binder Expression<Action<TContext>> expression string overrideKey Type Parameters Name Description TContext"
  },
  "api/PropertyBinder.BinderExtensions.BindCommand.html": {
    "href": "api/PropertyBinder.BinderExtensions.BindCommand.html",
    "title": "Method BindCommand | EyeAuras Docs",
    "keywords": "Method BindCommand BindCommand<TContext>(Binder<TContext>, Action<TContext>, Expression<Func<TContext, bool>>) Declaration public static CommandRuleBinder<TContext> BindCommand<TContext>(this Binder<TContext> binder, Action<TContext> executeAction, Expression<Func<TContext, bool>> canExecuteExpression) where TContext : class Parameters Type Name Description Binder<TContext> binder Action<TContext> executeAction Expression<Func<TContext, bool>> canExecuteExpression Returns Type Description CommandRuleBinder<TContext> Type Parameters Name Description TContext BindCommand<TContext>(Binder<TContext>, Action<TContext, object>, Expression<Func<TContext, object, bool>>) Declaration public static CommandRuleBinder<TContext> BindCommand<TContext>(this Binder<TContext> binder, Action<TContext, object> executeAction, Expression<Func<TContext, object, bool>> canExecuteExpression) where TContext : class Parameters Type Name Description Binder<TContext> binder Action<TContext, object> executeAction Expression<Func<TContext, object, bool>> canExecuteExpression Returns Type Description CommandRuleBinder<TContext> Type Parameters Name Description TContext"
  },
  "api/PropertyBinder.BinderExtensions.BindIf.html": {
    "href": "api/PropertyBinder.BinderExtensions.BindIf.html",
    "title": "Method BindIf | EyeAuras Docs",
    "keywords": "Method BindIf BindIf<T, TContext>(Binder<TContext>, Expression<Func<TContext, bool>>, Expression<Func<TContext, T>>) Declaration public static IConditionalRuleBuilderPhase1<T, TContext> BindIf<T, TContext>(this Binder<TContext> binder, Expression<Func<TContext, bool>> conditionalExpression, Expression<Func<TContext, T>> targetExpression) where TContext : class Parameters Type Name Description Binder<TContext> binder Expression<Func<TContext, bool>> conditionalExpression Expression<Func<TContext, T>> targetExpression Returns Type Description IConditionalRuleBuilderPhase1<T, TContext> Type Parameters Name Description T TContext"
  },
  "api/PropertyBinder.BinderExtensions.Unbind.html": {
    "href": "api/PropertyBinder.BinderExtensions.Unbind.html",
    "title": "Method Unbind | EyeAuras Docs",
    "keywords": "Method Unbind Unbind<T, TContext>(Binder<TContext>, Expression<Func<TContext, T>>) Declaration public static void Unbind<T, TContext>(this Binder<TContext> binder, Expression<Func<TContext, T>> targetExpression) where TContext : class Parameters Type Name Description Binder<TContext> binder Expression<Func<TContext, T>> targetExpression Type Parameters Name Description T TContext Unbind<TContext>(Binder<TContext>, string) Declaration public static void Unbind<TContext>(this Binder<TContext> binder, string key) where TContext : class Parameters Type Name Description Binder<TContext> binder string key Type Parameters Name Description TContext"
  },
  "api/PropertyBinder.BinderExtensions.html": {
    "href": "api/PropertyBinder.BinderExtensions.html",
    "title": "Class BinderExtensions | EyeAuras Docs",
    "keywords": "Class BinderExtensions Inheritance object BinderExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax public static class BinderExtensions Methods Name Description AddRule<TContext>(Binder<TContext>, Action<TContext>, string, string, bool, bool, Expression, params Expression[]) BindAction<TContext>(Binder<TContext>, Expression<Action<TContext>>, string) BindCommand<TContext>(Binder<TContext>, Action<TContext, object>, Expression<Func<TContext, object, bool>>) BindCommand<TContext>(Binder<TContext>, Action<TContext>, Expression<Func<TContext, bool>>) BindIf<T, TContext>(Binder<TContext>, Expression<Func<TContext, bool>>, Expression<Func<TContext, T>>) Bind<T, TContext>(Binder<TContext>, Expression<Func<TContext, T>>) Unbind<TContext>(Binder<TContext>, string) Unbind<T, TContext>(Binder<TContext>, Expression<Func<TContext, T>>)"
  },
  "api/PropertyBinder.BindingException.-ctor.html": {
    "href": "api/PropertyBinder.BindingException.-ctor.html",
    "title": "Constructor BindingException | EyeAuras Docs",
    "keywords": "Constructor BindingException BindingException() Declaration public BindingException() BindingException(string) Declaration public BindingException(string message) Parameters Type Name Description string message BindingException(string, Exception) Declaration public BindingException(string message, Exception inner) Parameters Type Name Description string message Exception inner"
  },
  "api/PropertyBinder.BindingException.html": {
    "href": "api/PropertyBinder.BindingException.html",
    "title": "Class BindingException | EyeAuras Docs",
    "keywords": "Class BindingException Inheritance object Exception BindingException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.StackTrace Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax public class BindingException : Exception, ISerializable Constructors Name Description BindingException() BindingException(string) BindingException(string, Exception) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PropertyBinder.BindingExceptionEventArgs.Description.html": {
    "href": "api/PropertyBinder.BindingExceptionEventArgs.Description.html",
    "title": "Property Description | EyeAuras Docs",
    "keywords": "Property Description Description Declaration public string Description { get; } Property Value Type Description string"
  },
  "api/PropertyBinder.BindingExceptionEventArgs.Exception.html": {
    "href": "api/PropertyBinder.BindingExceptionEventArgs.Exception.html",
    "title": "Property Exception | EyeAuras Docs",
    "keywords": "Property Exception Exception Declaration public Exception Exception { get; } Property Value Type Description Exception"
  },
  "api/PropertyBinder.BindingExceptionEventArgs.Handled.html": {
    "href": "api/PropertyBinder.BindingExceptionEventArgs.Handled.html",
    "title": "Property Handled | EyeAuras Docs",
    "keywords": "Property Handled Handled Declaration public bool Handled { get; set; } Property Value Type Description bool"
  },
  "api/PropertyBinder.BindingExceptionEventArgs.StampedStr.html": {
    "href": "api/PropertyBinder.BindingExceptionEventArgs.StampedStr.html",
    "title": "Property StampedStr | EyeAuras Docs",
    "keywords": "Property StampedStr StampedStr Declaration public string StampedStr { get; } Property Value Type Description string"
  },
  "api/PropertyBinder.BindingExceptionEventArgs.ToString.html": {
    "href": "api/PropertyBinder.BindingExceptionEventArgs.ToString.html",
    "title": "Method ToString | EyeAuras Docs",
    "keywords": "Method ToString ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/PropertyBinder.BindingExceptionEventArgs.html": {
    "href": "api/PropertyBinder.BindingExceptionEventArgs.html",
    "title": "Class BindingExceptionEventArgs | EyeAuras Docs",
    "keywords": "Class BindingExceptionEventArgs Inheritance object EventArgs BindingExceptionEventArgs Inherited Members EventArgs.Empty object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax public class BindingExceptionEventArgs : EventArgs Properties Name Description Description Exception Handled StampedStr Methods Name Description ToString() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PropertyBinder.CommandCanExecuteCheckMode.html": {
    "href": "api/PropertyBinder.CommandCanExecuteCheckMode.html",
    "title": "Enum CommandCanExecuteCheckMode | EyeAuras Docs",
    "keywords": "Enum CommandCanExecuteCheckMode Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax public enum CommandCanExecuteCheckMode Fields Name Description DoNotCheck DoNotExecute ThrowException Extension Methods ObjectExtensions.AddTo<CommandCanExecuteCheckMode, TCollection>(CommandCanExecuteCheckMode, ISourceList<TCollection>) ObjectExtensions.AddTo<CommandCanExecuteCheckMode, TCollection>(CommandCanExecuteCheckMode, ICollection<TCollection>) ObjectExtensions.CloneJson<CommandCanExecuteCheckMode>(CommandCanExecuteCheckMode) ObjectExtensions.CopyPropertiesTo<CommandCanExecuteCheckMode, TTarget>(CommandCanExecuteCheckMode, TTarget) ObjectExtensions.DumpToTextRaw<CommandCanExecuteCheckMode>(CommandCanExecuteCheckMode) ObjectExtensions.DumpToText<CommandCanExecuteCheckMode>(CommandCanExecuteCheckMode) ObjectExtensions.Dump<CommandCanExecuteCheckMode>(CommandCanExecuteCheckMode) ObjectExtensions.GetPropertyAccessor<CommandCanExecuteCheckMode, TValue>(CommandCanExecuteCheckMode, Expression<Func<CommandCanExecuteCheckMode, TValue>>) ObjectExtensions.InsertTo<CommandCanExecuteCheckMode, TCollection>(CommandCanExecuteCheckMode, IList<TCollection>, int) ObjectExtensions.ToJson<CommandCanExecuteCheckMode>(CommandCanExecuteCheckMode) ObjectExtensions.ToStringSafe<CommandCanExecuteCheckMode>(CommandCanExecuteCheckMode) ObjectExtensions.TransferPropertiesTo<CommandCanExecuteCheckMode, TTarget>(CommandCanExecuteCheckMode, TTarget, params string[]) XDocumentExtensions.AddTo<CommandCanExecuteCheckMode>(CommandCanExecuteCheckMode, XContainer)"
  },
  "api/PropertyBinder.CommandRuleBinder-1.OverrideKey.html": {
    "href": "api/PropertyBinder.CommandRuleBinder-1.OverrideKey.html",
    "title": "Method OverrideKey | EyeAuras Docs",
    "keywords": "Method OverrideKey OverrideKey(string) Declaration public CommandRuleBinder<TContext> OverrideKey(string bindingRuleKey) Parameters Type Name Description string bindingRuleKey Returns Type Description CommandRuleBinder<TContext>"
  },
  "api/PropertyBinder.CommandRuleBinder-1.To.html": {
    "href": "api/PropertyBinder.CommandRuleBinder-1.To.html",
    "title": "Method To | EyeAuras Docs",
    "keywords": "Method To To(Expression<Func<TContext, ICommand>>) Declaration public void To(Expression<Func<TContext, ICommand>> destinationExpression) Parameters Type Name Description Expression<Func<TContext, ICommand>> destinationExpression"
  },
  "api/PropertyBinder.CommandRuleBinder-1.WithCanExecuteCheckMode.html": {
    "href": "api/PropertyBinder.CommandRuleBinder-1.WithCanExecuteCheckMode.html",
    "title": "Method WithCanExecuteCheckMode | EyeAuras Docs",
    "keywords": "Method WithCanExecuteCheckMode WithCanExecuteCheckMode(CommandCanExecuteCheckMode) Declaration public CommandRuleBinder<TContext> WithCanExecuteCheckMode(CommandCanExecuteCheckMode mode) Parameters Type Name Description CommandCanExecuteCheckMode mode Returns Type Description CommandRuleBinder<TContext>"
  },
  "api/PropertyBinder.CommandRuleBinder-1.WithDependency.html": {
    "href": "api/PropertyBinder.CommandRuleBinder-1.WithDependency.html",
    "title": "Method WithDependency | EyeAuras Docs",
    "keywords": "Method WithDependency WithDependency<TDependency>(Expression<Func<TContext, TDependency>>) Declaration public CommandRuleBinder<TContext> WithDependency<TDependency>(Expression<Func<TContext, TDependency>> dependencyExpression) Parameters Type Name Description Expression<Func<TContext, TDependency>> dependencyExpression Returns Type Description CommandRuleBinder<TContext> Type Parameters Name Description TDependency"
  },
  "api/PropertyBinder.CommandRuleBinder-1.html": {
    "href": "api/PropertyBinder.CommandRuleBinder-1.html",
    "title": "Class CommandRuleBinder<TContext> | EyeAuras Docs",
    "keywords": "Class CommandRuleBinder<TContext> Inheritance object CommandRuleBinder<TContext> Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax public sealed class CommandRuleBinder<TContext> where TContext : class Type Parameters Name Description TContext Methods Name Description OverrideKey(string) To(Expression<Func<TContext, ICommand>>) WithCanExecuteCheckMode(CommandCanExecuteCheckMode) WithDependency<TDependency>(Expression<Func<TContext, TDependency>>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PropertyBinder.DefaultExpressionCompiler.Compile.html": {
    "href": "api/PropertyBinder.DefaultExpressionCompiler.Compile.html",
    "title": "Method Compile | EyeAuras Docs",
    "keywords": "Method Compile Compile<T>(Expression<T>) Declaration public T Compile<T>(Expression<T> expression) Parameters Type Name Description Expression<T> expression Returns Type Description T Type Parameters Name Description T Implements IExpressionCompiler.Compile<T>(Expression<T>) Compile(LambdaExpression) Declaration public Delegate Compile(LambdaExpression expression) Parameters Type Name Description LambdaExpression expression Returns Type Description Delegate Implements IExpressionCompiler.Compile(LambdaExpression)"
  },
  "api/PropertyBinder.DefaultExpressionCompiler.Instance.html": {
    "href": "api/PropertyBinder.DefaultExpressionCompiler.Instance.html",
    "title": "Field Instance | EyeAuras Docs",
    "keywords": "Field Instance Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax public static IExpressionCompiler Instance Returns Type Description IExpressionCompiler"
  },
  "api/PropertyBinder.DefaultExpressionCompiler.html": {
    "href": "api/PropertyBinder.DefaultExpressionCompiler.html",
    "title": "Class DefaultExpressionCompiler | EyeAuras Docs",
    "keywords": "Class DefaultExpressionCompiler Inheritance object DefaultExpressionCompiler Implements IExpressionCompiler Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax public sealed class DefaultExpressionCompiler : IExpressionCompiler Fields Name Description Instance Methods Name Description Compile(LambdaExpression) Compile<T>(Expression<T>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PropertyBinder.Diagnostics.IBindingTracer.OnEnded.html": {
    "href": "api/PropertyBinder.Diagnostics.IBindingTracer.OnEnded.html",
    "title": "Method OnEnded | EyeAuras Docs",
    "keywords": "Method OnEnded OnEnded(string) Declaration void OnEnded(string bindingDescription) Parameters Type Name Description string bindingDescription"
  },
  "api/PropertyBinder.Diagnostics.IBindingTracer.OnException.html": {
    "href": "api/PropertyBinder.Diagnostics.IBindingTracer.OnException.html",
    "title": "Method OnException | EyeAuras Docs",
    "keywords": "Method OnException OnException(Exception) Declaration void OnException(Exception ex) Parameters Type Name Description Exception ex"
  },
  "api/PropertyBinder.Diagnostics.IBindingTracer.OnIgnored.html": {
    "href": "api/PropertyBinder.Diagnostics.IBindingTracer.OnIgnored.html",
    "title": "Method OnIgnored | EyeAuras Docs",
    "keywords": "Method OnIgnored OnIgnored(string) Declaration void OnIgnored(string bindingDescription) Parameters Type Name Description string bindingDescription"
  },
  "api/PropertyBinder.Diagnostics.IBindingTracer.OnScheduled.html": {
    "href": "api/PropertyBinder.Diagnostics.IBindingTracer.OnScheduled.html",
    "title": "Method OnScheduled | EyeAuras Docs",
    "keywords": "Method OnScheduled OnScheduled(string) Declaration void OnScheduled(string bindingDescription) Parameters Type Name Description string bindingDescription"
  },
  "api/PropertyBinder.Diagnostics.IBindingTracer.OnStarted.html": {
    "href": "api/PropertyBinder.Diagnostics.IBindingTracer.OnStarted.html",
    "title": "Method OnStarted | EyeAuras Docs",
    "keywords": "Method OnStarted OnStarted(string) Declaration void OnStarted(string bindingDescription) Parameters Type Name Description string bindingDescription"
  },
  "api/PropertyBinder.Diagnostics.IBindingTracer.html": {
    "href": "api/PropertyBinder.Diagnostics.IBindingTracer.html",
    "title": "Interface IBindingTracer | EyeAuras Docs",
    "keywords": "Interface IBindingTracer Namespace: PropertyBinder.Diagnostics Assembly: PropertyBinder.dll Syntax public interface IBindingTracer Methods Name Description OnEnded(string) OnException(Exception) OnIgnored(string) OnScheduled(string) OnStarted(string) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PropertyBinder.Diagnostics.StopwatchTracer.-ctor.html": {
    "href": "api/PropertyBinder.Diagnostics.StopwatchTracer.-ctor.html",
    "title": "Constructor StopwatchTracer | EyeAuras Docs",
    "keywords": "Constructor StopwatchTracer StopwatchTracer() Declaration public StopwatchTracer()"
  },
  "api/PropertyBinder.Diagnostics.StopwatchTracer.Elapsed.html": {
    "href": "api/PropertyBinder.Diagnostics.StopwatchTracer.Elapsed.html",
    "title": "Property Elapsed | EyeAuras Docs",
    "keywords": "Property Elapsed Elapsed Declaration public TimeSpan Elapsed { get; } Property Value Type Description TimeSpan"
  },
  "api/PropertyBinder.Diagnostics.StopwatchTracer.OnEnded.html": {
    "href": "api/PropertyBinder.Diagnostics.StopwatchTracer.OnEnded.html",
    "title": "Method OnEnded | EyeAuras Docs",
    "keywords": "Method OnEnded OnEnded(string) Declaration public void OnEnded(string bindingDescription) Parameters Type Name Description string bindingDescription Implements IBindingTracer.OnEnded(string)"
  },
  "api/PropertyBinder.Diagnostics.StopwatchTracer.OnException.html": {
    "href": "api/PropertyBinder.Diagnostics.StopwatchTracer.OnException.html",
    "title": "Method OnException | EyeAuras Docs",
    "keywords": "Method OnException OnException(Exception) Declaration public void OnException(Exception ex) Parameters Type Name Description Exception ex Implements IBindingTracer.OnException(Exception)"
  },
  "api/PropertyBinder.Diagnostics.StopwatchTracer.OnIgnored.html": {
    "href": "api/PropertyBinder.Diagnostics.StopwatchTracer.OnIgnored.html",
    "title": "Method OnIgnored | EyeAuras Docs",
    "keywords": "Method OnIgnored OnIgnored(string) Declaration public void OnIgnored(string bindingDescription) Parameters Type Name Description string bindingDescription Implements IBindingTracer.OnIgnored(string)"
  },
  "api/PropertyBinder.Diagnostics.StopwatchTracer.OnScheduled.html": {
    "href": "api/PropertyBinder.Diagnostics.StopwatchTracer.OnScheduled.html",
    "title": "Method OnScheduled | EyeAuras Docs",
    "keywords": "Method OnScheduled OnScheduled(string) Declaration public void OnScheduled(string bindingDescription) Parameters Type Name Description string bindingDescription Implements IBindingTracer.OnScheduled(string)"
  },
  "api/PropertyBinder.Diagnostics.StopwatchTracer.OnStarted.html": {
    "href": "api/PropertyBinder.Diagnostics.StopwatchTracer.OnStarted.html",
    "title": "Method OnStarted | EyeAuras Docs",
    "keywords": "Method OnStarted OnStarted(string) Declaration public void OnStarted(string bindingDescription) Parameters Type Name Description string bindingDescription Implements IBindingTracer.OnStarted(string)"
  },
  "api/PropertyBinder.Diagnostics.StopwatchTracer.Reset.html": {
    "href": "api/PropertyBinder.Diagnostics.StopwatchTracer.Reset.html",
    "title": "Method Reset | EyeAuras Docs",
    "keywords": "Method Reset Reset() Declaration public void Reset()"
  },
  "api/PropertyBinder.Diagnostics.StopwatchTracer.html": {
    "href": "api/PropertyBinder.Diagnostics.StopwatchTracer.html",
    "title": "Class StopwatchTracer | EyeAuras Docs",
    "keywords": "Class StopwatchTracer Inheritance object StopwatchTracer Implements IBindingTracer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PropertyBinder.Diagnostics Assembly: PropertyBinder.dll Syntax public sealed class StopwatchTracer : IBindingTracer Constructors Name Description StopwatchTracer() Properties Name Description Elapsed Methods Name Description OnEnded(string) OnException(Exception) OnIgnored(string) OnScheduled(string) OnStarted(string) Reset() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PropertyBinder.Diagnostics.html": {
    "href": "api/PropertyBinder.Diagnostics.html",
    "title": "Namespace PropertyBinder.Diagnostics | EyeAuras Docs",
    "keywords": "Namespace PropertyBinder.Diagnostics Classes StopwatchTracer Interfaces IBindingTracer"
  },
  "api/PropertyBinder.IConditionalRuleBuilderPhase1-2.Else.html": {
    "href": "api/PropertyBinder.IConditionalRuleBuilderPhase1-2.Else.html",
    "title": "Method Else | EyeAuras Docs",
    "keywords": "Method Else Else(Expression<Func<TContext, T>>) Declaration IConditionalRuleBuilderPhase2<T, TContext> Else(Expression<Func<TContext, T>> targetExpression) Parameters Type Name Description Expression<Func<TContext, T>> targetExpression Returns Type Description IConditionalRuleBuilderPhase2<T, TContext>"
  },
  "api/PropertyBinder.IConditionalRuleBuilderPhase1-2.ElseIf.html": {
    "href": "api/PropertyBinder.IConditionalRuleBuilderPhase1-2.ElseIf.html",
    "title": "Method ElseIf | EyeAuras Docs",
    "keywords": "Method ElseIf ElseIf(Expression<Func<TContext, bool>>, Expression<Func<TContext, T>>) Declaration IConditionalRuleBuilderPhase1<T, TContext> ElseIf(Expression<Func<TContext, bool>> conditionalExpression, Expression<Func<TContext, T>> targetExpression) Parameters Type Name Description Expression<Func<TContext, bool>> conditionalExpression Expression<Func<TContext, T>> targetExpression Returns Type Description IConditionalRuleBuilderPhase1<T, TContext>"
  },
  "api/PropertyBinder.IConditionalRuleBuilderPhase1-2.html": {
    "href": "api/PropertyBinder.IConditionalRuleBuilderPhase1-2.html",
    "title": "Interface IConditionalRuleBuilderPhase1<T, TContext> | EyeAuras Docs",
    "keywords": "Interface IConditionalRuleBuilderPhase1<T, TContext> Inherited Members IConditionalRuleBuilderPhase2<T, TContext>.DoNotRunOnAttach() IConditionalRuleBuilderPhase2<T, TContext>.DoNotOverride() IConditionalRuleBuilderPhase2<T, TContext>.OverrideKey(string) IConditionalRuleBuilderPhase2<T, TContext>.WithDependency<TDependency>(Expression<Func<TContext, TDependency>>) IConditionalRuleBuilderPhase2<T, TContext>.Debug(Action<TContext>) IConditionalRuleBuilderPhase2<T, TContext>.To(Expression<Func<TContext, T>>) IConditionalRuleBuilderPhase2<T, TContext>.To(Action<TContext, T>) Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax public interface IConditionalRuleBuilderPhase1<T, TContext> : IConditionalRuleBuilderPhase2<T, TContext> where TContext : class Type Parameters Name Description T TContext Methods Name Description Else(Expression<Func<TContext, T>>) ElseIf(Expression<Func<TContext, bool>>, Expression<Func<TContext, T>>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PropertyBinder.IConditionalRuleBuilderPhase2-2.Debug.html": {
    "href": "api/PropertyBinder.IConditionalRuleBuilderPhase2-2.Debug.html",
    "title": "Method Debug | EyeAuras Docs",
    "keywords": "Method Debug Debug(Action<TContext>) Declaration IConditionalRuleBuilderPhase2<T, TContext> Debug(Action<TContext> debugAction) Parameters Type Name Description Action<TContext> debugAction Returns Type Description IConditionalRuleBuilderPhase2<T, TContext>"
  },
  "api/PropertyBinder.IConditionalRuleBuilderPhase2-2.DoNotOverride.html": {
    "href": "api/PropertyBinder.IConditionalRuleBuilderPhase2-2.DoNotOverride.html",
    "title": "Method DoNotOverride | EyeAuras Docs",
    "keywords": "Method DoNotOverride DoNotOverride() Declaration IConditionalRuleBuilderPhase2<T, TContext> DoNotOverride() Returns Type Description IConditionalRuleBuilderPhase2<T, TContext>"
  },
  "api/PropertyBinder.IConditionalRuleBuilderPhase2-2.DoNotRunOnAttach.html": {
    "href": "api/PropertyBinder.IConditionalRuleBuilderPhase2-2.DoNotRunOnAttach.html",
    "title": "Method DoNotRunOnAttach | EyeAuras Docs",
    "keywords": "Method DoNotRunOnAttach DoNotRunOnAttach() Declaration IConditionalRuleBuilderPhase2<T, TContext> DoNotRunOnAttach() Returns Type Description IConditionalRuleBuilderPhase2<T, TContext>"
  },
  "api/PropertyBinder.IConditionalRuleBuilderPhase2-2.OverrideKey.html": {
    "href": "api/PropertyBinder.IConditionalRuleBuilderPhase2-2.OverrideKey.html",
    "title": "Method OverrideKey | EyeAuras Docs",
    "keywords": "Method OverrideKey OverrideKey(string) Declaration IConditionalRuleBuilderPhase2<T, TContext> OverrideKey(string bindingRuleKey) Parameters Type Name Description string bindingRuleKey Returns Type Description IConditionalRuleBuilderPhase2<T, TContext>"
  },
  "api/PropertyBinder.IConditionalRuleBuilderPhase2-2.To.html": {
    "href": "api/PropertyBinder.IConditionalRuleBuilderPhase2-2.To.html",
    "title": "Method To | EyeAuras Docs",
    "keywords": "Method To To(Expression<Func<TContext, T>>) Declaration void To(Expression<Func<TContext, T>> targetExpression) Parameters Type Name Description Expression<Func<TContext, T>> targetExpression To(Action<TContext, T>) Declaration void To(Action<TContext, T> action) Parameters Type Name Description Action<TContext, T> action"
  },
  "api/PropertyBinder.IConditionalRuleBuilderPhase2-2.WithDependency.html": {
    "href": "api/PropertyBinder.IConditionalRuleBuilderPhase2-2.WithDependency.html",
    "title": "Method WithDependency | EyeAuras Docs",
    "keywords": "Method WithDependency WithDependency<TDependency>(Expression<Func<TContext, TDependency>>) Declaration IConditionalRuleBuilderPhase2<T, TContext> WithDependency<TDependency>(Expression<Func<TContext, TDependency>> dependencyExpression) Parameters Type Name Description Expression<Func<TContext, TDependency>> dependencyExpression Returns Type Description IConditionalRuleBuilderPhase2<T, TContext> Type Parameters Name Description TDependency"
  },
  "api/PropertyBinder.IConditionalRuleBuilderPhase2-2.html": {
    "href": "api/PropertyBinder.IConditionalRuleBuilderPhase2-2.html",
    "title": "Interface IConditionalRuleBuilderPhase2<T, TContext> | EyeAuras Docs",
    "keywords": "Interface IConditionalRuleBuilderPhase2<T, TContext> Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax public interface IConditionalRuleBuilderPhase2<T, TContext> where TContext : class Type Parameters Name Description T TContext Methods Name Description Debug(Action<TContext>) DoNotOverride() DoNotRunOnAttach() OverrideKey(string) To(Action<TContext, T>) To(Expression<Func<TContext, T>>) WithDependency<TDependency>(Expression<Func<TContext, TDependency>>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PropertyBinder.IExpressionCompiler.Compile.html": {
    "href": "api/PropertyBinder.IExpressionCompiler.Compile.html",
    "title": "Method Compile | EyeAuras Docs",
    "keywords": "Method Compile Compile<T>(Expression<T>) Declaration T Compile<T>(Expression<T> expression) Parameters Type Name Description Expression<T> expression Returns Type Description T Type Parameters Name Description T Compile(LambdaExpression) Declaration Delegate Compile(LambdaExpression expression) Parameters Type Name Description LambdaExpression expression Returns Type Description Delegate"
  },
  "api/PropertyBinder.IExpressionCompiler.html": {
    "href": "api/PropertyBinder.IExpressionCompiler.html",
    "title": "Interface IExpressionCompiler | EyeAuras Docs",
    "keywords": "Interface IExpressionCompiler Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax public interface IExpressionCompiler Methods Name Description Compile(LambdaExpression) Compile<T>(Expression<T>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PropertyBinder.ImmutableAttribute.-ctor.html": {
    "href": "api/PropertyBinder.ImmutableAttribute.-ctor.html",
    "title": "Constructor ImmutableAttribute | EyeAuras Docs",
    "keywords": "Constructor ImmutableAttribute ImmutableAttribute() Declaration public ImmutableAttribute()"
  },
  "api/PropertyBinder.ImmutableAttribute.html": {
    "href": "api/PropertyBinder.ImmutableAttribute.html",
    "title": "Class ImmutableAttribute | EyeAuras Docs",
    "keywords": "Class ImmutableAttribute Inheritance object Attribute ImmutableAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax [AttributeUsage(AttributeTargets.Property, Inherited = false, AllowMultiple = false)] public sealed class ImmutableAttribute : Attribute Constructors Name Description ImmutableAttribute() Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PropertyBinder.PropertyBinderExtensions.PropagateNullValues.html": {
    "href": "api/PropertyBinder.PropertyBinderExtensions.PropagateNullValues.html",
    "title": "Method PropagateNullValues | EyeAuras Docs",
    "keywords": "Method PropagateNullValues PropagateNullValues<T, TContext>(PropertyRuleBuilder<T, TContext>) Declaration public static PropertyRuleBuilder<T, TContext> PropagateNullValues<T, TContext>(this PropertyRuleBuilder<T, TContext> ruleBuilder) where T : class where TContext : class Parameters Type Name Description PropertyRuleBuilder<T, TContext> ruleBuilder Returns Type Description PropertyRuleBuilder<T, TContext> Type Parameters Name Description T TContext PropagateNullValues<T, TContext>(PropertyRuleBuilder<T?, TContext>) Declaration public static PropertyRuleBuilder<T?, TContext> PropagateNullValues<T, TContext>(this PropertyRuleBuilder<T?, TContext> ruleBuilder) where T : struct where TContext : class Parameters Type Name Description PropertyRuleBuilder<T?, TContext> ruleBuilder Returns Type Description PropertyRuleBuilder<T?, TContext> Type Parameters Name Description T TContext"
  },
  "api/PropertyBinder.PropertyBinderExtensions.To.html": {
    "href": "api/PropertyBinder.PropertyBinderExtensions.To.html",
    "title": "Method To | EyeAuras Docs",
    "keywords": "Method To To<T, TContext, TTarget>(PropertyRuleBuilder<T, TContext>, Expression<Func<TContext, TTarget>>) Declaration public static void To<T, TContext, TTarget>(this PropertyRuleBuilder<T, TContext> ruleBuilder, Expression<Func<TContext, TTarget>> targetExpression) where T : TTarget where TContext : class Parameters Type Name Description PropertyRuleBuilder<T, TContext> ruleBuilder Expression<Func<TContext, TTarget>> targetExpression Type Parameters Name Description T TContext TTarget To<T, TContext>(PropertyRuleBuilder<T, TContext>, Expression<Func<TContext, T?>>) Declaration public static void To<T, TContext>(this PropertyRuleBuilder<T, TContext> ruleBuilder, Expression<Func<TContext, T?>> targetExpression) where T : struct where TContext : class Parameters Type Name Description PropertyRuleBuilder<T, TContext> ruleBuilder Expression<Func<TContext, T?>> targetExpression Type Parameters Name Description T TContext"
  },
  "api/PropertyBinder.PropertyBinderExtensions.html": {
    "href": "api/PropertyBinder.PropertyBinderExtensions.html",
    "title": "Class PropertyBinderExtensions | EyeAuras Docs",
    "keywords": "Class PropertyBinderExtensions Inheritance object PropertyBinderExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax public static class PropertyBinderExtensions Methods Name Description PropagateNullValues<T, TContext>(PropertyRuleBuilder<T?, TContext>) PropagateNullValues<T, TContext>(PropertyRuleBuilder<T, TContext>) To<T, TContext>(PropertyRuleBuilder<T, TContext>, Expression<Func<TContext, T?>>) To<T, TContext, TTarget>(PropertyRuleBuilder<T, TContext>, Expression<Func<TContext, TTarget>>)"
  },
  "api/PropertyBinder.PropertyRuleBuilder-2.Debug.html": {
    "href": "api/PropertyBinder.PropertyRuleBuilder-2.Debug.html",
    "title": "Method Debug | EyeAuras Docs",
    "keywords": "Method Debug Debug(Action<TContext>) Declaration public PropertyRuleBuilder<T, TContext> Debug(Action<TContext> debugAction) Parameters Type Name Description Action<TContext> debugAction Returns Type Description PropertyRuleBuilder<T, TContext>"
  },
  "api/PropertyBinder.PropertyRuleBuilder-2.DoNotOverride.html": {
    "href": "api/PropertyBinder.PropertyRuleBuilder-2.DoNotOverride.html",
    "title": "Method DoNotOverride | EyeAuras Docs",
    "keywords": "Method DoNotOverride DoNotOverride() Declaration public PropertyRuleBuilder<T, TContext> DoNotOverride() Returns Type Description PropertyRuleBuilder<T, TContext>"
  },
  "api/PropertyBinder.PropertyRuleBuilder-2.DoNotRunOnAttach.html": {
    "href": "api/PropertyBinder.PropertyRuleBuilder-2.DoNotRunOnAttach.html",
    "title": "Method DoNotRunOnAttach | EyeAuras Docs",
    "keywords": "Method DoNotRunOnAttach DoNotRunOnAttach() Declaration public PropertyRuleBuilder<T, TContext> DoNotRunOnAttach() Returns Type Description PropertyRuleBuilder<T, TContext>"
  },
  "api/PropertyBinder.PropertyRuleBuilder-2.OverrideKey.html": {
    "href": "api/PropertyBinder.PropertyRuleBuilder-2.OverrideKey.html",
    "title": "Method OverrideKey | EyeAuras Docs",
    "keywords": "Method OverrideKey OverrideKey(string) Declaration public PropertyRuleBuilder<T, TContext> OverrideKey(string bindingRuleKey) Parameters Type Name Description string bindingRuleKey Returns Type Description PropertyRuleBuilder<T, TContext>"
  },
  "api/PropertyBinder.PropertyRuleBuilder-2.To.html": {
    "href": "api/PropertyBinder.PropertyRuleBuilder-2.To.html",
    "title": "Method To | EyeAuras Docs",
    "keywords": "Method To To(Action<TContext, T>) Declaration public void To(Action<TContext, T> action) Parameters Type Name Description Action<TContext, T> action To(Action<TContext>) Declaration public void To(Action<TContext> action) Parameters Type Name Description Action<TContext> action"
  },
  "api/PropertyBinder.PropertyRuleBuilder-2.WithAssignmentAction.html": {
    "href": "api/PropertyBinder.PropertyRuleBuilder-2.WithAssignmentAction.html",
    "title": "Method WithAssignmentAction | EyeAuras Docs",
    "keywords": "Method WithAssignmentAction WithAssignmentAction(Action<TContext, Action<TContext>>) Declaration public PropertyRuleBuilder<T, TContext> WithAssignmentAction(Action<TContext, Action<TContext>> assignmentAction) Parameters Type Name Description Action<TContext, Action<TContext>> assignmentAction Returns Type Description PropertyRuleBuilder<T, TContext>"
  },
  "api/PropertyBinder.PropertyRuleBuilder-2.WithDependency.html": {
    "href": "api/PropertyBinder.PropertyRuleBuilder-2.WithDependency.html",
    "title": "Method WithDependency | EyeAuras Docs",
    "keywords": "Method WithDependency WithDependency<TDependency>(Expression<Func<TContext, TDependency>>) Declaration public PropertyRuleBuilder<T, TContext> WithDependency<TDependency>(Expression<Func<TContext, TDependency>> dependencyExpression) Parameters Type Name Description Expression<Func<TContext, TDependency>> dependencyExpression Returns Type Description PropertyRuleBuilder<T, TContext> Type Parameters Name Description TDependency"
  },
  "api/PropertyBinder.PropertyRuleBuilder-2.html": {
    "href": "api/PropertyBinder.PropertyRuleBuilder-2.html",
    "title": "Class PropertyRuleBuilder<T, TContext> | EyeAuras Docs",
    "keywords": "Class PropertyRuleBuilder<T, TContext> Inheritance object PropertyRuleBuilder<T, TContext> Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: PropertyBinder Assembly: PropertyBinder.dll Syntax public sealed class PropertyRuleBuilder<T, TContext> where TContext : class Type Parameters Name Description T TContext Methods Name Description Debug(Action<TContext>) DoNotOverride() DoNotRunOnAttach() OverrideKey(string) To(Action<TContext, T>) To(Action<TContext>) WithAssignmentAction(Action<TContext, Action<TContext>>) WithDependency<TDependency>(Expression<Func<TContext, TDependency>>) Extension Methods ObjectExtensions.AddTo<TItem, TCollection>(TItem, ISourceList<TCollection>) ObjectExtensions.AddTo<TItem, TCollection>(TItem, ICollection<TCollection>) ObjectExtensions.CloneJson<T>(T) ObjectExtensions.CopyPropertiesTo<TSource, TTarget>(TSource, TTarget) ObjectExtensions.DumpToTextRaw<T>(T) ObjectExtensions.DumpToText<T>(T) ObjectExtensions.Dump<T>(T) ObjectExtensions.EvalOrDefault<T, TValue>(T, Func<T, TValue>, TValue) ObjectExtensions.Eval<T, TValue>(T, Func<T, TValue>) ObjectExtensions.GetPropertyAccessor<TSource, TValue>(TSource, Expression<Func<TSource, TValue>>) ObjectExtensions.InsertTo<TItem, TCollection>(TItem, IList<TCollection>, int) ObjectExtensions.ToJson<T>(T) ObjectExtensions.ToStringSafe<T>(T) ObjectExtensions.TransferPropertiesTo<TSource, TTarget>(TSource, TTarget, params string[]) XDocumentExtensions.AddTo<T>(T, XContainer) PropertyBinderExtensions.To<T, TContext, TTarget>(PropertyRuleBuilder<T, TContext>, Expression<Func<TContext, TTarget>>) ObjectExtensions.GetPropertyAccessor<TValue>(object, string) ObjectReflectionExtensions.GetPropertyTypeOrDefault(object, string) ObjectReflectionExtensions.GetPropertyValue<T>(object, string) ObjectReflectionExtensions.SetPropertyValue<T>(object, string, T)"
  },
  "api/PropertyBinder.html": {
    "href": "api/PropertyBinder.html",
    "title": "Namespace PropertyBinder | EyeAuras Docs",
    "keywords": "Namespace PropertyBinder Namespaces PropertyBinder.Diagnostics Classes Binder BinderExtensions Binder<TContext> BindingException BindingExceptionEventArgs CommandRuleBinder<TContext> DefaultExpressionCompiler ImmutableAttribute PropertyBinderExtensions PropertyRuleBuilder<T, TContext> Interfaces IConditionalRuleBuilderPhase1<T, TContext> IConditionalRuleBuilderPhase2<T, TContext> IExpressionCompiler Enums CommandCanExecuteCheckMode"
  },
  "getting-started.html": {
    "href": "getting-started.html",
    "title": "Getting Started | EyeAuras Docs",
    "keywords": "Getting Started"
  },
  "index.html": {
    "href": "index.html",
    "title": "Main concept | EyeAuras Docs",
    "keywords": "EyeAuras is an automation tool that allows you to model desired behaviour via system of Triggers and Actions. Color search, image search, OCR (text recognition), global and conditional hotkeys in conjunction with a wide variety of ways to emulate user input bring up an extremely powerful tool to your toolset. And, as a cherry on top, you can always fallback to C# for triggers and actions. Main concept Aura - combination of Triggers, Actions, Overlays and Enabling conditions. This is what you'll share with others, and this does the actual work. Enabling conditions Triggers - any kind of state which could be described in Active/NotActive terms. This could be Hotkey (pressed/unpressed or toggle), foreground Window check (active/not active), Image/Text/Color search result(matched/not matched). Aura Active/NotActive state is a combination of states of her child Triggers. Trigger has three states: Active - this means that condition is met, e.g. for WindowIsActive trigger this means that Window with matching title is Active Not Active - this means that conditions is not met Unknown - this means that for some reason it is not possible to calculate trigger state. For example, if Window specified in ImageSearch is not found that means that corresponding Trigger will have Unknown state as it is not possible to do comparison without any actual image. Actions - showing notifications, key/mouse presses, sending Telegram messages or e-mails - these all is considered an Action and could be used inside Aura. Actions could be assigned to one of 3 groups: On Enter - these are executed when Aura becomes Active While Active - these will be executed repeatedly while Auras is Active On Exit - these are executed when Aura becomes Not Active Overlays - always-on-top overlays which could show text, image, custom UI or anything else. Overlays are a part of Aura and are shown only while Aura is Active Subsystems Export/Import - transfer, share, or backup EyeAuras packs across different users or devices Aura Library - a shared collection of EyeAuras packs, available for users to discover, import, and use Window Match Expressions - enabling selection of specific windows using a custom expression Text Match Expressions - Powerful tool enabling text condition validation through Regex, Text, and Lambda evaluators. Bindings - interconnect properties between triggers, actions, and overlays to allow for easier change of group properties and to open up new capabilities Default Properties Triggers Fixed Value - the most primitive trigger, you can control it's state by selecting it either manually or by using C# scripts Color Search - active when Average color of a selected region matches with Target color. Similarity threshold could be specified. Image Search - active when some Image is found with a specified similarity AI/ML Search - machine-learning powered object detection/segmentation or classification, currently supports only Yolo8 in ONNX format, may be extended later Text Search - active when recognized text matches with specified expression. It could be comparison by Contains, regexp or C# Lambda Aura Is Active - active when linked Auras have specified state (Active/NotActive) Hotkey Is Active - active when specified combination of keys is either held down or toggled Window Is Active - active when window matching specified expression is active (in foreground) Window Exists - active when window matching specified expression exists in the system Timer - periodically activates itself for specified duration Message Subscription - activates/deactivates when specified message is received from EyeAuras webserver. Messages are separated by Channels and could be sent using SendMessage action File Contains - activates when specified text is found in specified file Telegram Subscription - activates/deactivates when specified message is received in Telegram channel Volume Control - activates/deactivates when volume level of specified audio device or process reaches specified threshold C# Script - custom scripts that use the latest version of C# language with full access to internal EyeAuras API. As soon as API will be stabilized there will be examples/docs. Actions Send - emulates user input - mouse movement, clicks, keyboard presses, etc. Supports multiple input methods starting from most basic ones that are used WinAPI and all the way to hardware-level emulation that uses Usb2Kbd physical device. Input - generates single keyboard/mouse event Text - inputs specified text either via clipboard or by typing each character individually Sequence - replayed the specified sequence of keyboard presses, mouse clicks and mouse movements Play Sound - plays specified sound Win Activate - activates specified window Delay - waits for some time before proceeding to the next action Send To Telegram - sends message to Telegram channel Send Message - sends network message through EyeAuras infrastructure to a specified Channel. All other instances of EyeAuras on other computers can subscribe and process these messages via Message Subscription trigger C# Script - custom scripts that use the latest version of C# language with full access to internal EyeAuras API. As soon as API will be stabilized there will be examples/docs. Overlays Text - shows text, content could be modified either manually or using C# scripts Image - shows an image, animated/transparent GIFs are supported Replica - created a real-time visual clone of any specified window or its subregion. This allows you to clone parts of UI (e.g. bring cooldowns closer to the middle of you screen) or show downsized version of YouTube player while farming Dependencies Viewer - debugging tool which could be used to check what states linked Auras have. Very useful for debugging complex models. Custom UI - allows you to develop a full-blown custom user interface using combination of Microsoft Razor Pages (html+css+js) and C# to wire it all together inside EyeAuras"
  },
  "introduction.html": {
    "href": "introduction.html",
    "title": "Introduction | EyeAuras Docs",
    "keywords": "Introduction"
  },
  "readme.html": {
    "href": "readme.html",
    "title": "Important! | EyeAuras Docs",
    "keywords": "Important! for use with docfx 2.62.0+ed77a7c7454fe73bf987ec672be88c270ceaeb96 If used with never versions there will be a problem with highlight.js https://github.com/dotnet/docfx/issues/8428 dotnet tool install --global docfx --version 2.62.0"
  }
}